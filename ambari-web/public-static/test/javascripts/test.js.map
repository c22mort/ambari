{"version":3,"file":"public/test/javascripts/test.js","sources":["test/app_test.js","test/controllers/global/background_operations_test.js","test/controllers/global/cluster_controller_test.js","test/controllers/global/configuration_controller_test.js","test/controllers/global/update_controller_test.js","test/controllers/installer_test.js","test/controllers/main/admin/cluster_test.js","test/controllers/main/admin/highAvailability_controller_test.js","test/controllers/main/admin/misc_controller_test.js","test/controllers/main/admin/security/add/addSecurity_controller_test.js","test/controllers/main/admin/security/add/step1_test.js","test/controllers/main/admin/security/add/step2_test.js","test/controllers/main/admin/security/add/step3_test.js","test/controllers/main/admin/security/add/step4_test.js","test/controllers/main/admin/security/disable_test.js","test/controllers/main/admin/security/security_progress_controller_test.js","test/controllers/main/admin/security_test.js","test/controllers/main/admin_test.js","test/controllers/main/alerts_controller_test.js","test/controllers/main/app_contoller_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_cpuWaitIO_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_dfs_bytesread_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_dfs_byteswritten_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_dfs_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_diskspaceused_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_hbase_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_memoryused_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_yarn_ResourceUsed_test.js","test/controllers/main/charts/heatmap_metrics/heatmap_metric_yarn_test.js","test/controllers/main/charts/heatmap_test.js","test/controllers/main/dashboard_test.js","test/controllers/main/host/add_controller_test.js","test/controllers/main/host/configs_service_test.js","test/controllers/main/host/details_test.js","test/controllers/main/host_test.js","test/controllers/main/jobs/hive_job_details_controller_test.js","test/controllers/main/jobs_controller_test.js","test/controllers/main/mirroring/edit_dataset_controller_test.js","test/controllers/main/service/add_controller_test.js","test/controllers/main/service/info/config_test.js","test/controllers/main/service/item_test.js","test/controllers/main/service/reassign_controller_test.js","test/controllers/main/service_test.js","test/controllers/wizard/stack_upgrade/step3_controller_test.js","test/controllers/wizard/step0_test.js","test/controllers/wizard/step10_test.js","test/controllers/wizard/step2_test.js","test/controllers/wizard/step3_test.js","test/controllers/wizard/step4_test.js","test/controllers/wizard/step5_test.js","test/controllers/wizard/step6_test.js","test/controllers/wizard/step7_test.js","test/controllers/wizard/step8_test.js","test/controllers/wizard/step9_test.js","test/controllers/wizard_test.js","test/data/HDP2/secure_mapping_test.js","test/data/HDP2/site_properties_test.js","test/init_model_test.js","test/login_test.js","test/mappers/hosts_mapper_test.js","test/mappers/jobs_mapper_test.js","test/mappers/runs_mapper_test.js","test/mappers/server_data_mapper_test.js","test/mappers/service_mapper_test.js","test/mappers/status_mapper_test.js","test/mappers/users_mapper_test.js","test/mixins/common/chart/storm_linear_time_test.js","test/mixins/common/localStorage_test.js","test/mixins/main/host/details/host_components/decommissionable_test.js","test/mock_data_setup/configs_mock_data.js","test/models/alert_test.js","test/models/authentication_test.js","test/models/cluster_states_test.js","test/models/config_group_test.js","test/models/dataset_job_test.js","test/models/dataset_test.js","test/models/form_test.js","test/models/host_component_test.js","test/models/host_test.js","test/models/hosts_test.js","test/models/job_test.js","test/models/jobs/job_test.js","test/models/jobs/tez_dag_test.js","test/models/rack_test.js","test/models/run_test.js","test/models/service/flume_test.js","test/models/service/hdfs_test.js","test/models/service/yarn_test.js","test/models/service_config_test.js","test/models/service_test.js","test/models/stack_service_component_test.js","test/models/user_test.js","test/service_components.js","test/utils/ajax/ajax_queue_test.js","test/utils/ajax/ajax_test.js","test/utils/batch_scheduled_requests_test.js","test/utils/component_test.js","test/utils/config_test.js","test/utils/configs/defaults_providers/hive_defaults_provider_test.js","test/utils/configs/defaults_providers/tez_defaults_provider_test.js","test/utils/configs/defaults_providers/yarn_defaults_provider_test.js","test/utils/configs/validators/service_configs_validator_test.js","test/utils/date_test.js","test/utils/form_field_test.js","test/utils/helper_test.js","test/utils/host_progress_popup_test.js","test/utils/lazy_loading_test.js","test/utils/misc_test.js","test/utils/number_utils_test.js","test/utils/object_utils_test.js","test/utils/string_utils_test.js","test/utils/ui_effects_test.js","test/utils/updater_test.js","test/utils/validator_test.js","test/views/application_test.js","test/views/common/chart/linear_time_test.js","test/views/common/configs/services_config_test.js","test/views/common/filter_view_test.js","test/views/common/quick_link_view_test.js","test/views/common/rolling_restart_view_test.js","test/views/common/table_view_test.js","test/views/experimental_test.js","test/views/installer_test.js","test/views/login_test.js","test/views/main/admin/user/create_test.js","test/views/main/admin/user/edit_test.js","test/views/main/charts/heatmap/heatmap_host_test.js","test/views/main/charts/heatmap/heatmap_rack_test.js","test/views/main/dashboard/widget_test.js","test/views/main/dashboard/widgets/datanode_live_test.js","test/views/main/dashboard/widgets/hbase_average_load_test.js","test/views/main/dashboard/widgets/hbase_master_uptime_test.js","test/views/main/dashboard/widgets/hbase_regions_in_transition_test.js","test/views/main/dashboard/widgets/jobtracker_rpc_test.js","test/views/main/dashboard/widgets/jobtracker_uptime_test.js","test/views/main/dashboard/widgets/links_widget_test.js","test/views/main/dashboard/widgets/namenode_cpu_test.js","test/views/main/dashboard/widgets/namenode_rpc_test.js","test/views/main/dashboard/widgets/namenode_uptime_test.js","test/views/main/dashboard/widgets/node_managers_live_test.js","test/views/main/dashboard/widgets/pie_chart_widget_test.js","test/views/main/dashboard/widgets/resource_manager_uptime_test.js","test/views/main/dashboard/widgets/tasktracker_live_test.js","test/views/main/dashboard/widgets/text_widget_test.js","test/views/main/dashboard/widgets/uptime_text_widget_test.js","test/views/main/dashboard/widgets_test.js","test/views/main/dashboard_test.js","test/views/main/host/details/host_component_view_test.js","test/views/main/host/details/host_component_views/decommissionable_test.js","test/views/main/host/summary_test.js","test/views/main/jobs/hive_job_details_tez_dag_view_test.js","test/views/main/jobs/hive_job_details_tez_test.js","test/views/main/jobs/hive_job_details_view_test.js","test/views/main/jobs_view_test.js","test/views/main/mirroring/edit_dataset_view_test.js","test/views/main/service/info/config_test.js","test/views/main/service/info/summary_test.js","test/views/wizard/controls_view_test.js","test/views/wizard/step0_view_test.js","test/views/wizard/step10_view_test.js","test/views/wizard/step1_view_test.js","test/views/wizard/step2_view_test.js","test/views/wizard/step3/hostLogPopupBody_view_test.js","test/views/wizard/step3/hostWarningPopupBody_view_test.js","test/views/wizard/step3/hostWarningPopupFooter_view_test.js","test/views/wizard/step3_view_test.js","test/views/wizard/step5_view_test.js","test/views/wizard/step6_view_test.js","test/views/wizard/step8_view_test.js","test/views/wizard/step9/hostLogPopupBody_view_test.js","test/views/wizard/step9_view_test.js"],"names":[],"mappingszbzparnljxSA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1pnilkcvehPA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvnpjnHA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApxIA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtlnnrmgptpaA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlloDA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxsBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAprtdA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvmonexpGA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1EA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzrGA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxFA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxnltlphCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtHA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvFA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlrzKA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhjzmpSA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9PA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnzqphpvlnjOA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzhvPA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhjPA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvFA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/WA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7KA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnnvxnxGA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxhzPA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxHA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArvtlzrEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApnzrtnzpZA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxFA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtuzxlhzKA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvlrBA;AAAA","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/common/quick_view_link_view');\nrequire('models/host_component');\nrequire('models/stack_service_component');\nvar modelSetup = require('test/init_model_test');\n\ndescribe('#App', function() {\n\n  describe('App.isHadoop21Stack', function() {\n    var tests = [{\n      v:'',\n      e:false\n    }, {\n      v:'HDP',\n      e: false\n    }, {\n      v:'HDP1',\n      e: false\n    }, {\n      v:'HDP-1',\n      e: false\n    }, {\n      v:'HDP-2.0',\n      e: false\n    }, {\n      v:'HDP-2.0.1000',\n      e: false\n    }, {\n      v:'HDP-2.1',\n      e: true\n    }, {\n      v:'HDP-2.1.3434',\n      e: true\n    }, {\n      v:'HDP-2.2',\n      e: true\n    }, {\n      v:'HDP-2.2.1212',\n      e: true\n    }];\n    tests.forEach(function(test){\n      it(test.v, function() {\n        App.QuickViewLinks.prototype.setQuickLinks = function(){};\n        App.set('currentStackVersion', test.v);\n        var calculated = App.get('isHadoop21Stack');\n        var expected = test.e;\n        expect(calculated).to.equal(expected);\n      });\n    });\n  });\n\n  describe('Disable/enable components', function() {\n\n    App.set('handleStackDependencyTest', true);\n    modelSetup.setupStackVersion(this, 'HDP-2.1');\n\n    var testableComponent =  Em.Object.create({\n      componentName: 'APP_TIMELINE_SERVER',\n      serviceName: 'YARN'\n    });\n    var expectedInfo = {\n      componentName: 'APP_TIMELINE_SERVER',\n      properties: {\n        global_properties: ['ats_host', 'apptimelineserver_heapsize'],\n        site_properties: ['yarn.timeline-service.generic-application-history.store-class', 'yarn.timeline-service.store-class', 'yarn.timeline-service.leveldb-timeline-store.path']\n      },\n      reviewConfigs: {\n        component_name: 'APP_TIMELINE_SERVER'\n      },\n      configCategory: {\n        name: 'AppTimelineServer'\n      }\n    };\n\n    var globalProperties = require('data/HDP2/global_properties');\n    var siteProperties = require('data/HDP2/site_properties');\n    var reviewConfigs = require('data/review_configs');\n    var disableResult = App.disableComponent(testableComponent);\n\n    describe('#disableComponent()', function() {\n      // copy\n      var _globalProperties = $.extend({}, globalProperties);\n      var _siteProperties = $.extend({}, siteProperties);\n      var _reviewConfigs = JSON.parse(JSON.stringify(reviewConfigs));\n\n      describe('result validation', function() {\n\n        it('component name should be \"' + expectedInfo.componentName + '\"', function() {\n          expect(disableResult.get('componentName')).to.eql(expectedInfo.componentName);\n        });\n\n        it('config category name should be \"' + expectedInfo.configCategory.name +'\"', function() {\n          expect(disableResult.get('configCategory.name')).to.eql(expectedInfo.configCategory.name);\n        });\n\n        for(var siteName in expectedInfo.properties) {\n          (function(site) {\n            expectedInfo.properties[site].forEach(function(property) {\n              it(property + ' present in ' + site, function() {\n                expect(disableResult.get('properties.' + site).mapProperty('name')).to.include(property);\n              });\n            }, this);\n          })(siteName);\n        }\n\n        it('site and global properties should not be equal', function() {\n          expect(disableResult.get('properties.global_properties')).to.not.include.members(disableResult.get('properties.site_properties'));\n        });\n\n\n      });\n\n      describe('effect validation',function() {\n\n\n        it('should remove global properties of component', function() {\n          expect(_globalProperties.configProperties.mapProperty('name')).to.not.include.members(expectedInfo.properties.global_properties);\n        });\n\n        it('should remove site properties of component', function() {\n          expect(_siteProperties.configProperties.mapProperty('name')).to.not.include.members(expectedInfo.properties.site_properties);\n        });\n\n        it('should remove review config for component', function() {\n          var reviewConfig = _reviewConfigs.findProperty('config_name', 'services')\n            .config_value.findProperty('service_name', testableComponent.get('serviceName'))\n            .service_components.mapProperty('component_name');\n          expect(reviewConfig).to.not.include(expectedInfo.reviewConfigs.component_name);\n        });\n      });\n    });\n\n    describe('#enableComponent', function() {\n      App.enableComponent(disableResult);\n\n      it('should add global properties of component', function() {\n        expect(globalProperties.configProperties.mapProperty('name')).to.include.members(expectedInfo.properties.global_properties);\n      });\n\n      it('should add site properties of component', function() {\n        expect(siteProperties.configProperties.mapProperty('name')).to.include.members(expectedInfo.properties.site_properties);\n      });\n\n      it('should add review config for component', function() {\n        var reviewConfig = reviewConfigs.findProperty('config_name', 'services')\n          .config_value.findProperty('service_name', testableComponent.get('serviceName'))\n          .get('service_components').mapProperty('component_name');\n        expect(reviewConfig).to.include(expectedInfo.reviewConfigs.component_name);\n      });\n    });\n\n    modelSetup.restoreStackVersion(this);\n  });\n\n  describe('#stackVersionURL', function () {\n\n    App.QuickViewLinks.reopen({\n      loadTags: function () {}\n    });\n\n    var testCases = [\n      {\n        title: 'if currentStackVersion and defaultStackVersion are empty then stackVersionURL should contain prefix',\n        currentStackVersion: '',\n        defaultStackVersion: '',\n        result: '/stacks/HDP/version/'\n      },\n      {\n        title: 'if currentStackVersion is \"HDP-1.3.1\" then stackVersionURL should be \"/stacks/HDP/version/1.3.1\"',\n        currentStackVersion: 'HDP-1.3.1',\n        defaultStackVersion: '',\n        result: '/stacks/HDP/version/1.3.1'\n      },\n      {\n        title: 'if defaultStackVersion is \"HDP-1.3.1\" then stackVersionURL should be \"/stacks/HDP/version/1.3.1\"',\n        currentStackVersion: '',\n        defaultStackVersion: 'HDP-1.3.1',\n        result: '/stacks/HDP/version/1.3.1'\n      },\n      {\n        title: 'if defaultStackVersion and currentStackVersion are different then stackVersionURL should have currentStackVersion value',\n        currentStackVersion: 'HDP-1.3.2',\n        defaultStackVersion: 'HDP-1.3.1',\n        result: '/stacks/HDP/version/1.3.2'\n      },\n      {\n        title: 'if defaultStackVersion is \"HDPLocal-1.3.1\" then stackVersionURL should be \"/stacks/HDPLocal/version/1.3.1\"',\n        currentStackVersion: '',\n        defaultStackVersion: 'HDPLocal-1.3.1',\n        result: '/stacks/HDPLocal/version/1.3.1'\n      },\n      {\n        title: 'if currentStackVersion is \"HDPLocal-1.3.1\" then stackVersionURL should be \"/stacks/HDPLocal/version/1.3.1\"',\n        currentStackVersion: 'HDPLocal-1.3.1',\n        defaultStackVersion: '',\n        result: '/stacks/HDPLocal/version/1.3.1'\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        App.set('currentStackVersion', test.currentStackVersion);\n        App.set('defaultStackVersion', test.defaultStackVersion);\n        expect(App.get('stackVersionURL')).to.equal(test.result);\n        App.set('currentStackVersion', \"HDP-1.2.2\");\n        App.set('defaultStackVersion', \"HDP-1.2.2\");\n      });\n    });\n  });\n\n  describe('#stack2VersionURL', function () {\n\n    var testCases = [\n      {\n        title: 'if currentStackVersion and defaultStackVersion are empty then stack2VersionURL should contain prefix',\n        currentStackVersion: '',\n        defaultStackVersion: '',\n        result: '/stacks2/HDP/versions/'\n      },\n      {\n        title: 'if currentStackVersion is \"HDP-1.3.1\" then stack2VersionURL should be \"/stacks2/HDP/versions/1.3.1\"',\n        currentStackVersion: 'HDP-1.3.1',\n        defaultStackVersion: '',\n        result: '/stacks2/HDP/versions/1.3.1'\n      },\n      {\n        title: 'if defaultStackVersion is \"HDP-1.3.1\" then stack2VersionURL should be \"/stacks/HDP/versions/1.3.1\"',\n        currentStackVersion: '',\n        defaultStackVersion: 'HDP-1.3.1',\n        result: '/stacks2/HDP/versions/1.3.1'\n      },\n      {\n        title: 'if defaultStackVersion and currentStackVersion are different then stack2VersionURL should have currentStackVersion value',\n        currentStackVersion: 'HDP-1.3.2',\n        defaultStackVersion: 'HDP-1.3.1',\n        result: '/stacks2/HDP/versions/1.3.2'\n      },\n      {\n        title: 'if defaultStackVersion is \"HDPLocal-1.3.1\" then stack2VersionURL should be \"/stacks2/HDPLocal/versions/1.3.1\"',\n        currentStackVersion: '',\n        defaultStackVersion: 'HDPLocal-1.3.1',\n        result: '/stacks2/HDPLocal/versions/1.3.1'\n      },\n      {\n        title: 'if currentStackVersion is \"HDPLocal-1.3.1\" then stack2VersionURL should be \"/stacks2/HDPLocal/versions/1.3.1\"',\n        currentStackVersion: 'HDPLocal-1.3.1',\n        defaultStackVersion: '',\n        result: '/stacks2/HDPLocal/versions/1.3.1'\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        App.set('currentStackVersion', test.currentStackVersion);\n        App.set('defaultStackVersion', test.defaultStackVersion);\n        expect(App.get('stack2VersionURL')).to.equal(test.result);\n        App.set('currentStackVersion', \"HDP-1.2.2\");\n        App.set('defaultStackVersion', \"HDP-1.2.2\");\n      });\n    });\n  });\n\n  describe('#currentStackVersionNumber', function () {\n\n    var testCases = [\n      {\n        title: 'if currentStackVersion is empty then currentStackVersionNumber should be empty',\n        currentStackVersion: '',\n        result: ''\n      },\n      {\n        title: 'if currentStackVersion is \"HDP-1.3.1\" then currentStackVersionNumber should be \"1.3.1',\n        currentStackVersion: 'HDP-1.3.1',\n        result: '1.3.1'\n      },\n      {\n        title: 'if currentStackVersion is \"HDPLocal-1.3.1\" then currentStackVersionNumber should be \"1.3.1',\n        currentStackVersion: 'HDPLocal-1.3.1',\n        result: '1.3.1'\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        App.set('currentStackVersion', test.currentStackVersion);\n        expect(App.get('currentStackVersionNumber')).to.equal(test.result);\n        App.set('currentStackVersion', \"HDP-1.2.2\");\n      });\n    });\n  });\n\n  describe('#isHadoop2Stack', function () {\n\n    var testCases = [\n      {\n        title: 'if currentStackVersion is empty then isHadoop2Stack should be false',\n        currentStackVersion: '',\n        result: false\n      },\n      {\n        title: 'if currentStackVersion is \"HDP-1.9.9\" then isHadoop2Stack should be false',\n        currentStackVersion: 'HDP-1.9.9',\n        result: false\n      },\n      {\n        title: 'if currentStackVersion is \"HDP-2.0.0\" then isHadoop2Stack should be true',\n        currentStackVersion: 'HDP-2.0.0',\n        result: true\n      },\n      {\n        title: 'if currentStackVersion is \"HDP-2.0.1\" then isHadoop2Stack should be true',\n        currentStackVersion: 'HDP-2.0.1',\n        result: true\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        App.set('currentStackVersion', test.currentStackVersion);\n        expect(App.get('isHadoop2Stack')).to.equal(test.result);\n        App.set('currentStackVersion', \"HDP-1.2.2\");\n      });\n    });\n  });\n\n  describe('#isHaEnabled', function () {\n\n    it('if hadoop stack version less than 2 then isHaEnabled should be false', function () {\n      App.set('currentStackVersion', 'HDP-1.3.1');\n      expect(App.get('isHaEnabled')).to.equal(false);\n      App.set('currentStackVersion', \"HDP-1.2.2\");\n    });\n    it('if hadoop stack version higher than 2 then isHaEnabled should be true', function () {\n      App.set('currentStackVersion', 'HDP-2.0.1');\n      expect(App.get('isHaEnabled')).to.equal(true);\n      App.set('currentStackVersion', \"HDP-1.2.2\");\n    });\n    it('if cluster has SECONDARY_NAMENODE then isHaEnabled should be false', function () {\n      App.store.load(App.HostComponent, {\n        id: 'SECONDARY_NAMENODE',\n        component_name: 'SECONDARY_NAMENODE'\n      });\n      App.set('currentStackVersion', 'HDP-2.0.1');\n      expect(App.get('isHaEnabled')).to.equal(false);\n      App.set('currentStackVersion', \"HDP-1.2.2\");\n    });\n  });\n\n  describe('#handleStackDependedComponents()', function () {\n\n    beforeEach(function(){\n      modelSetup.setupStackServiceComponent();\n    });\n\n    afterEach(function(){\n      modelSetup.cleanStackServiceComponent();\n    });\n\n    it('if handleStackDependencyTest is true then stackDependedComponents should be unmodified', function () {\n      App.set('testMode', false);\n      App.set('handleStackDependencyTest', true);\n      App.handleStackDependedComponents();\n      expect(App.get('stackDependedComponents')).to.be.empty;\n    });\n\n    it('if testMode is true then stackDependedComponents should be unmodified', function () {\n      App.set('handleStackDependencyTest', false);\n      App.set('testMode', true);\n      App.handleStackDependedComponents();\n      expect(App.get('stackDependedComponents')).to.be.empty;\n    });\n\n    it('if stack contains all components then stackDependedComponents should be empty', function () {\n      App.set('testMode', false);\n      App.set('handleStackDependencyTest', false);\n      App.handleStackDependedComponents();\n      expect(App.get('stackDependedComponents')).to.be.empty;\n    });\n\n    it('if stack is missing component then push it to stackDependedComponents', function () {\n      App.set('testMode', false);\n      App.set('handleStackDependencyTest', false);\n      var dtRecord = App.StackServiceComponent.find('DATANODE');\n      dtRecord.deleteRecord();\n      dtRecord.get('stateManager').transitionTo('loading');\n      App.handleStackDependedComponents();\n      expect(App.get('stackDependedComponents').mapProperty('componentName')).to.eql([\"DATANODE\"]);\n      App.store.load(App.StackServiceComponent, {\n        id: 'DATANODE',\n        component_name: 'DATANODE',\n        service_name: 'HDFS',\n        component_category: 'SLAVE',\n        is_master: false,\n        is_client: false,\n        stack_name: 'HDP',\n        stack_version: '2.1'\n      });\n    });\n\n    it('remove stack components from stackDependedComponents', function () {\n      App.set('testMode', false);\n      App.set('handleStackDependencyTest', false);\n      App.set('stackDependedComponents', [\n        Em.Object.create({\n          componentName: \"DATANODE\",\n          serviceName: \"HDFS\",\n          properties: {},\n          reviewConfigs: {},\n          configCategory: {}\n        }),\n        Em.Object.create({\n          componentName: \"categoryComponent\",\n          serviceName: \"\",\n          properties: {},\n          reviewConfigs: {},\n          configCategory: {}\n        })\n      ]);\n      App.handleStackDependedComponents();\n      expect(App.get('stackDependedComponents').mapProperty('componentName')).to.eql([\"categoryComponent\"]);\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\n\nrequire('config');\nrequire('utils/updater');\nrequire('utils/ajax/ajax');\n\nrequire('models/host_component');\n\nrequire('controllers/global/background_operations_controller');\nrequire('views/common/modal_popup');\nrequire('utils/host_progress_popup');\n\ndescribe('App.BackgroundOperationsController', function () {\n\n  var controller = App.BackgroundOperationsController.create();\n\n  describe('#getQueryParams', function () {\n    /**\n     * Predefined data\n     *\n     */\n    App.set('clusterName', 'testName');\n    App.bgOperationsUpdateInterval = 100;\n\n    var tests = Em.A([\n      {\n        levelInfo: Em.Object.create({\n          name: 'REQUESTS_LIST',\n          requestId: null,\n          taskId: null,\n          sync: false\n        }),\n        e: {\n          name: 'background_operations.get_most_recent',\n          successCallback: 'callBackForMostRecent',\n          data: {}\n        },\n        response: {items: []},\n        m: '\"Get Most Recent\"'\n      },\n      {\n        levelInfo: Em.Object.create({\n          name: 'TASK_DETAILS',\n          requestId: 1,\n          taskId: 1,\n          sync: false\n        }),\n        e: {\n          name: 'background_operations.get_by_task',\n          successCallback: 'callBackFilteredByTask',\n          data: {\n            taskId: 1,\n            requestId: 1,\n            sync: false\n          }\n        },\n        response: {items: {Tasks: {request_id: 0}}},\n        m: '\"Filtered By task\"'\n      },\n      {\n        levelInfo: Em.Object.create({\n          name: 'TASKS_LIST',\n          requestId: 1,\n          taskId: 1,\n          sync: false\n        }),\n        e: {\n          name: 'background_operations.get_by_request',\n          successCallback: 'callBackFilteredByRequest',\n          data: {\n            requestId: 1,\n            sync: false\n          }\n        },\n        response: {items: {Requests: {id: 0}}},\n        m: '\"Filtered By Request (TASKS_LIST)\"'\n      },\n      {\n        levelInfo: Em.Object.create({\n          name: 'HOSTS_LIST',\n          requestId: 1,\n          taskId: 1,\n          sync: false\n        }),\n        e: {\n          name: 'background_operations.get_by_request',\n          successCallback: 'callBackFilteredByRequest',\n          data: {\n            requestId: 1,\n            sync: false\n          }\n        },\n        response: {items: {Requests: {id: 0}}},\n        m: '\"Filtered By Request (HOSTS_LIST)\"'\n      }\n    ]);\n\n    beforeEach(function () {\n      App.testMode = false;\n    });\n    afterEach(function () {\n      App.testMode = true;\n    });\n\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        controller.set('levelInfo', test.levelInfo);\n        var r = controller.getQueryParams();\n        expect(r.name).to.equal(test.e.name);\n        expect(r.successCallback).to.equal(test.e.successCallback);\n        expect(r.data).to.eql(test.e.data);\n      });\n    });\n  });\n\n  describe('#startPolling()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.updater, 'run');\n      sinon.spy(controller, 'requestMostRecent');\n    });\n    afterEach(function () {\n      App.updater.run.restore();\n      controller.requestMostRecent.restore();\n    });\n\n    it('isWorking = false', function () {\n      controller.set('isWorking', false);\n      expect(App.updater.run.calledOnce).to.equal(false);\n      expect(controller.requestMostRecent.calledOnce).to.equal(false);\n    });\n    it('isWorking = true', function () {\n      controller.set('isWorking', true);\n      expect(App.updater.run.calledOnce).to.equal(true);\n      expect(controller.requestMostRecent.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#callBackForMostRecent()', function () {\n    it('No requests exists', function () {\n      var data = {\n        items: []\n      };\n      controller.callBackForMostRecent(data);\n      expect(controller.get(\"allOperationsCount\")).to.equal(0);\n      expect(controller.get(\"services.length\")).to.equal(0);\n    });\n    it('One non-running request', function () {\n      var data = {\n        items: [\n          {\n            Requests: {\n              id: 1,\n              request_context: '',\n              task_count: 0,\n              aborted_task_count: 0,\n              completed_task_count: 0,\n              failed_task_count: 0,\n              timed_out_task_count: 0,\n              queued_task_count: 0\n            }\n          }\n        ]\n      };\n      controller.callBackForMostRecent(data);\n      expect(controller.get(\"allOperationsCount\")).to.equal(0);\n      expect(controller.get(\"services\").mapProperty('id')).to.eql([1]);\n    });\n\n\n    it('One running request', function () {\n      var data = {\n        items: [\n          {\n            Requests: {\n              id: 1,\n              request_context: '',\n              task_count: 1,\n              aborted_task_count: 0,\n              completed_task_count: 0,\n              failed_task_count: 0,\n              timed_out_task_count: 0,\n              queued_task_count: 0\n            }\n          }\n        ]\n      };\n      controller.callBackForMostRecent(data);\n      expect(controller.get(\"allOperationsCount\")).to.equal(1);\n      expect(controller.get(\"services\").mapProperty('id')).to.eql([1]);\n    });\n    it('Two requests in order', function () {\n      var data = {\n        items: [\n          {\n            Requests: {\n              id: 1,\n              request_context: ''\n            }\n          },\n          {\n            Requests: {\n              id: 2,\n              request_context: ''\n            }\n          }\n        ]\n      };\n      controller.callBackForMostRecent(data);\n      expect(controller.get(\"allOperationsCount\")).to.equal(0);\n      expect(controller.get(\"services\").mapProperty('id')).to.eql([2, 1]);\n    });\n  });\n\n  describe('#removeOldRequests()', function () {\n    var testCases = [\n      {\n        title: 'No requests exist',\n        content: {\n          currentRequestIds: [],\n          services: []\n        },\n        result: []\n      },\n      {\n        title: 'One current request',\n        content: {\n          currentRequestIds: [1],\n          services: [\n            {id: 1}\n          ]\n        },\n        result: [\n          {id: 1}\n        ]\n      },\n      {\n        title: 'One old request',\n        content: {\n          currentRequestIds: [2],\n          services: [\n            {id: 1}\n          ]\n        },\n        result: []\n      },\n      {\n        title: 'One old request and one is current',\n        content: {\n          currentRequestIds: [2],\n          services: [\n            {id: 1},\n            {id: 2}\n          ]\n        },\n        result: [\n          {id: 2}\n        ]\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('services', test.content.services);\n        controller.removeOldRequests(test.content.currentRequestIds);\n        expect(controller.get('services')).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#isRequestRunning()', function () {\n    var testCases = [\n      {\n        title: 'Counters are missing',\n        request: {\n          Requests: {}\n        },\n        result: false\n      },\n      {\n        title: 'Request has zero tasks',\n        request: {\n          Requests: {\n            task_count: 0,\n            aborted_task_count: 0,\n            completed_task_count: 0,\n            failed_task_count: 0,\n            timed_out_task_count: 0,\n            queued_task_count: 0\n          }\n        },\n        result: false\n      },\n      {\n        title: 'One task in running status',\n        request: {\n          Requests: {\n            task_count: 1,\n            aborted_task_count: 0,\n            completed_task_count: 0,\n            failed_task_count: 0,\n            timed_out_task_count: 0,\n            queued_task_count: 0\n          }\n        },\n        result: true\n      },\n      {\n        title: 'One task in queued status',\n        request: {\n          Requests: {\n            task_count: 1,\n            aborted_task_count: 0,\n            completed_task_count: 0,\n            failed_task_count: 0,\n            timed_out_task_count: 0,\n            queued_task_count: 1\n          }\n        },\n        result: true\n      },\n      {\n        title: 'One task in aborted status',\n        request: {\n          Requests: {\n            task_count: 1,\n            aborted_task_count: 1,\n            completed_task_count: 0,\n            failed_task_count: 0,\n            timed_out_task_count: 0,\n            queued_task_count: 0\n          }\n        },\n        result: false\n      },\n      {\n        title: 'One task in completed status',\n        request: {\n          Requests: {\n            task_count: 1,\n            aborted_task_count: 0,\n            completed_task_count: 1,\n            failed_task_count: 0,\n            timed_out_task_count: 0,\n            queued_task_count: 0\n          }\n        },\n        result: false\n      },\n      {\n        title: 'One task in failed status',\n        request: {\n          Requests: {\n            task_count: 1,\n            aborted_task_count: 0,\n            completed_task_count: 0,\n            failed_task_count: 1,\n            timed_out_task_count: 0,\n            queued_task_count: 0\n          }\n        },\n        result: false\n      },\n      {\n        title: 'One task in timed out status',\n        request: {\n          Requests: {\n            task_count: 1,\n            aborted_task_count: 0,\n            completed_task_count: 0,\n            failed_task_count: 0,\n            timed_out_task_count: 1,\n            queued_task_count: 0\n          }\n        },\n        result: false\n      },\n      {\n        title: 'One task in timed out status and the second one in running',\n        request: {\n          Requests: {\n            task_count: 2,\n            aborted_task_count: 0,\n            completed_task_count: 0,\n            failed_task_count: 0,\n            timed_out_task_count: 1,\n            queued_task_count: 0\n          }\n        },\n        result: true\n      },\n      {\n        title: 'One task in each status',\n        request: {\n          Requests: {\n            task_count: 5,\n            aborted_task_count: 1,\n            completed_task_count: 1,\n            failed_task_count: 1,\n            timed_out_task_count: 1,\n            queued_task_count: 1\n          }\n        },\n        result: true\n      },\n      {\n        title: 'One task in each status except queued',\n        request: {\n          Requests: {\n            task_count: 5,\n            aborted_task_count: 1,\n            completed_task_count: 1,\n            failed_task_count: 1,\n            timed_out_task_count: 1,\n            queued_task_count: 0\n          }\n        },\n        result: true\n      },\n      {\n        title: 'No tasks in running status',\n        request: {\n          Requests: {\n            task_count: 4,\n            aborted_task_count: 1,\n            completed_task_count: 1,\n            failed_task_count: 1,\n            timed_out_task_count: 1,\n            queued_task_count: 0\n          }\n        },\n        result: false\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.isRequestRunning(test.request)).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#isOneHost()', function () {\n    var testCases = [\n      {\n        title: 'inputs is null',\n        inputs: null,\n        result: false\n      },\n      {\n        title: 'inputs is \"null\"',\n        inputs: 'null',\n        result: false\n      },\n      {\n        title: 'inputs is empty object',\n        inputs: '{}',\n        result: false\n      },\n      {\n        title: 'included_hosts is empty',\n        inputs: '{\"included_hosts\": \"\"}',\n        result: false\n      },\n      {\n        title: 'included_hosts contain one host',\n        inputs: '{\"included_hosts\": \"host1\"}',\n        result: true\n      },\n      {\n        title: 'included_hosts contain two hosts',\n        inputs: '{\"included_hosts\": \"host1,host2\"}',\n        result: false\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.isOneHost(test.inputs)).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#assignScheduleId()', function () {\n    var testCases = [\n      {\n        title: 'isOneHost is false',\n        content: {\n          request: {\n            Requests: {\n              request_schedule: {\n                schedule_id: 1\n              },\n              inputs: null\n            }\n          },\n          requestParams: ''\n        },\n        result: 1\n      },\n      {\n        title: 'isOneHost is true and requestContext is empty',\n        content: {\n          request: {\n            Requests: {\n              request_schedule: {\n                schedule_id: 1\n              },\n              inputs: '{\"included_hosts\": \"host1\"}'\n            }\n          },\n          requestParams: {\n            requestContext: ''\n          }\n        },\n        result: 1\n      },\n      {\n        title: 'isOneHost is true and requestContext contains \"Recommission\"',\n        content: {\n          request: {\n            Requests: {\n              request_schedule: {\n                schedule_id: 1\n              },\n              inputs: '{\"included_hosts\": \"host1\"}'\n            }\n          },\n          requestParams: {\n            requestContext: 'Recommission'\n          }\n        },\n        result: null\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.assignScheduleId(test.content.request, test.content.requestParams);\n        expect(test.content.request.Requests.request_schedule.schedule_id).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#callBackFilteredByRequest()', function () {\n\n    it('request haven\\'t tasks and isRunning false', function () {\n      var data = {\n        Requests: {id: 1},\n        tasks: []\n      };\n      var request = Em.Object.create({\n        id: 1,\n        previousTaskStatusMap: {},\n        isRunning: false,\n        progress: 0,\n        status:''\n      });\n      controller.set('services', [request]);\n      controller.callBackFilteredByRequest(data);\n      expect(request.get('previousTaskStatusMap')).to.eql({});\n      expect(request.get('hostsMap')).to.eql({});\n      expect(request.get('isRunning')).to.equal(false);\n    });\n\n    it('request haven\\'t tasks and isRunning true', function () {\n      var data = {\n        Requests: {id: 1},\n        tasks: []\n      };\n      var request = Em.Object.create({\n        id: 1,\n        previousTaskStatusMap: {},\n        isRunning: true,\n        progress: 0,\n        status:''\n      });\n      controller.set('services', [request]);\n      controller.callBackFilteredByRequest(data);\n      expect(request.get('previousTaskStatusMap')).to.eql({});\n      expect(request.get('hostsMap')).to.eql({});\n      expect(request.get('isRunning')).to.equal(true);\n    });\n\n    it('request has one completed task', function () {\n      var data = {\n        Requests: {id: 1},\n        tasks: [\n          {\n            Tasks: {\n              id: 1,\n              host_name: 'host1',\n              status: 'COMPLETED'\n            }\n          }\n        ]\n      };\n      var request = Em.Object.create({\n        id: 1,\n        previousTaskStatusMap: {},\n        isRunning: true,\n        progress: 100,\n        status:''\n      });\n      controller.set('services', [request]);\n      controller.callBackFilteredByRequest(data);\n      expect(request.get('previousTaskStatusMap')).to.eql({\"1\": \"COMPLETED\"});\n      expect(request.get('hostsMap')['host1'].logTasks.length).to.equal(1);\n      expect(request.get('isRunning')).to.equal(false);\n    });\n\n    it('request has one completed task and one running task', function () {\n      var data = {\n        Requests: {id: 1},\n        tasks: [\n          {\n            Tasks: {\n              id: 1,\n              host_name: 'host1',\n              status: 'COMPLETED'\n            }\n          },\n          {\n            Tasks: {\n              id: 2,\n              host_name: 'host1',\n              status: 'IN_PROGRESS'\n            }\n          }\n        ]\n      };\n      var request = Em.Object.create({\n        id: 1,\n        previousTaskStatusMap: {},\n        isRunning: true,\n        progress: 100,\n        status:''\n      });\n      controller.set('services', [request]);\n      controller.callBackFilteredByRequest(data);\n      expect(request.get('previousTaskStatusMap')).to.eql({\"1\": \"COMPLETED\", \"2\": \"IN_PROGRESS\"});\n      expect(request.get('hostsMap')['host1'].logTasks.length).to.equal(2);\n      expect(request.get('isRunning')).to.equal(true);\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/global/cluster_controller');\nrequire('models/host_component');\nrequire('utils/http_client');\nrequire('models/service');\nrequire('models/host');\nrequire('utils/ajax/ajax');\n\nvar modelSetup = require('test/init_model_test');\n\ndescribe('App.clusterController', function () {\n  var controller = App.ClusterController.create();\n  App.Service.FIXTURES = [\n    {service_name: 'NAGIOS'}\n  ];\n\n  describe('#updateLoadStatus()', function () {\n\n    controller.set('dataLoadList', Em.Object.create({\n      'item1': false,\n      'item2': false\n    }));\n\n    it('when none item is loaded then width should be \"width:0\"', function () {\n      expect(controller.get('clusterDataLoadedPercent')).to.equal('width:0');\n    });\n    it('when first item is loaded then isLoaded should be false', function () {\n      controller.updateLoadStatus.call(controller, 'item1');\n      expect(controller.get('isLoaded')).to.equal(false);\n    });\n    it('when first item is loaded then width should be \"width:50%\"', function () {\n      controller.updateLoadStatus.call(controller, 'item1');\n      expect(controller.get('clusterDataLoadedPercent')).to.equal('width:50%');\n    });\n\n    it('when all items are loaded then isLoaded should be true', function () {\n      controller.updateLoadStatus.call(controller, 'item2');\n      expect(controller.get('isLoaded')).to.equal(true);\n    });\n    it('when all items are loaded then width should be \"width:100%\"', function () {\n      controller.updateLoadStatus.call(controller, 'item2');\n      expect(controller.get('clusterDataLoadedPercent')).to.equal('width:100%');\n    });\n  });\n\n  describe('#loadClusterName()', function () {\n\n    beforeEach(function () {\n      modelSetup.setupStackVersion(this, 'HDP-2.0.5');\n      sinon.spy(App.ajax, 'send');\n    });\n    afterEach(function () {\n      modelSetup.restoreStackVersion(this);\n      App.ajax.send.restore();\n    });\n\n    it('if clusterName is \"mycluster\" and reload is false then loadClusterName should return false', function () {\n      controller.set('cluster', {Clusters: {cluster_name: 'mycluster'}});\n      expect(controller.loadClusterName(false)).to.equal(false);\n    });\n\n    it('reload is true and clusterName is not empty', function () {\n      controller.loadClusterName(true);\n      expect(App.ajax.send.calledOnce).to.equal(true);\n      expect(App.get('currentStackVersion')).to.equal('HDP-2.0.5');\n    });\n\n    it('reload is false and clusterName is empty', function () {\n      controller.set('cluster', {Clusters: {cluster_name: ''}});\n      controller.loadClusterName(false);\n      expect(App.ajax.send.calledOnce).to.equal(true);\n      expect(App.get('currentStackVersion')).to.equal('HDP-2.0.5');\n    });\n\n\n  });\n\n  describe('#loadClusterNameSuccessCallback', function () {\n    var test_data = {\n      \"items\": [\n        {\n          \"Clusters\": {\n            \"cluster_name\": \"tdk\",\n            \"version\": \"HDP-1.3.0\"\n          }\n        }\n      ]\n    };\n    it('Check cluster', function () {\n      controller.loadClusterNameSuccessCallback(test_data);\n      expect(controller.get('cluster.Clusters.cluster_name')).to.equal('tdk');\n      expect(controller.get('cluster.Clusters.version')).to.equal('HDP-1.3.0');\n      expect(App.get('clusterName')).to.equal('tdk');\n    });\n  });\n\n  describe('#loadClusterNameErrorCallback', function () {\n    controller.loadClusterNameErrorCallback();\n    it('', function () {\n      expect(controller.get('isLoaded')).to.equal(true);\n    });\n  });\n\n  describe('#getServerClockSuccessCallback()', function () {\n    var testCases = [\n      {\n        title: 'if server clock is 1 then currentServerTime should be 1000',\n        data: {\n          RootServiceComponents: {\n            server_clock: 1\n          }\n        },\n        result: 1000\n      },\n      {\n        title: 'if server clock is 0 then currentServerTime should be 0',\n        data: {\n          RootServiceComponents: {\n            server_clock: 0\n          }\n        },\n        result: 0\n      },\n      {\n        title: 'if server clock is 111111111111 then currentServerTime should be 111111111111000',\n        data: {\n          RootServiceComponents: {\n            server_clock: 111111111111\n          }\n        },\n        result: 111111111111000\n      },\n      {\n        title: 'if server clock is 1111111111113 then currentServerTime should be 1111111111113',\n        data: {\n          RootServiceComponents: {\n            server_clock: 1111111111113\n          }\n        },\n        result: 1111111111113\n      }\n    ];\n    var currentServerTime = App.get('currentServerTime');\n    var clockDistance = App.get('clockDistance');\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.getServerClockSuccessCallback(test.data);\n        expect(App.get('currentServerTime')).to.equal(test.result);\n        App.set('clockDistance', clockDistance);\n        App.set('currentServerTime', currentServerTime);\n      });\n    });\n  });\n\n  describe('#getUrl', function () {\n    controller.set('clusterName', 'tdk');\n    var tests = ['test1', 'test2', 'test3'];\n    it('testMode = true', function () {\n      App.testMode = true;\n      tests.forEach(function (test) {\n        expect(controller.getUrl(test, test)).to.equal(test);\n      });\n    });\n    it('testMode = false', function () {\n      App.testMode = false;\n      tests.forEach(function (test) {\n        expect(controller.getUrl(test, test)).to.equal(App.apiPrefix + '/clusters/' + controller.get('clusterName') + test);\n      });\n    });\n  });\n\n  describe('#gangliaUrl', function () {\n    it('testMode = true', function () {\n      App.testMode = true;\n      expect(controller.get('gangliaUrl')).to.equal('http://gangliaserver/ganglia/?t=yes');\n    });\n    it('Ganglia service is absent', function () {\n      App.testMode = false;\n      controller.set('gangliaWebProtocol', '');\n      expect(controller.get('gangliaUrl')).to.equal(null);\n    });\n    it('Ganglia doesn\\'t  have any components', function () {\n      App.store.load(App.Service, {\n        id: 'GANGLIA',\n        service_name: 'GANGLIA'\n      });\n      controller.set('gangliaWebProtocol', '');\n      expect(controller.get('gangliaUrl')).to.equal(null);\n      expect(controller.get('isGangliaInstalled')).to.equal(true);\n    });\n    it('Ganglia Server doesn\\'t  have host', function () {\n      App.store.load(App.HostComponent, {\n        id: 'GANGLIA_SERVER_GANGLIA_host',\n        component_name: 'GANGLIA_SERVER',\n        service_id: 'GANGLIA',\n        host_id: 'GANGLIA_host'\n      });\n      App.store.load(App.Service, {\n        id: 'GANGLIA',\n        service_name: 'GANGLIA',\n        host_components: ['GANGLIA_SERVER_GANGLIA_host']\n      });\n      controller.set('gangliaWebProtocol', '');\n      expect(controller.get('gangliaUrl')).to.equal(null);\n    });\n    it('Ganglia Server host is \"GANGLIA_host\"', function () {\n      App.store.load(App.Host, {\n        id: 'GANGLIA_host',\n        host_name: 'GANGLIA_host',\n        host_components: ['GANGLIA_SERVER_GANGLIA_host'],\n        public_host_name: 'GANGLIA_host'\n      });\n      controller.set('gangliaWebProtocol', '');\n      expect(controller.get('gangliaUrl')).to.equal(\"http://GANGLIA_host/ganglia\");\n    });\n    it('singleNodeInstall = true', function () {\n      App.set('singleNodeInstall', true);\n      controller.set('gangliaWebProtocol', '');\n      expect(controller.get('gangliaUrl')).to.equal(\"http://\" + location.hostname + \":42080/ganglia\");\n    });\n    it('singleNodeAlias is \"alias\"', function () {\n      App.set('singleNodeAlias', 'alias');\n      controller.set('gangliaWebProtocol', '');\n      expect(controller.get('gangliaUrl')).to.equal(\"http://alias:42080/ganglia\");\n      App.set('singleNodeInstall', false);\n      App.set('singleNodeAlias', '');\n    });\n  });\n\n  describe('#nagiosUrl', function () {\n    it('testMode = true', function () {\n      App.testMode = true;\n      controller.set('nagiosWebProtocol', '');\n      expect(controller.get('nagiosUrl')).to.equal('http://nagiosserver/nagios');\n    });\n    it('Nagios service is absent', function () {\n      App.testMode = false;\n      controller.set('nagiosWebProtocol', '');\n      expect(controller.get('nagiosUrl')).to.equal(null);\n    });\n    it('Nagios doesn\\'t  have any components', function () {\n      App.store.load(App.Service, {\n        id: 'NAGIOS',\n        service_name: 'NAGIOS'\n      });\n      controller.set('nagiosWebProtocol', '');\n      expect(controller.get('nagiosUrl')).to.equal(null);\n      expect(controller.get('isNagiosInstalled')).to.equal(true);\n    });\n    it('NAGIOS Server doesn\\'t  have host', function () {\n      App.store.load(App.HostComponent, {\n        id: 'NAGIOS_SERVER_NAGIOS_host',\n        component_name: 'NAGIOS_SERVER',\n        service_id: 'NAGIOS',\n        host_id: 'NAGIOS_host'\n      });\n      App.store.load(App.Service, {\n        id: 'NAGIOS',\n        service_name: 'NAGIOS',\n        host_components: ['NAGIOS_SERVER_NAGIOS_host']\n      });\n      controller.set('nagiosWebProtocol', '');\n      expect(controller.get('nagiosUrl')).to.equal(null);\n    });\n    it('NAGIOS Server host is \"NAGIOS_host\"', function () {\n      App.store.load(App.Host, {\n        id: 'NAGIOS_host',\n        host_name: 'NAGIOS_host',\n        host_components: ['NAGIOS_SERVER_NAGIOS_host'],\n        public_host_name: 'NAGIOS_host'\n      });\n      controller.set('nagiosWebProtocol', '');\n      expect(controller.get('nagiosUrl')).to.equal(\"http://NAGIOS_host/nagios\");\n    });\n    it('singleNodeInstall = true', function () {\n      App.set('singleNodeInstall', true);\n      controller.set('nagiosWebProtocol', '');\n      expect(controller.get('nagiosUrl')).to.equal(\"http://:42080/nagios\");\n    });\n    it('singleNodeAlias is \"alias\"', function () {\n      App.set('singleNodeAlias', 'alias');\n      controller.set('nagiosWebProtocol', '');\n      expect(controller.get('nagiosUrl')).to.equal(\"http://alias:42080/nagios\");\n    });\n  });\n\n  describe('#nagiosWebProtocol', function () {\n    var testCases = [\n      {\n        title: 'if ambariProperties is null then nagiosWebProtocol should be \"http\"',\n        data: null,\n        result: 'http'\n      },\n      {\n        title: 'if ambariProperties is empty object then nagiosWebProtocol should be \"http\"',\n        data: {},\n        result: 'http'\n      },\n      {\n        title: 'if nagios.https is false then nagiosWebProtocol should be \"http\"',\n        data: {'nagios.https': false},\n        result: 'http'\n      },\n      {\n        title: 'if nagios.https is true then nagiosWebProtocol should be \"http\"',\n        data: {'nagios.https': true},\n        result: 'https'\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('ambariProperties', test.data);\n        expect(controller.get('nagiosWebProtocol')).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#gangliaWebProtocol', function () {\n    var testCases = [\n      {\n        title: 'if ambariProperties is null then nagiosWebProtocol should be \"http\"',\n        data: null,\n        result: 'http'\n      },\n      {\n        title: 'if ambariProperties is empty object then nagiosWebProtocol should be \"http\"',\n        data: {},\n        result: 'http'\n      },\n      {\n        title: 'if nagios.https is false then nagiosWebProtocol should be \"http\"',\n        data: {'ganglia.https': false},\n        result: 'http'\n      },\n      {\n        title: 'if nagios.https is true then nagiosWebProtocol should be \"http\"',\n        data: {'ganglia.https': true},\n        result: 'https'\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('ambariProperties', test.data);\n        expect(controller.get('gangliaWebProtocol')).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#startPolling()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.updater, 'run');\n    });\n    afterEach(function () {\n      App.updater.run.restore();\n    });\n    it('isWorking = false', function () {\n      controller.set('isWorking', false);\n      expect(App.updater.run.calledOnce).to.equal(false);\n      expect(controller.startPolling()).to.equal(false);\n    });\n\n    it('isWorking = true', function () {\n      controller.set('isWorking', true);\n      expect(App.updater.run.calledOnce).to.equal(true);\n      expect(controller.startPolling()).to.equal(true);\n    });\n  });\n\n  describe('#clusterName', function () {\n    var testCases = [\n      {\n        title: 'if cluster is null then clusterName should be null',\n        data: null,\n        result: null\n      },\n      {\n        title: 'if cluster.Clusters.cluster_name is null then clusterName should be null',\n        data: {\n          Clusters: {\n            cluster_name: null\n          }\n        },\n        result: null\n      },\n      {\n        title: 'if cluster.Clusters.cluster_name is null then clusterName should be null',\n        data: {\n          Clusters: {\n            cluster_name: 'mycluster'\n          }\n        },\n        result: 'mycluster'\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('cluster', test.data);\n        expect(controller.get('clusterName')).to.equal(test.result);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/global/configuration_controller');\n\n\ndescribe('App.ConfigurationController', function () {\n  var controller = App.ConfigurationController.create();\n\n  describe('#checkTagsChanges()', function () {\n    var testCases = [\n      {\n        title: 'Tags haven\\'t been uploaded',\n        content: {\n          tags: [],\n          storedTags: []\n        },\n        result: false\n      },\n      {\n        title: 'New tag uploaded',\n        content: {\n          tags: [\n            {\n              siteName: 'site1',\n              tagName: 1\n            }\n          ],\n          storedTags: []\n        },\n        result: true\n      },\n      {\n        title: 'Existing tag with with new tagName',\n        content: {\n          tags: [\n            {\n              siteName: 'site1',\n              tagName: 1\n            }\n          ],\n          storedTags: [\n            {\n              siteName: 'site1',\n              tagName: 2\n            }\n          ]\n        },\n        result: true\n      },\n      {\n        title: 'Tags with different tagNames',\n        content: {\n          tags: [\n            {\n              siteName: 'site1',\n              tagName: 1\n            }\n          ],\n          storedTags: [\n            {\n              siteName: 'site2',\n              tagName: 1\n            }\n          ]\n        },\n        result: true\n      },\n      {\n        title: 'One new tag uploaded',\n        content: {\n          tags: [\n            {\n              siteName: 'site2',\n              tagName: 1\n            },\n            {\n              siteName: 'site1',\n              tagName: 1\n            }\n          ],\n          storedTags: [\n            {\n              siteName: 'site2',\n              tagName: 1\n            }\n          ]\n        },\n        result: true\n      },\n      {\n        title: 'Tags haven\\'t been changed',\n        content: {\n          tags: [\n            {\n              siteName: 'site2',\n              tagName: 1\n            }\n          ],\n          storedTags: [\n            {\n              siteName: 'site2',\n              tagName: 1\n            }\n          ]\n        },\n        result: false\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.checkTagsChanges(test.content.tags, test.content.storedTags)).to.equal(test.result);\n      });\n    });\n  });\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/global/update_controller');\n\n\ndescribe('App.UpdateController', function () {\n  var controller = App.UpdateController.create({\n    clusterName: '',\n    location: '',\n    updateServiceMetric: function(){}\n  });\n\n  describe('#getUrl()', function () {\n\n    it('testMode = true', function () {\n      App.set('testMode', true);\n      expect(controller.getUrl('test', '/real')).to.equal('test');\n    });\n\n    it('testMode = false', function () {\n      App.set('testMode', false);\n      expect(controller.getUrl('test', '/real')).to.equal('/api/v1/clusters//real');\n    });\n\n    it('testMode = false', function () {\n      App.set('testMode', false);\n      controller.set('clusterName', 'mycluster');\n      expect(controller.getUrl('test', '/real')).to.equal('/api/v1/clusters/mycluster/real');\n    });\n  });\n\n  describe('#updateAll()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.updater, 'run', Em.K);\n    });\n    afterEach(function () {\n      App.updater.run.restore();\n    });\n    it('isWorking = false', function () {\n      controller.set('isWorking', false);\n      expect(App.updater.run.called).to.equal(false);\n    });\n\n    it('isWorking = true, App.supports.hostOverrides = false', function () {\n      App.supports.hostOverrides = false;\n      controller.set('isWorking', true);\n      expect(App.updater.run.callCount).to.equal(5);\n      controller.set('isWorking', false);\n    });\n\n    it('isWorking = true, App.supports.hostOverrides = true', function () {\n      App.supports.hostOverrides = true;\n      controller.set('isWorking', true);\n      expect(App.updater.run.callCount).to.equal(6);\n    });\n  });\n\n  describe('#updateHostConditionally()', function () {\n    var context = {\n      callback: function(){}\n    };\n\n    beforeEach(function () {\n      sinon.stub(controller, 'updateHost', Em.K);\n      sinon.spy(context, 'callback');\n    });\n    afterEach(function () {\n      controller.updateHost.restore();\n      context.callback.restore();\n    });\n\n    it('location is empty', function () {\n      controller.set('location', '');\n      controller.updateHostConditionally(context.callback);\n      expect(controller.updateHost.called).to.equal(false);\n      expect(context.callback.called).to.equal(true);\n    });\n    it('location is \"/main/dashboard\"', function () {\n      controller.set('location', '/main/dashboard');\n      controller.updateHostConditionally(context.callback);\n      expect(controller.updateHost.called).to.equal(false);\n      expect(context.callback.called).to.equal(true);\n    });\n    it('location is \"/main/hosts\"', function () {\n      controller.set('location', '/main/hosts');\n      controller.updateHostConditionally(context.callback);\n      expect(controller.updateHost.called).to.equal(true);\n      expect(context.callback.called).to.equal(false);\n    });\n    it('location is \"/main/charts/heatmap\"', function () {\n      controller.set('location', '/main/charts/heatmap');\n      controller.updateHostConditionally(context.callback);\n      expect(controller.updateHost.called).to.equal(true);\n      expect(context.callback.called).to.equal(false);\n    });\n    it('location is \"/main/hosts/host1\"', function () {\n      controller.set('location', '/main/hosts/host1');\n      controller.updateHostConditionally(context.callback);\n      expect(controller.updateHost.called).to.equal(true);\n      expect(context.callback.called).to.equal(false);\n    });\n  });\n\n  describe('#updateServiceMetricConditionally()', function () {\n    var context = {\n      callback: function(){}\n    };\n\n    beforeEach(function () {\n      sinon.spy(controller, 'updateServiceMetric');\n      sinon.spy(context, 'callback');\n    });\n    afterEach(function () {\n      controller.updateServiceMetric.restore();\n      context.callback.restore();\n    });\n\n    it('location is empty', function () {\n      controller.set('location', '');\n      controller.updateServiceMetricConditionally(context.callback);\n      expect(controller.updateServiceMetric.called).to.equal(false);\n      expect(context.callback.called).to.equal(true);\n    });\n    it('location is \"/main/hosts\"', function () {\n      controller.set('location', '/main/hosts');\n      controller.updateServiceMetricConditionally(context.callback);\n      expect(controller.updateServiceMetric.called).to.equal(false);\n      expect(context.callback.called).to.equal(true);\n    });\n    it('location is \"/main/dashboard\"', function () {\n      controller.set('location', '/main/dashboard');\n      controller.updateServiceMetricConditionally(context.callback);\n      expect(controller.updateServiceMetric.called).to.equal(true);\n      expect(context.callback.called).to.equal(false);\n    });\n    it('location is \"/main/services/HDFS\"', function () {\n      controller.set('location', '/main/services/HDFS');\n      controller.updateServiceMetricConditionally(context.callback);\n      expect(controller.updateServiceMetric.called).to.equal(true);\n      expect(context.callback.called).to.equal(false);\n    });\n  });\n\n\n  describe('#getConditionalFields()', function () {\n\n    var testCases = [\n      {\n        title: 'No services exist',\n        services: [],\n        result: []\n      },\n      {\n        title: 'HDFS service',\n        services: [\n          {\n            ServiceInfo: {\n              service_name: 'HDFS'\n            }\n          }\n        ],\n        result: []\n      },\n      {\n        title: 'FLUME service',\n        services: [\n          {\n            ServiceInfo: {\n              service_name: 'FLUME'\n            }\n          }\n        ],\n        result: [\"host_components/metrics/flume/flume,\"+\n          \"host_components/processes/HostComponentProcess\"]\n      },\n      {\n        title: 'YARN service',\n        services: [\n          {\n            ServiceInfo: {\n              service_name: 'YARN'\n            }\n          }\n        ],\n        result: [\"host_components/metrics/yarn/Queue,\" +\n          \"ServiceComponentInfo/rm_metrics/cluster/activeNMcount,\" +\n          \"ServiceComponentInfo/rm_metrics/cluster/unhealthyNMcount,\" +\n          \"ServiceComponentInfo/rm_metrics/cluster/rebootedNMcount,\" +\n          \"ServiceComponentInfo/rm_metrics/cluster/decommissionedNMcount\"]\n      },\n      {\n        title: 'HBASE service',\n        services: [\n          {\n            ServiceInfo: {\n              service_name: 'HBASE'\n            }\n          }\n        ],\n        result: [\"host_components/metrics/hbase/master/IsActiveMaster,\" +\n          \"ServiceComponentInfo/MasterStartTime,\" +\n          \"ServiceComponentInfo/MasterActiveTime,\" +\n          \"ServiceComponentInfo/AverageLoad,\" +\n          \"ServiceComponentInfo/Revision,\" +\n          \"ServiceComponentInfo/RegionsInTransition\"]\n      },\n      {\n        title: 'MAPREDUCE service',\n        services: [\n          {\n            ServiceInfo: {\n              service_name: 'MAPREDUCE'\n            }\n          }\n        ],\n        result: [\"ServiceComponentInfo/AliveNodes,\" +\n          \"ServiceComponentInfo/GrayListedNodes,\" +\n          \"ServiceComponentInfo/BlackListedNodes,\" +\n          \"ServiceComponentInfo/jobtracker/*,\"]\n      },\n      {\n        title: 'STORM service',\n        services: [\n          {\n            ServiceInfo: {\n              service_name: 'STORM'\n            }\n          }\n        ],\n        result: [\"metrics/api/cluster/summary,\"]\n      }\n    ];\n\n    testCases.forEach(function(test){\n      it(test.title, function () {\n        App.cache['services'] = test.services;\n        expect(controller.getConditionalFields()).to.eql(test.result);\n      });\n    });\n  });\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('models/cluster');\nrequire('controllers/wizard');\nrequire('controllers/installer');\n\ndescribe('App.InstallerController', function () {\n\n  var installerController = App.InstallerController.create();\n\n  describe('#loadStacksVersionsSuccessCallback', function() {\n    var test_data = {\n      \"items\" : [\n        {\n          \"Versions\" : {\n            \"active\" : false,\n            \"min_upgrade_version\" : null,\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"1.2.0\"\n          }\n        },\n        {\n          \"Versions\" : {\n            \"active\" : true,\n            \"min_upgrade_version\" : null,\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"1.2.1\"\n          }\n        },\n        {\n          \"Versions\" : {\n            \"active\" : true,\n            \"min_upgrade_version\" : \"1.2.0\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"1.3.0\"\n          }\n        },\n        {\n          \"Versions\" : {\n            \"active\" : false,\n            \"min_upgrade_version\" : null,\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.0.1\"\n          }\n        }\n      ]\n    };\n    it ('Correct data', function() {\n      installerController.loadStacksVersionsSuccessCallback(test_data);\n      expect(installerController.get('stacks.length')).to.equal(2);\n      expect(installerController.get('stacks').everyProperty('isSelected')).to.equal(false);\n      expect(installerController.get('stacks').mapProperty('name')).to.eql(['HDP-1.3.0', 'HDP-1.2.1']);\n    });\n  });\n\n\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/admin/cluster');\n\n\ndescribe('App.MainAdminClusterController', function () {\n\n  var data = {\n    \"items\": [\n      {\n        \"Versions\": {\n          \"stack_version\": \"1.3.1\",\n          \"min_upgrade_version\": \"1.2.0\"\n        }\n      },\n      {\n        \"Versions\": {\n          \"stack_version\": \"1.3.0\",\n          \"min_upgrade_version\": \"1.2.0\"\n        }\n      },\n      {\n        \"Versions\": {\n          \"stack_version\": \"1.2.2\",\n          \"min_upgrade_version\": \"1.2.0\"\n        }\n      },\n      {\n        \"Versions\": {\n          \"stack_version\": \"1.2.0\",\n          \"min_upgrade_version\": \"1.2.0\"\n        }\n      }\n    ]\n  };\n\n  describe('#updateUpgradeVersionSuccessCallback()', function () {\n    it('upgrade version of stack should be \"HDP-1.3.1\"', function () {\n      App.set('currentStackVersion', 'HDP-1.2.2');\n      var controller = App.MainAdminClusterController.create({\n        parseServicesInfo: function () {}\n      });\n      controller.updateUpgradeVersionSuccessCallback.call(controller, data);\n      expect(controller.get('upgradeVersion')).to.equal('HDP-1.3.1');\n    });\n    it('if min upgrade version less then current then upgrade version equal current', function () {\n      App.set('currentStackVersion', 'HDP-1.2.2');\n      data.items[0].Versions.min_upgrade_version = \"1.2.3\";\n      var controller = App.MainAdminClusterController.create({\n        parseServicesInfo: function () {}\n      });\n      controller.updateUpgradeVersionSuccessCallback.call(controller, data);\n      expect(controller.get('upgradeVersion')).to.equal('HDP-1.2.2');\n    })\n  })\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/admin/highAvailability_controller');\nrequire('models/host_component');\nrequire('models/host');\nrequire('utils/ajax/ajax');\n\ndescribe('App.MainAdminHighAvailabilityController', function () {\n\n  var controller = App.MainAdminHighAvailabilityController.create();\n\n  describe('#enableHighAvailability()', function () {\n\n    beforeEach(function () {\n      sinon.spy(controller, \"showErrorPopup\");\n    });\n    afterEach(function () {\n      controller.showErrorPopup.restore();\n    });\n\n    it('Security enabled', function () {\n      controller.set('securityEnabled', true);\n      expect(controller.enableHighAvailability()).to.be.false;\n      expect(controller.showErrorPopup.calledOnce).to.be.true;\n    });\n    it('less than 3 ZooKeeper Servers', function () {\n      controller.set('securityEnabled', false);\n      App.store.load(App.HostComponent, {\n        id: \"NAMENODE_host1\",\n        component_name: 'NAMENODE',\n        work_status: 'STARTED'\n      });\n      expect(controller.enableHighAvailability()).to.be.false;\n      expect(controller.showErrorPopup.calledOnce).to.be.true;\n      App.store.loadMany(App.HostComponent, [\n        {\n          id: \"ZOOKEEPER_SERVER_host1\",\n          component_name: 'ZOOKEEPER_SERVER'\n        },\n        {\n          id: \"ZOOKEEPER_SERVER_host2\",\n          component_name: 'ZOOKEEPER_SERVER'\n        },\n        {\n          id: \"ZOOKEEPER_SERVER_host3\",\n          component_name: 'ZOOKEEPER_SERVER'\n        }\n      ]);\n    });\n    it('Security disabled and all checks passed', function () {\n      App.router.set('transitionTo', function () {\n      });\n      expect(controller.enableHighAvailability()).to.be.true;\n      expect(controller.showErrorPopup.called).to.be.false;\n    });\n    it('NameNode is started', function () {\n      App.HostComponent.find('NAMENODE_host1').set('workStatus', 'INSTALLED');\n      expect(controller.enableHighAvailability()).to.be.false;\n      expect(controller.showErrorPopup.calledOnce).to.be.true;\n      App.HostComponent.find('NAMENODE_host1').set('workStatus', 'STARTED');\n    });\n  });\n\n  describe('#setSecurityStatus()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('testMode = true', function () {\n      App.testEnableSecurity = false;\n      App.testMode = true;\n      controller.set('securityEnabled', false);\n      controller.set('dataIsLoaded', false);\n      controller.setSecurityStatus();\n      expect(controller.get('securityEnabled')).to.be.true;\n      expect(controller.get('dataIsLoaded')).to.be.true;\n      expect(App.ajax.send.called).to.be.false;\n\n    });\n    it('testMode = false', function () {\n      App.testMode = false;\n      controller.set('securityEnabled', false);\n      controller.set('dataIsLoaded', false);\n      controller.setSecurityStatus();\n      expect(controller.get('securityEnabled')).to.be.false;\n      expect(controller.get('dataIsLoaded')).to.be.false;\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#getSecurityStatusFromServerSuccessCallback()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"getServiceConfigsFromServer\", Em.K);\n      sinon.stub(controller, \"showErrorPopup\", Em.K);\n    });\n    afterEach(function () {\n      controller.getServiceConfigsFromServer.restore();\n      controller.showErrorPopup.restore();\n    });\n\n    it('desired_configs is empty', function () {\n      var data = {\n        Clusters: {\n          desired_configs: {}\n        }\n      };\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.showErrorPopup.calledOnce).to.be.true;\n    });\n    it('desired_configs does not have \"global\"', function () {\n      var data = {\n        Clusters: {\n          desired_configs: {\n            'hdfs-site': {}\n          }\n        }\n      };\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.showErrorPopup.calledOnce).to.be.true;\n    });\n    it('desired_configs does not have \"global\"', function () {\n      var data = {\n        Clusters: {\n          desired_configs: {\n            'global': {\n              tag: 1\n            }\n          }\n        }\n      };\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.get('tag')).to.equal(1);\n      expect(controller.getServiceConfigsFromServer.calledOnce).to.be.true;\n      expect(controller.showErrorPopup.called).to.be.false;\n    });\n  });\n\n  describe('#getSecurityStatusFromServerSuccessCallback()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"getServiceConfigsFromServer\", Em.K);\n      sinon.stub(controller, \"showErrorPopup\", Em.K);\n    });\n    afterEach(function () {\n      controller.getServiceConfigsFromServer.restore();\n      controller.showErrorPopup.restore();\n    });\n\n    it('desired_configs is empty', function () {\n      var data = {\n        Clusters: {\n          desired_configs: {}\n        }\n      };\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.showErrorPopup.calledOnce).to.be.true;\n    });\n    it('desired_configs does not have \"global\"', function () {\n      var data = {\n        Clusters: {\n          desired_configs: {\n            'hdfs-site': {}\n          }\n        }\n      };\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.showErrorPopup.calledOnce).to.be.true;\n    });\n    it('desired_configs does not have \"global\"', function () {\n      var data = {\n        Clusters: {\n          desired_configs: {\n            'global': {\n              tag: 1\n            }\n          }\n        }\n      };\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.get('tag')).to.equal(1);\n      expect(controller.getServiceConfigsFromServer.calledOnce).to.be.true;\n      expect(controller.showErrorPopup.called).to.be.false;\n    });\n  });\n\n  describe('#joinMessage()', function () {\n    it('message is empty', function () {\n      var message = [];\n      expect(controller.joinMessage(message)).to.be.empty;\n    });\n    it('message is array from two strings', function () {\n      var message = ['yes', 'no'];\n      expect(controller.joinMessage(message)).to.equal('yes<br/>no');\n    });\n    it('message is string', function () {\n      var message = 'hello';\n      expect(controller.joinMessage(message)).to.equal('<p>hello</p>');\n    });\n  });\n\n  describe('#getServiceConfigsFromServer()', function () {\n\n    it('properties is null', function () {\n      App.router.set('configurationController', Em.Object.create({\n        getConfigsByTags: function () {\n          return this.get('data');\n        },\n        data: [\n          {\n            tag: 1,\n            properties: null\n          }\n        ]\n      }));\n      controller.getServiceConfigsFromServer();\n      expect(controller.get('dataIsLoaded')).to.be.true;\n      expect(controller.get('securityEnabled')).to.be.false;\n    });\n    it('\"security_enabled\" config is absent', function () {\n      App.router.set('configurationController.data', [\n        {\n          tag: 1,\n          properties: {}\n        }\n      ]);\n      controller.getServiceConfigsFromServer();\n      expect(controller.get('dataIsLoaded')).to.be.true;\n      expect(controller.get('securityEnabled')).to.be.false;\n    });\n    it('\"security_enabled\" is false', function () {\n      App.router.set('configurationController.data', [\n        {\n          tag: 1,\n          properties: {\n            'security_enabled': false\n          }\n        }\n      ]);\n      controller.getServiceConfigsFromServer();\n      expect(controller.get('dataIsLoaded')).to.be.true;\n      expect(controller.get('securityEnabled')).to.be.false;\n    });\n    it('\"security_enabled\" is \"false\"', function () {\n      App.router.set('configurationController.data', [\n        {\n          tag: 1,\n          properties: {\n            'security_enabled': \"false\"\n          }\n        }\n      ]);\n      controller.getServiceConfigsFromServer();\n      expect(controller.get('dataIsLoaded')).to.be.true;\n      expect(controller.get('securityEnabled')).to.be.false;\n    });\n    it('\"security_enabled\" is \"true\"', function () {\n      App.router.set('configurationController.data', [\n        {\n          tag: 1,\n          properties: {\n            'security_enabled': \"true\"\n          }\n        }\n      ]);\n      controller.getServiceConfigsFromServer();\n      expect(controller.get('dataIsLoaded')).to.be.true;\n      expect(controller.get('securityEnabled')).to.be.true;\n    });\n    it('\"security_enabled\" is true', function () {\n      App.router.set('configurationController.data', [\n        {\n          tag: 1,\n          properties: {\n            'security_enabled': true\n          }\n        }\n      ]);\n      controller.getServiceConfigsFromServer();\n      expect(controller.get('dataIsLoaded')).to.be.true;\n      expect(controller.get('securityEnabled')).to.be.true;\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/admin/misc_controller');\n\n\ndescribe('App.MainAdminMiscController', function () {\n\n  var controller = App.MainAdminMiscController.create();\n\n  describe('#setContentProperty()', function () {\n    var testCases = [\n      {\n        title: 'key is null',\n        content: {\n          key: null,\n          configName: 'cc',\n          miscConfigs: []\n        },\n        result: {\n          output: false,\n          configValue: 'test'\n        }\n      },\n      {\n        title: 'configName is null',\n        content: {\n          key: 'key',\n          configName: null,\n          miscConfigs: []\n        },\n        result: {\n          output: false,\n          configValue: 'test'\n        }\n      },\n      {\n        title: 'misc configs array doesn\\'t contain such a config',\n        content: {\n          key: 'key',\n          configName: 'config1',\n          miscConfigs: []\n        },\n        result: {\n          output: false,\n          configValue: 'test'\n        }\n      },\n      {\n        title: 'content doesn\\'t contain such a key',\n        content: {\n          key: 'key',\n          configName: 'config1',\n          miscConfigs: [\n            Em.Object.create({\n              name: 'test_key'\n            })\n          ]\n        },\n        result: {\n          output: false,\n          configValue: 'test'\n        }\n      },\n      {\n        title: 'content property match config',\n        content: {\n          key: 'testKey',\n          configName: 'test_key',\n          miscConfigs: [\n            Em.Object.create({\n              name: 'test_key',\n              value: 'testValue'\n            })\n          ]\n        },\n        result: {\n          output: true,\n          configValue: 'testValue'\n        }\n      }\n    ];\n    controller.set('content', Em.Object.create({testKey: 'test'}));\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        var content = controller.get('content');\n        expect(controller.setContentProperty(test.content.key, test.content.configName, test.content.miscConfigs)).to.equal(test.result.output);\n        expect(content.get('testKey')).to.equal(test.result.configValue);\n      });\n    });\n  });\n\n  describe('#sortByOrder()', function () {\n    var testCases = [\n      {\n        title: 'sortOrder is null',\n        content: {\n          sortOrder: null,\n          arrayToSort: [\n            {\n              name: 'one',\n              displayName: 'one'\n            }\n          ]\n        },\n        result: ['one']\n      },\n      {\n        title: 'sortOrder is empty',\n        content: {\n          sortOrder: [],\n          arrayToSort: [\n            {\n              name: 'one',\n              displayName: 'one'\n            }\n          ]\n        },\n        result: ['one']\n      },\n      {\n        title: 'sortOrder items don\\'t match items of array',\n        content: {\n          sortOrder: ['one'],\n          arrayToSort: [\n            {name: 'two'}\n          ]\n        },\n        result: []\n      },\n      {\n        title: 'sort items in reverse order',\n        content: {\n          sortOrder: ['two', 'one'],\n          arrayToSort: [\n            Em.Object.create({\n              name: 'one',\n              displayName: 'one'\n            }),\n            Em.Object.create({\n              name: 'two',\n              displayName: 'two'\n            })\n          ]\n        },\n        result: ['two', 'one']\n      },\n      {\n        title: 'sort items in correct order',\n        content: {\n          sortOrder: ['one', 'two'],\n          arrayToSort: [\n            Em.Object.create({\n              name: 'one',\n              displayName: 'one'\n            }),\n            Em.Object.create({\n              name: 'two',\n              displayName: 'two'\n            })\n          ]\n        },\n        result: ['one', 'two']\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.sortByOrder(test.content.sortOrder, test.content.arrayToSort).mapProperty('displayName')).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#setProxyUserGroupLabel()', function () {\n\n    it('proxyuser_group config is absent', function () {\n      var misc_configs = [];\n      controller.setProxyUserGroupLabel(misc_configs);\n      expect(misc_configs.findProperty('name', 'proxyuser_group')).to.be.undefined;\n    });\n    it('if currentStackVersionNumber less than 2.1 then label should be omitting \"FALCON\" service', function () {\n      var misc_configs = [Em.Object.create({\n        name: 'proxyuser_group',\n        displayName: 'test'\n      })];\n      App.set('currentStackVersion', \"HDP-2.0\");\n      controller.setProxyUserGroupLabel(misc_configs);\n      expect(misc_configs.findProperty('name', 'proxyuser_group').get('displayName')).to.equal('Proxy group for Hive, WebHCat and Oozie');\n    });\n    it('if currentStackVersionNumber equal 2.1 then label should stay the same', function () {\n      var misc_configs = [Em.Object.create({\n        name: 'proxyuser_group',\n        displayName: 'test'\n      })];\n      App.set('currentStackVersion', \"HDP-2.1\");\n      controller.setProxyUserGroupLabel(misc_configs);\n      expect(misc_configs.findProperty('name', 'proxyuser_group').get('displayName')).to.equal('test');\n    });\n    it('if currentStackVersionNumber higher than 2.1 then label should stay the same', function () {\n      var misc_configs = [Em.Object.create({\n        name: 'proxyuser_group',\n        displayName: 'test'\n      })];\n      App.set('currentStackVersion', \"HDP-2.2\");\n      controller.setProxyUserGroupLabel(misc_configs);\n      expect(misc_configs.findProperty('name', 'proxyuser_group').get('displayName')).to.equal('test');\n    });\n  })\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('mixins/common/localStorage');\nrequire('controllers/wizard');\nrequire('controllers/main/admin/security/add/addSecurity_controller');\nrequire('models/cluster');\nrequire('models/service');\n\ndescribe('App.AddSecurityController', function () {\n\n  var controller = App.AddSecurityController.create({\n    currentStep: null\n  });\n\n  describe('#installedServices', function () {\n\n    afterEach(function () {\n      App.Service.find.restore();\n    });\n\n    it('No installed services', function () {\n      sinon.stub(App.Service, 'find', function () {\n        return [];\n      });\n      expect(controller.get('installedServices')).to.eql([]);\n    });\n    it('One service installed', function () {\n      sinon.stub(App.Service, 'find', function () {\n        return [Em.Object.create({serviceName: 'HDFS'})];\n      });\n      Em.propertyDidChange(controller, 'installedServices');\n      expect(controller.get('installedServices')).to.eql(['HDFS']);\n    });\n  });\n\n  describe('#secureServices', function () {\n\n    afterEach(function () {\n      App.get.restore();\n    });\n\n    it('App.isHadoop2Stack = false', function () {\n      var result = [\n        \"GENERAL\",\n        \"HDFS\",\n        \"MAPREDUCE\",\n        \"HIVE\",\n        \"WEBHCAT\",\n        \"HBASE\",\n        \"ZOOKEEPER\",\n        \"OOZIE\",\n        \"NAGIOS\"\n      ];\n      sinon.stub(App, 'get', function () {\n        return false;\n      });\n      expect(controller.get('secureServices').mapProperty('serviceName')).to.eql(result);\n    });\n    it('App.isHadoop2Stack = true', function () {\n      var result = [\n        \"GENERAL\",\n        \"HDFS\",\n        \"MAPREDUCE2\",\n        \"YARN\",\n        \"HIVE\",\n        \"WEBHCAT\",\n        \"HBASE\",\n        \"ZOOKEEPER\",\n        \"OOZIE\",\n        \"NAGIOS\",\n        \"STORM\",\n        \"FALCON\"\n      ];\n      sinon.stub(App, 'get', function () {\n        return true;\n      });\n      Em.propertyDidChange(App, 'isHadoop2Stack');\n      expect(controller.get('secureServices').mapProperty('serviceName')).to.eql(result);\n    });\n  });\n\n  describe('#loadAllPriorSteps()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, 'loadServiceConfigs', Em.K);\n      sinon.stub(controller, 'loadServices', Em.K);\n      sinon.stub(controller, 'loadNnHaStatus', Em.K);\n    });\n    afterEach(function () {\n      controller.loadServiceConfigs.restore();\n      controller.loadServices.restore();\n      controller.loadNnHaStatus.restore();\n    });\n\n    var commonSteps = ['4', '3', '2'];\n    commonSteps.forEach(function (step) {\n      it('Current step - ' + step, function () {\n        controller.set('currentStep', step);\n        controller.loadAllPriorSteps();\n        expect(controller.loadServiceConfigs.calledOnce).to.be.true;\n        expect(controller.loadServices.calledOnce).to.be.true;\n        expect(controller.loadNnHaStatus.calledOnce).to.be.true;\n      });\n    });\n    it('Current step - 1', function () {\n      controller.set('currentStep', '1');\n      controller.loadAllPriorSteps();\n      expect(controller.loadServiceConfigs.called).to.be.false;\n      expect(controller.loadServices.calledOnce).to.be.true;\n      expect(controller.loadNnHaStatus.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#loadServices()', function () {\n    it('No installed services', function () {\n      controller.reopen({\n        installedServices: [],\n        secureServices: [\n          {serviceName: 'GENERAL'}\n        ]\n      });\n      controller.loadServices();\n      expect(controller.get('content.services').mapProperty('serviceName')).to.eql(['GENERAL']);\n    });\n    it('Installed service does not match the secure one', function () {\n      controller.set('installedServices', [\"HDFS\"]);\n      controller.loadServices();\n      expect(controller.get('content.services').mapProperty('serviceName')).to.eql(['GENERAL']);\n    });\n    it('Installed service matches the secure one', function () {\n      controller.set('secureServices', [\n        {serviceName: 'GENERAL'},\n        {serviceName: 'HDFS'}\n      ]);\n      controller.loadServices();\n      expect(controller.get('content.services').mapProperty('serviceName')).to.eql(['GENERAL', 'HDFS']);\n    });\n  });\n\n  describe('#loadNnHaStatus()', function () {\n    afterEach(function () {\n      App.db.getIsNameNodeHa.restore();\n    });\n    it('NameNode HA is off', function () {\n      sinon.stub(App.db, 'getIsNameNodeHa', function () {\n        return false;\n      });\n      controller.loadNnHaStatus();\n      expect(controller.get('content.isNnHa')).to.be.false;\n    });\n    it('NameNode HA is on', function () {\n      sinon.stub(App.db, 'getIsNameNodeHa', function () {\n        return true;\n      });\n      controller.loadNnHaStatus();\n      expect(controller.get('content.isNnHa')).to.be.true;\n    });\n  });\n\n  describe('#loadServiceConfigs()', function () {\n    afterEach(function () {\n      App.db.getSecureConfigProperties.restore();\n    });\n    it('SecureConfigProperties is empty', function () {\n      sinon.stub(App.db, 'getSecureConfigProperties', function () {\n        return [];\n      });\n      controller.loadServiceConfigs();\n      expect(controller.get('content.serviceConfigProperties')).to.eql([]);\n    });\n    it('SecureConfigProperties has one config', function () {\n      sinon.stub(App.db, 'getSecureConfigProperties', function () {\n        return [{}];\n      });\n      controller.loadServiceConfigs();\n      expect(controller.get('content.serviceConfigProperties')).to.eql([{}]);\n    });\n  });\n\n  describe('#getConfigOverrides()', function () {\n    var testCases = [\n      {\n        title: 'overrides is null',\n        configProperty: Em.Object.create({overrides: null}),\n        result: null\n      },\n      {\n        title: 'overrides is empty',\n        configProperty: Em.Object.create({overrides: []}),\n        result: null\n      },\n      {\n        title: 'overrides has one override',\n        configProperty: Em.Object.create({\n          overrides: [\n            Em.Object.create({\n              value: 'value1',\n              selectedHostOptions: []\n            })\n          ]\n        }),\n        result: [{\n          value: 'value1',\n          hosts: []\n        }]\n      },\n      {\n        title: 'overrides has one override with hosts',\n        configProperty: Em.Object.create({\n          overrides: [\n            Em.Object.create({\n              value: 'value1',\n              selectedHostOptions: ['host1']\n            })\n          ]\n        }),\n        result: [{\n          value: 'value1',\n          hosts: ['host1']\n        }]\n      }\n    ];\n\n    testCases.forEach(function(test){\n      it(test.title, function () {\n        expect(controller.getConfigOverrides(test.configProperty)).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#saveServiceConfigProperties()', function () {\n    var testCases = [\n      {\n        title: 'stepConfigs is empty',\n        stepController: Em.Object.create({\n          stepConfigs: []\n        }),\n        result: []\n      },\n      {\n        title: 'No configs in service',\n        stepController: Em.Object.create({\n          stepConfigs: [\n            Em.Object.create({configs: []})\n          ]\n        }),\n        result: []\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        sinon.stub(App.db, 'setSecureConfigProperties', Em.K);\n        controller.saveServiceConfigProperties(test.stepController);\n        expect(App.db.setSecureConfigProperties.calledWith(test.result)).to.be.true;\n        expect(controller.get('content.serviceConfigProperties')).to.eql(test.result);\n        App.db.setSecureConfigProperties.restore();\n      });\n    });\n    it('Service has config', function () {\n      var  stepController = Em.Object.create({\n        stepConfigs: [\n          Em.Object.create({configs: [\n            Em.Object.create({\n              name: 'config1',\n              value: 'value1'\n            })\n          ]})\n        ]\n      });\n      sinon.stub(App.db, 'setSecureConfigProperties', Em.K);\n      controller.saveServiceConfigProperties(stepController);\n      expect(App.db.setSecureConfigProperties.calledOnce).to.be.true;\n      expect(controller.get('content.serviceConfigProperties').mapProperty('name')).to.eql(['config1']);\n      App.db.setSecureConfigProperties.restore();\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\n\nrequire('controllers/main/admin/security/add/step1');\nrequire('models/service');\n\ndescribe('App.MainAdminSecurityAddStep1Controller', function () {\n\n  var controller = App.MainAdminSecurityAddStep1Controller.create({\n    content: {}\n  });\n\n  describe('#isATSInstalled()', function() {\n    it('content.services is empty', function() {\n      controller.set('content.services', []);\n      expect(controller.isATSInstalled()).to.be.false;\n    });\n    it('content.services does not contain YARN', function() {\n      controller.set('content.services', [{serviceName: 'HDFS'}]);\n      expect(controller.isATSInstalled()).to.be.false;\n    });\n    it('YARN does not have ATS', function() {\n      sinon.stub(App.Service, 'find', function(){\n        return Em.Object.create({hostComponents: []})\n      });\n      controller.set('content.services', [{serviceName: 'YARN'}]);\n      expect(controller.isATSInstalled()).to.be.false;\n      App.Service.find.restore();\n    });\n    it('YARN has ATS', function() {\n      sinon.stub(App.Service, 'find', function(){\n        return Em.Object.create({hostComponents: [{\n          componentName: 'APP_TIMELINE_SERVER'\n        }]})\n      });\n      controller.set('content.services', [{serviceName: 'YARN'}]);\n      expect(controller.isATSInstalled()).to.be.true;\n      App.Service.find.restore();\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\n\nrequire('controllers/main/admin/security/add/step2');\nrequire('models/service');\n\ndescribe('App.MainAdminSecurityAddStep2Controller', function () {\n\n  var controller = App.MainAdminSecurityAddStep2Controller.create({\n    content: {}\n  });\n\n  describe('#clearStep()', function () {\n    it('Info is empty', function () {\n      controller.set('stepConfigs', []);\n      controller.set('securityUsers', []);\n      controller.clearStep();\n      expect(controller.get('stepConfigs')).to.be.empty;\n      expect(controller.get('securityUsers')).to.be.empty;\n    });\n    it('Info filled', function () {\n      controller.set('stepConfigs', [1]);\n      controller.set('securityUsers', [1]);\n      controller.clearStep();\n      expect(controller.get('stepConfigs')).to.be.empty;\n      expect(controller.get('securityUsers')).to.be.empty;\n    });\n  });\n\n  describe('#isSubmitDisabled', function () {\n    var tests = [\n      {\n        config: [\n          {\n            showConfig: true,\n            errorCount: 0\n          }\n        ],\n        m: 'All show configs, nothing with errors',\n        e: false\n      },\n      {\n        config: [\n          {\n            showConfig: true,\n            errorCount: 0\n          },\n          {\n            showConfig: true,\n            errorCount: 1\n          }\n        ],\n        m: 'All show configs, 1 with errors',\n        e: true\n      },\n      {\n        config: [\n          {\n            showConfig: true,\n            errorCount: 0\n          },\n          {\n            showConfig: false,\n            errorCount: 1\n          }\n        ],\n        m: '1 has errors but not visible',\n        e: false\n      },\n      {\n        config: [\n          {\n            showConfig: false,\n            errorCount: 0\n          },\n          {\n            showConfig: false,\n            errorCount: 1\n          }\n        ],\n        m: '1 has errors, all not visible',\n        e: false\n      },\n      {\n        config: [\n          {\n            showConfig: true,\n            errorCount: 1\n          },\n          {\n            showConfig: true,\n            errorCount: 1\n          }\n        ],\n        m: 'All has errors, all not visible',\n        e: true\n      }\n    ];\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        controller.set('stepConfigs', test.config);\n        expect(controller.get('isSubmitDisabled')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#loadStep()', function () {\n    it('load step', function () {\n      controller.set('stepConfigs', [\n        {}\n      ]);\n      controller.set('securityUsers', ['user1']);\n      controller.set('content.services', ['service1']);\n      controller.set('content.serviceConfigProperties', ['config1']);\n      sinon.stub(controller, 'clearStep', Em.K);\n      sinon.stub(controller, 'loadUsers', Em.K);\n      sinon.stub(controller, 'addUserPrincipals', Em.K);\n      sinon.stub(controller, 'addMasterHostToGlobals', Em.K);\n      sinon.stub(controller, 'addSlaveHostToGlobals', Em.K);\n      sinon.stub(controller, 'renderServiceConfigs', Em.K);\n      sinon.stub(controller, 'changeCategoryOnHa', Em.K);\n      sinon.stub(controller, 'setStoredConfigsValue', Em.K);\n      sinon.stub(controller, 'addHostPrincipals', Em.K);\n      sinon.stub(App.Service, 'find', function () {\n        return [\n          {serviceName: 'HDFS'}\n        ];\n      });\n\n      controller.loadStep();\n      expect(controller.get('installedServices')).to.eql(['HDFS']);\n      expect(controller.clearStep.calledOnce).to.be.true;\n      expect(controller.loadUsers.calledOnce).to.be.true;\n      expect(controller.addUserPrincipals.calledWith(['service1'], ['user1'])).to.be.true;\n      expect(controller.addMasterHostToGlobals.calledOnce).to.be.true;\n      expect(controller.addSlaveHostToGlobals.calledOnce).to.be.true;\n      expect(controller.addHostPrincipals.calledOnce).to.be.true;\n      expect(controller.renderServiceConfigs.calledWith(['service1'])).to.be.true;\n      expect(controller.changeCategoryOnHa.calledWith(['service1'], [{}])).to.be.true;\n      expect(controller.setStoredConfigsValue.calledWith(['config1'])).to.be.true;\n\n      controller.clearStep.restore();\n      controller.loadUsers.restore();\n      controller.addUserPrincipals.restore();\n      controller.addMasterHostToGlobals.restore();\n      controller.addSlaveHostToGlobals.restore();\n      controller.renderServiceConfigs.restore();\n      controller.changeCategoryOnHa.restore();\n      controller.setStoredConfigsValue.restore();\n      controller.addHostPrincipals.restore();\n      App.Service.find.restore();\n    });\n  });\n\n  describe('#setStoredConfigsValue()', function () {\n    it('storedConfigProperties is null', function () {\n      expect(controller.setStoredConfigsValue(null)).to.be.false;\n    });\n    it('stepConfigs is empty', function () {\n      controller.set('stepConfigs', []);\n      expect(controller.setStoredConfigsValue([])).to.be.true;\n      expect(controller.get('stepConfigs')).to.be.empty;\n    });\n    it('stepConfig has no configs', function () {\n      controller.set('stepConfigs', [Em.Object.create({\n        configs: []\n      })]);\n      expect(controller.setStoredConfigsValue([])).to.be.true;\n      expect(controller.get('stepConfigs')[0].get('configs')).to.be.empty;\n    });\n    it('stepConfig has no stored configs', function () {\n      controller.set('stepConfigs', [Em.Object.create({\n        configs: [Em.Object.create({\n          name: 'config1',\n          value: 'value1'\n        })]\n      })]);\n      var storedConfigProperties = [\n        {\n          name: 'config2',\n          value: \"value2\"\n        }\n      ];\n      expect(controller.setStoredConfigsValue(storedConfigProperties)).to.be.true;\n      expect(controller.get('stepConfigs')[0].get('configs').findProperty('name', 'config1').get('value')).to.equal('value1');\n    });\n    it('stepConfig has stored configs', function () {\n      controller.set('stepConfigs', [Em.Object.create({\n        configs: [Em.Object.create({\n          name: 'config2',\n          value: 'value1'\n        })]\n      })]);\n      var storedConfigProperties = [\n        {\n          name: 'config2',\n          value: \"value2\"\n        }\n      ];\n      expect(controller.setStoredConfigsValue(storedConfigProperties)).to.be.true;\n      expect(controller.get('stepConfigs')[0].get('configs').findProperty('name', 'config2').get('value')).to.equal('value2');\n    });\n  });\n\n  describe('#renderServiceConfigs()', function () {\n    it('serviceConfigs and stepConfigs are empty', function () {\n      controller.set('stepConfigs', []);\n      controller.renderServiceConfigs([]);\n      expect(controller.get('selectedService')).to.be.undefined;\n    });\n    it('serviceConfigs is empty', function () {\n      controller.set('stepConfigs', [\n        {showConfig: true}\n      ]);\n      controller.renderServiceConfigs([]);\n      expect(controller.get('selectedService')).to.eql({showConfig: true});\n    });\n    it('serviceConfigs has service', function () {\n      var serviceConfigs = [\n        {\n          serviceName: 'HDFS',\n          configs: []\n        }\n      ];\n      sinon.stub(controller, 'wrapConfigProperties', function () {\n        return [];\n      });\n      controller.set('stepConfigs', []);\n      controller.renderServiceConfigs(serviceConfigs);\n      expect(controller.get('selectedService').get('serviceName')).to.equal('HDFS');\n      expect(controller.get('selectedService').get('showConfig')).to.be.true;\n      expect(controller.get('selectedService').get('configs')).to.be.empty;\n      expect(controller.wrapConfigProperties.calledWith({\n        serviceName: 'HDFS',\n        configs: []\n      })).to.be.true;\n      controller.wrapConfigProperties.restore();\n    });\n  });\n\n  describe('#wrapConfigProperties()', function () {\n    it('_componentConfig is empty', function () {\n      expect(controller.wrapConfigProperties({configs: []})).to.be.empty;\n    });\n    it('serviceConfigs has service', function () {\n      var mock = Em.Object.create({\n        validate: Em.K,\n        isReconfigurable: true,\n        isEditable: false\n      });\n      var _componentConfig = {configs: [\n        {name: 'config1'}\n      ]};\n      sinon.stub(App.ServiceConfigProperty, 'create', function () {\n        return mock;\n      });\n      sinon.spy(mock, 'validate');\n      expect(controller.wrapConfigProperties(_componentConfig)[0].get('isEditable')).to.be.true;\n      expect(App.ServiceConfigProperty.create.calledWith({name: 'config1'})).to.be.true;\n      expect(mock.validate.calledOnce).to.be.true;\n      mock.validate.restore();\n      App.ServiceConfigProperty.create.restore();\n    });\n  });\n\n  describe('#setHostsToConfig()', function () {\n    it('service is null', function () {\n      expect(controller.setHostsToConfig(null)).to.be.false;\n    });\n    it('service.configs is empty', function () {\n      controller.set('content.services', [\n        {\n          serviceName: 'HDFS',\n          configs: []\n        }\n      ]);\n      expect(controller.setHostsToConfig('HDFS')).to.be.false;\n    });\n    it('No such config name in service.configs', function () {\n      controller.set('content.services', [\n        {\n          serviceName: 'HDFS',\n          configs: [\n            {\n              name: 'config1'\n            }\n          ]\n        }\n      ]);\n      expect(controller.setHostsToConfig('HDFS', 'config2')).to.be.false;\n    });\n    it('Correct config in service.configs', function () {\n      sinon.stub(App.Service, 'find', function () {\n        return Em.Object.create({\n          hostComponents: [\n            Em.Object.create({\n              componentName: 'comp1',\n              host: {hostName: 'host1'}\n            })\n          ]\n        });\n      });\n      expect(controller.setHostsToConfig('HDFS', 'config1', ['comp1'])).to.be.true;\n      expect(controller.get('content.services')[0].configs[0].defaultValue).to.eql(['host1']);\n      App.Service.find.restore();\n    });\n  });\n\n  describe('#setHostToPrincipal()', function () {\n    it('service is null', function () {\n      expect(controller.setHostToPrincipal(null)).to.be.false;\n    });\n    it('service.configs is empty', function () {\n      controller.set('content.services', [\n        {\n          serviceName: 'HDFS',\n          configs: []\n        }\n      ]);\n      expect(controller.setHostToPrincipal('HDFS')).to.be.false;\n    });\n    it('No such hostConfigName name in service.configs', function () {\n      controller.set('content.services', [\n        {\n          serviceName: 'HDFS',\n          configs: [\n            {\n              name: 'config1'\n            }\n          ]\n        }\n      ]);\n      expect(controller.setHostToPrincipal('HDFS', 'config2', 'config1')).to.be.false;\n    });\n    it('No such principalConfigName name in service.configs', function () {\n      expect(controller.setHostToPrincipal('HDFS', 'config1', 'config2')).to.be.false;\n    });\n    it('Correct config in service.configs', function () {\n      controller.set('content.services', [\n        {\n          serviceName: 'HDFS',\n          configs: [\n            {\n              name: 'config1',\n              defaultValue: 'value1'\n            },\n            {\n              name: 'principal1'\n            }\n          ]\n        }\n      ]);\n      expect(controller.setHostToPrincipal('HDFS', 'config1', 'principal1', 'name1')).to.be.true;\n      expect(controller.get('content.services')[0].configs[0].defaultValue).to.equal('value1');\n      expect(controller.get('content.services')[0].configs[1].defaultValue).to.equal('name1value1');\n    });\n    it('Correct config in service.configs, defaultValue is array', function () {\n      controller.set('content.services', [\n        {\n          serviceName: 'HDFS',\n          configs: [\n            {\n              name: 'config1',\n              defaultValue: ['Value1']\n            },\n            {\n              name: 'principal1'\n            }\n          ]\n        }\n      ]);\n      expect(controller.setHostToPrincipal('HDFS', 'config1', 'principal1', 'name1')).to.be.true;\n      expect(controller.get('content.services')[0].configs[0].defaultValue).to.equal('Value1');\n      expect(controller.get('content.services')[0].configs[1].defaultValue).to.equal('name1value1');\n    });\n  });\n\n  describe('#loadUsers()', function () {\n\n    afterEach(function () {\n      App.router.get.restore();\n    });\n\n    it('serviceUsers is correct', function () {\n      sinon.stub(App.router, 'get', function () {\n        return Em.Object.create({serviceUsers: [\n          {}\n        ]})\n      });\n      controller.loadUsers();\n      expect(controller.get('securityUsers')).to.eql([\n        {}\n      ]);\n    });\n    it('serviceUsers is null, testMode = true', function () {\n      sinon.stub(App.router, 'get', function () {\n        return Em.Object.create({serviceUsers: null})\n      });\n      App.testMode = true;\n      controller.loadUsers();\n      expect(controller.get('securityUsers').mapProperty('name')).to.eql([\"hdfs_user\",\n        \"mapred_user\",\n        \"hbase_user\",\n        \"hive_user\",\n        \"smokeuser\"\n      ]);\n    });\n    it('serviceUsers is empty, testMode = true', function () {\n      sinon.stub(App.router, 'get', function () {\n        return Em.Object.create({serviceUsers: []})\n      });\n      App.testMode = true;\n      controller.loadUsers();\n      expect(controller.get('securityUsers').mapProperty('name')).to.eql([\"hdfs_user\",\n        \"mapred_user\",\n        \"hbase_user\",\n        \"hive_user\",\n        \"smokeuser\"\n      ]);\n    });\n    it('serviceUsers is null, testMode = false', function () {\n      sinon.stub(App.router, 'get', function () {\n        return Em.Object.create({serviceUsers: null})\n      });\n      sinon.stub(App.db, 'getSecureUserInfo', function () {\n        return [\n          {}\n        ];\n      });\n      App.testMode = false;\n      controller.loadUsers();\n      expect(controller.get('securityUsers')).to.eql([\n        {}\n      ]);\n      expect(App.db.getSecureUserInfo.calledOnce).to.be.true;\n      App.db.getSecureUserInfo.restore();\n    });\n    it('serviceUsers is empty, testMode = false', function () {\n      sinon.stub(App.router, 'get', function () {\n        return Em.Object.create({serviceUsers: []})\n      });\n      sinon.stub(App.db, 'getSecureUserInfo', function () {\n        return [\n          {}\n        ];\n      });\n      App.testMode = false;\n      controller.loadUsers();\n      expect(controller.get('securityUsers')).to.eql([\n        {}\n      ]);\n      expect(App.db.getSecureUserInfo.calledOnce).to.be.true;\n      App.db.getSecureUserInfo.restore();\n    });\n  });\n\n  describe('#addUserPrincipals()', function () {\n\n    afterEach(function () {\n      controller.setUserPrincipalValue.restore();\n    });\n\n    var serviceConfigs = [\n      {\n        serviceName: 'GENERAL',\n        configs: [\n          {name: 'hbase_principal_name'},\n          {name: 'hbase_user_keytab'}\n        ]\n      }\n    ];\n    var securityUsers = [];\n\n    it('HBASE service is not installed', function () {\n      sinon.stub(controller, 'setUserPrincipalValue', Em.K);\n      controller.addUserPrincipals(serviceConfigs, securityUsers);\n      expect(controller.setUserPrincipalValue.calledTwice).to.be.true;\n    });\n    it('HBASE service is installed, setUserPrincipalValue return false', function () {\n      sinon.stub(controller, 'setUserPrincipalValue', function () {\n        return false;\n      });\n      serviceConfigs.push({serviceName: 'HBASE'});\n      controller.addUserPrincipals(serviceConfigs, securityUsers);\n      expect(controller.setUserPrincipalValue.calledThrice).to.be.true;\n    });\n    it('HBASE service is installed, setUserPrincipalValue return true', function () {\n      sinon.stub(controller, 'setUserPrincipalValue', function () {\n        return true;\n      });\n      controller.addUserPrincipals(serviceConfigs, securityUsers);\n      expect(controller.setUserPrincipalValue.calledThrice).to.be.true;\n      expect(serviceConfigs[0].configs.findProperty('name', 'hbase_principal_name').isVisible).to.be.true;\n      expect(serviceConfigs[0].configs.findProperty('name', 'hbase_user_keytab').isVisible).to.be.true;\n    });\n  });\n\n  describe('#setUserPrincipalValue()', function () {\n    it('user and userPrincipal are null', function () {\n      expect(controller.setUserPrincipalValue(null, null)).to.be.false;\n    });\n    it('user is null', function () {\n      expect(controller.setUserPrincipalValue(null, {})).to.be.false;\n    });\n    it('userPrincipal is null', function () {\n      expect(controller.setUserPrincipalValue({}, null)).to.be.false;\n    });\n    it('user and userPrincipal are correct', function () {\n      var user = {value: 'value1'};\n      var userPrincipal = {};\n      expect(controller.setUserPrincipalValue(user, userPrincipal)).to.be.true;\n      expect(userPrincipal.defaultValue).to.equal('value1');\n    });\n  });\n\n  describe('#addSlaveHostToGlobals()', function () {\n    it('slaveComponentMap is empty', function () {\n      sinon.stub(controller, 'setHostsToConfig', Em.K);\n      controller.set('slaveComponentMap', []);\n      controller.addSlaveHostToGlobals();\n      expect(controller.setHostsToConfig.called).to.be.false;\n      controller.setHostsToConfig.restore();\n    });\n    it('Correct data', function () {\n      sinon.stub(controller, 'setHostsToConfig', Em.K);\n      controller.set('slaveComponentMap', [\n        {\n          serviceName: 'HDFS',\n          configName: 'datanode_hosts',\n          component: 'DATANODE'\n        }\n      ]);\n      controller.addSlaveHostToGlobals();\n      expect(controller.setHostsToConfig.calledWith('HDFS', 'datanode_hosts', ['DATANODE'])).to.be.true;\n      controller.setHostsToConfig.restore();\n    });\n  });\n\n  describe('#addMasterHostToGlobals()', function () {\n    it('masterComponentMap is empty', function () {\n      sinon.stub(controller, 'setHostsToConfig', Em.K);\n      controller.set('masterComponentMap', []);\n      controller.addMasterHostToGlobals();\n      expect(controller.setHostsToConfig.called).to.be.false;\n      controller.setHostsToConfig.restore();\n    });\n    it('Correct data', function () {\n      sinon.stub(controller, 'setHostsToConfig', Em.K);\n      controller.set('masterComponentMap', [\n        {\n          serviceName: 'HDFS',\n          configName: 'datanode_hosts',\n          components: ['DATANODE']\n        }\n      ]);\n      controller.addMasterHostToGlobals();\n      expect(controller.setHostsToConfig.calledWith('HDFS', 'datanode_hosts', ['DATANODE'])).to.be.true;\n      controller.setHostsToConfig.restore();\n    });\n  });\n\n  describe('#addHostPrincipals()', function () {\n    it('hostToPrincipalMap is empty', function () {\n      sinon.stub(controller, 'setHostToPrincipal', Em.K);\n      controller.set('hostToPrincipalMap', []);\n      controller.addHostPrincipals();\n      expect(controller.setHostToPrincipal.called).to.be.false;\n      controller.setHostToPrincipal.restore();\n    });\n    it('Correct data', function () {\n      sinon.stub(controller, 'setHostToPrincipal', Em.K);\n      controller.set('hostToPrincipalMap', [\n        {\n          serviceName: 'HDFS',\n          configName: 'datanode_hosts',\n          principalName: 'principal1',\n          primaryName: 'name1'\n        }\n      ]);\n      controller.addHostPrincipals();\n      expect(controller.setHostToPrincipal.calledWith('HDFS', 'datanode_hosts', 'principal1', 'name1')).to.be.true;\n      controller.setHostToPrincipal.restore();\n    });\n  });\n\n  describe('#changeCategoryOnHa()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, 'removeConfigCategory', Em.K);\n    });\n    afterEach(function () {\n      controller.removeConfigCategory.restore();\n    });\n\n    var serviceConfigs = [{\n      serviceName: 'HDFS',\n      configCategories: []\n    }];\n    var stepConfigs = [Em.Object.create({\n      serviceName: 'HDFS',\n      configs: []\n    })];\n\n    it('HDFS service is absent', function () {\n      expect(controller.changeCategoryOnHa([], [])).to.be.false;\n    });\n    it('HDFS service installed, App.testMode and App.testNameNodeHA - true', function () {\n      App.testMode = true;\n      App.testNameNodeHA = true;\n      expect(controller.changeCategoryOnHa(serviceConfigs, stepConfigs)).to.be.true;\n      expect(controller.removeConfigCategory.calledWith([], [], 'SNameNode')).to.be.true;\n      App.testMode = false;\n      App.testNameNodeHA = false;\n    });\n    it('HDFS service installed, content.isNnHa = true', function () {\n      controller.set('content.isNnHa', 'true');\n      expect(controller.changeCategoryOnHa(serviceConfigs, stepConfigs)).to.be.true;\n      expect(controller.removeConfigCategory.calledWith([], [], 'SNameNode')).to.be.true;\n    });\n    it('HDFS service installed, HA disabled', function () {\n      controller.set('content.isNnHa', 'false');\n      expect(controller.changeCategoryOnHa(serviceConfigs, stepConfigs)).to.be.true;\n      expect(controller.removeConfigCategory.calledWith([], [], 'JournalNode')).to.be.true;\n    });\n  });\n\n  describe('#removeConfigCategory()', function () {\n    it('properties should be hidden', function () {\n      var properties = [\n        Em.Object.create({\n          category: 'comp1',\n          isVisible: true\n        })\n      ];\n      controller.removeConfigCategory(properties, [], 'comp1');\n      expect(properties[0].isVisible).to.be.false;\n    });\n    it('category should be removed', function () {\n      var configCategories = [\n        Em.Object.create({\n          name: 'comp1'\n        })\n      ];\n      controller.removeConfigCategory([], configCategories, 'comp1');\n      expect(configCategories).to.be.empty;\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\n\nrequire('controllers/main/admin/security/add/step3');\nvar stringUtils = require('utils/string_utils');\n\ndescribe('App.MainAdminSecurityAddStep3Controller', function () {\n\n  var controller = App.MainAdminSecurityAddStep3Controller.create({\n    content: {}\n  });\n\n  describe('#openInfoInNewTab()', function() {\n    it('Correct data', function() {\n      var mock = {\n        document: {\n          write: function(){}\n        },\n        focus: function(){}\n      };\n      sinon.stub(window, 'open', function () {\n        return mock;\n      });\n      sinon.stub(stringUtils, 'arrayToCSV', function () {\n        return 'CSV_CONTENT';\n      });\n      sinon.spy(mock.document, 'write');\n      sinon.spy(mock, 'focus');\n      controller.set('hostComponents', ['comp1']);\n\n      controller.openInfoInNewTab();\n      expect(window.open.calledWith('')).to.be.true;\n      expect(stringUtils.arrayToCSV.calledWith(['comp1'])).to.be.true;\n      expect(mock.document.write.calledWith('CSV_CONTENT')).to.be.true;\n      expect(mock.focus.calledOnce).to.be.true;\n      window.open.restore();\n      stringUtils.arrayToCSV.restore();\n    });\n  });\n\n  describe('#loadStep()', function() {\n\n    beforeEach(function(){\n      sinon.stub(controller, 'getSecurityUsers', function () {\n        return [{\n          name: 'user_group',\n          value: 'value1'\n        }];\n      });\n    });\n    afterEach(function(){\n      App.Host.find.restore();\n      controller.getSecurityUsers.restore();\n    });\n\n    it('No hosts installed', function() {\n      sinon.stub(App.Host, 'find', function(){\n        return [];\n      });\n      controller.loadStep();\n      expect(controller.get('hostComponents')).to.be.empty;\n    });\n    it('One host installed', function () {\n      sinon.stub(App.Host, 'find', function () {\n        return [Em.Object.create({hostName: 'host1'})];\n      });\n      sinon.stub(controller, 'setMandatoryConfigs', function (result) {\n        return result.push('setMandatoryConfigs');\n      });\n      sinon.stub(controller, 'setComponentsConfig', function (result) {\n        return result.push('setComponentsConfig');\n      });\n      sinon.stub(controller, 'setHostComponentsSecureValue', function (result) {\n        return result.push('setHostComponentsSecureValue');\n      });\n\n      controller.loadStep();\n      expect(controller.setMandatoryConfigs.calledOnce).to.be.true;\n      expect(controller.setComponentsConfig.calledOnce).to.be.true;\n      expect(controller.setHostComponentsSecureValue.calledOnce).to.be.true;\n      expect(controller.get('hostComponents')).to.eql([\"setMandatoryConfigs\", \"setComponentsConfig\", \"setHostComponentsSecureValue\"]);\n\n      controller.setMandatoryConfigs.restore();\n      controller.setComponentsConfig.restore();\n      controller.setHostComponentsSecureValue.restore();\n    });\n  });\n\n  describe('#buildComponentToOwnerMap()', function() {\n    it('componentToUserMap is empty', function() {\n      controller.set('componentToUserMap', {});\n      expect(controller.buildComponentToOwnerMap([])).to.eql({});\n    });\n    it('componentToUserMap has properties', function() {\n      controller.set('componentToUserMap', {'COMP1': 'config1'});\n      var securityUsers = [{\n        name: 'config1',\n        value: 'value1'\n      }];\n      expect(controller.buildComponentToOwnerMap(securityUsers)).to.eql({'COMP1': 'value1'});\n    });\n  });\n\n  describe('#setComponentsConfig()', function() {\n\n    beforeEach(function(){\n      controller.set('content.serviceConfigProperties', [\n        {\n          serviceName: 'HDFS',\n          name: 'principal1',\n          value: '_HOST'\n        },\n        {\n          serviceName: 'HDFS',\n          name: 'keytab1',\n          value: 'value1'\n        }\n      ]);\n    });\n\n    it('componentToConfigMap is empty', function() {\n      controller.set('componentToConfigMap', []);\n      var result = [];\n      controller.setComponentsConfig(result, Em.Object.create(), 'hadoopGroupId');\n      expect(result).to.be.empty;\n    });\n    it('isHadoop2Stack = false, when component from stack2', function() {\n      sinon.stub(App, 'get', function () {\n        return false;\n      });\n      controller.set('componentToConfigMap', [{\n        componentName: 'DATANODE',\n        principal: 'principal1',\n        keytab: 'keytab1',\n        displayName: 'displayName1',\n        isHadoop2Stack: true\n      }]);\n      var host = Em.Object.create({\n        hostComponents: [{componentName: 'DATANODE'}],\n        hostName: 'host1'\n      });\n      var result = [];\n      controller.setComponentsConfig(result, host, 'hadoopGroupId');\n      expect(result).to.be.empty;\n      App.get.restore();\n    });\n    it('isHadoop2Stack = true, when component from stack2', function() {\n      sinon.stub(App, 'get', function () {\n        return true;\n      });\n      controller.set('componentToConfigMap', [{\n        componentName: 'DATANODE',\n        principal: 'principal1',\n        keytab: 'keytab1',\n        displayName: 'displayName1',\n        isHadoop2Stack: true\n      }]);\n      var host = Em.Object.create({\n        hostComponents: [{componentName: 'DATANODE'}],\n        hostName: 'host1'\n      });\n      var result = [];\n      controller.setComponentsConfig(result, host, 'hadoopGroupId');\n      expect(result.length).to.equal(1);\n      App.get.restore();\n    });\n    it('Component does not match host-component', function() {\n      controller.set('componentToConfigMap', [{\n        componentName: 'DATANODE',\n        principal: 'principal1',\n        keytab: 'keytab1',\n        displayName: 'displayName1'\n      }]);\n      var host = Em.Object.create({\n        hostComponents: [{componentName: 'DATANODE1'}],\n        hostName: 'host1'\n      });\n      var result = [];\n      controller.setComponentsConfig(result, host, 'hadoopGroupId');\n      expect(result).to.be.empty;\n    });\n    it('Component matches host-component', function() {\n      controller.set('componentToConfigMap', [{\n        componentName: 'DATANODE',\n        principal: 'principal1',\n        keytab: 'keytab1',\n        displayName: 'displayName1'\n      }]);\n      var host = Em.Object.create({\n        hostComponents: [{componentName: 'DATANODE'}],\n        hostName: 'host1'\n      });\n      var result = [];\n      controller.setComponentsConfig(result, host, 'hadoopGroupId');\n      expect(result.length).to.equal(1);\n    });\n  });\n\n  describe('#setMandatoryConfigs()', function() {\n\n    beforeEach(function () {\n      sinon.stub(App.Service, 'find', function () {\n        return [\n          {serviceName: 'SERVICE1'}\n        ];\n      });\n      controller.set('content.serviceConfigProperties', [\n        {\n          serviceName: 'GENERAL',\n          name: 'kerberos_domain',\n          value: 'realm1'\n        }\n      ]);\n    });\n    afterEach(function () {\n      App.Service.find.restore();\n    });\n\n    it('mandatoryConfigs is empty', function() {\n      var result = [];\n      controller.set('mandatoryConfigs', []);\n\n      controller.setMandatoryConfigs(result, [], '', '');\n      expect(result).to.be.empty;\n    });\n    it('config has unknown service to check', function() {\n      var result = [];\n      controller.set('mandatoryConfigs', [{\n        userConfig: 'kerberos_domain',\n        keytab: 'kerberos_domain',\n        displayName: '',\n        checkService: 'HBASE'\n      }]);\n\n      controller.setMandatoryConfigs(result, [], '', '');\n      expect(result).to.be.empty;\n    });\n    it('config should be added', function() {\n      var result = [];\n      controller.set('mandatoryConfigs', [{\n        userConfig: 'userConfig1',\n        keytab: 'kerberos_domain',\n        displayName: ''\n      }]);\n      var securityUsers = [{\n        name: 'userConfig1',\n        value: 'value1'\n      }];\n\n      controller.setMandatoryConfigs(result, securityUsers, '', '');\n      expect(result.length).to.equal(1);\n    });\n  });\n\n  describe('#setHostComponentsSecureValue()', function() {\n\n    beforeEach(function () {\n      sinon.stub(controller, 'buildComponentToOwnerMap', Em.K);\n      sinon.stub(controller, 'changeDisplayName', Em.K);\n      sinon.stub(controller, 'getSecureProperties', function(){\n        return {principal: '', keytab: ''};\n      });\n    });\n    afterEach(function () {\n      controller.buildComponentToOwnerMap.restore();\n      controller.changeDisplayName.restore();\n      controller.getSecureProperties.restore();\n    });\n\n    it('host.hostComponents is empty', function() {\n      var result = [];\n      var host = Em.Object.create({\n        hostComponents: []\n      });\n\n      controller.setHostComponentsSecureValue(result, host);\n      expect(result).to.be.empty;\n    });\n    it('host-component does not match component to display', function() {\n      var result = [];\n      var host = Em.Object.create({\n        hostComponents: [Em.Object.create({\n          componentName: 'UNKNOWN'\n        })]\n      });\n\n      controller.setHostComponentsSecureValue(result, host);\n      expect(result).to.be.empty;\n    });\n    it('host-component matches component to display', function() {\n      var result = [];\n      var host = Em.Object.create({\n        hostComponents: [Em.Object.create({\n          componentName: 'DATANODE'\n        })]\n      });\n\n      controller.setHostComponentsSecureValue(result, host, {}, [], '');\n      expect(result.length).to.equal(1);\n    });\n    it('addedPrincipalsHost already contain such config', function() {\n      var result = [];\n      var host = Em.Object.create({\n        hostName: 'host1',\n        hostComponents: [Em.Object.create({\n          componentName: 'DATANODE'\n        })]\n      });\n\n      controller.setHostComponentsSecureValue(result, host, {'host1--': true}, [], '');\n      expect(result.length).to.be.empty;\n    });\n  });\n\n  describe('#getSecureProperties()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, 'getPrincipal', function () {\n        return 'principal';\n      });\n    });\n    afterEach(function () {\n      controller.getPrincipal.restore();\n    });\n\n    var testCases = [\n      {\n        title: 'serviceConfigs is empty',\n        content: {\n          serviceConfigs: [],\n          componentName: ''\n        },\n        result: {}\n      },\n      {\n        title: 'Config has component that does not match component name',\n        content: {\n          serviceConfigs: [{\n            component: 'comp1'\n          }],\n          componentName: 'comp2'\n        },\n        result: {}\n      },\n      {\n        title: 'Config has components that does not match component name',\n        content: {\n          serviceConfigs: [{\n            components: ['comp1']\n          }],\n          componentName: 'comp2'\n        },\n        result: {}\n      },\n      {\n        title: 'Config has component that matches component name',\n        content: {\n          serviceConfigs: [{\n            name: 'C_principal_name',\n            component: 'comp1',\n            value: 'value1'\n          }],\n          componentName: 'comp1'\n        },\n        result: {\n          principal: 'principal'\n        }\n      },\n      {\n        title: 'Config has components that matches component name',\n        content: {\n          serviceConfigs: [{\n            name: 'C_principal_name',\n            components: ['comp1'],\n            value: 'value1'\n          }],\n          componentName: 'comp1'\n        },\n        result: {\n          principal: 'principal'\n        }\n      },\n      {\n        title: 'Config name without correct postfix',\n        content: {\n          serviceConfigs: [{\n            name: 'config1',\n            component: 'comp1',\n            value: 'value1'\n          }],\n          componentName: 'comp1'\n        },\n        result: {}\n      },\n      {\n        title: 'Config name with \"_keytab\" postfix',\n        content: {\n          serviceConfigs: [{\n            name: 'c_keytab',\n            component: 'comp1',\n            value: 'value1'\n          }],\n          componentName: 'comp1'\n        },\n        result: {\n          keytab: 'value1'\n        }\n      },\n      {\n        title: 'Config name with \"_keytab_path\" postfix',\n        content: {\n          serviceConfigs: [{\n            name: 'c_keytab_path',\n            component: 'comp1',\n            value: 'value1'\n          }],\n          componentName: 'comp1'\n        },\n        result: {\n          keytab: 'value1'\n        }\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.getSecureProperties(test.content.serviceConfigs, test.content.componentName, '')).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#getPrincipal()', function () {\n\n    var testCases = [\n      {\n        title: 'Config value missing \"_HOST\" string, unit is empty',\n        content: {\n          config: {\n            value: 'value1',\n            unit: ''\n          },\n          hostName: ''\n        },\n        result: 'value1'\n      },\n      {\n        title: 'Config value missing \"_HOST\" string, unit is correct',\n        content: {\n          config: {\n            value: 'value1',\n            unit: 'unit1'\n          },\n          hostName: ''\n        },\n        result: 'value1unit1'\n      },\n      {\n        title: 'Config value contains \"_HOST\" string, host name in lowercase',\n        content: {\n          config: {\n            value: '_HOST',\n            unit: 'unit1'\n          },\n          hostName: 'host1'\n        },\n        result: 'host1unit1'\n      },\n      {\n        title: 'Config value contains \"_HOST\" string, host name in uppercase',\n        content: {\n          config: {\n            value: '_HOST',\n            unit: 'unit1'\n          },\n          hostName: 'HOST1'\n        },\n        result: 'host1unit1'\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.getPrincipal(test.content.config, test.content.hostName)).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#changeDisplayName()', function() {\n    it('name is HiveServer2', function() {\n      expect(controller.changeDisplayName('HiveServer2')).to.equal('Hive Metastore and HiveServer2');\n    });\n    it('name is not HiveServer2', function() {\n      expect(controller.changeDisplayName('something')).to.equal('something');\n    });\n  });\n\n  describe('#getSecurityUsers()', function () {\n    it('testMode is true, testModeUsers is empty', function () {\n      controller.set('testModeUsers', []);\n      App.testMode = true;\n      expect(controller.getSecurityUsers()).to.eql([]);\n    });\n    it('testMode is true, testModeUsers is correct', function () {\n      controller.set('testModeUsers', [\n        {\n          name: 'user1',\n          value: 'value1'\n        }\n      ]);\n      App.testMode = true;\n      expect(controller.getSecurityUsers()).to.eql([\n        {\n          id: 'puppet var',\n          name: 'user1',\n          value: 'value1'\n        }\n      ]);\n    });\n    it('testMode is false', function () {\n      sinon.stub(App.db, 'getSecureUserInfo', function () {\n        return [{}];\n      });\n      App.testMode = false;\n      expect(controller.getSecurityUsers()).to.eql([{}]);\n      expect(App.db.getSecureUserInfo.calledOnce).to.be.true;\n      App.db.getSecureUserInfo.restore();\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/admin/security/security_progress_controller');\nrequire('controllers/main/admin/security/add/step4');\nrequire('utils/polling');\nrequire('models/cluster_states');\nrequire('models/service');\n\ndescribe('App.MainAdminSecurityAddStep4Controller', function () {\n\n  var controller = App.MainAdminSecurityAddStep4Controller.create({\n    content: {},\n    enableSubmit: function () {\n      this._super()\n    },\n    secureMapping: [],\n    secureProperties: []\n  });\n\n  describe('#secureServices', function() {\n    it('content.services is correct', function() {\n      controller.set('content.services', [{}]);\n      expect(controller.get('secureServices')).to.eql([{}]);\n      controller.reopen({\n        secureServices: []\n      })\n    });\n  });\n\n  describe('#isBackBtnDisabled', function() {\n    it('commands have error', function() {\n      controller.set('commands', [Em.Object.create({\n        isError: true\n      })]);\n      expect(controller.get('isBackBtnDisabled')).to.be.false;\n    });\n    it('commands do not have error', function() {\n      controller.set('commands', [Em.Object.create({\n        isError: false\n      })]);\n      expect(controller.get('isBackBtnDisabled')).to.be.true;\n    });\n  });\n\n  describe('#isSecurityApplied', function() {\n    var testCases = [\n      {\n        title: 'No START_SERVICES command',\n        commands: [],\n        result: false\n      },\n      {\n        title: 'START_SERVICES is not success',\n        commands: [Em.Object.create({\n          name: 'START_SERVICES',\n          isSuccess: false\n        })],\n        result: false\n      },\n      {\n        title: 'START_SERVICES is success',\n        commands: [Em.Object.create({\n          name: 'START_SERVICES',\n          isSuccess: true\n        })],\n        result: true\n      }\n    ];\n\n    testCases.forEach(function(test){\n      it(test.title, function() {\n        controller.set('commands', test.commands);\n        expect(controller.get('isSecurityApplied')).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#enableSubmit()', function() {\n    var mock = {\n      setStepsEnable: Em.K,\n      setLowerStepsDisable: Em.K\n    };\n\n    beforeEach(function () {\n      sinon.stub(App.router, 'get', function () {\n        return mock;\n      });\n      sinon.spy(mock, 'setStepsEnable');\n      sinon.spy(mock, 'setLowerStepsDisable');\n    });\n    afterEach(function () {\n      App.router.get.restore();\n      mock.setStepsEnable.restore();\n      mock.setLowerStepsDisable.restore();\n    });\n\n    it('Command has error', function() {\n      controller.set('commands', [Em.Object.create({\n        isError: true\n      })]);\n      controller.enableSubmit();\n      expect(controller.get('isSubmitDisabled')).to.be.false;\n      expect(mock.setStepsEnable.calledOnce).to.be.true;\n    });\n    it('Command is successful', function() {\n      controller.set('commands', [Em.Object.create({\n        isSuccess: true\n      })]);\n      controller.enableSubmit();\n      expect(controller.get('isSubmitDisabled')).to.be.false;\n    });\n    it('Command is in progress', function() {\n      controller.set('commands', [Em.Object.create()]);\n      controller.enableSubmit();\n      expect(controller.get('isSubmitDisabled')).to.be.true;\n      expect(mock.setLowerStepsDisable.calledWith(4)).to.be.true;\n    });\n  });\n\n  describe('#clearStep()', function() {\n    it('Clear step info', function() {\n      controller.set('commands', [Em.Object.create()]);\n      controller.set('isSubmitDisabled', false);\n      controller.set('serviceConfigTags', [{}]);\n      controller.clearStep();\n      expect(controller.get('isSubmitDisabled')).to.be.true;\n      expect(controller.get('commands')).to.be.empty;\n      expect(controller.get('serviceConfigTags')).to.be.empty;\n    });\n  });\n\n  describe('#loadCommands()', function() {\n\n    beforeEach(function () {\n      controller.get('commands').clear();\n    });\n\n    it('No YARN in secureServices', function() {\n      controller.set('secureServices', []);\n      controller.loadCommands();\n      expect(controller.get('commands.length')).to.equal(3);\n      expect(controller.get('commands').someProperty('name', 'DELETE_ATS')).to.be.false;\n    });\n    it('YARN does not have APP_TIMELINE_SERVER', function() {\n      sinon.stub(App.Service, 'find', function () {\n        return Em.Object.create({\n          hostComponents: []\n        })\n      });\n      controller.set('secureServices', [{\n        serviceName: 'YARN'\n      }]);\n      controller.loadCommands();\n      expect(controller.get('commands.length')).to.equal(3);\n      expect(controller.get('commands').someProperty('name', 'DELETE_ATS')).to.be.false;\n      App.Service.find.restore();\n    });\n    it('YARN has APP_TIMELINE_SERVER', function() {\n      sinon.stub(App.Service, 'find', function () {\n        return Em.Object.create({\n          hostComponents: [Em.Object.create({\n            componentName: 'APP_TIMELINE_SERVER'\n          })]\n        })\n      });\n      controller.set('secureServices', [{\n        serviceName: 'YARN'\n      }]);\n      controller.loadCommands();\n      expect(controller.get('commands.length')).to.equal(4);\n      expect(controller.get('commands').someProperty('name', 'DELETE_ATS')).to.be.true;\n      App.Service.find.restore();\n    });\n  });\n\n  describe('#loadStep()', function() {\n\n    beforeEach(function () {\n      sinon.stub(controller, 'clearStep', Em.K);\n      sinon.stub(controller, 'prepareSecureConfigs', Em.K);\n    });\n    afterEach(function () {\n      controller.clearStep.restore();\n      controller.prepareSecureConfigs.restore();\n      controller.resumeSavedCommands.restore();\n    });\n\n    it('Resume saved commands', function() {\n      sinon.stub(controller, 'resumeSavedCommands', function(){\n        return true;\n      });\n\n      controller.loadStep();\n      expect(controller.clearStep.calledOnce).to.be.true;\n      expect(controller.prepareSecureConfigs.calledOnce).to.be.true;\n      expect(controller.resumeSavedCommands.calledOnce).to.be.true;\n    });\n    it('No saved commands', function() {\n      sinon.stub(controller, 'resumeSavedCommands', function(){\n        return false;\n      });\n      sinon.stub(controller, 'loadCommands', Em.K);\n      sinon.stub(controller, 'addInfoToCommands', Em.K);\n      sinon.stub(controller, 'syncStopServicesOperation', Em.K);\n      sinon.stub(controller, 'addObserverToCommands', Em.K);\n      sinon.stub(controller, 'moveToNextCommand', Em.K);\n\n      controller.loadStep();\n      expect(controller.clearStep.calledOnce).to.be.true;\n      expect(controller.prepareSecureConfigs.calledOnce).to.be.true;\n      expect(controller.resumeSavedCommands.calledOnce).to.be.true;\n\n      controller.loadCommands.restore();\n      controller.addInfoToCommands.restore();\n      controller.syncStopServicesOperation.restore();\n      controller.addObserverToCommands.restore();\n      controller.moveToNextCommand.restore();\n    });\n  });\n\n  describe('#syncStopServicesOperation()', function() {\n\n    afterEach(function () {\n      App.router.get.restore();\n    });\n\n    it('No running operations', function() {\n      sinon.stub(App.router, 'get', function(){\n        return [];\n      });\n\n      expect(controller.syncStopServicesOperation()).to.be.false;\n    });\n    it('Running operation is not Stop All Services', function() {\n      sinon.stub(App.router, 'get', function(){\n        return [Em.Object.create({isRunning: true})];\n      });\n\n      expect(controller.syncStopServicesOperation()).to.be.false;\n    });\n    it('No STOP_SERVICES in commands', function() {\n      sinon.stub(App.router, 'get', function(){\n        return [Em.Object.create({\n          isRunning: true,\n          name: 'Stop All Services'\n        })];\n      });\n      controller.set('commands', []);\n\n      expect(controller.syncStopServicesOperation()).to.be.false;\n    });\n    it('Sync stop services commands', function() {\n      sinon.stub(App.router, 'get', function(){\n        return [Em.Object.create({\n          isRunning: true,\n          name: 'Stop All Services',\n          id: 1\n        })];\n      });\n      controller.set('commands', [Em.Object.create({\n        name: 'STOP_SERVICES'\n      })]);\n\n      expect(controller.syncStopServicesOperation()).to.be.true;\n      expect(controller.get('commands').findProperty('name', 'STOP_SERVICES').get('requestId')).to.equal(1);\n    });\n  });\n\n  describe('#resumeSavedCommands()', function() {\n\n    beforeEach(function(){\n      sinon.stub(controller, 'addObserverToCommands', Em.K);\n      sinon.stub(controller, 'moveToNextCommand', Em.K);\n      controller.set('commands', []);\n    });\n    afterEach(function(){\n      controller.moveToNextCommand.restore();\n      controller.addObserverToCommands.restore();\n      App.db.getSecurityDeployCommands.restore();\n    });\n\n\n    it('Commands is null', function() {\n      sinon.stub(App.db, 'getSecurityDeployCommands', function(){\n        return null;\n      });\n      expect(controller.resumeSavedCommands()).to.be.false;\n    });\n    it('Commands is empty', function() {\n      sinon.stub(App.db, 'getSecurityDeployCommands', function(){\n        return [];\n      });\n      expect(controller.resumeSavedCommands()).to.be.false;\n    });\n    it('Command has error', function() {\n      sinon.stub(App.db, 'getSecurityDeployCommands', function(){\n        return [{\n          isError: true,\n          name: 'command1'\n        }];\n      });\n      expect(controller.resumeSavedCommands()).to.be.true;\n      expect(controller.get('commands').mapProperty('name')).to.eql(['command1']);\n      expect(controller.addObserverToCommands.calledOnce).to.be.true;\n    });\n    it('Command in progress', function() {\n      sinon.stub(App.db, 'getSecurityDeployCommands', function(){\n        return [{\n          isStarted: true,\n          isCompleted: false,\n          name: 'command1'\n        }];\n      });\n      expect(controller.resumeSavedCommands()).to.be.true;\n      expect(controller.get('commands').mapProperty('name')).to.eql(['command1']);\n      expect(controller.get('commands').findProperty('name', 'command1').get('isStarted')).to.be.false;\n      expect(controller.addObserverToCommands.calledOnce).to.be.true;\n      expect(controller.moveToNextCommand.calledOnce).to.be.true;\n    });\n    it('Command completed', function() {\n      sinon.stub(App.db, 'getSecurityDeployCommands', function(){\n        return [{\n          isCompleted: true,\n          name: 'command1'\n        }];\n      });\n      expect(controller.resumeSavedCommands()).to.be.true;\n      expect(controller.get('commands').mapProperty('name')).to.eql(['command1']);\n      expect(controller.addObserverToCommands.calledOnce).to.be.true;\n      expect(controller.moveToNextCommand.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#loadUiSideConfigs()', function() {\n\n    beforeEach(function(){\n      sinon.stub(controller, 'getGlobConfigValue', function(arg1, arg2){\n        return arg2;\n      });\n      sinon.stub(controller, 'checkServiceForConfigValue', function() {\n        return 'value2';\n      });\n      sinon.stub(controller, 'setConfigValue', Em.K);\n      sinon.stub(controller, 'formatConfigName', Em.K);\n    });\n    afterEach(function(){\n      controller.getGlobConfigValue.restore();\n      controller.checkServiceForConfigValue.restore();\n      controller.setConfigValue.restore();\n      controller.formatConfigName.restore();\n    });\n\n    it('secureMapping is empty', function() {\n      controller.set('secureMapping', []);\n\n      expect(controller.loadUiSideConfigs()).to.be.empty;\n    });\n    it('Config does not have dependedServiceName', function() {\n      controller.set('secureMapping', [{\n        name: 'config1',\n        value: 'value1',\n        filename: 'file1',\n        foreignKey: null\n      }]);\n\n      expect(controller.loadUiSideConfigs()).to.eql([{\n        \"id\": \"site property\",\n        \"name\": 'config1',\n        \"value\": 'value1',\n        \"filename\": 'file1'\n      }]);\n    });\n    it('Config has dependedServiceName', function() {\n      controller.set('secureMapping', [{\n        name: 'config1',\n        value: 'value1',\n        filename: 'file1',\n        foreignKey: null,\n        dependedServiceName: 'service'\n      }]);\n\n      expect(controller.loadUiSideConfigs()).to.eql([{\n        \"id\": \"site property\",\n        \"name\": 'config1',\n        \"value\": 'value2',\n        \"filename\": 'file1'\n      }]);\n    });\n    it('Config has non-existent serviceName', function() {\n      controller.set('secureMapping', [{\n        name: 'config1',\n        value: 'value1',\n        filename: 'file1',\n        foreignKey: true,\n        serviceName: 'service'\n      }]);\n      sinon.stub(App.Service, 'find', function(){\n        return [];\n      });\n\n      expect(controller.loadUiSideConfigs()).to.be.empty;\n      App.Service.find.restore();\n    });\n    it('Config has correct serviceName', function() {\n      controller.set('secureMapping', [{\n        name: 'config1',\n        value: 'value1',\n        filename: 'file1',\n        foreignKey: true,\n        serviceName: 'HDFS'\n      }]);\n      sinon.stub(App.Service, 'find', function(){\n        return [{serviceName: 'HDFS'}];\n      });\n\n      expect(controller.loadUiSideConfigs()).to.eql([{\n        \"id\": \"site property\",\n        \"name\": 'config1',\n        \"value\": 'value1',\n        \"filename\": 'file1'\n      }]);\n      expect(controller.setConfigValue.calledOnce).to.be.true;\n      expect(controller.formatConfigName.calledOnce).to.be.true;\n      App.Service.find.restore();\n    });\n  });\n\n  describe('#checkServiceForConfigValue()', function() {\n    it('services is empty', function() {\n      var services = [];\n\n      expect(controller.checkServiceForConfigValue('value1', services)).to.equal('value1');\n    });\n    it('Service is loaded', function() {\n      var services = [{}];\n      sinon.stub(App.Service, 'find', function () {\n        return Em.Object.create({isLoaded: false});\n      });\n\n      expect(controller.checkServiceForConfigValue('value1', services)).to.equal('value1');\n\n      App.Service.find.restore();\n    });\n    it('Service is not loaded', function() {\n      var services = [{\n        replace: 'val'\n      }];\n      sinon.stub(App.Service, 'find', function () {\n        return Em.Object.create({isLoaded: false});\n      });\n\n      expect(controller.checkServiceForConfigValue('value1', services)).to.equal('ue1');\n\n      App.Service.find.restore();\n    });\n  });\n\n  describe('#getGlobConfigValue()', function() {\n    var testCases = [\n      {\n        title: 'Incorrect expression',\n        arguments: {\n          templateName: [],\n          expression: 'expression'\n        },\n        result: 'expression'\n      },\n      {\n        title: 'No such property in global configs',\n        arguments: {\n          templateName: ['config2'],\n          expression: '<[0]>'\n        },\n        result: null\n      },\n      {\n        title: 'Property in global configs',\n        arguments: {\n          templateName: ['config1'],\n          expression: '<[0]>'\n        },\n        result: 'value1'\n      },\n      {\n        title: 'First property not in global configs',\n        arguments: {\n          templateName: ['config2','config1'],\n          expression: '<[0]>@<[1]>'\n        },\n        result: null\n      }\n    ];\n\n    testCases.forEach(function(test){\n      it(test.title, function() {\n        controller.set('globalProperties', [{\n          name: 'config1',\n          value: 'value1'\n        }]);\n        expect(controller.getGlobConfigValue(test.arguments.templateName, test.arguments.expression)).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#formatConfigName()', function() {\n    it('config.value is null', function() {\n      var config = {\n        value: null\n      };\n\n      expect(controller.formatConfigName([], config)).to.be.false;\n    });\n    it('config.name does not contain foreignKey', function() {\n      var config = {\n        value: 'value1',\n        name: 'config1'\n      };\n\n      expect(controller.formatConfigName([], config)).to.be.false;\n    });\n    it('globalProperties is empty, use uiConfig', function() {\n      var config = {\n        value: 'value1',\n        name: '<foreignKey[0]>',\n        foreignKey: ['key1']\n      };\n      controller.set('globalProperties', []);\n      var uiConfig = [{\n        name: 'key1',\n        value: 'globalValue1'\n      }];\n\n      expect(controller.formatConfigName(uiConfig, config)).to.be.true;\n      expect(config._name).to.equal('globalValue1');\n    });\n    it('uiConfig is empty, use globalProperties', function() {\n      var config = {\n        value: 'value1',\n        name: '<foreignKey[0]>',\n        foreignKey: ['key1']\n      };\n      controller.set('globalProperties', [{\n        name: 'key1',\n        value: 'globalValue1'\n      }]);\n      var uiConfig = [];\n\n      expect(controller.formatConfigName(uiConfig, config)).to.be.true;\n      expect(config._name).to.equal('globalValue1');\n    });\n  });\n\n  describe('#setConfigValue()', function() {\n    it('config.value is null', function() {\n      var config = {\n        value: null\n      };\n\n      expect(controller.setConfigValue(config)).to.be.false;\n    });\n    it('config.value does not match \"templateName\"', function() {\n      var config = {\n        value: ''\n      };\n\n      expect(controller.setConfigValue(config)).to.be.false;\n    });\n    it('No such property in global configs', function() {\n      var config = {\n        value: '<templateName[0]>',\n        templateName: ['config1']\n      };\n      controller.set('globalProperties', []);\n\n      expect(controller.setConfigValue(config)).to.be.true;\n      expect(config.value).to.be.null;\n    });\n    it('Property in global configs', function() {\n      var config = {\n        value: '<templateName[0]>',\n        templateName: ['config1']\n      };\n      controller.set('globalProperties', [{\n        name: 'config1',\n        value: 'value1'\n      }]);\n\n      expect(controller.setConfigValue(config)).to.be.true;\n      expect(config.value).to.equal('value1');\n    });\n  });\n\n  describe('#prepareSecureConfigs()', function() {\n\n    beforeEach(function(){\n      sinon.stub(controller, 'loadGlobals', Em.K);\n      sinon.stub(controller, 'loadUiSideConfigs', function(){\n        return [{name: 'config1'}];\n      });\n    });\n    afterEach(function(){\n      controller.loadGlobals.restore();\n      controller.loadUiSideConfigs.restore();\n    });\n\n    it('content.serviceConfigProperties is empty', function() {\n      controller.set('content.serviceConfigProperties', []);\n\n      controller.prepareSecureConfigs();\n      expect(controller.loadGlobals.calledOnce).to.be.true;\n      expect(controller.loadUiSideConfigs.calledOnce).to.be.true;\n      expect(controller.get('configs')).to.eql([{name: 'config1'}]);\n    });\n    it('content.serviceConfigProperties is empty', function() {\n      controller.set('content.serviceConfigProperties', [{\n        id: 'site property',\n        name: 'config2'\n      }]);\n\n      controller.prepareSecureConfigs();\n      expect(controller.loadGlobals.calledOnce).to.be.true;\n      expect(controller.loadUiSideConfigs.calledOnce).to.be.true;\n      expect(controller.get('configs')).to.eql([\n        {\n          id: 'site property',\n          name: 'config2'\n        },\n        {name: 'config1'}\n      ]);\n    });\n  });\n\n  describe('#loadGlobals()', function() {\n\n    beforeEach(function(){\n      sinon.stub(controller, 'loadStaticGlobal', Em.K);\n      sinon.stub(controller, 'loadUsersToGlobal', Em.K);\n      sinon.stub(controller, 'loadHostNamesToGlobal', Em.K);\n      sinon.stub(controller, 'loadPrimaryNamesToGlobals', Em.K);\n    });\n    afterEach(function(){\n      controller.loadStaticGlobal.restore();\n      controller.loadUsersToGlobal.restore();\n      controller.loadHostNamesToGlobal.restore();\n      controller.loadPrimaryNamesToGlobals.restore();\n    });\n\n    it('content.serviceConfigProperties is empty', function() {\n      controller.set('content.serviceConfigProperties', []);\n\n      controller.loadGlobals();\n      expect(controller.loadStaticGlobal.calledOnce).to.be.true;\n      expect(controller.loadUsersToGlobal.calledOnce).to.be.true;\n      expect(controller.loadHostNamesToGlobal.calledOnce).to.be.true;\n      expect(controller.loadPrimaryNamesToGlobals.calledOnce).to.be.true;\n      expect(controller.get('globalProperties')).to.be.empty;\n    });\n    it('content.serviceConfigProperties is correct', function() {\n      controller.set('content.serviceConfigProperties', [{\n        id: 'puppet var',\n        name: 'config1'\n      }]);\n\n      controller.loadGlobals();\n      expect(controller.loadStaticGlobal.calledOnce).to.be.true;\n      expect(controller.loadUsersToGlobal.calledOnce).to.be.true;\n      expect(controller.loadHostNamesToGlobal.calledOnce).to.be.true;\n      expect(controller.loadPrimaryNamesToGlobals.calledOnce).to.be.true;\n      expect(controller.get('globalProperties')).to.eql([{\n        id: 'puppet var',\n        name: 'config1'\n      }]);\n    });\n  });\n\n  describe('#loadUsersToGlobal()', function() {\n\n    beforeEach(function(){\n      sinon.stub(controller, 'loadUsersFromServer', Em.K);\n    });\n    afterEach(function(){\n      controller.loadUsersFromServer.restore();\n      App.router.get.restore();\n    });\n\n    it('serviceUsers is empty', function() {\n      sinon.stub(App.router, 'get', function(){\n        return [];\n      });\n      controller.set('serviceUsers', []);\n      controller.set('globalProperties', []);\n\n      controller.loadUsersToGlobal();\n      expect(controller.loadUsersFromServer.calledOnce).to.be.true;\n      expect(controller.get('globalProperties')).to.be.empty;\n    });\n    it('serviceUsers is correct', function() {\n      sinon.stub(App.router, 'get', function(){\n        return [{name: 'user1'}];\n      });\n      controller.set('serviceUsers', [{}]);\n      controller.set('globalProperties', []);\n\n      controller.loadUsersToGlobal();\n      expect(controller.loadUsersFromServer.called).to.be.false;\n      expect(controller.get('globalProperties').mapProperty('name')).to.eql(['user1']);\n    });\n  });\n\n  describe('#addHostConfig()', function() {\n\n    afterEach(function () {\n      App.Service.find.restore();\n    });\n\n    it('No such service loaded', function() {\n      sinon.stub(App.Service, 'find', function(){\n        return Em.Object.create({isLoaded: false});\n      });\n\n      expect(controller.addHostConfig('service1', 'comp1', 'config1')).to.be.false;\n    });\n    it('No such service in secureServices', function() {\n      sinon.stub(App.Service, 'find', function(){\n        return Em.Object.create({isLoaded: true});\n      });\n      controller.set('secureServices', []);\n\n      expect(controller.addHostConfig('service1', 'comp1', 'config1')).to.be.false;\n    });\n    it('Service does not have such host-component', function() {\n      sinon.stub(App.Service, 'find', function(){\n        return Em.Object.create({\n          isLoaded: true,\n          hostComponents: []\n        });\n      });\n      controller.set('secureServices', [{\n        serviceName: 'service1'\n      }]);\n\n      expect(controller.addHostConfig('service1', 'comp1', 'config1')).to.be.false;\n    });\n    it('Push config to globalProperties', function() {\n      sinon.stub(App.Service, 'find', function(){\n        return Em.Object.create({\n          isLoaded: true,\n          hostComponents: [Em.Object.create({\n            componentName: 'comp1',\n            host: {hostName: 'host1'}\n          })]\n        });\n      });\n      controller.set('secureServices', [{\n        serviceName: 'service1'\n      }]);\n\n      controller.set('globalProperties', []);\n\n      expect(controller.addHostConfig('service1', 'comp1', 'config1')).to.be.true;\n      expect(controller.get('globalProperties')).to.eql([{\n        id: 'puppet var',\n        name: 'config1',\n        value: 'host1'\n      }]);\n    });\n  });\n\n  describe('#loadHostNamesToGlobal()', function() {\n\n    beforeEach(function () {\n      sinon.stub(controller, 'addHostConfig', Em.K);\n    });\n    afterEach(function () {\n      controller.addHostConfig.restore();\n    });\n\n    it('componentsConfig is empty', function() {\n      controller.set('componentsConfig', []);\n\n      controller.loadHostNamesToGlobal();\n      expect(controller.addHostConfig.called).to.be.false;\n    });\n    it('componentsConfig is correct', function() {\n      controller.set('componentsConfig', [{\n        serviceName: 'service1',\n        componentName: 'comp1',\n        configName: 'config1'\n      }]);\n\n      controller.loadHostNamesToGlobal();\n      expect(controller.addHostConfig.calledWith('service1', 'comp1', 'config1')).to.be.true;\n    });\n  });\n\n  describe('#loadStaticGlobal()', function() {\n    it('globalProperties contains \"security_enabled\" property', function() {\n      controller.set('globalProperties', [{\n        name: 'security_enabled'\n      }]);\n\n      controller.loadStaticGlobal();\n      expect(controller.get('globalProperties').findProperty('name', 'security_enabled').value).to.equal('true');\n    });\n  });\n\n  describe('#loadPrimaryNamesToGlobals()', function() {\n\n    beforeEach(function(){\n      controller.set('globalProperties', []);\n    });\n    afterEach(function () {\n      controller.getPrincipalNames.restore();\n    });\n\n    it('No principal names', function() {\n      sinon.stub(controller, 'getPrincipalNames', function(){\n        return [];\n      });\n\n      controller.loadPrimaryNamesToGlobals();\n      expect(controller.get('globalProperties')).to.be.empty;\n    });\n    it('Principal name does not contain \"principal\"', function() {\n      sinon.stub(controller, 'getPrincipalNames', function(){\n        return [{\n          name: 'config1',\n          value: 'value2/value1'\n        }];\n      });\n\n      controller.loadPrimaryNamesToGlobals();\n      expect(controller.get('globalProperties')).to.eql([{name: 'config1', value: 'value2'}]);\n    });\n    it('Principal name contains \"principal\"', function() {\n      sinon.stub(controller, 'getPrincipalNames', function(){\n        return [{\n          name: 'principal1',\n          value: 'value1'\n        }];\n      });\n\n      controller.loadPrimaryNamesToGlobals();\n      expect(controller.get('globalProperties')).to.eql([{name: 'primary1', value: 'value1'}]);\n    });\n  });\n\n  describe('#getPrincipalNames()', function() {\n\n    beforeEach(function () {\n      controller.set('globalProperties', []);\n      controller.set('secureProperties', []);\n    });\n\n    it('globalProperties and secureProperties are empty', function() {\n      expect(controller.getPrincipalNames()).to.be.empty;\n    });\n    it('global property name does not match \"principal_name\"', function() {\n      controller.set('globalProperties', [{\n        name: 'config1'\n      }]);\n      expect(controller.getPrincipalNames()).to.be.empty;\n    });\n    it('secure property name does not match \"principal_name\"', function() {\n      controller.set('secureProperties', [{\n        name: 'config1'\n      }]);\n      expect(controller.getPrincipalNames()).to.be.empty;\n    });\n    it('global property name matches \"principal_name\"', function() {\n      controller.set('globalProperties', [{\n        name: 'principal_name'\n      }]);\n      expect(controller.getPrincipalNames()).to.eql([{\n        name: 'principal_name'\n      }]);\n    });\n    it('property with such name already exists', function() {\n      controller.set('globalProperties', [{\n        name: 'principal_name'\n      }]);\n      controller.set('secureProperties', [{\n        name: 'principal_name'\n      }]);\n      expect(controller.getPrincipalNames().mapProperty('name')).to.eql(['principal_name']);\n    });\n    it('global and secure property name matches \"principal_name\"', function() {\n      controller.set('globalProperties', [{\n        name: 'global_principal_name'\n      }]);\n      controller.set('secureProperties', [{\n        name: 'secure_principal_name',\n        defaultValue: 'value1'\n      }]);\n      expect(controller.getPrincipalNames().mapProperty('name')).to.eql(['global_principal_name', 'secure_principal_name']);\n      expect(controller.getPrincipalNames().findProperty('name', 'secure_principal_name').value).to.equal('value1');\n    });\n  });\n\n  describe('#loadUsersFromServer()', function() {\n    it('testMode = true', function() {\n      controller.set('testModeUsers', [{\n        name: 'user1',\n        value: 'value1'\n      }]);\n      controller.set('serviceUsers', []);\n      App.testMode = true;\n\n      controller.loadUsersFromServer();\n      expect(controller.get('serviceUsers')).to.eql([{\n        name: 'user1',\n        value: 'value1',\n        id: 'puppet var'\n      }]);\n    });\n    it('testMode = false', function() {\n      sinon.stub(App.router, 'set', Em.K);\n      sinon.stub(App.db, 'getSecureUserInfo', function(){\n        return [];\n      });\n      App.testMode = false;\n\n      controller.loadUsersFromServer();\n      expect(App.db.getSecureUserInfo.calledOnce).to.be.true;\n      expect(App.router.set.calledWith('mainAdminSecurityController.serviceUsers', [])).to.be.true;\n\n      App.router.set.restore();\n      App.db.getSecureUserInfo.restore();\n    });\n  });\n\n  describe('#manageSecureConfigs()', function() {\n\n    beforeEach(function () {\n      sinon.stub(controller, 'setPrincipalValue', Em.K);\n    });\n    afterEach(function () {\n      controller.setPrincipalValue.restore();\n    });\n\n    it('serviceConfigTags is null', function() {\n      sinon.stub(controller, 'onJsError', Em.K);\n      controller.set('serviceConfigTags', null);\n      controller.set('configs', [{id: 'site property'}]);\n      controller.set('commands', [Em.Object.create({\n        name: 'APPLY_CONFIGURATIONS'\n      })]);\n\n      expect(controller.manageSecureConfigs()).to.be.false;\n      expect(controller.onJsError.calledOnce).to.be.true;\n      expect(controller.get('commands').findProperty('name', 'APPLY_CONFIGURATIONS').get('isSuccess')).to.be.false;\n      expect(controller.get('commands').findProperty('name', 'APPLY_CONFIGURATIONS').get('isError')).to.be.true;\n\n      controller.onJsError.restore();\n    });\n    it('Add configs from site-*.xml', function() {\n      controller.set('serviceConfigTags', [{\n        siteName: 'site1',\n        configs: {}\n      }]);\n      controller.set('configs', [{\n        id: 'site property',\n        name: 'config1',\n        value: \"value1\",\n        filename: 'site1.xml'\n      }]);\n\n      expect(controller.manageSecureConfigs()).to.be.true;\n      expect(controller.get('serviceConfigTags')[0].configs).to.eql({'config1': 'value1'});\n    });\n    it('Add configs from global.xml, config matches \"_hosts\"', function() {\n      controller.set('serviceConfigTags', [{\n        siteName: 'global',\n        configs: {}\n      }]);\n      controller.set('globalProperties', [{\n        id: 'site property',\n        name: 'config1_hosts',\n        value: \"value1\",\n        filename: 'site1.xml'\n      }]);\n      controller.set('secureConfigs', [{\n        serviceName: 'service1',\n        name: 'config1'\n      }]);\n\n      expect(controller.manageSecureConfigs()).to.be.true;\n      expect(controller.get('serviceConfigTags')[0].configs).to.eql({});\n      expect(controller.setPrincipalValue.calledWith('service1', 'config1')).to.be.true;\n    });\n    it('Add configs from global.xml, config does not match \"_hosts\"', function() {\n      controller.set('serviceConfigTags', [{\n        siteName: 'global',\n        configs: {}\n      }]);\n      controller.set('globalProperties', [{\n        id: 'site property',\n        name: 'config1',\n        value: \"value1\",\n        filename: 'site1.xml'\n      }]);\n      controller.set('secureConfigs', [{\n        serviceName: 'service1',\n        name: 'config1'\n      }]);\n\n      expect(controller.manageSecureConfigs()).to.be.true;\n      expect(controller.get('serviceConfigTags')[0].configs).to.eql({'config1': 'value1'});\n      expect(controller.setPrincipalValue.calledWith('service1', 'config1')).to.be.true;\n    });\n  });\n\n  describe('#setPrincipalValue()', function() {\n    it('secureServices does not contain such service', function() {\n      controller.set('secureServices', []);\n\n      expect(controller.setPrincipalValue('service1', 'principal1')).to.be.false;\n    });\n    it('secureServices contains such service', function() {\n      controller.set('secureServices', [{\n        serviceName: 'service1'\n      }]);\n      controller.set('globalProperties', [\n        {\n          name: 'kerberos_domain',\n          value: 'value1'\n        },\n        {\n          name: 'principal1',\n          value: 'value2'\n        }\n      ]);\n\n      expect(controller.setPrincipalValue('service1', 'principal1')).to.be.true;\n      expect(controller.get('globalProperties').findProperty('name', 'principal1').value).to.equal('value2@value1');\n    });\n  });\n\n  describe('#deleteComponents()', function() {\n    it('Send ajax', function() {\n      sinon.stub(App.ajax, 'send', Em.K);\n\n      controller.deleteComponents('comp1', 'host1');\n      expect(App.ajax.send.calledOnce).to.be.true;\n\n      App.ajax.send.restore();\n    });\n  });\n\n  describe('#onDeleteComplete()', function() {\n    it('', function() {\n      controller.set('commands', [Em.Object.create({\n        name: 'DELETE_ATS'\n      })]);\n\n      controller.onDeleteComplete();\n      expect(controller.get('commands').findProperty('name', 'DELETE_ATS').get('isError')).to.be.false;\n      expect(controller.get('commands').findProperty('name', 'DELETE_ATS').get('isSuccess')).to.be.true;\n    });\n  });\n\n  describe('#onJsError()', function() {\n    it('Show popup', function() {\n      sinon.stub(App.ModalPopup, 'show', Em.K);\n\n      controller.onJsError();\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n\n      App.ModalPopup.show.restore();\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/admin/security/disable');\n\n\ndescribe('App.MainAdminSecurityDisableController', function () {\n\n  var controller = App.MainAdminSecurityDisableController.create({\n    serviceConfigTags: null,\n    secureProperties: null,\n    secureMapping: null\n  });\n\n\n  describe('#resumeCommands()', function () {\n    var context = {\n      getSecurityDeployCommands: function () {\n        return this.testData;\n      }\n    };\n\n    var mock = {\n      setStepsEnable: Em.K,\n      setLowerStepsDisable: Em.K\n    };\n\n    beforeEach(function () {\n      sinon.stub(App.db, \"getSecurityDeployCommands\", context.getSecurityDeployCommands);\n      sinon.stub(App.router, 'get', function () {\n        return mock;\n      });\n    });\n    afterEach(function () {\n      App.db.getSecurityDeployCommands.restore();\n      App.router.get.restore();\n    });\n\n    it('commands are absent in local storage', function () {\n      App.db.testData = null;\n      expect(controller.resumeCommands()).to.be.false;\n    });\n    it('zero commands in local storage', function () {\n      App.db.testData = [];\n      expect(controller.resumeCommands()).to.be.false;\n    });\n    it('one command is present', function () {\n      App.db.testData = [\n        {\n          name: 'command1'\n        }\n      ];\n      controller.get('commands').clear();\n      expect(controller.resumeCommands()).to.be.true;\n      expect(controller.get('commands').mapProperty('name')).to.eql(['command1']);\n    });\n    it('command is started and completed', function () {\n      App.db.testData = [\n        {\n          name: 'command1',\n          isStarted: true,\n          isCompleted: true\n        }\n      ];\n      controller.get('commands').clear();\n      expect(controller.resumeCommands()).to.be.true;\n      expect(controller.get('commands').mapProperty('name')).to.eql(['command1']);\n      expect(controller.get('commands').findProperty('name', 'command1').get('isStarted')).to.be.true;\n    });\n    it('command is started but not completed', function () {\n      App.db.testData = [\n        {\n          name: 'command1',\n          isStarted: true,\n          isCompleted: false\n        }\n      ];\n      controller.get('commands').clear();\n      expect(controller.resumeCommands()).to.be.true;\n      expect(controller.get('commands').mapProperty('name')).to.eql(['command1']);\n      expect(controller.get('commands').findProperty('name', 'command1').get('isStarted')).to.be.false;\n    });\n  });\n\n  describe('#isSubmitDisabled', function () {\n    var testCases = [\n      {\n        title: 'commands is empty',\n        commands: [],\n        result: false\n      },\n      {\n        title: 'one started command',\n        commands: [Em.Object.create({\n          isStarted: true\n        })],\n        result: true\n      },\n      {\n        title: 'one failed command',\n        commands: [Em.Object.create({\n          isError: true\n        })],\n        result: false\n      },\n      {\n        title: 'one success command',\n        commands: [Em.Object.create({\n          isSuccess: true\n        })],\n        result: false\n      },\n      {\n        title: 'not all commands are success',\n        commands: [\n          Em.Object.create({\n            isSuccess: true\n          }),\n          Em.Object.create({\n            isSuccess: false\n          })\n        ],\n        result: true\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('commands', test.commands);\n        expect(controller.get('isSubmitDisabled')).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#syncStopServicesCommand()', function () {\n    App.router = Em.Object.create({\n      backgroundOperationsController: Em.Object.create({\n        services: []\n      })\n    });\n\n    it('No background operations', function () {\n      controller.set('commands', [Em.Object.create({\n        name: 'STOP_SERVICES',\n        requestId: 1\n      })]);\n      controller.syncStopServicesCommand.apply(controller);\n      expect(controller.get('commands').findProperty('name', 'STOP_SERVICES').get('requestId')).to.equal(1);\n    });\n    it('background operation is not running', function () {\n      App.router.set('backgroundOperationsController.services', [\n        Em.Object.create({\n          isRunning: false\n        })\n      ]);\n      controller.syncStopServicesCommand.apply(controller);\n      expect(controller.get('commands').findProperty('name', 'STOP_SERVICES').get('requestId')).to.equal(1);\n    });\n    it('background operation is running but not \"Stop All Services\"', function () {\n      App.router.set('backgroundOperationsController.services', [\n        Em.Object.create({\n          isRunning: true\n        })\n      ]);\n      controller.syncStopServicesCommand.apply(controller);\n      expect(controller.get('commands').findProperty('name', 'STOP_SERVICES').get('requestId')).to.equal(1);\n    });\n    it('\"Stop All Services\" operation is running', function () {\n      App.router.set('backgroundOperationsController.services', [\n        Em.Object.create({\n          name: 'Stop All Services',\n          isRunning: true,\n          id: 2\n        })\n      ]);\n      controller.syncStopServicesCommand.apply(controller);\n      expect(controller.get('commands').findProperty('name', 'STOP_SERVICES').get('requestId')).to.equal(2);\n    });\n  });\n\n  describe('#manageSecureConfigs()', function () {\n\n    beforeEach(function () {\n      sinon.spy(controller, \"deleteDisabledGlobalConfigs\");\n      sinon.stub(controller, \"modifySiteConfigs\", Em.K);\n    });\n    afterEach(function () {\n      controller.deleteDisabledGlobalConfigs.restore();\n      controller.modifySiteConfigs.restore();\n    });\n\n    var testCases = [\n      {\n        title: 'serviceConfigTags, secureProperties, secureMapping are null',\n        content: {\n          serviceConfigTags: null,\n          secureProperties: null,\n          secureMapping: null\n        }\n      },\n      {\n        title: 'serviceConfigTags is null',\n        content: {\n          serviceConfigTags: null,\n          secureProperties: [],\n          secureMapping: []\n        }\n      },\n      {\n        title: 'secureProperties is null',\n        content: {\n          serviceConfigTags: [],\n          secureProperties: null,\n          secureMapping: []\n        }\n      },\n      {\n        title: 'secureMapping is null',\n        content: {\n          serviceConfigTags: [],\n          secureProperties: [],\n          secureMapping: null\n        }\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('commands', [Em.Object.create({\n          name: 'APPLY_CONFIGURATIONS'\n        })]);\n        controller.set('serviceConfigTags', test.content.serviceConfigTags);\n        controller.set('secureProperties', test.content.secureProperties);\n        controller.set('secureMapping', test.content.secureMapping);\n\n        expect(controller.manageSecureConfigs()).to.be.false;\n        expect(controller.get('commands').findProperty('name', 'APPLY_CONFIGURATIONS').get('isSuccess')).to.be.false;\n        expect(controller.get('commands').findProperty('name', 'APPLY_CONFIGURATIONS').get('isError')).to.be.true;\n      });\n    });\n    it('serviceConfigTags is empty', function () {\n      controller.set('serviceConfigTags', []);\n      controller.set('secureProperties', []);\n      controller.set('secureMapping', []);\n\n      expect(controller.manageSecureConfigs()).to.be.true;\n    });\n    it('serviceConfigTags has global site', function () {\n      controller.set('serviceConfigTags', [\n        {\n          siteName: 'global',\n          configs: {}\n        }\n      ]);\n\n      expect(controller.manageSecureConfigs()).to.be.true;\n      expect(controller.deleteDisabledGlobalConfigs.calledOnce).to.be.true;\n      expect(controller.get('serviceConfigTags').findProperty('siteName', 'global').configs.security_enabled).to.equal('false');\n    });\n    it('serviceConfigTags has site.xml', function () {\n      controller.set('serviceConfigTags', [\n        {\n          siteName: 'site'\n        }\n      ]);\n      expect(controller.manageSecureConfigs()).to.be.true;\n      expect(controller.modifySiteConfigs.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#deleteDisabledGlobalConfigs()', function () {\n    var testCases = [\n      {\n        title: '_serviceConfigTags and secureProperties are null',\n        content: {\n          secureProperties: null,\n          _serviceConfigTags: null\n        },\n        result: false\n      },\n      {\n        title: '_serviceConfigTags is null',\n        content: {\n          secureProperties: [],\n          _serviceConfigTags: null\n        },\n        result: false\n      },\n      {\n        title: 'secureProperties is null',\n        content: {\n          secureProperties: null,\n          _serviceConfigTags: {}\n        },\n        result: false\n      },\n      {\n        title: 'secureProperties and _serviceConfigTags are empty',\n        content: {\n          secureProperties: [],\n          _serviceConfigTags: {}\n        },\n        result: true\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.deleteDisabledGlobalConfigs(test.content.secureProperties, test.content._serviceConfigTags)).to.equal(test.result);\n      });\n    });\n    it('_serviceConfigTags doesn\\'t contain secureProperties', function () {\n      var secureProperties = [\n        {name: 'config1'}\n      ];\n      var _serviceConfigTags = {\n        configs: {\n          'config2': true\n        }\n      };\n      expect(controller.deleteDisabledGlobalConfigs(secureProperties, _serviceConfigTags)).to.be.true;\n      expect(_serviceConfigTags.configs.config2).to.be.true;\n    });\n    it('_serviceConfigTags contains secureProperties', function () {\n      var secureProperties = [\n        {name: 'config1'}\n      ];\n      var _serviceConfigTags = {\n        configs: {\n          'config1': true\n        }\n      };\n      expect(controller.deleteDisabledGlobalConfigs(secureProperties, _serviceConfigTags)).to.be.true;\n      expect(_serviceConfigTags.configs.config1).to.be.undefined;\n    });\n  });\n\n  describe('#modifySiteConfigs()', function () {\n    var testCases = [\n      {\n        title: '_serviceConfigTags and secureMapping are null',\n        content: {\n          secureMapping: null,\n          _serviceConfigTags: null\n        },\n        result: false\n      },\n      {\n        title: '_serviceConfigTags is null',\n        content: {\n          secureMapping: [],\n          _serviceConfigTags: null\n        },\n        result: false\n      },\n      {\n        title: 'secureMapping is null',\n        content: {\n          secureMapping: null,\n          _serviceConfigTags: {}\n        },\n        result: false\n      },\n      {\n        title: 'secureMapping and _serviceConfigTags are empty',\n        content: {\n          secureMapping: [],\n          _serviceConfigTags: {\n            configs: {}\n          }\n        },\n        result: true\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.modifySiteConfigs(test.content.secureMapping, test.content._serviceConfigTags)).to.equal(test.result);\n      });\n    });\n    it('secureMapping doesn\\'t contain passed siteName', function () {\n      var secureMapping = [];\n      var _serviceConfigTags = {\n        configs: {\n          'config2': true\n        },\n        siteName: 'site1'\n      };\n      expect(controller.modifySiteConfigs(secureMapping, _serviceConfigTags)).to.be.true;\n      expect(_serviceConfigTags.configs.config2).to.be.true;\n    });\n    it('secureMapping contain passed siteName but doesn\\'t match config name', function () {\n      var secureMapping = [\n        {\n          filename: 'site1.xml'\n        }\n      ];\n      var _serviceConfigTags = {\n        configs: {\n          'config2': true\n        },\n        siteName: 'site1'\n      };\n      expect(controller.modifySiteConfigs(secureMapping, _serviceConfigTags)).to.be.true;\n      expect(_serviceConfigTags.configs.config2).to.be.true;\n    });\n    it('secureMapping contain passed siteName and match config name', function () {\n      var secureMapping = [\n        {\n          filename: 'site1.xml',\n          name: 'config2'\n        }\n      ];\n      var _serviceConfigTags = {\n        configs: {\n          'config2': true\n        },\n        siteName: 'site1'\n      };\n      expect(controller.modifySiteConfigs(secureMapping, _serviceConfigTags)).to.be.true;\n      expect(_serviceConfigTags.configs.config2).to.be.undefined;\n    });\n    it('secureMapping contain passed siteName and included in secureConfigValuesMap', function () {\n      var secureMapping = [\n        {\n          filename: 'site1.xml',\n          name: 'config2',\n          nonSecureValue: 'nonSecureValue'\n        }\n      ];\n      var _serviceConfigTags = {\n        configs: {\n          'config2': true\n        },\n        siteName: 'site1'\n      };\n      controller.set('secureConfigValuesMap', {\n        'config2': 'value'\n      });\n      expect(controller.modifySiteConfigs(secureMapping, _serviceConfigTags)).to.be.true;\n      expect(_serviceConfigTags.configs.config2).to.equal('nonSecureValue');\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/admin/security/security_progress_controller');\nrequire('models/host_component');\nrequire('models/host');\n\ndescribe('App.MainAdminSecurityProgressController', function () {\n\n  var controller = App.MainAdminSecurityProgressController.create({\n    loadClusterConfigs: function () {},\n    deleteComponents: function () {}\n  });\n\n  describe('#retry()', function () {\n\n    beforeEach(function () {\n      sinon.spy(controller, \"startCommand\");\n    });\n    afterEach(function () {\n      controller.startCommand.restore();\n    });\n\n    it('commands are empty', function () {\n      controller.set('commands', []);\n      controller.retry();\n      expect(controller.startCommand.called).to.be.false;\n    });\n\n    it('command is successful', function () {\n      controller.set('commands', [\n        Em.Object.create({\n          name: 'test',\n          isSuccess: true,\n          isError: false,\n          isStarted: true\n        })\n      ]);\n      controller.retry();\n      expect(controller.startCommand.calledOnce).to.be.false;\n      expect(controller.get('commands').findProperty('name', 'test').get('isError')).to.be.false;\n      expect(controller.get('commands').findProperty('name', 'test').get('isStarted')).to.be.true;\n    });\n\n    it('command is failed', function () {\n      controller.set('commands', [\n        Em.Object.create({\n          name: 'test',\n          isSuccess: true,\n          isError: true,\n          isStarted: true\n        })\n      ]);\n      controller.retry();\n      expect(controller.startCommand.calledOnce).to.be.true;\n      expect(controller.get('commands').findProperty('name', 'test').get('isError')).to.be.false;\n      expect(controller.get('commands').findProperty('name', 'test').get('isStarted')).to.be.false;\n    });\n  });\n\n  describe('#updateServices()', function () {\n\n    it('commands are empty', function () {\n      controller.set('services', [\n        {}\n      ]);\n      controller.set('commands', []);\n      controller.updateServices();\n      expect(controller.get('services')).to.be.empty;\n    });\n\n    it('command doesn\\'t have polledData', function () {\n      controller.set('services', [\n        {}\n      ]);\n      controller.set('commands', [Em.Object.create({\n        label: 'label'\n      })]);\n      controller.updateServices();\n      expect(controller.get('services')).to.be.empty;\n    });\n\n    it('command has polledData', function () {\n      controller.set('services', [\n        {}\n      ]);\n      controller.set('commands', [Em.Object.create({\n        label: 'service1',\n        polledData: [\n          {\n            Tasks: {\n              host_name: 'host1'\n            }\n          }\n        ]\n      })]);\n      controller.updateServices();\n      expect(controller.get('services').findProperty('name', 'service1').get('hosts')).to.eql([\n        {\n          name: 'host1',\n          publicName: 'host1',\n          logTasks: [\n            {\n              Tasks: {host_name: 'host1'}\n            }\n          ]\n        }\n      ]);\n    });\n  });\n\n  describe('#setIndex()', function () {\n    it('commandArray is empty', function () {\n      var commandArray = [];\n      controller.setIndex(commandArray);\n      expect(commandArray).to.be.empty;\n      expect(controller.get('totalSteps')).to.equal(0);\n    });\n    it('one command in commandArray', function () {\n      var commandArray = [\n        Em.Object.create({name: 'command1'})\n      ];\n      controller.setIndex(commandArray);\n      expect(commandArray[0].get('index')).to.equal(1);\n      expect(controller.get('totalSteps')).to.equal(1);\n    });\n    it('commands with random indexes', function () {\n      var commandArray = [];\n      commandArray[3] = Em.Object.create({name: 'command3'});\n      commandArray[11] = Em.Object.create({name: 'command11'});\n      controller.setIndex(commandArray);\n      expect(commandArray[3].get('index')).to.equal(4);\n      expect(commandArray[11].get('index')).to.equal(12);\n      expect(controller.get('totalSteps')).to.equal(12);\n    });\n  });\n\n  describe('#startCommand()', function () {\n\n    var command = Em.Object.create({\n      start: function () {\n      }\n    });\n    beforeEach(function () {\n      sinon.spy(command, \"start\");\n      sinon.spy(controller, \"loadClusterConfigs\");\n      sinon.spy(controller, \"deleteComponents\");\n    });\n    afterEach(function () {\n      command.start.restore();\n      controller.loadClusterConfigs.restore();\n      controller.deleteComponents.restore();\n    });\n\n    it('number of commands doesn\\'t match totalSteps', function () {\n      controller.set('commands', []);\n      controller.set('totalSteps', 1);\n      expect(controller.startCommand()).to.be.false;\n    });\n    it('commands is empty', function () {\n      controller.set('commands', []);\n      controller.set('totalSteps', 0);\n      expect(controller.startCommand()).to.be.false;\n    });\n    it('command is started and completed', function () {\n      controller.set('commands', [Em.Object.create({\n        isStarted: true,\n        isCompleted: true\n      })]);\n      controller.set('totalSteps', 1);\n      expect(controller.startCommand()).to.be.false;\n    });\n    it('command is started and incompleted', function () {\n      controller.set('commands', [Em.Object.create({\n        isStarted: true,\n        isCompleted: false\n      })]);\n      controller.set('totalSteps', 1);\n      expect(controller.startCommand()).to.be.true;\n    });\n    it('command parameter passed, isPolling is true', function () {\n      controller.set('commands', []);\n      controller.set('totalSteps', 0);\n      command.set('isPolling', true);\n      expect(controller.startCommand(command)).to.be.true;\n      expect(command.get('isStarted')).to.be.true;\n      expect(command.start.calledOnce).to.be.true;\n      command.set('isPolling', false);\n    });\n    it('command parameter passed, name is \"APPLY_CONFIGURATIONS\"', function () {\n      command.set('name', 'APPLY_CONFIGURATIONS');\n      expect(controller.startCommand(command)).to.be.true;\n      expect(command.get('isStarted')).to.be.true;\n      expect(controller.loadClusterConfigs.calledOnce).to.be.true;\n    });\n    it('command parameter passed, name is \"APPLY_CONFIGURATIONS\", testMode = true', function () {\n      App.testMode = true;\n      expect(controller.startCommand(command)).to.be.true;\n      expect(command.get('isStarted')).to.be.true;\n      expect(command.get('isError')).to.be.false;\n      expect(command.get('isSuccess')).to.be.true;\n      expect(controller.loadClusterConfigs.called).to.be.false;\n      App.testMode = false;\n    });\n    it('command parameter passed, name is \"DELETE_ATS\"', function () {\n      command.set('name', 'DELETE_ATS');\n      App.store.load(App.HostComponent, {\n        id: 'APP_TIMELINE_SERVER_ats_host',\n        component_name: 'APP_TIMELINE_SERVER',\n        host_id: 'ats_host'\n      });\n      App.store.load(App.Host, {\n        id: 'ats_host',\n        host_name: 'ats_host',\n        host_components: ['APP_TIMELINE_SERVER_ats_host']\n      });\n      expect(controller.startCommand(command)).to.be.true;\n      expect(command.get('isStarted')).to.be.true;\n      expect(controller.deleteComponents.calledWith('APP_TIMELINE_SERVER', 'ats_host')).to.be.true;\n    });\n    it('command parameter passed, name is \"DELETE_ATS\", testMode = true', function () {\n      App.testMode = true;\n      expect(controller.startCommand(command)).to.be.true;\n      expect(command.get('isStarted')).to.be.true;\n      expect(command.get('isError')).to.be.false;\n      expect(command.get('isSuccess')).to.be.true;\n      expect(controller.deleteComponents.called).to.be.false;\n      App.testMode = false;\n    });\n  });\n\n  describe('#onCompleteCommand()', function () {\n\n    beforeEach(function () {\n      sinon.spy(controller, \"moveToNextCommand\");\n    });\n    afterEach(function () {\n      controller.moveToNextCommand.restore();\n    });\n\n    it('number of commands doesn\\'t match totalSteps', function () {\n      controller.set('commands', []);\n      controller.set('totalSteps', 1);\n      expect(controller.onCompleteCommand()).to.be.false;\n    });\n    it('No successful commands', function () {\n      controller.set('commands', [Em.Object.create({\n        isSuccess: false\n      })]);\n      controller.set('totalSteps', 1);\n      expect(controller.onCompleteCommand()).to.be.false;\n    });\n    it('No successful commands', function () {\n      controller.set('commands', [Em.Object.create({\n        isSuccess: false\n      })]);\n      controller.set('totalSteps', 1);\n      expect(controller.onCompleteCommand()).to.be.false;\n    });\n    it('Last command is successful', function () {\n      controller.set('commands', [\n        Em.Object.create({\n          isSuccess: false\n        }),\n        Em.Object.create({\n          isSuccess: true\n        })\n      ]);\n      controller.set('totalSteps', 2);\n      expect(controller.onCompleteCommand()).to.be.false;\n    });\n    it('all commands are successful', function () {\n      controller.set('commands', [\n        Em.Object.create({\n          isSuccess: true,\n          name: 'command1'\n        }),\n        Em.Object.create({\n          isSuccess: false,\n          name: 'command2'\n        })\n      ]);\n      controller.set('totalSteps', 2);\n      expect(controller.onCompleteCommand()).to.be.true;\n      expect(controller.moveToNextCommand.calledWith(Em.Object.create({\n        isSuccess: false,\n        name: 'command2'\n      }))).to.be.true;\n    });\n  });\n\n  describe('#moveToNextCommand()', function () {\n\n    beforeEach(function () {\n      sinon.spy(controller, \"startCommand\");\n    });\n    afterEach(function () {\n      controller.startCommand.restore();\n    });\n\n    it('No commands present', function () {\n      controller.set('commands', []);\n      expect(controller.moveToNextCommand()).to.be.false;\n    });\n    it('Only started command present', function () {\n      controller.set('commands', [\n        Em.Object.create({\n          isStarted: true\n        })\n      ]);\n      expect(controller.moveToNextCommand()).to.be.false;\n    });\n    it('Command is not started', function () {\n      controller.set('commands', [\n        Em.Object.create({\n          isStarted: false,\n          name: 'command1'\n        })\n      ]);\n      expect(controller.moveToNextCommand()).to.be.true;\n      expect(controller.startCommand.calledWith(Em.Object.create({\n        isStarted: false,\n        name: 'command1'\n      }))).to.be.true;\n    });\n    it('Next command provide as argument', function () {\n      var nextCommand = Em.Object.create({\n        isStarted: false,\n        name: 'command2'\n      });\n      expect(controller.moveToNextCommand(nextCommand)).to.be.true;\n      expect(controller.startCommand.calledWith(Em.Object.create({\n        isStarted: false,\n        name: 'command2'\n      }))).to.be.true;\n    });\n  });\n\n  describe('#setServiceTagNames()', function () {\n    var testCases = [\n      {\n        title: 'configs is empty object',\n        content: {\n          secureService: {},\n          configs: {}\n        },\n        result: undefined\n      },\n      {\n        title: 'secureService.sites is null',\n        content: {\n          secureService: {\n            sites: null\n          },\n          configs: {\n            site1: {}\n          }\n        },\n        result: undefined\n      },\n      {\n        title: 'secureService.sites doesn\\'t contain required config tag',\n        content: {\n          secureService: {\n            sites: []\n          },\n          configs: {\n            site1: {}\n          }\n        },\n        result: undefined\n      },\n      {\n        title: 'secureService.sites contains required config tag',\n        content: {\n          secureService: {\n            sites: ['site1']\n          },\n          configs: {\n            site1: {\n              tag: 'tag1'\n            }\n          }\n        },\n        result: {\n          siteName: 'site1',\n          tagName: 'tag1',\n          newTagName: null,\n          configs: {}\n        }\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.setServiceTagNames(test.content.secureService, test.content.configs)).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#setServerConfigValue()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.config, \"escapeXMLCharacters\");\n    });\n    afterEach(function () {\n      App.config.escapeXMLCharacters.restore();\n    });\n\n    it('Empty config', function () {\n      expect(controller.setServerConfigValue('', '')).to.equal('');\n      expect(App.config.escapeXMLCharacters.calledWith('')).to.be.true;\n    });\n    it('Config1, value = \"value1\"', function () {\n      expect(controller.setServerConfigValue('config1', 'value1')).to.equal('value1');\n      expect(App.config.escapeXMLCharacters.calledWith('value1')).to.be.true;\n    });\n    it('config = \"storm.zookeeper.servers\", value = \"value1\"', function () {\n      expect(controller.setServerConfigValue('storm.zookeeper.servers', 'value1')).to.equal('value1');\n      expect(App.config.escapeXMLCharacters.called).to.be.false;\n    });\n  });\n\n  describe('#escapeXMLCharacters()', function () {\n\n    beforeEach(function () {\n      sinon.spy(controller, \"setServerConfigValue\");\n    });\n    afterEach(function () {\n      controller.setServerConfigValue.restore();\n    });\n\n    it('serviceConfigTags is empty', function () {\n      var serviceConfigTags = [];\n      controller.escapeXMLCharacters(serviceConfigTags);\n      expect(controller.setServerConfigValue.called).to.be.false;\n    });\n    it('configs is empty', function () {\n      var serviceConfigTags = [\n        {\n          configs: {}\n        }\n      ];\n      controller.escapeXMLCharacters(serviceConfigTags);\n      expect(controller.setServerConfigValue.called).to.be.false;\n    });\n    it('serviceConfigTags has property', function () {\n      var serviceConfigTags = [\n        {\n          configs: {\n            'p1': 'value1'\n          }\n        }\n      ];\n      controller.escapeXMLCharacters(serviceConfigTags);\n      expect(controller.setServerConfigValue.withArgs('p1', 'value1').calledOnce).to.be.true;\n    });\n    it('serviceConfigTags has multiple properties', function () {\n      var serviceConfigTags = [\n        {\n          configs: {\n            'p1': 'value1',\n            'p2': 'value2'\n          }\n        }\n      ];\n      controller.escapeXMLCharacters(serviceConfigTags);\n      expect(controller.setServerConfigValue.callCount).to.equal(2);\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/admin/security');\n\n\ndescribe('App.MainAdminSecurityController', function () {\n\n  var controller = App.MainAdminSecurityController.create({\n    getServiceConfigsFromServer: function () {\n    }\n  });\n\n  describe('#setServiceTagNames()', function () {\n    var testCases = [\n      {\n        title: 'configs is empty object',\n        content: {\n          secureService: {},\n          configs: {}\n        },\n        result: undefined\n      },\n      {\n        title: 'secureService.sites is null',\n        content: {\n          secureService: {\n            sites: null\n          },\n          configs: {\n            site1: {}\n          }\n        },\n        result: undefined\n      },\n      {\n        title: 'secureService.sites doesn\\'t contain required config tag',\n        content: {\n          secureService: {\n            sites: []\n          },\n          configs: {\n            site1: {}\n          }\n        },\n        result: undefined\n      },\n      {\n        title: 'secureService.sites contains required config tag',\n        content: {\n          secureService: {\n            sites: ['site1']\n          },\n          configs: {\n            site1: {\n              tag: 'tag1'\n            }\n          }\n        },\n        result: {\n          siteName: 'site1',\n          tagName: 'tag1',\n          newTagName: null,\n          configs: {}\n        }\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.setServiceTagNames(test.content.secureService, test.content.configs)).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#getSecurityStatusFromServerSuccessCallback()', function () {\n\n    beforeEach(function () {\n      sinon.spy(controller, 'showSecurityErrorPopup');\n      sinon.spy(controller, 'getServiceConfigsFromServer');\n    });\n    afterEach(function () {\n      controller.showSecurityErrorPopup.restore();\n      controller.getServiceConfigsFromServer.restore();\n    });\n\n    it('desired_configs is empty', function () {\n      var data = {Clusters: {\n        desired_configs: {}\n      }};\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.showSecurityErrorPopup.called).to.equal(true);\n    });\n\n    it('hdfs-site is missing', function () {\n      var data = {Clusters: {\n        desired_configs: {\n          'global': {}\n        }\n      }};\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.showSecurityErrorPopup.called).to.equal(true);\n    });\n\n    it('global is missing', function () {\n      var data = {Clusters: {\n        desired_configs: {\n          'hdfs-site': {}\n        }\n      }};\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.showSecurityErrorPopup.called).to.equal(true);\n    });\n\n    it('global and hdfs-site are correct', function () {\n      var data = {Clusters: {\n        desired_configs: {\n          'hdfs-site': {\n            tag: 1\n          },\n          'global': {\n            tag: 2\n          }\n        }\n      }};\n      controller.getSecurityStatusFromServerSuccessCallback(data);\n      expect(controller.get('tag.global')).to.equal(2);\n      expect(controller.get('tag.hdfs-site')).to.equal(1);\n      expect(controller.getServiceConfigsFromServer.called).to.equal(true);\n    });\n  });\n\n\n  describe('#setNnHaStatus()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.db, \"setIsNameNodeHa\", Em.K);\n    });\n    afterEach(function () {\n      App.db.setIsNameNodeHa.restore();\n    });\n\n\n    it('hdfsConfigs is null', function () {\n      var hdfsConfigs = null;\n      controller.setNnHaStatus(hdfsConfigs);\n      expect(App.db.setIsNameNodeHa.withArgs('false').called).to.equal(true);\n    });\n\n    it('\"dfs.nameservices\" is absent in hdfsConfigs', function () {\n      var hdfsConfigs = {};\n      controller.setNnHaStatus(hdfsConfigs);\n      expect(App.db.setIsNameNodeHa.withArgs('false').called).to.equal(true);\n    });\n\n    it('namenodesKey is absent in hdfsConfigs', function () {\n      var hdfsConfigs = {\n        'dfs.nameservices': 'key'\n      };\n      controller.setNnHaStatus(hdfsConfigs);\n      expect(App.db.setIsNameNodeHa.withArgs('false').called).to.equal(true);\n    });\n\n    it('namenodesKey is present in hdfsConfigs', function () {\n      var hdfsConfigs = {\n        'dfs.nameservices': 'key',\n        'dfs.ha.namenodes.key': 'true'\n      };\n      controller.setNnHaStatus(hdfsConfigs);\n      expect(App.db.setIsNameNodeHa.withArgs('true').called).to.equal(true);\n    });\n  });\n\n  describe('#loadUsers()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.db, \"setSecureUserInfo\", Em.K);\n    });\n    afterEach(function () {\n      App.db.setSecureUserInfo.restore();\n    });\n\n    it('if defaultUserNameMap is empty then serviceUsers stays the same', function () {\n      var configs = {};\n      controller.set('serviceUsers', []);\n      controller.set('defaultUserNameMap', {});\n      controller.loadUsers(configs);\n      expect(controller.get('serviceUsers')).to.be.empty;\n    });\n\n    it('if user config value is missing then use default', function () {\n      var configs = {};\n      controller.set('serviceUsers', []);\n      controller.set('defaultUserNameMap', {\n        'test_user': 'test'\n      });\n      controller.loadUsers(configs);\n      expect(controller.get('serviceUsers')).to.eql([\n        {\n          \"id\": \"puppet var\",\n          \"name\": \"test_user\",\n          \"value\": \"test\"\n        }\n      ]);\n    });\n\n    it('user config value has value', function () {\n      var configs = {\n        'test_user': 'config-value'\n      };\n      controller.set('serviceUsers', []);\n      controller.set('defaultUserNameMap', {\n        'test_user': 'test'\n      });\n      controller.loadUsers(configs);\n      expect(controller.get('serviceUsers')).to.eql([\n        {\n          \"id\": \"puppet var\",\n          \"name\": \"test_user\",\n          \"value\": \"config-value\"\n        }\n      ]);\n    });\n  });\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\n\nrequire('models/service');\nrequire('models/host_component');\nrequire('controllers/main/admin');\n\ndescribe('MainAdminController', function () {\n\n  var controller = App.MainAdminController.create();\n\n  describe('#isAccessAvailable()', function () {\n\n    beforeEach(function () {\n      Em.propertyDidChange(controller, 'isAccessAvailable');\n    });\n\n    it('Services do not match dependencies', function () {\n      App.Service.find().clear();\n      App.store.load(App.Service, {\n        id: 'HDFS',\n        service_name: 'HDFS'\n      });\n      expect(controller.get(\"isAccessAvailable\")).to.be.false;\n    });\n    it('APP_TIMELINE_SERVER is absent', function () {\n      App.Service.find().clear();\n      App.HostComponent.find().clear();\n      expect(controller.get(\"isAccessAvailable\")).to.be.false;\n    });\n    it('Only one YARN service installed', function () {\n      App.store.load(App.Service, {\n        id: 'YARN',\n        service_name: 'YARN'\n      });\n      expect(controller.get(\"isAccessAvailable\")).to.be.false;\n    });\n    it('TEZ and YARN services installed', function () {\n      App.store.load(App.Service, {\n        id: 'TEZ',\n        service_name: 'TEZ'\n      });\n      expect(controller.get(\"isAccessAvailable\")).to.be.false;\n    });\n    it('TEZ and YARN services, APP_TIMELINE_SERVER component installed', function () {\n      App.store.load(App.HostComponent, {\n        id: 'APP_TIMELINE_SERVER_host1',\n        component_name: 'APP_TIMELINE_SERVER'\n      });\n      expect(controller.get(\"isAccessAvailable\")).to.be.true;\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\n\nrequire('controllers/main/alerts_controller');\nrequire('models/alert');\n\ndescribe('MainAlertsController', function () {\n\n  var controller = App.MainAlertsController.create();\n\n  describe('#loadAlerts()', function () {\n\n    before(function () {\n      sinon.stub(controller, 'getFromServer', Em.K);\n    });\n    after(function () {\n      controller.getFromServer.restore();\n    });\n\n    it('getFromServer should be called', function () {\n      controller.set('resourceName', null);\n      controller.set('isLoaded', true);\n      controller.set('resourceType', null);\n      controller.loadAlerts('name1', 'type1');\n      expect(controller.get(\"isLoaded\")).to.be.false;\n      expect(controller.get(\"resourceName\")).to.equal('name1');\n      expect(controller.get(\"resourceType\")).to.equal('type1');\n      expect(controller.getFromServer.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#update()', function () {\n\n    var clock;\n\n    beforeEach(function () {\n      clock = sinon.useFakeTimers();\n      sinon.stub(controller, 'getFromServer', Em.K);\n      sinon.spy(controller, 'update');\n    });\n    afterEach(function () {\n      clock.restore();\n      controller.getFromServer.restore();\n      controller.update.restore();\n    });\n\n    it('isUpdating = true', function () {\n      controller.set('isUpdating', true);\n      expect(controller.get(\"updateTimer\")).not.to.be.null;\n      clock.tick(App.componentsUpdateInterval);\n      expect(controller.getFromServer.calledOnce).to.be.true;\n      expect(controller.update.calledTwice).to.be.true;\n    });\n    it('isUpdating = false', function () {\n      controller.set('isUpdating', false);\n      expect(controller.update.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#getFromServer()', function () {\n    var obj = Em.Object.create({isNagiosInstalled: false});\n\n    beforeEach(function () {\n      sinon.stub(controller, 'getAlertsByService', Em.K);\n      sinon.stub(controller, 'getAlertsByHost', Em.K);\n      sinon.stub(App.router, 'get', function() {return obj.get('isNagiosInstalled')});\n    });\n    afterEach(function () {\n      controller.getAlertsByService.restore();\n      controller.getAlertsByHost.restore();\n      App.router.get.restore();\n    });\n\n    it('Nagios is not installed', function () {\n      obj.set('isNagiosInstalled', false);\n      controller.set('isLoaded', false);\n      controller.getFromServer();\n      expect(controller.get('isLoaded')).to.be.true;\n      controller.set('isLoaded', false);\n    });\n    it('Nagios installed, SERVICE resource type', function () {\n      obj.set('isNagiosInstalled', true);\n      controller.set('resourceType', 'SERVICE');\n      controller.getFromServer();\n      expect(controller.get('isLoaded')).to.be.false;\n      expect(controller.getAlertsByService.calledOnce).to.be.true;\n    });\n    it('Nagios installed, HOST resource type', function () {\n      obj.set('isNagiosInstalled', true);\n      controller.set('resourceType', 'HOST');\n      controller.getFromServer();\n      expect(controller.get('isLoaded')).to.be.false;\n      expect(controller.getAlertsByHost.calledOnce).to.be.true;\n    });\n    it('Nagios installed, unknown resource type', function () {\n      obj.set('isNagiosInstalled', true);\n      controller.set('resourceType', 'RS1');\n      controller.getFromServer();\n      expect(controller.get('isLoaded')).to.be.false;\n      expect(controller.getAlertsByService.called).to.be.false;\n      expect(controller.getAlertsByHost.called).to.be.false;\n    });\n  });\n\n  describe('#getAlertsByHost()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, 'send', Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('resourceName is null', function () {\n      controller.set('resourceName', null);\n      expect(controller.getAlertsByHost()).to.be.false;\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('resourceName is correct', function () {\n      controller.set('resourceName', 'host1');\n      expect(controller.getAlertsByHost()).to.be.true;\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#getAlertsByService()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, 'send', Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('resourceName is null', function () {\n      controller.set('resourceName', null);\n      expect(controller.getAlertsByService()).to.be.false;\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('resourceName is correct', function () {\n      controller.set('resourceName', 'service1');\n      expect(controller.getAlertsByService()).to.be.true;\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#getAlertsSuccessCallback()', function () {\n\n    var testCases = [\n      {\n        title: 'data is null',\n        data: null,\n        result: []\n      },\n      {\n        title: 'data.alerts is null',\n        data: {alerts: null},\n        result: []\n      },\n      {\n        title: 'data.alerts.detail is null',\n        data: {alerts: {detail: null}},\n        result: []\n      },\n      {\n        title: 'data.alerts.detail is empty',\n        data: {alerts: {detail: []}},\n        result: []\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('isLoaded', false);\n        controller.getAlertsSuccessCallback(test.data);\n        expect(controller.get('alerts')).to.eql(test.result);\n        expect(controller.get('isLoaded')).to.be.true;\n      });\n    });\n\n    var data = {alerts: {detail: [\n      {\n        description: 't1',\n        service_name: \"s1\",\n        status_time: 1,\n        status: 'OK',\n        output: 'o1',\n        host_name: 'h1',\n        last_status_time: 1\n      }\n    ]}};\n    var testCasesOfStatus = [\n      {\n        title: 'data.alerts.detail is correct, OK status',\n        status: 'OK',\n        result: '0'\n      },\n      {\n        title: 'data.alerts.detail is correct, WARNING status',\n        status: 'WARNING',\n        result: '1'\n      },\n      {\n        title: 'data.alerts.detail is correct, CRITICAL status',\n        status: 'CRITICAL',\n        result: '2'\n      },\n      {\n        title: 'data.alerts.detail is correct, PASSIVE status',\n        status: 'PASSIVE',\n        result: '3'\n      },\n      {\n        title: 'data.alerts.detail is correct, unknown status',\n        status: '',\n        result: '4'\n      }\n    ];\n    testCasesOfStatus.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('isLoaded', false);\n        data.alerts.detail[0].status = test.status;\n        controller.getAlertsSuccessCallback(data);\n        expect(controller.get('alerts.length')).to.equal(1);\n        expect(controller.get('alerts').objectAt(0).get('status')).to.equal(test.result);\n        expect(controller.get('isLoaded')).to.be.true;\n      });\n    });\n  });\n\n  describe('#getAlertsErrorCallback()', function () {\n    it('isLoaded was false', function () {\n      controller.set('isLoaded', false);\n      controller.getAlertsErrorCallback();\n      expect(controller.get('isLoaded')).to.be.true;\n    });\n    it('isLoaded was true', function () {\n      controller.set('isLoaded', true);\n      controller.getAlertsErrorCallback();\n      expect(controller.get('isLoaded')).to.be.true;\n    });\n  });\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('utils/helper');\nrequire('controllers/main/apps_controller');\n\ndescribe('MainAppsController', function () {\n\n\n   describe('#iTotalDisplayRecordsObserver()', function () {\n     it('should set number of filtered jobs when switching to all jobs', function () {\n       var mainAppsController = App.MainAppsController.create();\n       mainAppsController.set(\"paginationObject.iTotalDisplayRecords\", 5);\n       expect(mainAppsController.get('filterObject.filteredDisplayRecords')).to.equal(5);\n     })\n   });\n\n\n   describe('#filterObject.onRunTypeChange()', function () {\n     it('should set sSearch_2 of filterObject when changing value of filterObject.runType', function () {\n       var mainAppsController = App.MainAppsController.create();\n       mainAppsController.set(\"filterObject.runType\", \"MapReduce\");\n       expect(mainAppsController.get('filterObject.sSearch_2')).to.equal(\"mr\");\n       mainAppsController.set(\"filterObject.runType\", \"Hive\");\n       expect(mainAppsController.get('filterObject.sSearch_2')).to.equal(\"hive\");\n       mainAppsController.set(\"filterObject.runType\", \"Pig\");\n       expect(mainAppsController.get('filterObject.sSearch_2')).to.equal(\"pig\");\n     })\n   });\n\n   describe('#filterObject.onJobsChange()', function () {\n     it('should set minJobs,maxJobs of filterObject when changing value of filterObject.jobs', function () {\n       var mainAppsController = App.MainAppsController.create();\n       mainAppsController.set(\"filterObject.jobs\", \">3\");\n       expect(mainAppsController.get('filterObject.minJobs')).to.equal(\"3\");\n       expect(mainAppsController.get('filterObject.maxJobs')).to.equal(\"\");\n       mainAppsController.set(\"filterObject.jobs\", \"<3\");\n       expect(mainAppsController.get('filterObject.minJobs')).to.equal(\"\");\n       expect(mainAppsController.get('filterObject.maxJobs')).to.equal(\"3\");\n       mainAppsController.set(\"filterObject.jobs\", \"3\");\n       expect(mainAppsController.get('filterObject.minJobs')).to.equal(\"3\");\n       expect(mainAppsController.get('filterObject.maxJobs')).to.equal(\"3\");\n       mainAppsController.set(\"filterObject.jobs\", \"=3\");\n       expect(mainAppsController.get('filterObject.minJobs')).to.equal(\"3\");\n       expect(mainAppsController.get('filterObject.maxJobs')).to.equal(\"3\");\n     })\n   });\n\n   describe('#filterObject.onDurationChange()', function () {\n     it('should set minDuration,maxDuration of filterObject when changing value of filterObject.duration', function () {\n       var mainAppsController = App.MainAppsController.create();\n       mainAppsController.set(\"filterObject.duration\", \">3h\");\n       expect(mainAppsController.get('filterObject.minDuration')).to.equal(10799640);\n       expect(mainAppsController.get('filterObject.maxDuration')).to.equal(\"\");\n       mainAppsController.set(\"filterObject.duration\", \"<6m\");\n       expect(mainAppsController.get('filterObject.minDuration')).to.equal(\"\");\n       expect(mainAppsController.get('filterObject.maxDuration')).to.equal(360060);\n       mainAppsController.set(\"filterObject.duration\", \"10s\");\n       expect(mainAppsController.get('filterObject.minDuration')).to.equal(9990);\n       expect(mainAppsController.get('filterObject.maxDuration')).to.equal(10010);\n       mainAppsController.set(\"filterObject.duration\", \"1\");\n       expect(mainAppsController.get('filterObject.minDuration')).to.equal(990);\n       expect(mainAppsController.get('filterObject.maxDuration')).to.equal(1010);\n     })\n   });\n\n   describe('#filterObject.onRunDateChange()', function () {\n     it('should set minStartTime,maxStartTime of filterObject when changing value of filterObject.runDate', function () {\n       var mainAppsController = App.MainAppsController.create();\n       mainAppsController.set(\"filterObject.runDate\", \"Any\");\n       expect(mainAppsController.get('filterObject.minStartTime')).to.equal(\"\");\n       mainAppsController.set(\"filterObject.runDate\", \"Past 1 Day\");\n       expect(mainAppsController.get('filterObject.minStartTime')).to.be.within(((new Date().getTime())-86400000)-1000,((new Date().getTime())-86400000)+1000);\n       mainAppsController.set(\"filterObject.runDate\", \"Past 2 Days\");\n       expect(mainAppsController.get('filterObject.minStartTime')).to.be.within(((new Date().getTime())-172800000)-1000,((new Date().getTime())-172800000)+1000);\n       mainAppsController.set(\"filterObject.runDate\", \"Past 7 Days\");\n       expect(mainAppsController.get('filterObject.minStartTime')).to.be.within(((new Date().getTime())-604800000)-1000,((new Date().getTime())-604800000)+1000);\n       mainAppsController.set(\"filterObject.runDate\", \"Past 14 Days\");\n       expect(mainAppsController.get('filterObject.minStartTime')).to.be.within(((new Date().getTime())-1209600000)-1000,((new Date().getTime())-1209600000)+1000);\n       mainAppsController.set(\"filterObject.runDate\", \"Past 30 Days\");\n       expect(mainAppsController.get('filterObject.minStartTime')).to.be.within(((new Date().getTime())-2592000000)-1000,((new Date().getTime())-2592000000)+1000);\n     })\n   });\n\n   describe('#filterObject.createAppLink(), #filterObject.valueObserver()', function () {\n     var mainAppsController = App.MainAppsController.create();\n     mainAppsController.set('content.length', 20);\n     it('should set runUrl of filterObject when changing value for any filter', function () {\n       mainAppsController.set(\"filterObject.sSearch_0\", \"0\");\n       mainAppsController.set(\"filterObject.sSearch_1\", \"workflowName\");\n       mainAppsController.set(\"filterObject.sSearch_2\", \"pig\");\n       mainAppsController.set(\"filterObject.sSearch_3\", \"admin\");\n       mainAppsController.set(\"filterObject.minJobs\", \"1\");\n       mainAppsController.set(\"filterObject.maxJobs\", \"2\");\n       mainAppsController.set(\"filterObject.minDuration\", \"1000\");\n       mainAppsController.set(\"filterObject.maxDuration\", \"2000\");\n       mainAppsController.set(\"filterObject.minStartTime\", \"999\");\n       mainAppsController.set(\"filterObject.maxStartTime\", \"1000\");\n       mainAppsController.set(\"filterObject.sSearch\", \"searchTerm\");\n       mainAppsController.set(\"filterObject.iDisplayLength\", \"10\");\n       mainAppsController.set(\"filterObject.iDisplayStart\", \"10\");\n       mainAppsController.set(\"filterObject.iSortCol_0\", \"1\");\n       mainAppsController.set(\"filterObject.sSortDir_0\", \"ASC\");\n       expect(mainAppsController.get('runUrl')).to.equal(\"/jobhistory/datatable?\" +\n           \"sSearch_0=0\" +\n           \"&sSearch_1=workflowName\" +\n           \"&sSearch_2=pig\" +\n           \"&sSearch_3=admin\" +\n           \"&minJobs=1\" +\n           \"&maxJobs=2\" +\n           \"&minDuration=1000\" +\n           \"&maxDuration=2000\" +\n           \"&minStartTime=999\" +\n           \"&maxStartTime=1000\" +\n           \"&sSearch=searchTerm\" +\n           \"&iDisplayLength=10\" +\n           \"&iDisplayStart=10\" +\n           \"&iSortCol_0=1\" +\n           \"&sSortDir_0=ASC\");\n       expect(mainAppsController.get('filterObject.viewType')).to.equal('filtered');\n     });\n\n     it('should set viewType to \"all\" when set iDisplayLength, iDisplayStart, iSortCol_0, sSortDir_0', function () {\n       mainAppsController.set(\"filterObject.sSearch_0\", \"\");\n       mainAppsController.set(\"filterObject.sSearch_1\", \"\");\n       mainAppsController.set(\"filterObject.sSearch_2\", \"\");\n       mainAppsController.set(\"filterObject.sSearch_3\", \"\");\n       mainAppsController.set(\"filterObject.minJobs\", \"\");\n       mainAppsController.set(\"filterObject.maxJobs\", \"\");\n       mainAppsController.set(\"filterObject.minDuration\", \"\");\n       mainAppsController.set(\"filterObject.maxDuration\", \"\");\n       mainAppsController.set(\"filterObject.minStartTime\", \"\");\n       mainAppsController.set(\"filterObject.maxStartTime\", \"\");\n       mainAppsController.set(\"filterObject.sSearch\", \"\");\n       mainAppsController.set(\"filterObject.iDisplayLength\", \"10\");\n       mainAppsController.set(\"filterObject.iDisplayStart\", \"10\");\n       mainAppsController.set(\"filterObject.iSortCol_0\", \"1\");\n       mainAppsController.set(\"filterObject.sSortDir_0\", \"ASC\");\n       expect(mainAppsController.get('filterObject.viewType')).to.equal('all');\n     });\n   });\n\n\n\n\n });\n\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_cpuWaitIO');\n\ndescribe('App.MainChartHeatmapCpuWaitIOMetric', function () {\n\n  var tests = [\n    {\n      json: {\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"cpu\" : {\n                \"cpu_wio\" : 0.4\n              }\n            }\n          }\n        ]\n      },\n      m: 'One host',\n      e: {'dev01.hortonworks.com': '40.0'}\n    },\n    {\n      json: {\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"cpu\" : {\n                \"cpu_wio\" : 0.4\n              }\n            }\n          },\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"cpu\" : {\n                \"cpu_wio\" : 0.34566\n              }\n            }\n          }\n        ]\n      },\n      m: 'Two hosts',\n      e: {'dev01.hortonworks.com': '40.0', 'dev02.hortonworks.com': '34.6'}\n    },\n    {\n      json: {\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"cpu\" : {\n                \"cpu_wio\" : 0.4\n              }\n            }\n          },\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"cpu\" : {\n              }\n            }\n          }\n        ]\n      },\n      m: 'Two hosts, One without metric',\n      e: {'dev01.hortonworks.com': '40.0'}\n    }\n  ];\n\n  describe('#metricMapper()', function() {\n    var mainChartHeatmapCpuWaitIOMetric = App.MainChartHeatmapCpuWaitIOMetric.create();\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var r = mainChartHeatmapCpuWaitIOMetric.metricMapper(test.json);\n        expect(r).to.eql(test.e);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_dfs');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_dfs_bytesread');\n\ndescribe('App.MainChartHeatmapDFSBytesReadMetric', function () {\n\n  var tests = [\n    {i: 0, e: 0},\n    {i: 0.5 * 1024* 1024, e: 0.5},\n    {i: 1024* 1024, e: 1},\n    {i: 10.5 * 1024 * 1024,e: 10.5}\n  ];\n\n  describe('#transformValue()', function() {\n    var mainChartHeatmapDFSBytesReadMetric = App.MainChartHeatmapDFSBytesReadMetric.create();\n\n    tests.forEach(function(test) {\n      it(test.i + ' bytes to ' + test.e + ' MB', function() {\n        var r = mainChartHeatmapDFSBytesReadMetric.transformValue(test.i);\n        expect(r).to.eql(test.e);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_dfs');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_dfs_byteswritten');\n\ndescribe('App.MainChartHeatmapDFSBytesWrittenMetric', function () {\n\n  var tests = [\n    {i: 0, e: 0},\n    {i: 0.5 * 1024* 1024, e: 0.5},\n    {i: 1024* 1024, e: 1},\n    {i: 10.5 * 1024 * 1024,e: 10.5}\n  ];\n\n  describe('#transformValue()', function() {\n    var mainChartHeatmapDFSBytesWrittenMetric = App.MainChartHeatmapDFSBytesWrittenMetric.create();\n\n    tests.forEach(function(test) {\n      it(test.i + ' bytes to ' + test.e + ' MB', function() {\n        var r = mainChartHeatmapDFSBytesWrittenMetric.transformValue(test.i);\n        expect(r).to.eql(test.e);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_dfs');\n\ndescribe('App.MainChartHeatmapDFSMetrics', function () {\n\n  var tests = [\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n                \"gcTimeMillis\" : 285\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 285},\n      m: 'One host_component'\n    },\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n                \"gcTimeMillis\" : 285\n              }\n            }\n          },\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n                \"gcTimeMillis\" : 124\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 285, 'dev02.hortonworks.com': 124},\n      m: 'Two host_components'\n    },\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n                \"gcTimeMillis\" : 285\n              }\n            }\n          },\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 285},\n      m: 'Two host_components, one without metric'\n    }\n  ];\n\n  describe('#metricMapper()', function() {\n    var mainChartHeatmapDFSMetrics = App.MainChartHeatmapDFSMetrics.create();\n    mainChartHeatmapDFSMetrics.set('defaultMetric', 'metrics.jvm.gcTimeMillis');\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var r = mainChartHeatmapDFSMetrics.metricMapper(test.json);\n        expect(r).to.eql(test.result);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_diskspaceused');\n\ndescribe('App.MainChartHeatmapDiskSpaceUsedMetric', function () {\n\n  var tests = Em.A([\n    {\n      json:{\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"disk\" : {\n                \"disk_free\" : 89.973,\n                \"disk_total\" : 101.515\n              }\n            }\n          }\n        ]\n      },\n      m: 'One host',\n      e: {'dev01.hortonworks.com': 11.37}\n    },\n    {\n      json:{\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"disk\" : {\n                \"disk_free\" : 89.973,\n                \"disk_total\" : 101.515\n              }\n            }\n          },\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"disk\" : {\n                \"disk_free\" : 89.973,\n                \"disk_total\" : 101.515\n              }\n            }\n          }\n        ]\n      },\n      m: 'Two hosts',\n      e: {'dev01.hortonworks.com': 11.37, 'dev02.hortonworks.com': 11.37}\n    },\n    {\n      json:{\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"disk\" : {\n                \"disk_free\" : 89.973,\n                \"disk_total\" : 101.515\n              }\n            }\n          },\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n\n            }\n          }\n        ]\n      },\n      m: 'Two hosts, One without metric',\n      e: {'dev01.hortonworks.com': 11.37}\n    }\n  ]);\n\n  describe('#metricMapper()', function() {\n    var mainChartHeatmapDiskSpaceUsedMetric = App.MainChartHeatmapDiskSpaceUsedMetric.create();\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var r = mainChartHeatmapDiskSpaceUsedMetric.metricMapper(test.json);\n        expect(r).to.eql(test.e);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_hbase');\n\ndescribe('App.MainChartHeatmapHbaseMetrics', function () {\n\n  var tests = [\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"hbase\" : {\n                \"regionserver\" : {\n                  \"readRequestsCount\" : 0.0\n                }\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 0},\n      m: 'One host_component'\n    },\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"hbase\" : {\n                \"regionserver\" : {\n                  \"readRequestsCount\" : 0.0\n                }\n              }\n            }\n          },\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"hbase\" : {\n                \"regionserver\" : {\n                  \"readRequestsCount\" : 1.0\n                }\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 0, 'dev02.hortonworks.com': 1},\n      m: 'Two host_components'\n    },\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"hbase\" : {\n                \"regionserver\" : {\n                  \"readRequestsCount\" : 0.0\n                }\n              }\n            }\n          },\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"hbase\" : {\n                \"regionserver\" : {\n\n                }\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 0},\n      m: 'Two host_components, one without metric'\n    }\n  ];\n\n  describe('#metricMapper()', function() {\n    var mainChartHeatmapHbaseMetrics = App.MainChartHeatmapHbaseMetrics.create();\n    mainChartHeatmapHbaseMetrics.set('defaultMetric', 'metrics.hbase.regionserver.readRequestsCount');\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var r = mainChartHeatmapHbaseMetrics.metricMapper(test.json);\n        expect(r).to.eql(test.result);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_memoryused');\n\ndescribe('App.MainChartHeatmapMemoryUsedMetric', function () {\n\n  var tests = [\n    {\n      json:{\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"memory\" : {\n                \"mem_buffers\" : 109888.0,\n                \"mem_cached\" : 1965624.0,\n                \"mem_free\" : 261632.0,\n                \"mem_shared\" : 0.0,\n                \"mem_total\" : 6123776.0,\n                \"swap_free\" : 4126820.0,\n                \"swap_total\" : 4128760.0\n              }\n            }\n          }\n        ]\n      },\n      m: 'One host',\n      e: {'dev01.hortonworks.com': '63.6'}\n    },\n    {\n      json:{\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"memory\" : {\n                \"mem_buffers\" : 109888.0,\n                \"mem_cached\" : 1965624.0,\n                \"mem_free\" : 261632.0,\n                \"mem_shared\" : 0.0,\n                \"mem_total\" : 6123776.0,\n                \"swap_free\" : 4126820.0,\n                \"swap_total\" : 4128760.0\n              }\n            }\n          },\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"memory\" : {\n                \"mem_buffers\" : 109888.0,\n                \"mem_cached\" : 1965624.0,\n                \"mem_free\" : 261632.0,\n                \"mem_shared\" : 0.0,\n                \"mem_total\" : 6123776.0,\n                \"swap_free\" : 4126820.0,\n                \"swap_total\" : 4128760.0\n              }\n            }\n          }\n        ]\n      },\n      m: 'Two hosts',\n      e: {'dev01.hortonworks.com': '63.6', 'dev02.hortonworks.com': '63.6'}\n    },\n    {\n      json:{\n        \"items\" : [\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"memory\" : {\n                \"mem_buffers\" : 109888.0,\n                \"mem_cached\" : 1965624.0,\n                \"mem_free\" : 261632.0,\n                \"mem_shared\" : 0.0,\n                \"mem_total\" : 6123776.0,\n                \"swap_free\" : 4126820.0,\n                \"swap_total\" : 4128760.0\n              }\n            }\n          },\n          {\n            \"Hosts\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n\n            }\n          }\n        ]\n      },\n      m: 'Two hosts, One without metric',\n      e: {'dev01.hortonworks.com': '63.6'}\n    }\n  ];\n\n  describe('#metricMapper()', function() {\n    var mainChartHeatmapMemoryUsedMetric = App.MainChartHeatmapMemoryUsedMetric.create();\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var r = mainChartHeatmapMemoryUsedMetric.metricMapper(test.json);\n        expect(r).to.eql(test.e);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\n\ndescribe('MainChartHeatmapMetric', function () {\n\n  var mainChartHeatmapMetric = App.MainChartHeatmapMetric.create({});\n\n  describe('#formatLegendNumber', function () {\n    var tests = [\n      {m:'undefined to undefined',i:undefined,e:undefined},\n      {m:'0 to 0',i:0,e:0},\n      {m:'1 to 1',i:1,e:1},\n      {m:'1.23 to 1.2',i:1.23,e:1.2}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(mainChartHeatmapMetric.formatLegendNumber(test.i)).to.equal(test.e);\n      });\n    });\n    it('NaN to NaN' + ' ', function () {\n      expect(isNaN(mainChartHeatmapMetric.formatLegendNumber(NaN))).to.equal(true);\n    });\n  });\n\n  describe('#refreshHostSlots', function() {\n    beforeEach(function() {\n      App.set('apiPrefix', '/api/v1');\n      App.set('clusterName', 'tdk');\n      App.testMode = false;\n      sinon.spy($, 'ajax');\n    });\n\n    afterEach(function() {\n      $.ajax.restore();\n      App.testMode = true;\n    });\n\n    mainChartHeatmapMetric  = App.MainChartHeatmapMetric.create({});\n    mainChartHeatmapMetric.set('ajaxIndex', 'hosts.metrics.host_component');\n    mainChartHeatmapMetric.set('ajaxData', {\n      serviceName: 'SERVICE',\n      componentName: 'COMPONENT'\n    });\n    mainChartHeatmapMetric.set('defaultMetric', 'default.metric');\n\n    it('Should load proper URL', function() {\n      mainChartHeatmapMetric.refreshHostSlots();\n      expect($.ajax.args[0][0].url.endsWith('/api/v1/clusters/tdk/services/SERVICE/components/COMPONENT?fields=host_components/default/metric')).to.equal(true);\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_yarn');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_yarn_ResourceUsed');\n\ndescribe('App.MainChartHeatmapYarnResourceUsedMetric', function () {\n\n  var mainChartHeatmapYarnResourceUsedMetric = App.MainChartHeatmapYarnResourceUsedMetric.create({});\n\n  describe('#metricMapper', function () {\n    var tests = [\n      {\n        m: 'Correct JSON #1',\n        i: {\n          \"ServiceComponentInfo\" : {\n            \"rm_metrics\" : {\n              \"cluster\" : {\n                \"nodeManagers\" : \"[{\\\"HostName\\\":\\\"dev01.hortonworks.com\\\",\\\"Rack\\\":\\\"/default-rack\\\",\\\"State\\\":\\\"RUNNING\\\",\\\"NodeId\\\":\\\"dev01.hortonworks.com:45454\\\",\\\"NodeHTTPAddress\\\":\\\"dev01.hortonworks.com:8042\\\",\\\"LastHealthUpdate\\\":1375869232870,\\\"HealthReport\\\":\\\"\\\",\\\"NumContainers\\\":0,\\\"UsedMemoryMB\\\":10,\\\"AvailableMemoryMB\\\":100}]\"\n              }\n            }\n          }\n        },\n        e: {\n          length: 1,\n          val: '10.0',\n          host: 'dev01.hortonworks.com'\n        }\n      },\n      {\n        m: 'Correct JSON #2',\n        i: {\n          \"ServiceComponentInfo\" : {\n            \"rm_metrics\" : {\n              \"cluster\" : {\n                \"nodeManagers\" : \"[{\\\"HostName\\\":\\\"dev01.hortonworks.com\\\",\\\"Rack\\\":\\\"/default-rack\\\",\\\"State\\\":\\\"RUNNING\\\",\\\"NodeId\\\":\\\"dev01.hortonworks.com:45454\\\",\\\"NodeHTTPAddress\\\":\\\"dev01.hortonworks.com:8042\\\",\\\"LastHealthUpdate\\\":1375869232870,\\\"HealthReport\\\":\\\"\\\",\\\"NumContainers\\\":0,\\\"UsedMemoryMB\\\":0,\\\"AvailableMemoryMB\\\":100}]\"\n              }\n            }\n          }\n        },\n        e: {\n          length: 1,\n          val: '0.0',\n          host: 'dev01.hortonworks.com'\n        }\n      },\n      {\n        m: 'JSON without \"cluster\"',\n        i: {\n          \"ServiceComponentInfo\" : {\n            \"rm_metrics\" : {\n            }\n          }\n        },\n        e: {\n          length: 0,\n          val: null,\n          host: null\n        }\n      },\n      {\n        m: 'JSON without \"nodeManagers\"',\n        i: {\n          \"ServiceComponentInfo\" : {\n            \"rm_metrics\" : {\n              \"cluster\" : {\n              }\n            }\n          }\n        },\n        e: {\n          length: 0,\n          val: null,\n          host: null\n        }\n      },\n      {\n        m: 'Correct JSON #3 (with two nodeManagers)',\n        i: {\n          \"ServiceComponentInfo\" : {\n            \"rm_metrics\" : {\n              \"cluster\" : {\n                \"nodeManagers\" : \"[{\\\"HostName\\\":\\\"dev01.hortonworks.com\\\",\\\"Rack\\\":\\\"/default-rack\\\",\\\"State\\\":\\\"RUNNING\\\",\\\"NodeId\\\":\\\"dev01.hortonworks.com:45454\\\",\\\"NodeHTTPAddress\\\":\\\"dev01.hortonworks.com:8042\\\",\\\"LastHealthUpdate\\\":1375869232870,\\\"HealthReport\\\":\\\"\\\",\\\"NumContainers\\\":0,\\\"UsedMemoryMB\\\":0,\\\"AvailableMemoryMB\\\":100}, {\\\"HostName\\\":\\\"dev02.hortonworks.com\\\",\\\"Rack\\\":\\\"/default-rack\\\",\\\"State\\\":\\\"RUNNING\\\",\\\"NodeId\\\":\\\"dev02.hortonworks.com:45454\\\",\\\"NodeHTTPAddress\\\":\\\"dev01.hortonworks.com:8042\\\",\\\"LastHealthUpdate\\\":1375869232870,\\\"HealthReport\\\":\\\"\\\",\\\"NumContainers\\\":0,\\\"UsedMemoryMB\\\":100,\\\"AvailableMemoryMB\\\":100}]\"\n              }\n            }\n          }\n        },\n        e: {\n          length: 2,\n          val: '100.0',\n          host: 'dev02.hortonworks.com'\n        }\n      }\n    ];\n    tests.forEach(function(test) {\n      it(test.m, function () {\n        var result = mainChartHeatmapYarnResourceUsedMetric.metricMapper(test.i);\n        var length = 0;\n        for(var p in result) {\n          if (result.hasOwnProperty(p)) {\n            length++;\n          }\n        }\n        expect(length).to.equal(test.e.length);\n        if (test.e.host) {\n          expect(result.hasOwnProperty(test.e.host)).to.equal(true);\n          expect(result[test.e.host]).to.equal(test.e.val);\n        }\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric');\nrequire('controllers/main/charts/heatmap_metrics/heatmap_metric_yarn');\n\ndescribe('App.MainChartHeatmapYarnMetrics', function () {\n\n  var tests = [\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n                \"memHeapUsedM\" : 10\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 10},\n      m: 'One host_component'\n    },\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n                \"memHeapUsedM\" : 10\n              }\n            }\n          },\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n                \"memHeapUsedM\" : 20\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 10, 'dev02.hortonworks.com': 20},\n      m: 'Two host_components'\n    },\n    {\n      json: {\n        \"host_components\" : [\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev01.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n                \"memHeapUsedM\" : 10\n              }\n            }\n          },\n          {\n            \"HostRoles\" : {\n              \"host_name\" : \"dev02.hortonworks.com\"\n            },\n            \"metrics\" : {\n              \"jvm\" : {\n\n              }\n            }\n          }\n        ]\n      },\n      result: {'dev01.hortonworks.com': 10},\n      m: 'Two host_components, one without metric'\n    }\n  ];\n\n  describe('#metricMapper()', function() {\n    var mainChartHeatmapYarnMetrics = App.MainChartHeatmapYarnMetrics.create();\n    mainChartHeatmapYarnMetrics.set('defaultMetric', 'metrics.jvm.memHeapUsedM');\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var r = mainChartHeatmapYarnMetrics.metricMapper(test.json);\n        expect(r).to.eql(test.result);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('models/rack');\nrequire('controllers/main/charts/heatmap');\n\ndescribe('MainChartsHeatmapController', function () {\n\n  describe('#validation()', function () {\n    var controller = App.MainChartsHeatmapController.create({\n      allMetrics: [],\n      selectedMetric: Ember.Object.create({maximumValue: 100})\n    });\n    it('should set maximumValue if inputMaximum consists only of digits', function () {\n      controller.set(\"inputMaximum\", 5);\n      expect(controller.get('selectedMetric.maximumValue')).to.equal(5);\n    });\n    it('should not set maximumValue if inputMaximum consists not only of digits', function () {\n      controller.set(\"inputMaximum\", 'qwerty');\n      expect(controller.get('selectedMetric.maximumValue')).to.equal(5);\n    });\n    it('should not set maximumValue if inputMaximum consists not only of digits', function () {\n      controller.set(\"inputMaximum\", '100%');\n      expect(controller.get('selectedMetric.maximumValue')).to.equal(5);\n    });\n    it('should set maximumValue if inputMaximum consists only of digits', function () {\n      controller.set(\"inputMaximum\", 1000);\n      expect(controller.get('selectedMetric.maximumValue')).to.equal(1000);\n    })\n  });\n\n  describe('#showHeatMapMetric()', function () {\n    var controller = App.MainChartsHeatmapController.create({\n      allMetrics: [],\n      selectedMetric: Ember.Object.create({maximumValue: 100}),\n      loadMetrics: function () {\n      }\n    });\n    controller.set(\"selectedMetric\", 100);\n    it('should not set selectedMetric event.context if it is not defined', function () {\n      controller.showHeatMapMetric({});\n      expect(controller.get('selectedMetric')).to.equal(100);\n    });\n    it('should set selectedMetric event.context if it is defined', function () {\n      controller.showHeatMapMetric({context: 5});\n      expect(controller.get('selectedMetric')).to.equal(5);\n    });\n  });\n\n  describe('#loadMetrics()', function () {\n    var controller = App.MainChartsHeatmapController.create({\n      testPassed: false,\n      allMetrics: [],\n      inputMaximum: 10\n    });\n    controller.set('selectedMetric', Ember.Object.create({\n      maximumValue: 100,\n      refreshHostSlots: function () {\n        controller.set('testPassed', true);\n      }\n    }));\n    controller.loadMetrics();\n    it('should set inputMaximum as selectedMetric.maximumValue', function () {\n      expect(controller.get('inputMaximum')).to.equal(100);\n    });\n    it('should call refreshHostSlots from selectedMetric', function () {\n      expect(controller.get('testPassed')).to.equal(true);\n    });\n  });\n\n  describe('#rackClass', function () {\n    var controller = App.MainChartsHeatmapController.create({\n      allMetrics: [],\n      racks: [1]\n    });\n    it('should return \"span12\" for 1 cluster rack', function () {\n      expect(controller.get('rackClass')).to.equal('span12');\n    });\n    it('should return \"span6\" for 2 cluster racks', function () {\n      controller.set('racks', [1, 2]);\n      expect(controller.get('rackClass')).to.equal('span6');\n    });\n    it('should return \"span4\" for 3 cluster racks', function () {\n      controller.set('racks', [1, 2, 3]);\n      expect(controller.get('rackClass')).to.equal('span4');\n    });\n  });\n});\n\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\nvar App = require('app');\n\nrequire('models/alert'); \nApp.Alert.FIXTURES = [{ status: 'ok' }, { status: 'corrupt' }, { status: 'corrupt',}];\nrequire('controllers/main/dashboard');\n \ndescribe('MainDashboard', function () {\n \n  var controller = App.MainDashboardController.create();\n  \n  describe('#alertsCount', function () {\n    it('should return 2 if 2 alerts has status corrupt', function () {\n        expect(controller.get('alertsCount')).to.equal(2);\n    })\n  })\n})\n*/","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/wizard');\nrequire('controllers/main/host/add_controller');\nrequire('models/host_component');\nrequire('models/service');\nrequire('mappers/server_data_mapper');\n\ndescribe('App.AddHostController', function () {\n\n  var controller = App.AddHostController.create({\n    testDBHosts: null,\n    getDBProperty: function () {\n      return this.get('testDBHosts');\n    },\n    setDBProperty: function () {\n    },\n    loadClients: function () {\n    }\n  });\n\n  beforeEach(function () {\n    sinon.spy(controller, \"setDBProperty\");\n  });\n  afterEach(function () {\n    controller.setDBProperty.restore();\n  });\n\n  describe('#removeHosts()', function () {\n    var testCases = [\n      {\n        title: 'No hosts, db is empty',\n        content: {\n          hosts: [],\n          dbHosts: {}\n        },\n        result: {}\n      },\n      {\n        title: 'Host is passed, db is empty',\n        content: {\n          hosts: [\n            {hostName: 'host1'}\n          ],\n          dbHosts: {}\n        },\n        result: {}\n      },\n      {\n        title: 'Passed host different from hosts in db',\n        content: {\n          hosts: [\n            {hostName: 'host1'}\n          ],\n          dbHosts: {\n            'host2': {}\n          }\n        },\n        result: {\n          'host2': {}\n        }\n      },\n      {\n        title: 'Passed host match host in db',\n        content: {\n          hosts: [\n            {hostName: 'host1'}\n          ],\n          dbHosts: {\n            'host1': {}\n          }\n        },\n        result: {}\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('testDBHosts', test.content.dbHosts);\n        controller.removeHosts(test.content.hosts);\n        expect(controller.setDBProperty.calledWith('hosts', test.result)).to.be.true;\n      });\n    });\n  });\n\n  describe('#saveClients()', function () {\n\n    var modelSetup = require('test/init_model_test');\n    var testCases = [\n      {\n        title: 'No services',\n        services: [],\n        result: []\n      },\n      {\n        title: 'No selected services',\n        services: [\n          {isSelected: false}\n        ],\n        result: []\n      },\n      {\n        title: 'Service is not in stack',\n        services: [\n          {\n            serviceName: 'TEST',\n            isSelected: true\n          }\n        ],\n        result: []\n      },\n      {\n        title: 'Service does not have any clients',\n        services: [\n          {\n            serviceName: 'GANGLIA',\n            isSelected: true\n          }\n        ],\n        result: []\n      },\n      {\n        title: 'StackServiceComponent is empty',\n        services: [\n          {\n            serviceName: 'HDFS',\n            isSelected: true\n          }\n        ],\n        result: []\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('content.services', test.services);\n        controller.saveClients();\n        expect(controller.setDBProperty.calledWith('clientInfo', test.result)).to.be.true;\n        expect(controller.get('content.clients')).to.be.empty;\n      });\n    });\n\n    it('HDFS has uninstalled client', function () {\n      modelSetup.setupStackServiceComponent();\n      var services = [\n        {\n          serviceName: 'HDFS',\n          isSelected: true\n        }\n      ];\n      controller.set('content.services', services);\n      controller.saveClients();\n      expect(controller.get('content.clients')).to.eql([\n        {\n          component_name: 'HDFS_CLIENT',\n          display_name: 'HDFS Client',\n          isInstalled: false\n        }\n      ]);\n      expect(controller.setDBProperty.calledWith('clientInfo', [\n        {\n          component_name: 'HDFS_CLIENT',\n          display_name: 'HDFS Client',\n          isInstalled: false\n        }\n      ])).to.be.true;\n      modelSetup.cleanStackServiceComponent();\n    });\n    it('HDFS has installed client', function () {\n      modelSetup.setupStackServiceComponent();\n      var services = [\n        {\n          serviceName: 'HDFS',\n          isSelected: true\n        }\n      ];\n      App.store.load(App.HostComponent, {\n        id: 'HDFS_CLIENT_host1',\n        component_name: \"HDFS_CLIENT\"\n      });\n      controller.set('content.services', services);\n      controller.saveClients();\n      expect(controller.get('content.clients')).to.eql([\n        {\n          component_name: 'HDFS_CLIENT',\n          display_name: 'HDFS Client',\n          isInstalled: true\n        }\n      ]);\n      expect(controller.setDBProperty.calledWith('clientInfo', [\n        {\n          component_name: 'HDFS_CLIENT',\n          display_name: 'HDFS Client',\n          isInstalled: true\n        }\n      ])).to.be.true;\n      modelSetup.cleanStackServiceComponent();\n    });\n  });\n\n  describe('#applyConfigGroup()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.ajax, \"send\");\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('No config groups', function () {\n      controller.set('content.serviceConfigGroups', []);\n      controller.applyConfigGroup();\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('Selected group has no groups', function () {\n      var serviceConfigGroups = [\n        {\n          configGroups: [],\n          selectedConfigGroup: ''\n        }\n      ];\n      controller.set('content.serviceConfigGroups', serviceConfigGroups);\n      controller.applyConfigGroup();\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('Selected group does not match groups', function () {\n      var serviceConfigGroups = [\n        {\n          configGroups: [\n            {\n              ConfigGroup: {\n                group_name: 'group1'\n              }\n            }\n          ],\n          selectedConfigGroup: 'group2'\n        }\n      ];\n      controller.set('content.serviceConfigGroups', serviceConfigGroups);\n      controller.applyConfigGroup();\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('Selected group has zero hosts', function () {\n      var serviceConfigGroups = [\n        {\n          configGroups: [\n            {\n              ConfigGroup: {\n                group_name: 'group1',\n                hosts: []\n              },\n              href: 'href'\n            }\n          ],\n          hosts: [],\n          selectedConfigGroup: 'group1'\n        }\n      ];\n      controller.set('content.serviceConfigGroups', serviceConfigGroups);\n      controller.applyConfigGroup();\n      expect(serviceConfigGroups[0].configGroups[0].ConfigGroup.hosts).to.be.empty;\n      expect(serviceConfigGroups[0].configGroups[0].href).to.be.undefined;\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n    it('Selected group has host', function () {\n      var serviceConfigGroups = [\n        {\n          configGroups: [\n            {\n              ConfigGroup: {\n                group_name: 'group1',\n                hosts: []\n              },\n              href: 'href'\n            }\n          ],\n          hosts: ['host1'],\n          selectedConfigGroup: 'group1'\n        }\n      ];\n      controller.set('content.serviceConfigGroups', serviceConfigGroups);\n      controller.applyConfigGroup();\n      expect(serviceConfigGroups[0].configGroups[0].ConfigGroup.hosts).to.eql([\n        {host_name: 'host1'}\n      ]);\n      expect(serviceConfigGroups[0].configGroups[0].href).to.be.undefined;\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#sortServiceConfigGroups()', function () {\n    var testCases = [\n      {\n        title: 'No selected services',\n        selectedServices: [\n          {configGroups: []}\n        ],\n        result: [\n          {configGroups: []}\n        ]\n      },\n      {\n        title: 'Only one group is present',\n        selectedServices: [\n          {configGroups: [\n            {configGroups: {group_name: 'b'}}\n          ]}\n        ],\n        result: [\n          {configGroups: [\n            {configGroups: {group_name: 'b'}}\n          ]}\n        ]\n      },\n      {\n        title: 'Reverse order of groups',\n        selectedServices: [\n          {configGroups: [\n            {ConfigGroup: {group_name: 'b2'}},\n            {ConfigGroup: {group_name: 'a1'}}\n          ]}\n        ],\n        result: [\n          {configGroups: [\n            {ConfigGroup: {group_name: 'a1'}},\n            {ConfigGroup: {group_name: 'b2'}}\n          ]}\n        ]\n      },\n      {\n        title: 'Correct order of groups',\n        selectedServices: [\n          {configGroups: [\n            {ConfigGroup: {group_name: 'a1'}},\n            {ConfigGroup: {group_name: 'b2'}}\n          ]}\n        ],\n        result: [\n          {configGroups: [\n            {ConfigGroup: {group_name: 'a1'}},\n            {ConfigGroup: {group_name: 'b2'}}\n          ]}\n        ]\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.sortServiceConfigGroups(test.selectedServices);\n        expect(test.selectedServices).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#loadServiceConfigGroupsBySlaves()', function () {\n    var testCases = [\n      {\n        title: 'slaveComponentHosts is null',\n        slaveComponentHosts: null,\n        result: {\n          output: false,\n          selectedServices: []\n        }\n      },\n      {\n        title: 'slaveComponentHosts is empty',\n        slaveComponentHosts: [],\n        result: {\n          output: false,\n          selectedServices: []\n        }\n      },\n      {\n        title: 'Component does not have hosts',\n        slaveComponentHosts: [\n          {hosts: []}\n        ],\n        result: {\n          output: true,\n          selectedServices: []\n        }\n      },\n      {\n        title: 'Only client component is present',\n        slaveComponentHosts: [\n          {\n            hosts: [\n              {hostName: 'host1'}\n            ],\n            componentName: 'CLIENT'\n          }\n        ],\n        result: {\n          output: true,\n          selectedServices: []\n        }\n      },\n      {\n        title: 'Slave component is present',\n        slaveComponentHosts: [\n          {\n            hosts: [\n              {hostName: 'host1'}\n            ],\n            componentName: 'DATANODE'\n          }\n        ],\n        result: {\n          output: true,\n          selectedServices: [\n            {\n              serviceId: 'HDFS',\n              displayName: 'HDFS',\n              hosts: ['host1'],\n              configGroupsNames: ['HDFS Default', 'HDFS test'],\n              configGroups: [\n                {\n                  ConfigGroup: {\n                    tag: 'HDFS',\n                    group_name: 'HDFS test'\n                  }\n                }\n              ],\n              selectedConfigGroup: 'HDFS Default'\n            }\n          ]\n        }\n      }\n    ];\n\n    controller.set('content.configGroups', [\n      {\n        ConfigGroup: {\n          tag: 'HDFS',\n          group_name: 'HDFS test'\n        }\n      }\n    ]);\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        var selectedServices = [];\n        controller.set('content.slaveComponentHosts', test.slaveComponentHosts);\n        expect(controller.loadServiceConfigGroupsBySlaves(selectedServices)).to.equal(test.result.output);\n        expect(selectedServices).to.eql(test.result.selectedServices);\n      });\n    });\n  });\n\n  describe('#loadServiceConfigGroupsByClients()', function () {\n    var testCases = [\n      {\n        title: 'slaveComponentHosts is null',\n        content: {\n          slaveComponentHosts: null,\n          clients: [],\n          selectedServices: []\n        },\n        result: {\n          output: false,\n          selectedServices: []\n        }\n      },\n      {\n        title: 'slaveComponentHosts is empty',\n        content: {\n          slaveComponentHosts: [],\n          clients: [],\n          selectedServices: []\n        },\n        result: {\n          output: false,\n          selectedServices: []\n        }\n      },\n      {\n        title: 'Client does not have hosts',\n        content: {\n          slaveComponentHosts: [\n            {\n              componentName: 'CLIENT',\n              hosts: []\n            }\n          ],\n          clients: [],\n          selectedServices: []\n        },\n        result: {\n          output: false,\n          selectedServices: []\n        }\n      },\n      {\n        title: 'Client has hosts, but clients is empty',\n        content: {\n          slaveComponentHosts: [\n            {\n              componentName: 'CLIENT',\n              hosts: [\n                {hostName: 'host1'}\n              ]\n            }\n          ],\n          clients: [],\n          selectedServices: []\n        },\n        result: {\n          output: false,\n          selectedServices: []\n        }\n      },\n      {\n        title: 'Client is present',\n        content: {\n          slaveComponentHosts: [\n            {\n              componentName: 'CLIENT',\n              hosts: [\n                {hostName: 'host1'}\n              ]\n            }\n          ],\n          clients: [\n            {\n              component_name: 'HDFS_CLIENT'\n            }\n          ],\n          selectedServices: []\n        },\n        result: {\n          output: true,\n          selectedServices: [\n            {\n              serviceId: 'HDFS',\n              displayName: 'HDFS',\n              hosts: ['host1'],\n              configGroupsNames: ['HDFS Default', 'HDFS test'],\n              configGroups: [\n                {\n                  ConfigGroup: {\n                    tag: 'HDFS',\n                    group_name: 'HDFS test'\n                  }\n                }\n              ],\n              selectedConfigGroup: 'HDFS Default'\n            }\n          ]\n        }\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('content.slaveComponentHosts', test.content.slaveComponentHosts);\n        controller.set('content.clients', test.content.clients);\n        expect(controller.loadServiceConfigGroupsByClients(test.content.selectedServices)).to.equal(test.result.output);\n        expect(test.content.selectedServices).to.eql(test.result.selectedServices);\n      });\n    });\n  });\n\n  describe('#installServices()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.ajax, \"send\");\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('No hosts', function () {\n      controller.set('content.cluster', {name: 'cl'});\n      controller.set('testDBHosts', {});\n      expect(controller.installServices()).to.be.false;\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('Cluster name is empty', function () {\n      controller.set('content.cluster', {name: ''});\n      controller.set('testDBHosts', {'host1': {}});\n      expect(controller.installServices()).to.be.false;\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('Cluster name is correct and hosts are present', function () {\n      controller.set('content.cluster', {name: 'cl'});\n      controller.set('testDBHosts', {'host1': {}});\n      expect(controller.installServices()).to.be.true;\n      expect(App.ajax.send.called).to.be.true;\n    });\n    it('Cluster name is correct and hosts are present, isRetry = true', function () {\n      controller.set('content.cluster', {name: 'cl'});\n      controller.set('testDBHosts', {'host1': {}});\n      expect(controller.installServices(true)).to.be.true;\n      expect(App.ajax.send.called).to.be.true;\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/host/configs_service');\n\n\ndescribe('App.MainHostServiceConfigsController', function () {\n\n  var controller = App.MainHostServiceConfigsController.create({\n    host: Em.Object.create()\n  });\n\n\n  describe('#filterServiceConfigs()', function () {\n    var testCases = [\n      {\n        title: 'configCategories is empty',\n        content: {\n          configCategories: [],\n          hostComponents: []\n        },\n        result: []\n      },\n      {\n        title: 'Category hostComponentNames is null',\n        content: {\n          configCategories: [\n            Em.Object.create({hostComponentNames: null})\n          ],\n          hostComponents: []\n        },\n        result: [\n          Em.Object.create({hostComponentNames: null})\n        ]\n      },\n      {\n        title: 'Components of host are empty',\n        content: {\n          configCategories: [\n            Em.Object.create({hostComponentNames: ['comp1']})\n          ],\n          hostComponents: []\n        },\n        result: []\n      },\n      {\n        title: 'Host components do not match component of categories',\n        content: {\n          configCategories: [\n            Em.Object.create({hostComponentNames: ['comp1']})\n          ],\n          hostComponents: [\n            {\n              componentName: 'comp2'\n            }\n          ]\n        },\n        result: []\n      },\n      {\n        title: 'Host components match component of categories',\n        content: {\n          configCategories: [\n            Em.Object.create({hostComponentNames: ['comp1']})\n          ],\n          hostComponents: [\n            {\n              componentName: 'comp1'\n            }\n          ]\n        },\n        result: [\n          Em.Object.create({hostComponentNames: ['comp1']})\n        ]\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('host.hostComponents', test.content.hostComponents);\n        expect(controller.filterServiceConfigs(test.content.configCategories)).to.eql(test.result);\n      });\n    });\n  });\n\n  describe('#constructUrlParams()', function () {\n    it('loadedGroupToOverrideSiteToTagMap is empty', function () {\n      var loadedGroupToOverrideSiteToTagMap = {};\n      var configGroups = [];\n      expect(controller.constructUrlParams(loadedGroupToOverrideSiteToTagMap, configGroups)).to.eql([]);\n      expect(controller.get('typeTagToGroupMap')).to.eql({});\n    });\n    it('Group does not have hosts', function () {\n      var loadedGroupToOverrideSiteToTagMap = {'group1': {}};\n      var configGroups = [\n        Em.Object.create({\n          name: 'group1',\n          hosts: []\n        })\n      ];\n      expect(controller.constructUrlParams(loadedGroupToOverrideSiteToTagMap, configGroups)).to.eql([]);\n      expect(controller.get('typeTagToGroupMap')).to.eql({});\n    });\n    it('Group does not contain current host', function () {\n      controller.set('host.hostName', 'host2');\n      var loadedGroupToOverrideSiteToTagMap = {'group1': {}};\n      var configGroups = [\n        Em.Object.create({\n          name: 'group1',\n          hosts: ['host1']\n        })\n      ];\n      expect(controller.constructUrlParams(loadedGroupToOverrideSiteToTagMap, configGroups)).to.eql([]);\n      expect(controller.get('typeTagToGroupMap')).to.eql({});\n    });\n    it('No type to tags relations in group', function () {\n      var loadedGroupToOverrideSiteToTagMap = {'group1': {}};\n      var configGroups = [\n        Em.Object.create({\n          name: 'group1',\n          hosts: ['host2']\n        })\n      ];\n      expect(controller.constructUrlParams(loadedGroupToOverrideSiteToTagMap, configGroups)).to.eql([]);\n      expect(controller.get('typeTagToGroupMap')).to.eql({});\n    });\n    it('Input params are correct', function () {\n      var loadedGroupToOverrideSiteToTagMap = {\n        'group1': {\n          'type1': 'tag1'\n        }\n      };\n      var configGroups = [\n        Em.Object.create({\n          name: 'group1',\n          hosts: ['host2']\n        })\n      ];\n      expect(controller.constructUrlParams(loadedGroupToOverrideSiteToTagMap, configGroups)).to.eql(['(type=type1&tag=tag1)']);\n      expect(controller.get('typeTagToGroupMap')['type1///tag1'].get('name')).to.equal('group1');\n    });\n  });\n\n  describe('#loadServiceConfigHostsOverrides()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"constructUrlParams\", function(){\n        return controller.get('testUrlParams');\n      });\n      sinon.spy(App.ajax, \"send\");\n    });\n    afterEach(function () {\n      controller.constructUrlParams.restore();\n      App.ajax.send.restore();\n    });\n\n    it('configKeyToConfigMap and urlParams are empty', function () {\n      var serviceConfigs = [];\n      controller.set('testUrlParams', []);\n      controller.loadServiceConfigHostsOverrides(serviceConfigs);\n      expect(controller.get('configKeyToConfigMap')).to.eql({});\n      expect(App.ajax.send.called).to.be.false;\n    });\n\n    it('configKeyToConfigMap and urlParams are correct', function () {\n      var serviceConfigs = [{\n        name: 'config1'\n      }];\n      controller.set('testUrlParams', ['params']);\n      controller.loadServiceConfigHostsOverrides(serviceConfigs);\n      expect(controller.get('configKeyToConfigMap')).to.eql({'config1': {\n        name: 'config1'\n      }});\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#loadServiceConfigHostsOverridesSuccessCallback()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.config, \"handleSpecialProperties\");\n    });\n    afterEach(function () {\n      App.config.handleSpecialProperties.restore();\n    });\n    it('data.items is empty', function () {\n      var data = {\n        items: [\n          {\n            type: 'type1',\n            tag: 'tag1',\n            properties: {'prop1': 'value1'}\n          }\n        ]\n      };\n      controller.set('typeTagToGroupMap', {'type1///tag1': {}});\n      controller.set('configKeyToConfigMap', {'prop1': {}});\n      controller.loadServiceConfigHostsOverridesSuccessCallback(data);\n      expect(App.config.handleSpecialProperties.calledWith({\n        value: 'value1',\n        isOriginalSCP: false,\n        group: {}\n      })).to.be.true;\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/host/details');\nrequire('models/service');\nrequire('models/host_component');\nvar batchUtils = require('utils/batch_scheduled_requests');\n\n\ndescribe('App.MainHostDetailsController', function () {\n\n  var controller = App.MainHostDetailsController.create({\n    getSecurityStatus: function () {\n      return this.get('mockSecurityStatus');\n    },\n    mockSecurityStatus: false\n  });\n\n  describe('#serviceActiveComponents', function () {\n\n    it('No host-components', function () {\n      controller.set('content.hostComponents', []);\n      expect(controller.get('serviceActiveComponents')).to.be.empty;\n    });\n\n    it('No host-components in active state', function () {\n      controller.set('content.hostComponents', [Em.Object.create({\n        service: {\n          isInPassive: true\n        }\n      })]);\n      expect(controller.get('serviceActiveComponents')).to.be.empty;\n    });\n    it('Host-components in active state', function () {\n      controller.set('content.hostComponents', [Em.Object.create({\n        service: {\n          isInPassive: false\n        }\n      })]);\n      expect(controller.get('serviceActiveComponents')).to.eql([Em.Object.create({\n        service: {\n          isInPassive: false\n        }\n      })]);\n    });\n  });\n\n  describe('#serviceNonClientActiveComponents', function () {\n\n    it('No active host-components', function () {\n      controller.reopen({\n        serviceActiveComponents: []\n      });\n      controller.set('serviceActiveComponents', []);\n      expect(controller.get('serviceNonClientActiveComponents')).to.be.empty;\n    });\n\n    it('Active host-component is client', function () {\n      controller.set('serviceActiveComponents', [Em.Object.create({\n        isClient: true\n      })]);\n      expect(controller.get('serviceNonClientActiveComponents')).to.be.empty;\n    });\n    it('Active host-component is not client', function () {\n      controller.set('serviceActiveComponents', [Em.Object.create({\n        isClient: false\n      })]);\n      expect(controller.get('serviceNonClientActiveComponents')).to.eql( [Em.Object.create({\n        isClient: false\n      })]);\n    });\n  });\n\n  describe('#startComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(controller, \"sendStartComponentCommand\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.sendStartComponentCommand.restore();\n    });\n\n    it('popup should be displayed', function () {\n      var popup = controller.startComponent({context: Em.Object.create({'displayName': 'Comp1'})});\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.sendStartComponentCommand.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#sendStartComponentCommand()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      var component = Em.Object.create({\n        componentName: 'comp1'\n      });\n      controller.sendStartComponentCommand(component, '');\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#getDataToSend()', function () {\n    var component = Em.Object.create({\n      componentName: 'comp1',\n      host: {\n        hostName: 'host1'\n      },\n      service: {\n        serviceName: 'serv1'\n      }\n    });\n    it('should return correct query info', function () {\n      controller.set(\"content.hostName\", \"host1\");\n      expect(controller.getDataToSend('STATE1', 'context', component)).to.deep.eql({\n        RequestInfo: {\n          \"context\": 'context',\n          \"operation_level\": {\n            \"cluster_name\": \"tdk\",\n            \"host_name\": \"host1\",\n            \"hostcomponent_name\": \"comp1\",\n            \"service_name\": \"serv1\",\n            \"level\": \"HOST_COMPONENT\"\n          }\n        },\n        Body: {\n          HostRoles: {\n            state: 'STATE1'\n          }\n        }\n      });\n      expect(controller.getDataToSend('STATE1', 'context', [component])).to.deep.eql({\n        RequestInfo: {\n          \"context\": 'context',\n          \"operation_level\": {\n            \"cluster_name\": \"tdk\",\n            \"host_name\": \"host1\",\n            \"level\": \"HOST\"\n          }\n        },\n        Body: {\n          HostRoles: {\n            state: 'STATE1'\n          }\n        }\n      });\n    });\n  });\n\n  describe('#setComponentToData()', function () {\n    var testCases = [\n      {\n        title: 'dataToSend is null',\n        content: {\n          data: {},\n          dataToSend: null,\n          component: {}\n        },\n        result: {\n          output: false,\n          data: {}\n        }\n      },\n      {\n        title: 'component is null',\n        content: {\n          data: {},\n          dataToSend: {},\n          component: null\n        },\n        result: {\n          output: false,\n          data: {}\n        }\n      },\n      {\n        title: 'data is null',\n        content: {\n          data: null,\n          dataToSend: {},\n          component: {}\n        },\n        result: {\n          output: false,\n          data: null\n        }\n      },\n      {\n        title: 'component is object',\n        content: {\n          data: {},\n          dataToSend: {},\n          component: Em.Object.create({componentName: 'comp1'})\n        },\n        result: {\n          output: true,\n          data: {\n            componentName: 'comp1',\n            data: '{}'\n          }\n        }\n      },\n      {\n        title: 'component is array',\n        content: {\n          data: {},\n          dataToSend: {RequestInfo: {}},\n          component: [Em.Object.create({componentName: 'comp1'})]\n        },\n        result: {\n          output: true,\n          data: {\n            data: '{\\\"RequestInfo\\\":{\\\"query\\\":\\\"HostRoles/component_name.in(comp1)\\\"}}'\n          }\n        }\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.setComponentToData(test.content.data, test.content.dataToSend, test.content.component)).to.equal(test.result.output);\n        expect(test.content.data).to.eql(test.result.data);\n      });\n    });\n  });\n\n  describe('#deleteComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.ModalPopup, \"show\");\n    });\n    afterEach(function () {\n      App.ModalPopup.show.restore();\n    });\n\n    it('confirm popup should be displayed', function () {\n      var event = {\n        context: Em.Object.create({})\n      };\n      controller.deleteComponent(event);\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#_doDeleteHostComponent()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('delete request should be sent, component is null', function () {\n      controller.set('_deletedHostComponentResult', null);\n      expect(controller._doDeleteHostComponent()).to.equal(null);\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n    it('delete request should be sent, component is correct', function () {\n      controller.set('_deletedHostComponentResult', {});\n      expect(controller._doDeleteHostComponent(Em.Object.create({componentName: 'COMP1'}))).to.eql({});\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#mimicWorkStatusChange()', function () {\n\n    var clock;\n    beforeEach(function () {\n      clock = sinon.useFakeTimers();\n    });\n    afterEach(function () {\n      clock.restore()\n    });\n\n    it('change status of object', function () {\n      var entity = Em.Object.create({\n        workStatus: ''\n      });\n      controller.mimicWorkStatusChange(entity, 'STATE1', 'STATE2');\n      expect(entity.get('workStatus')).to.equal('STATE1');\n      clock.tick(App.testModeDelayForActions);\n      expect(entity.get('workStatus')).to.equal('STATE2');\n    });\n    it('change status of objects in array', function () {\n      var entity = [Em.Object.create({\n        workStatus: ''\n      })];\n      controller.mimicWorkStatusChange(entity, 'STATE1', 'STATE2');\n      expect(entity[0].get('workStatus')).to.equal('STATE1');\n      clock.tick(App.testModeDelayForActions);\n      expect(entity[0].get('workStatus')).to.equal('STATE2');\n    });\n  });\n\n  describe('#upgradeComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      App.ajax.send.restore();\n    });\n\n    it('confirm popup should be displayed', function () {\n      var popup = controller.upgradeComponent({context: Em.Object.create()});\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#stopComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(controller, \"sendStopComponentCommand\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.sendStopComponentCommand.restore();\n    });\n\n    it('popup should be displayed', function () {\n      var popup = controller.stopComponent({context: Em.Object.create({'displayName': 'Comp1'})});\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.sendStopComponentCommand.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#sendStopComponentCommand()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      var component = Em.Object.create({\n        componentName: 'comp1'\n      });\n      controller.sendStopComponentCommand(component, '');\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#restartComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(batchUtils, \"restartHostComponents\", Em.K);\n    });\n\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      batchUtils.restartHostComponents.restore();\n    });\n\n    it('popup should be displayed', function () {\n      var popup = controller.restartComponent({context: Em.Object.create({'displayName': 'Comp1'})});\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(batchUtils.restartHostComponents.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#addComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(controller, \"addClientComponent\", Em.K);\n      sinon.stub(controller, \"primary\", Em.K);\n    });\n\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.addClientComponent.restore();\n      controller.primary.restore();\n    });\n\n    it('add ZOOKEEPER_SERVER', function () {\n      var event = {context: Em.Object.create({\n        componentName: 'ZOOKEEPER_SERVER'\n      })};\n      var popup = controller.addComponent(event);\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.primary.calledWith(Em.Object.create({\n        componentName: 'ZOOKEEPER_SERVER'\n      }))).to.be.true;\n    });\n    it('add slave component, securityEnabled = true', function () {\n      var event = {context: Em.Object.create({\n        componentName: 'COMP1'\n      })};\n      controller.set('mockSecurityStatus', true);\n      var popup = controller.addComponent(event);\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.primary.calledWith(Em.Object.create({\n        componentName: 'COMP1'\n      }))).to.be.true;\n    });\n    it('add slave component, securityEnabled = false', function () {\n      var event = {context: Em.Object.create({\n        componentName: 'COMP1'\n      })};\n      controller.set('mockSecurityStatus', false);\n      controller.addComponent(event);\n      expect(controller.addClientComponent.calledWith(Em.Object.create({\n        componentName: 'COMP1'\n      }))).to.be.true;\n    });\n    it('add CLIENTS', function () {\n      var event = {context: Em.Object.create({\n        componentName: 'CLIENTS'\n      })};\n      controller.set('mockSecurityStatus', true);\n      controller.addComponent(event);\n      expect(controller.addClientComponent.calledWith(Em.Object.create({\n        componentName: 'CLIENTS'\n      }))).to.be.true;\n    });\n  });\n\n  describe('#formatClientsMessage()', function () {\n    var testCases = [\n      {\n        title: 'subComponentNames is null',\n        client: Em.Object.create({\n          subComponentNames: null,\n          displayName: 'CLIENTS'\n        }),\n        result: 'CLIENTS'\n      },\n      {\n        title: 'subComponentNames is empty',\n        client: Em.Object.create({\n          subComponentNames: [],\n          displayName: 'CLIENTS'\n        }),\n        result: 'CLIENTS'\n      },\n      {\n        title: 'displayName is null',\n        client: Em.Object.create({\n          subComponentNames: ['DATANODE'],\n          displayName: null\n        }),\n        result: ' (DataNode)'\n      },\n      {\n        title: 'displayName is CLIENTS',\n        client: Em.Object.create({\n          subComponentNames: ['DATANODE'],\n          displayName: 'CLIENTS'\n        }),\n        result: 'CLIENTS (DataNode)'\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        expect(controller.formatClientsMessage(test.client)).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#addClientComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.ModalPopup, \"show\");\n      sinon.stub(controller, \"primary\", Em.K);\n    });\n\n    afterEach(function () {\n      App.ModalPopup.show.restore();\n      controller.primary.restore();\n    });\n\n    it('not CLIENT component', function () {\n      var component = Em.Object.create({'componentName': 'Comp1'});\n      var popup = controller.addClientComponent(component);\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.primary.calledWith(Em.Object.create({'componentName': 'Comp1'}))).to.be.true;\n    });\n    it('CLIENT components, with empty subComponentNames', function () {\n      var component = Em.Object.create({\n        componentName: 'CLIENTS',\n        subComponentNames: []\n      });\n      var popup = controller.addClientComponent(component);\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.primary.calledOnce).to.be.false;\n    });\n    it('CLIENT components, with two sub-component', function () {\n      var component = Em.Object.create({\n        componentName: 'CLIENTS',\n        subComponentNames: ['DATANODE', 'TASKTRACKER']\n      });\n      var popup = controller.addClientComponent(component);\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.primary.calledTwice).to.be.true;\n    });\n  });\n\n  describe('#primary()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      var component = Em.Object.create({\n        componentName: 'COMP1',\n        displayName: 'comp1'\n      });\n      controller.primary(component);\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#addNewComponentSuccessCallback()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      controller.addNewComponentSuccessCallback({}, {}, {component: Em.Object.create()});\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#installNewComponentSuccessCallback()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"showBackgroundOperationsPopup\", Em.K);\n    });\n    afterEach(function () {\n      controller.showBackgroundOperationsPopup.restore();\n    });\n\n    it('data.Requests is null', function () {\n      var data = {Requests: null};\n      expect(controller.installNewComponentSuccessCallback(data, {}, {})).to.be.false;\n      expect(controller.showBackgroundOperationsPopup.called).to.be.false;\n    });\n    it('data.Requests.id is null', function () {\n      var data = {Requests: {id: null}};\n      expect(controller.installNewComponentSuccessCallback(data, {}, {})).to.be.false;\n      expect(controller.showBackgroundOperationsPopup.called).to.be.false;\n    });\n    it('data.Requests.id is correct', function () {\n      var data = {Requests: {id: 1}};\n      expect(controller.installNewComponentSuccessCallback(data, {}, {component: []})).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#refreshComponentConfigs()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(controller, \"sendRefreshComponentConfigsCommand\", Em.K);\n    });\n\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.sendRefreshComponentConfigsCommand.restore();\n    });\n\n    it('popup should be displayed', function () {\n      var popup = controller.refreshComponentConfigs({context: Em.Object.create({'displayName': 'Comp1'})});\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.sendRefreshComponentConfigsCommand.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#sendRefreshComponentConfigsCommand()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      var component = Em.Object.create({\n        service: {},\n        componentName: 'COMP1',\n        host: {}\n      });\n      controller.sendRefreshComponentConfigsCommand(component, {});\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#loadConfigs()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      controller.loadConfigs();\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#constructConfigUrlParams()', function () {\n\n    it('URL params should be empty', function () {\n      var data = {};\n      App.Service.find().clear();\n      expect(controller.constructConfigUrlParams(data)).to.eql([]);\n    });\n    it('isHaEnabled = true', function () {\n      var data = {Clusters: {desired_configs: {'core-site': {tag: 1}}}};\n      App.HostComponent.find().clear();\n      App.set('currentStackVersion', 'HDP-2.0.2');\n      expect(controller.constructConfigUrlParams(data)).to.eql(['(type=core-site&tag=1)']);\n      App.store.load(App.HostComponent, {\n        id: 'SECONDARY_NAMENODE_host1',\n        component_name: 'SECONDARY_NAMENODE'\n      });\n      App.set('currentStackVersion', 'HDP-2.0.1');\n    });\n    it('HBASE is installed', function () {\n      App.store.load(App.Service, {\n        id: 'HBASE',\n        service_name: 'HBASE'\n      });\n      var data = {Clusters: {desired_configs: {'hbase-site': {tag: 1}}}};\n      expect(controller.constructConfigUrlParams(data)).to.eql(['(type=hbase-site&tag=1)']);\n      App.Service.find().clear();\n    });\n    it('HIVE is installed', function () {\n      App.store.load(App.Service, {\n        id: 'HIVE',\n        service_name: 'HIVE'\n      });\n      var data = {Clusters: {desired_configs: {'webhcat-site': {tag: 1}}}};\n      expect(controller.constructConfigUrlParams(data)).to.eql(['(type=webhcat-site&tag=1)']);\n      App.Service.find().clear();\n    });\n    it('STORM is installed', function () {\n      App.store.load(App.Service, {\n        id: 'STORM',\n        service_name: 'STORM'\n      });\n      var data = {Clusters: {desired_configs: {'storm-site': {tag: 1}}}};\n      expect(controller.constructConfigUrlParams(data)).to.eql(['(type=storm-site&tag=1)']);\n      App.Service.find().clear();\n    });\n  });\n\n  describe('#loadConfigsSuccessCallback()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n      sinon.stub(controller, \"constructConfigUrlParams\", function () {\n        return this.get('mockUrlParams');\n      });\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n      controller.constructConfigUrlParams.restore();\n    });\n\n    it('url params is empty', function () {\n      controller.set('mockUrlParams', []);\n      expect(controller.loadConfigsSuccessCallback()).to.be.false;\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('url params are correct', function () {\n      controller.set('mockUrlParams', ['param1']);\n      expect(controller.loadConfigsSuccessCallback()).to.be.true;\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#saveZkConfigs()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"getZkServerHosts\", Em.K);\n      sinon.stub(controller, \"concatZkNames\", Em.K);\n      sinon.stub(controller, \"setZKConfigs\", Em.K);\n      sinon.spy(App.ajax, \"send\");\n    });\n    afterEach(function () {\n      controller.getZkServerHosts.restore();\n      controller.concatZkNames.restore();\n      controller.setZKConfigs.restore();\n      App.ajax.send.restore();\n    });\n\n    it('data.items is empty', function () {\n      var data = {items: []};\n      controller.saveZkConfigs(data);\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('data.items has one item', function () {\n      var data = {items: [\n        {\n          type: 'type1',\n          properties: {}\n        }\n      ]};\n      controller.saveZkConfigs(data);\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n    it('data.items has two items', function () {\n      var data = {items: [\n        {\n          type: 'type1',\n          properties: {}\n        },\n        {\n          type: 'type2',\n          properties: {}\n        }\n      ]};\n      controller.saveZkConfigs(data);\n      expect(App.ajax.send.calledTwice).to.be.true;\n    });\n  });\n\n  describe('#setZKConfigs()', function () {\n\n    it('configs is null', function () {\n      expect(controller.setZKConfigs(null)).to.be.false;\n    });\n    it('zks is null', function () {\n      expect(controller.setZKConfigs({}, '', null)).to.be.false;\n    });\n    it('isHaEnabled = true', function () {\n      var configs = {'core-site': {}};\n      App.HostComponent.find().clear();\n      App.set('currentStackVersion', 'HDP-2.0.2');\n      expect(controller.setZKConfigs(configs, 'host1:2181', [])).to.be.true;\n      expect(configs).to.eql({\"core-site\": {\n        \"ha.zookeeper.quorum\": \"host1:2181\"\n      }});\n      App.store.load(App.HostComponent, {\n        id: 'SECONDARY_NAMENODE_host1',\n        component_name: 'SECONDARY_NAMENODE'\n      });\n      App.set('currentStackVersion', 'HDP-2.0.1');\n    });\n    it('hbase-site is present', function () {\n      var configs = {'hbase-site': {}};\n      expect(controller.setZKConfigs(configs, '', ['host1', 'host2'])).to.be.true;\n      expect(configs).to.eql({\"hbase-site\": {\n        \"hbase.zookeeper.quorum\": \"host1,host2\"\n      }});\n    });\n    it('webhcat-site is present', function () {\n      var configs = {'webhcat-site': {}};\n      expect(controller.setZKConfigs(configs, 'host1:2181', [])).to.be.true;\n      expect(configs).to.eql({\"webhcat-site\": {\n        \"templeton.zookeeper.hosts\": \"host1:2181\"\n      }});\n    });\n    it('storm-site is present', function () {\n      var configs = {'storm-site': {}};\n      expect(controller.setZKConfigs(configs, '', [\"host1\", 'host2'])).to.be.true;\n      expect(configs).to.eql({\"storm-site\": {\n        \"storm.zookeeper.servers\": \"['host1','host2']\"\n      }});\n    });\n  });\n\n  describe('#concatZkNames()', function () {\n    it('No ZooKeeper hosts', function () {\n      expect(controller.concatZkNames([])).to.equal('');\n    });\n    it('One ZooKeeper host', function () {\n      expect(controller.concatZkNames(['host1'])).to.equal('host1:2181');\n    });\n    it('Two ZooKeeper hosts', function () {\n      expect(controller.concatZkNames(['host1', 'host2'])).to.equal('host1:2181,host2:2181');\n    });\n  });\n\n  describe('#getZkServerHosts()', function () {\n    controller.set('content', {});\n\n    it('No ZooKeeper hosts, fromDeleteHost = false', function () {\n      App.HostComponent.find().clear();\n      controller.set('fromDeleteHost', false);\n      expect(controller.getZkServerHosts()).to.be.empty;\n    });\n    it('No ZooKeeper hosts, fromDeleteHost = true', function () {\n      controller.set('fromDeleteHost', true);\n      expect(controller.getZkServerHosts()).to.be.empty;\n      expect(controller.get('fromDeleteHost')).to.be.false;\n    });\n    it('One ZooKeeper host, fromDeleteHost = false', function () {\n      controller.set('fromDeleteHost', false);\n      App.store.load(App.HostComponent, {\n        id: 'ZOOKEEPER_SERVER_host1',\n        component_name: 'ZOOKEEPER_SERVER',\n        host_id: 'host1'\n      });\n      expect(controller.getZkServerHosts()).to.eql(['host1']);\n    });\n    it('One ZooKeeper host match current host name, fromDeleteHost = true', function () {\n      controller.set('fromDeleteHost', true);\n      controller.set('content.hostName', 'host1');\n      expect(controller.getZkServerHosts()).to.be.empty;\n      expect(controller.get('fromDeleteHost')).to.be.false;\n    });\n    it('One ZooKeeper host does not match current host name, fromDeleteHost = true', function () {\n      controller.set('fromDeleteHost', true);\n      controller.set('content.hostName', 'host2');\n      expect(controller.getZkServerHosts()[0]).to.equal(\"host1\");\n      expect(controller.get('fromDeleteHost')).to.be.false;\n    });\n  });\n\n  describe('#installComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App.ModalPopup, \"show\");\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n\n    afterEach(function () {\n      App.ModalPopup.show.restore();\n      App.ajax.send.restore();\n    });\n\n    it('popup should be displayed', function () {\n      var event = {context: Em.Object.create()};\n      var popup = controller.installComponent(event);\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#decommission()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(controller, \"runDecommission\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.runDecommission.restore();\n    });\n\n    it('popup should be displayed', function () {\n      var popup = controller.decommission(Em.Object.create({service: {}}));\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.runDecommission.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#runDecommission()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"doDecommission\", Em.K);\n      sinon.stub(controller, \"showBackgroundOperationsPopup\", Em.K);\n      sinon.stub(controller, \"doDecommissionRegionServer\", Em.K);\n    });\n\n    afterEach(function () {\n      controller.doDecommissionRegionServer.restore();\n      controller.doDecommission.restore();\n      controller.showBackgroundOperationsPopup.restore();\n    });\n\n    it('HDFS service', function () {\n      controller.runDecommission('host1', 'HDFS');\n      expect(controller.doDecommission.calledWith('host1', 'HDFS', \"NAMENODE\", \"DATANODE\")).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n    it('YARN service', function () {\n      controller.runDecommission('host1', 'YARN');\n      expect(controller.doDecommission.calledWith('host1', 'YARN', \"RESOURCEMANAGER\", \"NODEMANAGER\")).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n    it('MAPREDUCE service', function () {\n      controller.runDecommission('host1', 'MAPREDUCE');\n      expect(controller.doDecommission.calledWith('host1', 'MAPREDUCE', \"JOBTRACKER\", \"TASKTRACKER\")).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n    it('HBASE service', function () {\n      controller.runDecommission('host1', 'HBASE');\n      expect(controller.doDecommissionRegionServer.calledWith('host1', 'HBASE', \"HBASE_MASTER\", \"HBASE_REGIONSERVER\")).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#runRecommission()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"doRecommissionAndStart\", Em.K);\n      sinon.stub(controller, \"doRecommissionAndRestart\", Em.K);\n      sinon.stub(controller, \"showBackgroundOperationsPopup\", Em.K);\n    });\n\n    afterEach(function () {\n      controller.doRecommissionAndStart.restore();\n      controller.doRecommissionAndRestart.restore();\n      controller.showBackgroundOperationsPopup.restore();\n    });\n\n    it('HDFS service', function () {\n      controller.runRecommission('host1', 'HDFS');\n      expect(controller.doRecommissionAndStart.calledWith('host1', 'HDFS', \"NAMENODE\", \"DATANODE\")).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n    it('YARN service', function () {\n      controller.runRecommission('host1', 'YARN');\n      expect(controller.doRecommissionAndStart.calledWith('host1', 'YARN', \"RESOURCEMANAGER\", \"NODEMANAGER\")).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n    it('MAPREDUCE service', function () {\n      controller.runRecommission('host1', 'MAPREDUCE');\n      expect(controller.doRecommissionAndRestart.calledWith('host1', 'MAPREDUCE', \"JOBTRACKER\", \"TASKTRACKER\")).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n    it('HBASE service', function () {\n      controller.runRecommission('host1', 'HBASE');\n      expect(controller.doRecommissionAndStart.calledWith('host1', 'HBASE', \"HBASE_MASTER\", \"HBASE_REGIONSERVER\")).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#doDecommission()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      controller.doDecommission('', '', '', '');\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#doDecommissionRegionServer()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      controller.doDecommissionRegionServer('', '', '', '');\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  /**\n   * TODO uncomment test when final rules will be implemented into warnBeforeDecommission function\n   */\n /* describe('#warnBeforeDecommission()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"doDecommissionRegionServer\", Em.K);\n      sinon.stub(App.ModalPopup, \"show\", Em.K);\n    });\n    afterEach(function () {\n      App.ModalPopup.show.restore();\n      controller.doDecommissionRegionServer.restore();\n    });\n\n    it('Component in passive state', function () {\n      controller.set('content.hostComponents', [Em.Object.create({\n        componentName: 'HBASE_REGIONSERVER',\n        passiveState: 'ON'\n      })]);\n      controller.warnBeforeDecommission('host1', 'HBASE', 'HBASE_REGIONSERVER', 'SLAVE');\n      expect(App.ModalPopup.show.called).to.be.false;\n      expect(controller.doDecommissionRegionServer.calledWith('host1', 'HBASE', 'HBASE_REGIONSERVER', 'SLAVE')).to.be.true;\n    });\n    it('Component is not in passive state', function () {\n      controller.set('content.hostComponents', [Em.Object.create({\n        componentName: 'HBASE_REGIONSERVER',\n        passiveState: 'OFF'\n      })]);\n      controller.warnBeforeDecommission('host1', 'HBASE', 'HBASE_REGIONSERVER', 'SLAVE');\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n      expect(controller.doDecommissionRegionServer.called).to.be.false;\n    });\n  });*/\n\n  describe('#doRecommissionAndStart()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      controller.doRecommissionAndStart('', '', '', '');\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#decommissionSuccessCallback()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"showBackgroundOperationsPopup\", Em.K);\n    });\n    afterEach(function () {\n      controller.showBackgroundOperationsPopup.restore();\n    });\n\n    it('data is null', function () {\n      expect(controller.decommissionSuccessCallback(null)).to.be.false;\n      expect(controller.showBackgroundOperationsPopup.called).to.be.false;\n    });\n    it('data has Requests', function () {\n      var data = {Requests: []};\n      expect(controller.decommissionSuccessCallback(data)).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n    it('data has resources', function () {\n      var data = {resources: [{RequestSchedule: {}}]};\n      expect(controller.decommissionSuccessCallback(data)).to.be.true;\n      expect(controller.showBackgroundOperationsPopup.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#doRecommissionAndRestart()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      controller.doRecommissionAndRestart('', '', '', '');\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#doAction()', function () {\n\n    beforeEach(function () {\n      sinon.stub(controller, \"validateAndDeleteHost\", Em.K);\n      sinon.stub(controller, \"doStartAllComponents\", Em.K);\n      sinon.stub(controller, \"doStopAllComponents\", Em.K);\n      sinon.stub(controller, \"doRestartAllComponents\", Em.K);\n      sinon.stub(controller, \"onOffPassiveModeForHost\", Em.K);\n    });\n\n    afterEach(function () {\n      controller.validateAndDeleteHost.restore();\n      controller.doStartAllComponents.restore();\n      controller.doStopAllComponents.restore();\n      controller.doRestartAllComponents.restore();\n      controller.onOffPassiveModeForHost.restore();\n    });\n\n    it('\"deleteHost\" action', function () {\n      var option = {context: {action: \"deleteHost\"}};\n      controller.doAction(option);\n      expect(controller.validateAndDeleteHost.calledOnce).to.be.true;\n    });\n    it('\"startAllComponents\" action, isNotHeartBeating = false', function () {\n      var option = {context: {action: \"startAllComponents\"}};\n      controller.set('content.isNotHeartBeating', false);\n      controller.doAction(option);\n      expect(controller.doStartAllComponents.calledOnce).to.be.true;\n    });\n    it('\"startAllComponents\" action, isNotHeartBeating = true', function () {\n      var option = {context: {action: \"startAllComponents\"}};\n      controller.set('content.isNotHeartBeating', true);\n      controller.doAction(option);\n      expect(controller.doStartAllComponents.called).to.be.false;\n    });\n    it('\"stopAllComponents\" action, isNotHeartBeating = false', function () {\n      var option = {context: {action: \"stopAllComponents\"}};\n      controller.set('content.isNotHeartBeating', false);\n      controller.doAction(option);\n      expect(controller.doStopAllComponents.calledOnce).to.be.true;\n    });\n    it('\"stopAllComponents\" action, isNotHeartBeating = true', function () {\n      var option = {context: {action: \"stopAllComponents\"}};\n      controller.set('content.isNotHeartBeating', true);\n      controller.doAction(option);\n      expect(controller.doStopAllComponents.called).to.be.false;\n    });\n    it('\"restartAllComponents\" action, isNotHeartBeating = false', function () {\n      var option = {context: {action: \"restartAllComponents\"}};\n      controller.set('content.isNotHeartBeating', false);\n      controller.doAction(option);\n      expect(controller.doRestartAllComponents.calledOnce).to.be.true;\n    });\n    it('\"restartAllComponents\" action, isNotHeartBeating = true', function () {\n      var option = {context: {action: \"restartAllComponents\"}};\n      controller.set('content.isNotHeartBeating', true);\n      controller.doAction(option);\n      expect(controller.doRestartAllComponents.called).to.be.false;\n    });\n    it('\"onOffPassiveModeForHost\" action', function () {\n      var option = {context: {action: \"onOffPassiveModeForHost\"}};\n      controller.doAction(option);\n      expect(controller.onOffPassiveModeForHost.calledWith({action: \"onOffPassiveModeForHost\"})).to.be.true;\n    });\n  });\n\n  describe('#onOffPassiveModeForHost()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(controller, \"hostPassiveModeRequest\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.hostPassiveModeRequest.restore();\n    });\n\n    it('popup should be displayed, active = true', function () {\n      var popup = controller.onOffPassiveModeForHost({active: true});\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.hostPassiveModeRequest.calledWith('ON')).to.be.true;\n    });\n    it('popup should be displayed, active = false', function () {\n      var popup = controller.onOffPassiveModeForHost({active: false});\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(controller.hostPassiveModeRequest.calledWith('OFF')).to.be.true;\n    });\n  });\n\n  describe('#hostPassiveModeRequest()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, \"send\", Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n\n    it('Query should be sent', function () {\n      controller.hostPassiveModeRequest('', '');\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#doStartAllComponents()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App, \"showConfirmationPopup\", Em.K);\n      sinon.stub(controller, \"sendStartComponentCommand\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.sendStartComponentCommand.restore();\n    });\n\n    it('serviceNonClientActiveComponents is null', function () {\n      controller.reopen({\n        serviceNonClientActiveComponents: []\n      });\n      controller.set('serviceNonClientActiveComponents', null);\n      controller.doStartAllComponents();\n      expect(App.showConfirmationPopup.called).to.be.false;\n    });\n    it('serviceNonClientActiveComponents is empty', function () {\n      controller.set('serviceNonClientActiveComponents', []);\n      controller.doStartAllComponents();\n      expect(App.showConfirmationPopup.called).to.be.false;\n    });\n    it('serviceNonClientActiveComponents is correct', function () {\n      controller.set('serviceNonClientActiveComponents', [{}]);\n      var popup = controller.doStartAllComponents();\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      /*popup.onPrimary();\n      expect(controller.sendStartComponentCommand.calledWith([{}])).to.be.true;*/\n    });\n  });\n\n  describe('#doStopAllComponents()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App, \"showConfirmationPopup\", Em.K);\n      sinon.stub(controller, \"sendStartComponentCommand\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.sendStartComponentCommand.restore();\n    });\n\n    it('serviceNonClientActiveComponents is null', function () {\n      controller.set('serviceNonClientActiveComponents', null);\n      controller.doStopAllComponents();\n      expect(App.showConfirmationPopup.called).to.be.false;\n    });\n    it('serviceNonClientActiveComponents is empty', function () {\n      controller.set('serviceNonClientActiveComponents', []);\n      controller.doStopAllComponents();\n      expect(App.showConfirmationPopup.called).to.be.false;\n    });\n    it('serviceNonClientActiveComponents is correct', function () {\n      controller.set('serviceNonClientActiveComponents', [{}]);\n      var popup = controller.doStopAllComponents();\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      /*popup.onPrimary();\n      expect(controller.sendStopComponentCommand.calledWith([{}])).to.be.true;*/\n    });\n  });\n\n  describe('#doRestartAllComponents()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App, \"showConfirmationPopup\", Em.K);\n      sinon.stub(controller, \"sendStartComponentCommand\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.sendStartComponentCommand.restore();\n    });\n\n    it('serviceActiveComponents is null', function () {\n      controller.set('serviceActiveComponents', null);\n      controller.doRestartAllComponents();\n      expect(App.showConfirmationPopup.called).to.be.false;\n    });\n    it('serviceActiveComponents is empty', function () {\n      controller.set('serviceActiveComponents', []);\n      controller.doRestartAllComponents();\n      expect(App.showConfirmationPopup.called).to.be.false;\n    });\n    it('serviceActiveComponents is correct', function () {\n      controller.set('serviceActiveComponents', [{}]);\n      var popup = controller.doRestartAllComponents();\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      /*popup.onPrimary();\n       expect(controller.restartHostComponents.calledWith([{}])).to.be.true;*/\n    });\n  });\n\n  describe('#getHostComponentsInfo()', function () {\n\n    var result = {\n      zkServerInstalled: false,\n      lastComponents: [],\n      masterComponents: [],\n      runningComponents: [],\n      nonDeletableComponents: [],\n      unknownComponents: []\n    };\n\n    it('content.hostComponents is null', function () {\n      controller.set('content.hostComponents', null);\n      expect(controller.getHostComponentsInfo()).to.eql(result);\n    });\n    it('content.hostComponents is empty', function () {\n      controller.set('content.hostComponents', []);\n      expect(controller.getHostComponentsInfo()).to.eql(result);\n    });\n    it('content.hostComponents has ZOOKEEPER_SERVER', function () {\n      App.HostComponent.find().clear();\n      controller.set('content.hostComponents', [Em.Object.create({\n        componentName: 'ZOOKEEPER_SERVER',\n        workStatus: 'INIT',\n        isDeletable: true\n      })]);\n      expect(controller.getHostComponentsInfo().zkServerInstalled).to.be.true;\n    });\n    it('content.hostComponents has last component', function () {\n      App.store.load(App.HostComponent, {\n        id: 'TASKTRACKER_host1',\n        component_name: 'TASKTRACKER'\n      });\n      controller.set('content.hostComponents', [Em.Object.create({\n        componentName: 'TASKTRACKER',\n        displayName: 'TaskTracker',\n        workStatus: 'INIT',\n        isDeletable: true\n      })]);\n      expect(controller.getHostComponentsInfo().lastComponents).to.eql(['TaskTracker']);\n      App.HostComponent.find().clear();\n    });\n    it('content.hostComponents has master non-deletable component', function () {\n      controller.set('content.hostComponents', [Em.Object.create({\n        componentName: 'TASKTRACKER',\n        workStatus: 'INIT',\n        isDeletable: false,\n        isMaster: true,\n        displayName: 'ZK1'\n      })]);\n      expect(controller.getHostComponentsInfo().masterComponents).to.eql(['ZK1']);\n      expect(controller.getHostComponentsInfo().nonDeletableComponents).to.eql(['ZK1']);\n    });\n    it('content.hostComponents has running component', function () {\n      controller.set('content.hostComponents', [Em.Object.create({\n        componentName: 'TASKTRACKER',\n        workStatus: 'STARTED',\n        isDeletable: true,\n        displayName: 'ZK1'\n      })]);\n      expect(controller.getHostComponentsInfo().runningComponents).to.eql(['ZK1']);\n    });\n    it('content.hostComponents has non-deletable component', function () {\n      controller.set('content.hostComponents', [Em.Object.create({\n        componentName: 'TASKTRACKER',\n        workStatus: 'INIT',\n        isDeletable: false,\n        displayName: 'ZK1'\n      })]);\n      expect(controller.getHostComponentsInfo().nonDeletableComponents).to.eql(['ZK1']);\n    });\n    it('content.hostComponents has component with UNKNOWN state', function () {\n      controller.set('content.hostComponents', [Em.Object.create({\n        componentName: 'TASKTRACKER',\n        workStatus: 'UNKNOWN',\n        isDeletable: false,\n        displayName: 'ZK1'\n      })]);\n      expect(controller.getHostComponentsInfo().unknownComponents).to.eql(['ZK1']);\n    });\n  });\n\n  describe('#validateAndDeleteHost()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App, \"showConfirmationPopup\", Em.K);\n      sinon.stub(controller, \"getHostComponentsInfo\", function(){\n        return this.get('mockHostComponentsInfo');\n      });\n      sinon.stub(controller, \"raiseDeleteComponentsError\", Em.K);\n      sinon.stub(controller, \"_doDeleteHost\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      controller.getHostComponentsInfo.restore();\n      controller.raiseDeleteComponentsError.restore();\n      controller._doDeleteHost.restore();\n    });\n\n    it('App.supports.deleteHost = false', function () {\n      App.supports.deleteHost = false;\n      expect(controller.validateAndDeleteHost()).to.be.false;\n      App.supports.deleteHost = true;\n    });\n    it('masterComponents exist', function () {\n      controller.set('mockHostComponentsInfo', {masterComponents: [{}]});\n      controller.validateAndDeleteHost();\n      expect(controller.raiseDeleteComponentsError.calledWith([{}], 'masterList')).to.be.true;\n    });\n    it('nonDeletableComponents exist', function () {\n      controller.set('mockHostComponentsInfo', {\n        masterComponents: [],\n        nonDeletableComponents: [{}]\n      });\n      controller.validateAndDeleteHost();\n      expect(controller.raiseDeleteComponentsError.calledWith([{}], 'nonDeletableList')).to.be.true;\n    });\n    it('runningComponents exist', function () {\n      controller.set('mockHostComponentsInfo', {\n        masterComponents: [],\n        nonDeletableComponents: [],\n        runningComponents: [{}]\n      });\n      controller.validateAndDeleteHost();\n      expect(controller.raiseDeleteComponentsError.calledWith([{}], 'runningList')).to.be.true;\n    });\n    it('zkServerInstalled = true', function () {\n      controller.set('mockHostComponentsInfo', {\n        masterComponents: [],\n        nonDeletableComponents: [],\n        runningComponents: [],\n        unknownComponents: [],\n        lastComponents: [],\n        zkServerInstalled: true\n      });\n      var popup = controller.validateAndDeleteHost();\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n     /* popup.onPrimary();\n      expect(controller._doDeleteHost.calledWith([], [])).to.be.true;*/\n    });\n    it('zkServerInstalled = false', function () {\n      controller.set('mockHostComponentsInfo', {\n        masterComponents: [],\n        nonDeletableComponents: [],\n        runningComponents: [],\n        unknownComponents: [],\n        lastComponents: [],\n        zkServerInstalled: false\n      });\n      controller.validateAndDeleteHost();\n      expect(controller._doDeleteHost.calledWith([], [])).to.be.true;\n    });\n  });\n\n  describe('#raiseDeleteComponentsError()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ModalPopup, \"show\", Em.K);\n    });\n    afterEach(function () {\n      App.ModalPopup.show.restore();\n    });\n\n    it('Popup should be displayed', function () {\n      controller.raiseDeleteComponentsError([], '');\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#_doDeleteHost()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ModalPopup, \"show\", Em.K);\n    });\n    afterEach(function () {\n      App.ModalPopup.show.restore();\n    });\n\n    it('Popup should be displayed', function () {\n      controller._doDeleteHost([], []);\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#restartAllStaleConfigComponents()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(batchUtils, \"restartHostComponents\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      batchUtils.restartHostComponents.restore();\n    });\n\n    it('popup should be displayed', function () {\n      controller.set('content.componentsWithStaleConfigs', [{}]);\n      var popup = controller.restartAllStaleConfigComponents();\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(batchUtils.restartHostComponents.calledWith([{}])).to.be.true;\n    });\n  });\n\n  describe('#moveComponent()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n    });\n\n    it('popup should be displayed', function () {\n      var popup = controller.moveComponent();\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#refreshConfigs()', function () {\n\n    beforeEach(function () {\n      sinon.spy(App, \"showConfirmationPopup\");\n      sinon.stub(batchUtils, \"restartHostComponents\", Em.K);\n    });\n    afterEach(function () {\n      App.showConfirmationPopup.restore();\n      batchUtils.restartHostComponents.restore();\n    });\n\n    it('No components', function () {\n      var event = {context: []};\n      controller.refreshConfigs(event);\n      expect(App.showConfirmationPopup.called).to.be.false;\n    });\n    it('No components with stale configs', function () {\n      var event = {context: [Em.Object.create({\n        staleConfigs: false\n      })]};\n      controller.refreshConfigs(event);\n      expect(App.showConfirmationPopup.called).to.be.false;\n    });\n    it('Components with stale configs', function () {\n      var event = {context: [Em.Object.create({\n        staleConfigs: true\n      })]};\n      var popup = controller.refreshConfigs(event);\n      expect(App.showConfirmationPopup.calledOnce).to.be.true;\n      popup.onPrimary();\n      expect(batchUtils.restartHostComponents.calledWith([Em.Object.create({\n        staleConfigs: true\n      })])).to.be.true;\n    });\n  });\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nvar validator = require('utils/validator');\nrequire('utils/component');\nrequire('utils/batch_scheduled_requests');\nrequire('controllers/main/host');\nrequire('mappers/server_data_mapper');\n\ndescribe('MainHostController', function () {\n\n  var hostController;\n\n  // @todo add unit tests after bulk ops reimplementing\n  describe.skip('#bulkOperation', function() {\n\n    beforeEach(function() {\n      hostController = App.MainHostController.create({\n        bulkOperationForHostsRestart: function(){},\n        bulkOperationForHosts: function(){},\n        bulkOperationForHostComponentsRestart: function(){},\n        bulkOperationForHostComponentsDecommission: function(){},\n        bulkOperationForHostComponents: function(){},\n        bulkOperationForHostsPassiveState: function(){}\n      });\n      sinon.spy(hostController, 'bulkOperationForHostsRestart');\n      sinon.spy(hostController, 'bulkOperationForHosts');\n      sinon.spy(hostController, 'bulkOperationForHostComponentsRestart');\n      sinon.spy(hostController, 'bulkOperationForHostComponentsDecommission');\n      sinon.spy(hostController, 'bulkOperationForHostComponents');\n      sinon.spy(hostController, 'bulkOperationForHostsPassiveState');\n    });\n\n    afterEach(function() {\n      hostController.bulkOperationForHosts.restore();\n      hostController.bulkOperationForHostsRestart.restore();\n      hostController.bulkOperationForHostComponentsRestart.restore();\n      hostController.bulkOperationForHostComponentsDecommission.restore();\n      hostController.bulkOperationForHostComponents.restore();\n      hostController.bulkOperationForHostsPassiveState.restore();\n\n    });\n\n    it('RESTART for hosts', function() {\n      var operationData = {\n        action: 'RESTART'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHostsRestart.calledOnce).to.equal(true);\n    });\n\n    it('START for hosts', function() {\n      var operationData = {\n        action: 'STARTED'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHosts.calledOnce).to.equal(true);\n    });\n\n    it('STOP for hosts', function() {\n      var operationData = {\n        action: 'INSTALLED'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHosts.calledOnce).to.equal(true);\n    });\n\n    it('PASSIVE_STATE for hosts', function() {\n      var operationData = {\n        action: 'PASSIVE_STATE'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHostsPassiveState.calledOnce).to.equal(true);\n    });\n\n    it('RESTART for hostComponents', function() {\n      var operationData = {\n        action: 'RESTART',\n        componentNameFormatted: 'DataNodes'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHostComponentsRestart.calledOnce).to.equal(true);\n    });\n\n    it('START for hostComponents', function() {\n      var operationData = {\n        action: 'STARTED',\n        componentNameFormatted: 'DataNodes'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHostComponents.calledOnce).to.equal(true);\n    });\n\n    it('STOP for hostComponents', function() {\n      var operationData = {\n        action: 'INSTALLED',\n        componentNameFormatted: 'DataNodes'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHostComponents.calledOnce).to.equal(true);\n    });\n\n    it('DECOMMISSION for hostComponents', function() {\n      var operationData = {\n        action: 'DECOMMISSION',\n        componentNameFormatted: 'DataNodes'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHostComponentsDecommission.calledOnce).to.equal(true);\n    });\n\n    it('RECOMMISSION for hostComponents', function() {\n      var operationData = {\n        action: 'DECOMMISSION_OFF',\n        componentNameFormatted: 'DataNodes'\n      };\n      hostController.bulkOperation(operationData, []);\n      expect(hostController.bulkOperationForHostComponentsDecommission.calledOnce).to.equal(true);\n    });\n\n  });\n\n  // @todo add unit tests after bulk ops reimplementing\n  describe.skip('#bulkOperationForHosts', function() {\n\n    beforeEach(function(){\n      hostController = App.MainHostController.create({});\n      sinon.spy($, 'ajax');\n    });\n\n    afterEach(function() {\n      $.ajax.restore();\n    });\n\n    var tests = [\n      {\n        operationData: {},\n        hosts: [],\n        m: 'no hosts',\n        e: false\n      },\n      {\n        operationData: {\n          actionToCheck: 'STARTED'\n        },\n        hosts: [\n          Em.Object.create({\n            hostComponents: Em.A([\n              Em.Object.create({isMaster: true, isSlave: false, host: {hostName:'host1'}, workStatus: 'STARTED', componentName: 'NAMENODE', passiveState: 'OFF'}),\n              Em.Object.create({isMaster: false, isSlave: true, host: {hostName:'host1'}, workStatus: 'STARTED', componentName: 'DATANODE', passiveState: 'OFF'})\n            ])\n          })\n        ],\n        m: '1 host. components are in proper state',\n        e: true\n      },\n      {\n        operationData: {\n          actionToCheck: 'INSTALLED'\n        },\n        hosts: [\n          Em.Object.create({\n            hostComponents: Em.A([\n              Em.Object.create({isMaster: true, isSlave: false, host: {hostName:'host1'}, workStatus: 'STARTED', componentName: 'NAMENODE', passiveState: 'OFF'}),\n              Em.Object.create({isMaster: false, isSlave: true, host: {hostName:'host1'}, workStatus: 'STARTED', componentName: 'DATANODE', passiveState: 'OFF'})\n            ])\n          })\n        ],\n        m: '1 host. components are not in proper state',\n        e: false\n      },\n      {\n        operationData: {\n          actionToCheck: 'INSTALLED'\n        },\n        hosts: [\n          Em.Object.create({\n            hostComponents: Em.A([\n              Em.Object.create({isMaster: true, isSlave: false, host: {hostName:'host1'}, workStatus: 'INSTALLED', componentName: 'NAMENODE', passiveState: 'OFF'}),\n              Em.Object.create({isMaster: false, isSlave: true, host: {hostName:'host1'}, workStatus: 'STARTED', componentName: 'DATANODE', passiveState: 'OFF'})\n            ])\n          })\n        ],\n        m: '1 host. some components are in proper state',\n        e: true\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        hostController.bulkOperationForHosts(test.operationData, test.hosts);\n        expect($.ajax.called).to.equal(test.e);\n      });\n    });\n\n  });\n\n  // @todo add unit tests after bulk ops reimplementing\n  describe.skip('#bulkOperationForHostsRestart', function() {\n\n    beforeEach(function(){\n      hostController = App.MainHostController.create({});\n      sinon.spy($, 'ajax');\n    });\n\n    afterEach(function() {\n      $.ajax.restore();\n    });\n\n    var tests = Em.A([\n      {\n        hosts: Em.A([]),\n        m: 'No hosts',\n        e: false\n      },\n      {\n        hosts: Em.A([\n          Em.Object.create({\n            hostComponents: Em.A([Em.Object.create({passiveState: 'OFF'}), Em.Object.create({passiveState: 'OFF'})])\n          })\n        ]),\n        m: 'One host',\n        e: true\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        hostController.bulkOperationForHostsRestart({}, test.hosts);\n        expect($.ajax.calledOnce).to.equal(test.e)\n      });\n    });\n\n  });\n\n  // @todo add unit tests after bulk ops reimplementing\n  describe.skip('#bulkOperationForHostsPassiveState', function() {\n\n    beforeEach(function(){\n      hostController = App.MainHostController.create({});\n      sinon.spy($, 'ajax');\n    });\n\n    afterEach(function() {\n      $.ajax.restore();\n    });\n\n    var tests = [\n      {\n        hosts: Em.A([]),\n        operationData: {},\n        m: 'No hosts',\n        e: false\n      },\n      {\n        hosts: Em.A([\n          Em.Object.create({\n            passiveState: 'OFF'\n          })\n        ]),\n        operationData: {\n          state: 'OFF'\n        },\n        m: 'One host, but in state that should get',\n        e: false\n      },\n      {\n        hosts: Em.A([\n          Em.Object.create({\n            passiveState: 'OFF'\n          })\n        ]),\n        operationData: {\n          state: 'ON'\n        },\n        m: 'One host with proper state',\n        e: true\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        hostController.bulkOperationForHostsPassiveState(test.operationData, test.hosts);\n        expect($.ajax.calledOnce).to.equal(test.e)\n      });\n    });\n\n  });\n\n  describe('#getRegExp()', function() {\n    before(function() {\n      hostController = App.MainHostController.create({});\n    });\n\n    var message = '`{0}` should convert to `{1}`',\n        tests = [\n      { value: '.*', expected: '.*' },\n      { value: '.', expected: '.*' },\n      { value: '.*.*', expected: '.*' },\n      { value: '*', expected: '^$' },\n      { value: '........', expected: '.*' },\n      { value: '........*', expected: '.*' },\n      { value: 'a1', expected: '.*a1.*' },\n      { value: 'a1.', expected: '.*a1.*' },\n      { value: 'a1...', expected: '.*a1.*' },\n      { value: 'a1.*', expected: '.*a1.*' },\n      { value: 'a1.*.a2.a3', expected: '.*a1.*.a2.a3.*' },\n      { value: 'a1.*.a2...a3', expected: '.*a1.*.a2...a3.*' }\n    ]\n\n    tests.forEach(function(test){\n      it(message.format(test.value, test.expected), function() {\n        expect(hostController.getRegExp(test.value)).to.be.equal(test.expected);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nvar jobsUtils = require('utils/jobs');\nrequire('models/service/yarn');\nrequire('mappers/jobs/hive_job_mapper');\nrequire('utils/ajax/ajax');\nrequire('utils/http_client');\nrequire('models/jobs/tez_dag');\nrequire('controllers/main/jobs/hive_job_details_controller');\n\ndescribe('App.MainHiveJobDetailsController', function () {\n  var yarnService = {\n    id: 'YARN',\n    ahsWebPort: 8188\n  };\n  App.store.load(App.YARNService, yarnService);\n  var job = {\n    id: 'hrt_qa_20140311131919_1d932567-71c2-4341-9b50-6df1f58a9114',\n    queryText: 'show tables',\n    name: 'hrt_qa_20140311131919_1d932567-71c2-4341-9b50-6df1f58a9114',\n    user: ['hrt_qa'],\n    hasTezDag: true,\n    failed: false,\n    startTime: 1394569191001,\n    jobType: 'hive',\n    tezDag: {\n      id: 'hrt_qa_20140311131919_1d932567-71c2-4341-9b50-6df1f58a9114:1',\n      instanceId: 'dag_1394502141829_0425_1',\n      name: 'hrt_qa_20140311131919_1d932567-71c2-4341-9b50-6df1f58a9114:1',\n      yarnApplicationId: 'application_1395263571423_0014',\n      stage: 'Stage-1'\n    }\n  };\n  var mainHiveJobDetailsController = App.MainHiveJobDetailsController.create({\n    job: Ember.Object.create(job),\n    content: {\n      id: 'id'\n    }\n  });\n  mainHiveJobDetailsController.set('job', mainHiveJobDetailsController.get('content'));\n  describe('#loaded', function () {\n    it('content loading from model', function () {\n      jobsUtils.refreshHiveJobDetails = function (hiveJob, successCallback, errorCallback) {\n        successCallback();\n      };\n      mainHiveJobDetailsController.loadJobDetails();\n      expect(mainHiveJobDetailsController.get('loaded')).to.equal(true);\n      expect(mainHiveJobDetailsController.get('content.id')).to.equal(mainHiveJobDetailsController.get('job.id'));\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('mappers/jobs/hive_jobs_mapper');\nrequire('models/service/yarn');\nrequire('models/jobs/job');\nrequire('models/jobs/hive_job');\nrequire('controllers/main/jobs_controller');\n\ndescribe('App.MainJobsController', function () {\n  var mainJobsController = App.MainJobsController.create();\n  var filterObject = mainJobsController.get('filterObject');\n  describe('#totalOfJobs', function () {\n    it('should be equal to content.length', function () {\n      mainJobsController.set('content', [\n        Ember.Object.create({\n          id: 'id0',\n          queryText: 'show tables',\n          name: 'id0',\n          user: ['user1'],\n          hasTezDag: true,\n          failed: false,\n          startTime: 1393443850756,\n          endTime: 1393443875265,\n          tezDagId: 'id0:1'\n        })\n      ]);\n      expect(mainJobsController.get('totalOfJobs')).to.equal(1);\n    });\n  });\n  describe('#sortingDone', function () {\n    it('should be true after automatically ran sorting', function () {\n      expect(mainJobsController.get('sortingDone')).to.equal(true);\n    });\n  });\n  describe('#sortProperty', function () {\n    it('should change according to sortingColumn.name', function () {\n      mainJobsController.set('sortingColumn').set('name', 'id');\n      expect(mainJobsController.get('sortProperty')).to.equal('id');\n    });\n  });\n  describe('#sortAscending', function () {\n    it('sorting should be ascending as default', function () {\n      mainJobsController.set('sortingColumn').set('status', '');\n      expect(mainJobsController.get('sortAscending')).to.equal(true);\n    });\n  });\n  describe('#filterObject.isIdFilterApplied', function () {\n    it('should be true if id field is not empty', function () {\n      filterObject.set('id', 'some_id');\n      expect(filterObject.get('isIdFilterApplied')).to.equal(true);\n    });\n  });\n  describe('#filterObject.isAnyFilterApplied', function () {\n    it('should be true if id field is not empty', function () {\n      filterObject.createJobsFiltersLink();\n      expect(filterObject.get('isAnyFilterApplied')).to.equal(true);\n    });\n  });\n  describe('#sortedContent', function () {\n    it('sorting by different properties', function () {\n      mainJobsController.get('content').push(Ember.Object.create({\n        id: 'id1',\n        queryText: 'show tables',\n        name: 'id1',\n        user: ['user0'],\n        failed: false,\n        startTime: 1393443850757,\n        endTime: 1393443875264,\n        tezDagId: null\n      }));\n      mainJobsController.contentAndSortUpdater();\n      expect(mainJobsController.get('sortedContent')[0].get('user')).to.eql(['user1']);\n      mainJobsController.toggleProperty('sortAscending');\n      mainJobsController.contentAndSortUpdater();\n      expect(mainJobsController.get('sortedContent')[0].get('user')).to.eql(['user0']);\n      mainJobsController.set('sortProperty', 'user');\n      mainJobsController.contentAndSortUpdater();\n      expect(mainJobsController.get('sortedContent')[0].get('id')).to.equal('id0');\n      mainJobsController.get('content').push(Ember.Object.create({\n        id: 'id2',\n        queryText: 'show tables',\n        name: 'id2',\n        user: ['user2'],\n        failed: false,\n        startTime: 1393443850758,\n        endTime: 1393443875263,\n        tezDagId: null\n      }));\n      mainJobsController.contentAndSortUpdater();\n      mainJobsController.set('sortProperty', 'startTime');\n      expect(mainJobsController.get('sortedContent')[0].get('id')).to.equal('id2');\n      mainJobsController.set('sortProperty', 'endTime');\n      mainJobsController.contentAndSortUpdater();\n      expect(mainJobsController.get('sortedContent')[0].get('id')).to.equal('id0');\n      mainJobsController.set('sortProperty', 'duration');\n      mainJobsController.toggleProperty('sortAscending');\n      mainJobsController.contentAndSortUpdater();\n      expect(mainJobsController.get('sortedContent')[0].get('user')).to.eql(['user1']);\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('controllers/main/mirroring/edit_dataset_controller');\nrequire('models/target_cluster');\nrequire('views/main/mirroring/edit_dataset_view');\n\ndescribe('App.MainMirroringEditDataSetController', function () {\n\n  describe('#clearStep', function () {\n    it('should clear all fields, error flags and messages', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      var errors = mainMirroringEditDataSetController.get('errors');\n      var errorMessages = mainMirroringEditDataSetController.get('errorMessages');\n      var formFeilds = mainMirroringEditDataSetController.get('formFields');\n      formFeilds.set('datasetName', 'test');\n      sinon.spy(mainMirroringEditDataSetController, 'clearErrors');\n      mainMirroringEditDataSetController.clearStep();\n      expect(mainMirroringEditDataSetController.clearErrors.calledOnce).to.be.true;\n      Em.keys(formFeilds).forEach(function (field) {\n        expect(formFeilds[field]).to.be.null;\n      });\n      mainMirroringEditDataSetController.clearErrors.restore();\n    });\n  });\n\n  describe('#clearErrors', function () {\n    it('should clear all error messages and flags', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      var errors = mainMirroringEditDataSetController.get('errors');\n      var errorMessages = mainMirroringEditDataSetController.get('errorMessages');\n      Em.keys(errors).forEach(function (error) {\n        errors[error] = true;\n      }, this);\n      Em.keys(errorMessages).forEach(function (errorMessage) {\n        errorMessages[errorMessage] = 'test';\n      }, this);\n      mainMirroringEditDataSetController.clearErrors();\n      Em.keys(errors).forEach(function (error) {\n        expect(errors[error]).to.be.false;\n      });\n      Em.keys(errorMessages).forEach(function (errorMessage) {\n        expect(errorMessages[errorMessage]).to.be.empty;\n      });\n    });\n  });\n\n  describe('#showAddPopup', function () {\n    it('should show popup and set isEdit as false', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      sinon.spy(App.ModalPopup, 'show');\n      mainMirroringEditDataSetController.showAddPopup();\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n      expect(mainMirroringEditDataSetController.get('isEdit')).to.be.false;\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#showEditPopup', function () {\n    it('should show popup,set isEdit as true and set dataset id', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      var dataset = Ember.Object.create({\n        id: 'test'\n      });\n      sinon.spy(App.ModalPopup, 'show');\n      mainMirroringEditDataSetController.showEditPopup(dataset);\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      expect(mainMirroringEditDataSetController.get('isEdit')).to.be.true;\n      expect(mainMirroringEditDataSetController.get('datasetIdToEdit')).to.equal('test');\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#showPopup', function () {\n    it('should show dataset popup and save its view', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      sinon.spy(App.ModalPopup, 'show');\n      mainMirroringEditDataSetController.showPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      expect(mainMirroringEditDataSetController.get('popup')).to.not.be.empty;\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#applyValidation', function () {\n    it('should add observers to all fields to validate form', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      sinon.spy(mainMirroringEditDataSetController, 'validate');\n      mainMirroringEditDataSetController.applyValidation();\n      expect(mainMirroringEditDataSetController.validate.calledOnce).to.be.true;\n      Em.keys(mainMirroringEditDataSetController.get('formFields')).forEach(function (field) {\n        expect(mainMirroringEditDataSetController.hasObserverFor('formFields.' + field)).to.be.true;\n      });\n      mainMirroringEditDataSetController.validate.restore();\n    });\n  });\n\n  var testCases = [\n    {\n      day: '01/01/2001',\n      hours: '00',\n      minutes: '00',\n      middayPeriod: 'AM',\n      result: new Date('01/01/2001 00:00 AM'),\n      message: 'should return date object'\n    },\n    {\n      day: '06/05/2014',\n      hours: '12',\n      minutes: '59',\n      middayPeriod: 'PM',\n      result: new Date('06/05/2014 12:59 PM'),\n      message: 'should return date object'\n    },\n    {\n      day: '',\n      hours: '00',\n      minutes: '00',\n      middayPeriod: 'AM',\n      result: null,\n      message: 'should return null if there are empty fields'\n    }\n  ];\n\n  describe('#scheduleStartDate', function () {\n    testCases.forEach(function (test) {\n      it(test.message, function () {\n        var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({\n          formFields: Ember.Object.create({\n            datasetStartDate: test.day,\n            hoursForStart: test.hours,\n            minutesForStart: test.minutes,\n            middayPeriodForStart: test.middayPeriod\n          })\n        });\n        expect(mainMirroringEditDataSetController.get('scheduleStartDate')).to.deep.equal(test.result);\n      });\n    });\n  });\n\n  describe('#scheduleEndDate', function () {\n    testCases.forEach(function (test) {\n      it(test.message, function () {\n        var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({\n          formFields: Ember.Object.create({\n            datasetEndDate: test.day,\n            hoursForEnd: test.hours,\n            minutesForEnd: test.minutes,\n            middayPeriodForEnd: test.middayPeriod\n          })\n        });\n        expect(mainMirroringEditDataSetController.get('scheduleEndDate')).to.deep.equal(test.result);\n      });\n    });\n  });\n\n  var formFields = Ember.Object.create({\n    datasetName: 'test',\n    datasetTargetClusterName: 'test',\n    datasetSourceDir: '/test',\n    datasetTargetDir: '/test',\n    datasetStartDate: '01/19/2038',\n    hoursForStart: '03',\n    minutesForStart: '15',\n    middayPeriodForStart: 'AM',\n    datasetEndDate: '01/19/2039',\n    hoursForEnd: '03',\n    minutesForEnd: '15',\n    middayPeriodForEnd: 'AM',\n    datasetFrequency: '1',\n    repeatOptionSelected: 'days'\n  })\n\n  describe('#validate', function () {\n    it('should set an error for empty fields', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      mainMirroringEditDataSetController.validate();\n      var errors = mainMirroringEditDataSetController.get('errors');\n      var errorMessages = mainMirroringEditDataSetController.get('errorMessages');\n      Em.keys(errors).forEach(function (error) {\n        expect(errors[error]).to.be.true;\n      });\n      Em.keys(errorMessages).forEach(function (errorMessage) {\n        expect(errorMessages[errorMessage]).to.equal(Em.I18n.t('mirroring.required.error'));\n      });\n    });\n    it('should set an error if start date is after end date', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      var formFields = mainMirroringEditDataSetController.get('formFields');\n      formFields.set('datasetStartDate', '04/07/2014');\n      formFields.set('hoursForStart', '11');\n      formFields.set('minutesForStart', '00');\n      formFields.set('middayPeriodForStart', 'PM');\n      formFields.set('datasetEndDate', '04/07/2014');\n      formFields.set('hoursForEnd', '11');\n      formFields.set('minutesForEnd', '00');\n      formFields.set('middayPeriodForEnd', 'AM');\n      mainMirroringEditDataSetController.validate();\n      expect(mainMirroringEditDataSetController.get('errors.isEndDateError')).to.be.true;\n      expect(mainMirroringEditDataSetController.get('errorMessages.endDate')).to.equal(Em.I18n.t('mirroring.dateOrder.error'));\n    });\n    it('should set an error if start date is in the past', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      var formFields = mainMirroringEditDataSetController.get('formFields');\n      formFields.set('datasetStartDate', '04/07/2014');\n      formFields.set('hoursForStart', '11');\n      formFields.set('minutesForStart', '00');\n      formFields.set('middayPeriodForStart', 'AM');\n      mainMirroringEditDataSetController.validate();\n      expect(mainMirroringEditDataSetController.get('errors.isStartDateError')).to.be.true;\n      expect(mainMirroringEditDataSetController.get('errorMessages.startDate')).to.equal(Em.I18n.t('mirroring.startDate.error'));\n    });\n    it('should set an error if repeat field value consist not only form digits', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      var formFields = mainMirroringEditDataSetController.get('formFields');\n      formFields.set('datasetFrequency', 'test');\n      mainMirroringEditDataSetController.validate();\n      expect(mainMirroringEditDataSetController.get('errors.isFrequencyError')).to.be.true;\n      expect(mainMirroringEditDataSetController.get('errorMessages.frequency')).to.equal(Em.I18n.t('mirroring.required.invalidNumberError'));\n      formFields.set('datasetFrequency', '100test');\n      mainMirroringEditDataSetController.validate();\n      expect(mainMirroringEditDataSetController.get('errors.isFrequencyError')).to.be.true;\n      expect(mainMirroringEditDataSetController.get('errorMessages.frequency')).to.equal(Em.I18n.t('mirroring.required.invalidNumberError'));\n    });\n    it('should not set errors if all fields are filled correctly', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({\n        formFields: formFields\n      });\n      mainMirroringEditDataSetController.validate();\n      var errors = mainMirroringEditDataSetController.get('errors');\n      var errorMessages = mainMirroringEditDataSetController.get('errorMessages');\n      Em.keys(errors).forEach(function (error) {\n        expect(errors[error]).to.be.false;\n      });\n      Em.keys(errorMessages).forEach(function (errorMessage) {\n        expect(errorMessages[errorMessage]).to.be.empty;\n      });\n    });\n  });\n\n  describe('#addZero', function () {\n    it('should add 0 for numbers less than 10', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      expect(mainMirroringEditDataSetController.addZero(1)).to.equal('01');\n      expect(mainMirroringEditDataSetController.addZero(9)).to.equal('09');\n      expect(mainMirroringEditDataSetController.addZero(0)).to.equal('00');\n    });\n    it('should not add 0 for numbers greater than 9', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      expect(mainMirroringEditDataSetController.addZero(10)).to.equal('10');\n      expect(mainMirroringEditDataSetController.addZero(99)).to.equal('99');\n    });\n  });\n\n  describe('#toTZFormat', function () {\n    it('should convert date to TZ format', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      expect(mainMirroringEditDataSetController.toTZFormat(new Date(Date.UTC(2014, 0, 1, 1, 1)))).to.equal('2014-01-01T01:01Z');\n      expect(mainMirroringEditDataSetController.toTZFormat(new Date(Date.UTC(2014, 11, 31, 23, 59)))).to.equal('2014-12-31T23:59Z');\n    });\n  });\n\n  describe('#toAMPMHours', function () {\n    it('should convert time to 12-hours format', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      expect(mainMirroringEditDataSetController.toAMPMHours(13)).to.equal('01');\n      expect(mainMirroringEditDataSetController.toAMPMHours(20)).to.equal('08');\n      expect(mainMirroringEditDataSetController.toAMPMHours(24)).to.equal('12');\n      expect(mainMirroringEditDataSetController.toAMPMHours(0)).to.equal('12');\n    });\n    it('should not convert time if argument is less than 12', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      expect(mainMirroringEditDataSetController.toAMPMHours(1)).to.equal('01');\n      expect(mainMirroringEditDataSetController.toAMPMHours(8)).to.equal('08');\n      expect(mainMirroringEditDataSetController.toAMPMHours(11)).to.equal('11');\n    });\n  });\n\n  describe('#save', function () {\n    it('should create XML and send it to server', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({\n        popup: Ember.Object.create({\n          isSaving: false\n        })\n      });\n      sinon.spy(mainMirroringEditDataSetController, 'createDatasetXML');\n      sinon.spy(mainMirroringEditDataSetController, 'sendDatasetToServer');\n      mainMirroringEditDataSetController.save();\n      expect(mainMirroringEditDataSetController.createDatasetXML.calledOnce).to.be.true;\n      expect(mainMirroringEditDataSetController.sendDatasetToServer.calledOnce).to.be.true;\n      expect(mainMirroringEditDataSetController.get('popup.isSaving')).to.be.true;\n      mainMirroringEditDataSetController.createDatasetXML.restore();\n      mainMirroringEditDataSetController.sendDatasetToServer.restore();\n    });\n  });\n\n  describe('#createDatasetXML', function () {\n    it('should create XML-fromatted data', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({\n        formFields: formFields\n      });\n      var startDate = new Date('01/19/2038 03:15 AM').toISOString().replace(/\\:\\d{2}\\.\\d{3}/, '');\n      var endDate = new Date('01/19/2039 03:15 AM').toISOString().replace(/\\:\\d{2}\\.\\d{3}/, '');\n      var expectedResult = '<?xml version=\"1.0\"?><feed description=\"\" name=\"' + App.mirroringDatasetNamePrefix + 'test\" xmlns=\"uri:falcon:feed:0.1\"><frequency>days(1)' +\n          '</frequency><clusters><cluster name=\"' + App.get('clusterName') + '\" type=\"source\"><validity start=\"' + startDate + '\" end=\"' + endDate +\n          '\"/><retention limit=\"days(7)\" action=\"delete\"/></cluster><cluster name=\"test\" type=\"target\"><validity start=\"' + startDate + '\" end=\"' + endDate +\n          '\"/><retention limit=\"months(1)\" action=\"delete\"/><locations><location type=\"data\" path=\"/test\" /></locations></cluster></clusters><locations><location type=\"data\" path=\"' +\n          '/test\" /></locations><ACL owner=\"hue\" group=\"users\" permission=\"0755\" /><schema location=\"/none\" provider=\"none\"/></feed>';\n      var result = mainMirroringEditDataSetController.createDatasetXML();\n      expect(result).to.equal(expectedResult);\n    });\n  });\n\n  describe('#sendDatasetToServer', function () {\n    var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({\n      formFields: formFields\n    });\n    beforeEach(function () {\n      sinon.stub(App.ajax, 'send', Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n    it('should send data with correct dataset name', function () {\n      mainMirroringEditDataSetController.sendDatasetToServer('test');\n      expect(App.ajax.send.args[0][0].data.name).to.equal(App.mirroringDatasetNamePrefix + formFields.datasetName);\n    });\n    it('should send data from param', function () {\n      mainMirroringEditDataSetController.sendDatasetToServer('test');\n      expect(App.ajax.send.args[0][0].data.entity).to.equal('test');\n    });\n    it('should use edit request if isEdit is true', function () {\n      mainMirroringEditDataSetController.set('isEdit', true);\n      mainMirroringEditDataSetController.sendDatasetToServer('test');\n      expect(App.ajax.send.args[0][0].name).to.equal('mirroring.update_entity');\n    });\n    it('should use create request if isEdit is false', function () {\n      mainMirroringEditDataSetController.set('isEdit', false);\n      mainMirroringEditDataSetController.sendDatasetToServer('test');\n      expect(App.ajax.send.args[0][0].name).to.equal('mirroring.create_new_dataset');\n    });\n  });\n\n  describe('#onSaveSuccess', function () {\n    it('should hide popup and load data', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({\n        popup: Ember.Object.create({\n          isSaving: true,\n          hide: function () {\n          }\n        })\n      });\n      App.router.set('mainMirroringController', Ember.Object.create({\n        loadData: function () {\n        }\n      }));\n      sinon.spy(mainMirroringEditDataSetController.get('popup'), 'hide');\n      sinon.spy(App.router.get('mainMirroringController'), 'loadData');\n      mainMirroringEditDataSetController.onSaveSuccess();\n      expect(mainMirroringEditDataSetController.get('popup.isSaving')).to.be.false;\n      expect(App.router.get('mainMirroringController').loadData.calledOnce).to.be.true;\n      expect(mainMirroringEditDataSetController.get('popup').hide.calledOnce).to.be.true;\n      mainMirroringEditDataSetController.get('popup').hide.restore();\n      App.router.get('mainMirroringController').loadData.restore();\n    });\n  });\n\n  describe('#onSaveError', function () {\n    var mainMirroringEditDataSetController;\n    beforeEach(function () {\n      mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({\n        popup: Ember.Object.create({\n          isSaving: true\n        })\n      });\n      sinon.stub(App, 'showAlertPopup', Em.K);\n    });\n    afterEach(function () {\n      App.showAlertPopup.restore();\n    });\n    it('shouldn\\'t show error popup and enable button', function () {\n      mainMirroringEditDataSetController.onSaveError(null);\n      expect(App.showAlertPopup.calledOnce).to.be.false;\n      expect(mainMirroringEditDataSetController.get('popup.isSaving')).to.be.false;\n    });\n    it('should show error popup and enable button', function () {\n      mainMirroringEditDataSetController.onSaveError({responseText: '<message>test</message>'});\n      expect(App.showAlertPopup.args[0][1]).to.be.equal(Em.I18n.t('mirroring.manageClusters.error') + ': test');\n      expect(mainMirroringEditDataSetController.get('popup.isSaving')).to.be.false;\n    });\n  });\n\n  describe('#saveDisabled', function () {\n    it('should return false if there are no errors', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create({});\n      expect(mainMirroringEditDataSetController.get('saveDisabled')).to.be.false;\n    });\n    it('should return true if there are some errors', function () {\n      var mainMirroringEditDataSetController = App.MainMirroringEditDataSetController.create();\n      mainMirroringEditDataSetController.set('errors.isNameError', true);\n      expect(mainMirroringEditDataSetController.get('saveDisabled')).to.be.true;\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('controllers/wizard');\nrequire('controllers/main/service/add_controller');\nvar addServiceController = null;\n\ndescribe('App.AddServiceController', function() {\n\n  beforeEach(function () {\n    addServiceController = App.AddServiceController.create({});\n  });\n\n  describe('#isServiceConfigurable', function() {\n    var tests = [\n      {\n        services: [\n          {serviceName: 'HDFS'},\n          {serviceName: 'MAPREDUCE'},\n          {serviceName: 'NAGIOS'}\n        ],\n        service: 'HDFS',\n        m: 'Service is configurable',\n        e: true\n      },\n      {\n        services: [\n          {serviceName: 'HDFS'},\n          {serviceName: 'MAPREDUCE'},\n          {serviceName: 'NAGIOS'}\n        ],\n        service: 'PIG',\n        m: 'Service is not configurable',\n        e: false\n      },\n      {\n        services: [],\n        service: 'HDFS',\n        m: 'No services',\n        e: false\n      }\n    ];\n    tests.forEach(function(test) {\n      var controller = App.AddServiceController.create({serviceConfigs: test.services});\n      it('', function() {\n        expect(controller.isServiceConfigurable(test.service)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#skipConfigStep', function() {\n    var tests = [\n      {\n        content: {\n          services:[\n            {serviceName: 'HDFS', isInstalled: true, isSelected: true},\n            {serviceName: 'PIG', isInstalled: false, isSelected: true},\n            {serviceName: 'MAPREDUCE', isInstalled: true, isSelected: true}\n          ]\n        },\n        serviceConfigs: [\n          {serviceName: 'HDFS'},\n          {serviceName: 'MAPREDUCE'},\n          {serviceName: 'NAGIOS'}\n        ],\n        m: '2 installed services and 1 new that can\\'t be configured',\n        e: true\n      },\n      {\n        content: {\n          services:[\n            {serviceName: 'HDFS', isInstalled: true, isSelected: true},\n            {serviceName: 'NAGIOS', isInstalled: false, isSelected: true},\n            {serviceName: 'MAPREDUCE', isInstalled: true, isSelected: true}\n          ]\n        },\n        serviceConfigs: [\n          {serviceName: 'HDFS'},\n          {serviceName: 'MAPREDUCE'},\n          {serviceName: 'NAGIOS'}\n        ],\n        m: '2 installed services and 1 new that can be configured',\n        e: false\n      },\n      {\n        content: {\n          services:[\n            {serviceName: 'HDFS', isInstalled: true, isSelected: true},\n            {serviceName: 'PIG', isInstalled: false, isSelected: true},\n            {serviceName: 'SQOOP', isInstalled: false, isSelected: true},\n            {serviceName: 'MAPREDUCE', isInstalled: true, isSelected: true}\n          ]\n        },\n        serviceConfigs: [\n          {serviceName: 'HDFS'},\n          {serviceName: 'MAPREDUCE'},\n          {serviceName: 'NAGIOS'}\n        ],\n        m: '2 installed services and 2 new that can\\'t be configured',\n        e: true\n      }\n    ];\n    tests.forEach(function(test) {\n      var controller = App.AddServiceController.create({content:{services: test.content.services}, serviceConfigs: test.serviceConfigs});\n      it(test.m, function() {\n        expect(controller.skipConfigStep()).to.equal(test.e);\n      })\n    });\n  });\n\n  describe('#installAdditionalClients', function() {\n\n    var t = {\n      additionalClients: {\n        componentName: \"TEZ_CLIENT\",\n        hostName: \"hostName\"\n      },\n      RequestInfo: {\n        \"context\": Em.I18n.t('requestInfo.installHostComponent') + \" hostName\"\n      },\n      Body: {\n        HostRoles: {\n          state: 'INSTALLED'\n        }\n      }\n    };\n\n    beforeEach(function () {\n      sinon.spy($, 'ajax');\n    });\n\n    afterEach(function () {\n      $.ajax.restore();\n    });\n\n    it('send request to install client', function () {\n      addServiceController.set(\"content.additionalClients\", [t.additionalClients]);\n      addServiceController.installAdditionalClients();\n      expect($.ajax.calledOnce).to.equal(true);\n\n      expect(JSON.parse($.ajax.args[0][0].data).Body).to.deep.eql(t.Body);\n      expect(JSON.parse($.ajax.args[0][0].data).RequestInfo).to.eql(t.RequestInfo);\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('controllers/main/service/info/configs');\nvar batchUtils = require('utils/batch_scheduled_requests');\nvar mainServiceInfoConfigsController = null;\ndescribe(\"App.MainServiceInfoConfigsController\", function () {\n\n  beforeEach(function () {\n    mainServiceInfoConfigsController = App.MainServiceInfoConfigsController.create({});\n  });\n\n  describe(\"#showSavePopup\", function () {\n    var tests = [\n      {\n        path: false,\n        event: false,\n        action: \"onSave\",\n        m: \"save configs without path/event\",\n        results: [\n          {\n            method: \"restartServicePopup\",\n            called: true\n          },\n          {\n            method: \"selectConfigGroup\",\n            called: false\n          }\n        ]\n      },\n      {\n        path: true,\n        event: true,\n        action: \"onSave\",\n        m: \"save configs with path/event\",\n        results: [\n          {\n            method: \"restartServicePopup\",\n            called: true\n          },\n          {\n            method: \"selectConfigGroup\",\n            called: false\n          }\n        ]\n      },\n      {\n        path: false,\n        event: false,\n        action: \"onDiscard\",\n        m: \"discard changes without path/event\",\n        results: [\n          {\n            method: \"restartServicePopup\",\n            called: false\n          },\n          {\n            method: \"selectConfigGroup\",\n            called: false\n          }\n        ]\n      },\n      {\n        path: false,\n        event: true,\n        action: \"onDiscard\",\n        m: \"discard changes with event\",\n        results: [\n          {\n            method: \"restartServicePopup\",\n            called: false\n          },\n          {\n            method: \"selectConfigGroup\",\n            called: true\n          },\n          {\n            field: \"hash\",\n            value: \"hash\"\n          }\n        ]\n      },\n      {\n        path: true,\n        event: false,\n        action: \"onDiscard\",\n        m: \"discard changes with path\",\n        results: [\n          {\n            method: \"restartServicePopup\",\n            called: false\n          },\n          {\n            method: \"selectConfigGroup\",\n            called: false\n          },\n          {\n            field: \"forceTransition\",\n            value: true\n          }\n        ]\n      }\n    ];\n\n    var rRoute = App.router.route;\n    beforeEach(function () {\n      sinon.stub(mainServiceInfoConfigsController, \"restartServicePopup\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"selectConfigGroup\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"getHash\", function () {\n        return \"hash\"\n      });\n      App.router.route = Em.K;\n    });\n    afterEach(function () {\n      mainServiceInfoConfigsController.restartServicePopup.restore();\n      mainServiceInfoConfigsController.selectConfigGroup.restore();\n      mainServiceInfoConfigsController.getHash.restore();\n      App.router.route = rRoute;\n    });\n\n    tests.forEach(function (t) {\n      t.results.forEach(function (r) {\n        it(t.m + \" \" + r.method + \" \" + r.field, function () {\n          mainServiceInfoConfigsController.showSavePopup(t.path, t.event)[t.action]();\n          if (r.method) {\n            expect(mainServiceInfoConfigsController[r.method].calledOnce).to.equal(r.called);\n          } else if (r.field) {\n            expect(mainServiceInfoConfigsController.get(r.field)).to.equal(r.value);\n          }\n        }, this);\n      });\n    }, this);\n  });\n\n  describe(\"#hasUnsavedChanges\", function () {\n    beforeEach(function () {\n      sinon.stub(mainServiceInfoConfigsController, \"getHash\", function () {\n        return \"hash\"\n      });\n    });\n    afterEach(function () {\n      mainServiceInfoConfigsController.getHash.restore();\n    });\n\n    it(\"with unsaved\", function () {\n      mainServiceInfoConfigsController.set(\"hash\", \"hash1\");\n      expect(mainServiceInfoConfigsController.hasUnsavedChanges()).to.equal(true);\n    });\n\n    it(\"without unsaved\", function () {\n      mainServiceInfoConfigsController.set(\"hash\", \"hash\");\n      expect(mainServiceInfoConfigsController.hasUnsavedChanges()).to.equal(false);\n    });\n  });\n\n  describe(\"#selectConfigGroup\", function () {\n\n    var tests = [\n      {\n        event: {\n          context: \"cfgGroup\"\n        },\n        isInit: true,\n        showPopup: false,\n        m: \"setup new cfg group\"\n      },\n      {\n        event: {\n          context: \"cfgGroup\"\n        },\n        isInit: false,\n        hash: \"hash\",\n        showPopup: false,\n        m: \"setup new cfg group, has some changes\"\n      },\n      {\n        event: {\n          context: \"cfgGroup\"\n        },\n        isInit: false,\n        hash: \"hash1\",\n        showPopup: true,\n        m: \"show popup, doesn't setup new cfg group\"\n      }\n    ];\n\n    beforeEach(function () {\n      sinon.stub(mainServiceInfoConfigsController, \"showSavePopup\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"getHash\", function () {\n        return \"hash\"\n      });\n      sinon.stub(mainServiceInfoConfigsController, \"onConfigGroupChange\", Em.K);\n    });\n    afterEach(function () {\n      mainServiceInfoConfigsController.showSavePopup.restore();\n      mainServiceInfoConfigsController.getHash.restore();\n      mainServiceInfoConfigsController.onConfigGroupChange.restore();\n    });\n    tests.forEach(function (t) {\n      it(t.m, function () {\n        mainServiceInfoConfigsController.set(\"isInit\", t.isInit);\n        mainServiceInfoConfigsController.set(\"hash\", t.hash);\n        mainServiceInfoConfigsController.selectConfigGroup(t.event);\n        if (!t.showPopup) {\n          expect(mainServiceInfoConfigsController.get(\"selectedConfigGroup\")).to.equal(t.event.context);\n          expect(mainServiceInfoConfigsController.showSavePopup.calledOnce).to.equal(false);\n        } else {\n          expect(mainServiceInfoConfigsController.showSavePopup.calledWith(null, t.event)).to.equal(true);\n        }\n      });\n    });\n\n  });\n\n  describe(\"#manageConfigurationGroup\", function () {\n    beforeEach(function () {\n      sinon.stub(mainServiceInfoConfigsController, \"manageConfigurationGroups\", Em.K);\n    });\n    afterEach(function () {\n      mainServiceInfoConfigsController.manageConfigurationGroups.restore();\n    });\n    it(\"run manageConfigurationGroups\", function () {\n      mainServiceInfoConfigsController.manageConfigurationGroup();\n      expect(mainServiceInfoConfigsController.manageConfigurationGroups.calledOnce).to.equal(true);\n    });\n  });\n\n  describe(\"#addOverrideProperty\", function () {\n    var serviceConfigProperty = Em.Object.create({\n      overrides: []\n    });\n\n    var newSCP = App.ServiceConfigProperty.create(serviceConfigProperty);\n    newSCP.set('value', '');\n    newSCP.set('isOriginalSCP', false);\n    newSCP.set('parentSCP', serviceConfigProperty);\n    newSCP.set('isEditable', true);\n\n    it(\"add new overridden property\", function () {\n      mainServiceInfoConfigsController.addOverrideProperty(serviceConfigProperty);\n      expect(serviceConfigProperty.get(\"overrides\")[0]).to.eql(newSCP);\n    });\n  });\n\n  describe(\"#showComponentsShouldBeRestarted\", function () {\n\n    var tests = [\n      {\n        input: {\n          'publicHostName1': ['TaskTracker'],\n          'publicHostName2': ['JobTracker', 'TaskTracker']\n        },\n        components: \"2 TaskTrackers, 1 JobTracker\",\n        text: Em.I18n.t('service.service.config.restartService.shouldBeRestarted').format(Em.I18n.t('common.components'))\n      },\n      {\n        input: {\n          'publicHostName1': ['TaskTracker']\n        },\n        components: \"1 TaskTracker\",\n        text: Em.I18n.t('service.service.config.restartService.shouldBeRestarted').format(Em.I18n.t('common.component'))\n      }\n    ];\n\n    beforeEach(function () {\n      sinon.stub(mainServiceInfoConfigsController, \"showItemsShouldBeRestarted\", Em.K);\n      mainServiceInfoConfigsController.set(\"content\", {restartRequiredHostsAndComponents: \"\"});\n    });\n    afterEach(function () {\n      mainServiceInfoConfigsController.showItemsShouldBeRestarted.restore();\n      mainServiceInfoConfigsController.set(\"content\", undefined);\n    });\n\n    tests.forEach(function (t) {\n      it(\"trigger showItemsShouldBeRestarted popup with components\", function () {\n        mainServiceInfoConfigsController.set(\"content.restartRequiredHostsAndComponents\", t.input);\n        mainServiceInfoConfigsController.showComponentsShouldBeRestarted();\n        expect(mainServiceInfoConfigsController.showItemsShouldBeRestarted.calledWith(t.components, t.text)).to.equal(true);\n      });\n    });\n  });\n\n  describe(\"#showHostsShouldBeRestarted\", function () {\n\n    var tests = [\n      {\n        input: {\n          'publicHostName1': ['TaskTracker'],\n          'publicHostName2': ['JobTracker', 'TaskTracker']\n        },\n        hosts: \"publicHostName1, publicHostName2\",\n        text: Em.I18n.t('service.service.config.restartService.shouldBeRestarted').format(Em.I18n.t('common.hosts'))\n      },\n      {\n        input: {\n          'publicHostName1': ['TaskTracker']\n        },\n        hosts: \"publicHostName1\",\n        text: Em.I18n.t('service.service.config.restartService.shouldBeRestarted').format(Em.I18n.t('common.host'))\n      }\n    ];\n\n    beforeEach(function () {\n      sinon.stub(mainServiceInfoConfigsController, \"showItemsShouldBeRestarted\", Em.K);\n      mainServiceInfoConfigsController.set(\"content\", {restartRequiredHostsAndComponents: \"\"});\n    });\n    afterEach(function () {\n      mainServiceInfoConfigsController.showItemsShouldBeRestarted.restore();\n      mainServiceInfoConfigsController.set(\"content\", undefined);\n    });\n\n    tests.forEach(function (t) {\n      it(\"trigger showItemsShouldBeRestarted popup with hosts\", function () {\n        mainServiceInfoConfigsController.set(\"content.restartRequiredHostsAndComponents\", t.input);\n        mainServiceInfoConfigsController.showHostsShouldBeRestarted();\n        expect(mainServiceInfoConfigsController.showItemsShouldBeRestarted.calledWith(t.hosts, t.text)).to.equal(true);\n      });\n    });\n  });\n\n  describe(\"rollingRestartStaleConfigSlaveComponents\", function () {\n    var tests = [\n      {\n        componentName: {\n          context: \"ComponentName\"\n        },\n        displayName: \"displayName\",\n        passiveState: \"ON\"\n      },\n      {\n        componentName: {\n          context: \"ComponentName1\"\n        },\n        displayName: \"displayName1\",\n        passiveState: \"OFF\"\n      }\n    ];\n\n    beforeEach(function () {\n      mainServiceInfoConfigsController.set(\"content\", {displayName: \"\", passiveState: \"\"});\n      sinon.stub(batchUtils, \"launchHostComponentRollingRestart\", Em.K);\n    });\n    afterEach(function () {\n      batchUtils.launchHostComponentRollingRestart.restore();\n    });\n    tests.forEach(function (t) {\n      it(\"trigger rollingRestartStaleConfigSlaveComponents\", function () {\n        mainServiceInfoConfigsController.set(\"content.displayName\", t.displayName);\n        mainServiceInfoConfigsController.set(\"content.passiveState\", t.passiveState);\n        mainServiceInfoConfigsController.rollingRestartStaleConfigSlaveComponents(t.componentName);\n        expect(batchUtils.launchHostComponentRollingRestart.calledWith(t.componentName.context, t.displayName, t.passiveState == \"ON\", true)).to.equal(true);\n      });\n    });\n  });\n\n  describe(\"#restartAllStaleConfigComponents\", function () {\n    beforeEach(function () {\n      sinon.stub(batchUtils, \"restartAllServiceHostComponents\", Em.K);\n    });\n    afterEach(function () {\n      batchUtils.restartAllServiceHostComponents.restore();\n    });\n    it(\"trigger restartAllServiceHostComponents\", function () {\n      mainServiceInfoConfigsController.restartAllStaleConfigComponents().onPrimary();\n      expect(batchUtils.restartAllServiceHostComponents.calledOnce).to.equal(true);\n    });\n  });\n\n  describe(\"#doCancel\", function () {\n    beforeEach(function () {\n      sinon.stub(mainServiceInfoConfigsController, \"loadStep\", Em.K);\n    });\n    afterEach(function () {\n      mainServiceInfoConfigsController.loadStep.restore();\n    });\n    it(\"trigger loadStep\", function () {\n      mainServiceInfoConfigsController.doCancel();\n      expect(mainServiceInfoConfigsController.loadStep.calledOnce).to.equal(true);\n    });\n  });\n\n  describe(\"#getCurrentServiceComponents\", function () {\n    var t = Em.Object.create({\n      content: Em.Object.create({\n        hostComponents: [\n          Em.Object.create({\n            componentName: \"componentName1\",\n            displayName: \"displayName1\"\n          }),\n          Em.Object.create({\n            componentName: \"componentName2\",\n            displayName: \"displayName2\"\n          })\n        ]\n      }),\n      validComponents: Em.A([\n        Em.Object.create({\n          componentName: \"componentName1\",\n          displayName: \"displayName1\",\n          selected: false\n        }),\n        Em.Object.create({\n          componentName: \"componentName2\",\n          displayName: \"displayName2\",\n          selected: false\n        })\n      ])\n    });\n\n    beforeEach(function () {\n      mainServiceInfoConfigsController.set(\"content\", { hostComponents: Em.A([])});\n    });\n\n    it(\"get current service components\", function () {\n      mainServiceInfoConfigsController.get(\"content.hostComponents\").push(t.content.hostComponents[0]);\n      var com = mainServiceInfoConfigsController.get(\"getCurrentServiceComponents\");\n      expect(com[0]).to.eql(t.validComponents[0]);\n    });\n  });\n\n  describe(\"#getMasterComponentHostValue\", function () {\n    var tests = [\n      {\n        content: {\n          hostComponents: [\n            Em.Object.create({\n              componentName: \"componentName1\",\n              host: {\n                hostName: \"hostName\"\n              }\n            })\n          ]\n        },\n        result: \"hostName\",\n        multiple: false,\n        m: \"returns hostname\"\n      },\n      {\n        content: {\n          hostComponents: [\n            Em.Object.create({\n              componentName: \"componentName2\",\n              host: {\n                  hostName: \"hostName1\"\n              }\n            }),\n            Em.Object.create({\n              componentName: \"componentName2\",\n              host: {\n                hostName: \"hostName2\"\n              }\n            })\n          ]\n        },\n        result: [\"hostName1\",\"hostName2\"],\n        multiple: true,\n        m: \"returns hostnames\"\n      }\n    ];\n    tests.forEach(function(t){\n      beforeEach(function () {\n        mainServiceInfoConfigsController.set(\"content\", { hostComponents: []});\n      });\n\n      it(t.m, function () {\n        mainServiceInfoConfigsController.set(\"content.hostComponents\", t.content.hostComponents);\n        expect(mainServiceInfoConfigsController.getMasterComponentHostValue(t.content.hostComponents[0].componentName, t.multiple)).to.eql(t.result);\n      });\n    });\n  });\n\n  describe(\"#setServerConfigValue\", function () {\n\n    it(\"parsing storm.zookeeper.servers property in non standart method\", function () {\n      expect(mainServiceInfoConfigsController.setServerConfigValue(\"storm.zookeeper.servers\", [\"a\", \"b\"])).to.equal('[\\'a\\',\\'b\\']');\n    });\n    it(\"parsing content property in non standart method\", function () {\n      expect(mainServiceInfoConfigsController.setServerConfigValue(\"content\", \"value\")).to.equal(\"value\");\n    });\n    it(\"parsing default properties\", function () {\n      expect(mainServiceInfoConfigsController.setServerConfigValue(\"any.other.property\", \"value&lt;\")).to.equal(\"value<\");\n    });\n  });\n\n  describe(\"#createSiteObj\", function () {\n\n    var tests = [\n      {\n        siteName: \"hdfs-site\",\n        tagName: \"version1\",\n        siteObj: Em.A([\n          {\n            name: \"property1\",\n            value: \"value1\"\n          },\n          {\n            name: \"property2\",\n            value: \"value2&lt;\"\n          }\n        ]),\n        result: {\n          \"type\": \"hdfs-site\",\n          \"tag\": \"version1\",\n          \"properties\": {\n            \"property1\": \"value1\",\n            \"property2\": \"value2<\"\n          }\n        },\n        m: \"default\"\n      },\n      {\n        siteName: \"falcon-startup.properties\",\n        tagName: \"version1\",\n        siteObj: Em.A([\n          {\n            name: \"property1\",\n            value: \"value1\"\n          },\n          {\n            name: \"property2\",\n            value: \"value2&lt;\"\n          }\n        ]),\n        result: {\n          \"type\": \"falcon-startup.properties\",\n          \"tag\": \"version1\",\n          \"properties\": {\n            \"property1\": \"value1\",\n            \"property2\": \"value2&lt;\"\n          }\n        },\n        m: \"for falcon-startup.properties\"\n\n      }\n    ];\n    tests.forEach(function (t) {\n      it(\"create site object \" + t.m, function () {\n        expect(mainServiceInfoConfigsController.createSiteObj(t.siteName, t.tagName, t.siteObj)).to.deep.eql(t.result)\n      });\n    });\n  });\n\n  describe(\"#createCoreSiteObj\", function () {\n\n    var tests = [\n      {\n        tagName: \"version1\",\n        uiConfigs: Em.A([\n          Em.Object.create({\n            name: \"property1\",\n            value: \"value1\",\n            filename: \"core-site.xml\"\n          }),\n          Em.Object.create({\n            name: \"property2\",\n            value: \"value2&lt;\",\n            filename: \"core-site.xml\"\n          })\n        ]),\n        result: {\n          \"type\": \"core-site\",\n          \"tag\": \"version1\",\n          \"properties\": {\n            \"property1\": \"value1\",\n            \"property2\": \"value2<\"\n          }\n        }\n      }\n    ];\n    tests.forEach(function (t) {\n      it(\"create core object\", function () {\n        mainServiceInfoConfigsController.set(\"uiConfigs\", t.uiConfigs);\n        expect(mainServiceInfoConfigsController.createCoreSiteObj(t.tagName)).to.deep.eql(t.result);\n      });\n    });\n  });\n\n  describe(\"#createGlobalSiteObj\", function () {\n\n    var t = {\n      tagName: \"version1\",\n      globalConfigs: Em.A([\n        Em.Object.create({\n          name: \"property1\",\n          value: \"value1\"\n        }),\n        Em.Object.create({\n          name: \"property2\",\n          value: \"value2&lt;\"\n        }),\n        Em.Object.create({\n          name: \"some_heapsize\",\n          value: \"1000\"\n        }),\n        Em.Object.create({\n          name: \"some_newsize\",\n          value: \"1000\"\n        }),\n        Em.Object.create({\n          name: \"some_maxnewsize\",\n          value: \"1000\"\n        }),\n        Em.Object.create({\n          name: \"hadoop_heapsize\",\n          value: \"1000\"\n        })\n      ]),\n      result: {\n        \"type\": \"global\",\n        \"tag\": \"version1\",\n        \"properties\": {\n          \"property1\": \"value1\",\n          \"property2\": \"value2<\",\n          \"some_heapsize\": \"1000m\",\n          \"some_newsize\": \"1000m\",\n          \"some_maxnewsize\": \"1000m\",\n          \"hadoop_heapsize\": \"1000\"\n        }\n      }\n    };\n    it(\"create global object\", function () {\n      expect(mainServiceInfoConfigsController.createGlobalSiteObj(t.tagName, t.globalConfigs)).to.deep.eql(t.result);\n    });\n  });\n\n  describe(\"#doPUTClusterConfigurationSiteErrorCallback\", function () {\n    it(\"set doPUTClusterConfigurationSiteResult to false\", function () {\n      mainServiceInfoConfigsController.doPUTClusterConfigurationSiteErrorCallback({responseText: \"\"});\n      expect(mainServiceInfoConfigsController.get(\"doPUTClusterConfigurationSiteResult\")).to.equal(false);\n    });\n  });\n\n  describe(\"#doPUTClusterConfigurationSiteSuccessCallback\", function () {\n    it(\"set doPUTClusterConfigurationSiteResult to true\", function () {\n      mainServiceInfoConfigsController.doPUTClusterConfigurationSiteSuccessCallback();\n      expect(mainServiceInfoConfigsController.get(\"doPUTClusterConfigurationSiteResult\")).to.equal(true);\n    });\n  });\n\n  describe(\"#doPUTClusterConfigurationSite\", function () {\n    var t = {\n      data: \"data\",\n      request: {\n        Clusters: {\n          desired_config: \"data\"\n        }\n      }\n    };\n    var temp = App.router.getClusterName;\n    beforeEach(function () {\n      App.router.getClusterName = function () {\n        return \"clName\";\n      };\n      sinon.spy($, \"ajax\");\n    });\n    afterEach(function () {\n      $.ajax.restore();\n      App.router.getClusterName = temp;\n    });\n    it(\"ajax request to put clsuter cfg\", function () {\n      expect(mainServiceInfoConfigsController.doPUTClusterConfigurationSite(t.data)).to.equal(mainServiceInfoConfigsController.get(\"doPUTClusterConfigurationSiteResult\"));\n      expect(JSON.parse($.ajax.args[0][0].data)).to.deep.equal(t.request);\n    });\n  });\n\n  describe(\"#isConfigChanged\", function () {\n\n    var tests = [\n      {\n        loadedConfig: {\n          apptimelineserver_heapsize: \"1024\",\n          hbase_log_dir: \"/var/log/hbase\",\n          lzo_enabled: \"true\"\n        },\n        savingConfig: {\n          apptimelineserver_heapsize: \"1024\",\n          hbase_log_dir: \"/var/log/hbase\",\n          lzo_enabled: \"true\"\n        },\n        m: \"configs doesn't changed\",\n        res: false\n      },\n      {\n        loadedConfig: {\n          apptimelineserver_heapsize: \"1024\",\n          hbase_log_dir: \"/var/log/hbase\",\n          lzo_enabled: \"true\"\n        },\n        savingConfig: {\n          apptimelineserver_heapsize: \"1024\",\n          hbase_log_dir: \"/var/log/hbase\",\n          lzo_enabled: \"false\"\n        },\n        m: \"configs changed\",\n        res: true\n      },\n      {\n        loadedConfig: {\n          apptimelineserver_heapsize: \"1024\",\n          hbase_log_dir: \"/var/log/hbase\"\n        },\n        savingConfig: {\n          apptimelineserver_heapsize: \"1024\",\n          hbase_log_dir: \"/var/log/hbase\",\n          lzo_enabled: \"false\"\n        },\n        m: \"add new config\",\n        res: true\n      }\n    ];\n\n    tests.forEach(function(t){\n      it(t.m, function () {\n        expect(mainServiceInfoConfigsController.isConfigChanged(t.loadedConfig, t.savingConfig)).to.equal(t.res);\n      });\n    });\n  });\n\n  describe(\"#addDynamicProperties\", function() {\n\n    var tests = [\n      {\n        stepConfigs: [Em.Object.create({\n          serviceName: \"WEBHCAT\",\n          configs: []\n        })],\n        content: Em.Object.create({\n          serviceName: \"WEBHCAT\"\n        }),\n        m: \"add dynamic property\",\n        addDynamic: true\n      },\n      {\n        stepConfigs: [Em.Object.create({\n          serviceName: \"WEBHCAT\",\n          configs: [\n            Em.Object.create({\n              name: \"templeton.hive.properties\"\n            })\n          ]\n        })],\n        content: Em.Object.create({\n          serviceName: \"WEBHCAT\"\n        }),\n        m: \"don't add dynamic property (already included)\",\n        addDynamic: false\n      },\n      {\n        stepConfigs: [Em.Object.create({\n          serviceName: \"HDFS\",\n          configs: []\n        })],\n        content: Em.Object.create({\n          serviceName: \"HDFS\"\n        }),\n        m: \"don't add dynamic property (wrong service)\",\n        addDynamic: false\n      }\n    ];\n    var dynamicProperty = {\n      \"name\": \"templeton.hive.properties\",\n      \"templateName\": [\"hivemetastore_host\"],\n      \"foreignKey\": null,\n      \"value\": \"hive.metastore.local=false,hive.metastore.uris=thrift://<templateName[0]>:9083,hive.metastore.sasl.enabled=yes,hive.metastore.execute.setugi=true,hive.metastore.warehouse.dir=/apps/hive/warehouse\",\n      \"filename\": \"webhcat-site.xml\"\n    };\n\n\n\n    tests.forEach(function(t) {\n      it(t.m, function() {\n        mainServiceInfoConfigsController.set(\"content\", t.content);\n        mainServiceInfoConfigsController.set(\"stepConfigs\", t.stepConfigs);\n        var configs = [];\n        mainServiceInfoConfigsController.addDynamicProperties(configs);\n        if (t.addDynamic){\n          expect(configs.findProperty(\"name\",\"templeton.hive.properties\")).to.deep.eql(dynamicProperty);\n        }\n      });\n    });\n  });\n\n  describe(\"#loadUiSideConfigs\", function () {\n\n    var t = {\n      configMapping: [\n        {\n          foreignKey: null,\n          templateName: \"\",\n          value: \"default\",\n          name: \"name1\",\n          filename: \"filename1\"\n        },\n        {\n          foreignKey: \"notNull\",\n          templateName: \"\",\n          value: \"default2\",\n          name: \"name2\",\n          filename: \"filename2\"\n        }\n      ],\n      configMappingf: [\n        {\n          foreignKey: null,\n          templateName: \"\",\n          value: \"default\",\n          name: \"name1\",\n          filename: \"filename1\"\n        }\n      ],\n      valueWithOverrides: {\n        \"value\": \"default\",\n        \"overrides\": {\n          \"value1\": \"value1\",\n          \"value2\": \"value2\"\n        }\n      },\n      uiConfigs: [\n        {\n          \"id\": \"site property\",\n          \"name\": \"name1\",\n          \"value\": \"default\",\n          \"filename\": \"filename1\",\n          \"overrides\": {\n            \"value1\": \"value1\",\n            \"value2\": \"value2\"\n          }\n        }\n      ]\n    };\n\n    beforeEach(function(){\n      sinon.stub(mainServiceInfoConfigsController, \"addDynamicProperties\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"getGlobConfigValueWithOverrides\", function () {\n        return t.valueWithOverrides\n      });\n    });\n\n    afterEach(function(){\n      mainServiceInfoConfigsController.addDynamicProperties.restore();\n      mainServiceInfoConfigsController.getGlobConfigValueWithOverrides.restore();\n    });\n\n    it(\"load ui config\", function() {\n      expect(mainServiceInfoConfigsController.loadUiSideConfigs(t.configMapping)[0]).to.deep.equal(t.uiConfigs[0]);\n      expect(mainServiceInfoConfigsController.addDynamicProperties.calledWith(t.configMappingf)).to.equal(true);\n    });\n  });\n\n  describe(\"#formatConfigValues\", function () {\n    var t = {\n      configs: [\n        Em.Object.create({ name: \"p1\", value: \" v1 v1 \", displayType: \"\" }),\n        Em.Object.create({ name: \"p2\", value: true, displayType: \"\" }),\n        Em.Object.create({ name: \"p3\", value: \" d1 \", displayType: \"directory\" }),\n        Em.Object.create({ name: \"p4\", value: \" d1 d2 d3 \", displayType: \"directories\" }),\n        Em.Object.create({ name: \"p5\", value: \" v1 \", displayType: \"password\" }),\n        Em.Object.create({ name: \"p6\", value: \" v \", displayType: \"host\" }),\n        Em.Object.create({ name: \"javax.jdo.option.ConnectionURL\", value: \" v1 \", displayType: \"advanced\" }),\n        Em.Object.create({ name: \"oozie.service.JPAService.jdbc.url\", value: \" v1 \", displayType: \"advanced\" })\n      ],\n      result: [\n        Em.Object.create({ name: \"p1\", value: \" v1 v1\", displayType: \"\" }),\n        Em.Object.create({ name: \"p2\", value: \"true\", displayType: \"\" }),\n        Em.Object.create({ name: \"p3\", value: \"d1\", displayType: \"directory\" }),\n        Em.Object.create({ name: \"p4\", value: \"d1,d2,d3\", displayType: \"directories\" }),\n        Em.Object.create({ name: \"p5\", value: \" v1 \", displayType: \"password\" }),\n        Em.Object.create({ name: \"p6\", value: \"v\", displayType: \"host\" }),\n        Em.Object.create({ name: \"javax.jdo.option.ConnectionURL\", value: \" v1\", displayType: \"advanced\" }),\n        Em.Object.create({ name: \"oozie.service.JPAService.jdbc.url\", value: \" v1\", displayType: \"advanced\" })\n      ]\n    };\n\n    it(\"format config values\", function () {\n      mainServiceInfoConfigsController.formatConfigValues(t.configs);\n      expect(t.configs).to.deep.equal(t.result);\n    });\n\n  });\n\n  describe(\"#setHostForService\", function () {\n    var tests = [\n      {\n        globalConfigs: [],\n        componentName: \"ZOOKEEPER_SERVER\",\n        serviceName: \"ZOOKEEPER\",\n        hostProperty: \"zookeeperserver_hosts\",\n        multiple: true,\n        result: [\"hostName1\", \"hostName2\"],\n        serviceConfigs: [\n          {\n            serviceName: \"ZOOKEEPER\",\n            configs: [\n              {\n                \"name\": \"zookeeperserver_hosts\",\n                \"defaultValue\": null\n              }\n            ]\n          }\n        ],\n        m: \"set hostNames to globalConfigs for current service\"\n      },\n      {\n        globalConfigs: [],\n        componentName: \"STORM_UI_SERVER\",\n        serviceName: \"STORM\",\n        hostProperty: \"stormuiserver_host\",\n        multiple: false,\n        result: \"hostName1\",\n        serviceConfigs: [\n          {\n            serviceName: \"STORM\",\n            configs: [\n              {\n                \"name\": \"stormuiserver_host\",\n                \"defaultValue\": null\n              }\n            ]\n          }\n        ],\n        m: \"set hostName to globalConfigs for current service\"\n      }\n    ];\n\n    beforeEach(function () {\n      sinon.stub(mainServiceInfoConfigsController, \"getMasterComponentHostValue\", function (a,m) {\n        if (m) {\n          return [\"hostName1\", \"hostName2\"];\n        } else {\n          return \"hostName1\";\n        }\n      });\n    });\n\n    afterEach(function () {\n      mainServiceInfoConfigsController.getMasterComponentHostValue.restore();\n    });\n\n    tests.forEach(function (t) {\n      it(t.m, function () {\n        mainServiceInfoConfigsController.set(\"globalConfigs\", t.globalConfigs);\n        mainServiceInfoConfigsController.set(\"serviceConfigs\", t.serviceConfigs);\n        mainServiceInfoConfigsController.setHostForService(t.serviceName, t.componentName, t.hostProperty, t.multiple);\n        expect(mainServiceInfoConfigsController.get(\"globalConfigs\").findProperty(\"name\", t.hostProperty).defaultValue).to.eql(t.result);\n\n      });\n    }, this);\n  });\n\n  describe(\"#addHostNamesToGlobalConfig\", function () {\n    var tests = [\n      {\n        globalConfigs: [],\n        serviceName: \"ZOOKEEPER\",\n        hostProperty: \"zookeeperserver_hosts\",\n        nameNodeHost: \"namenode_host\",\n        serviceConfigs: [\n          {\n            serviceName: \"ZOOKEEPER\",\n            configs: [\n              {\n                \"name\": \"zookeeperserver_hosts\",\n                \"defaultValue\": null\n              },\n              {\n                \"name\": \"namenode_host\",\n                \"defaultValue\": null\n              }\n            ]\n          }\n        ],\n        result: [\"hostName1\", \"hostName2\"],\n        result2: [\"hostName1\", \"hostName2\"],\n        m: \"set hostNames to globalConfigs for required services\"\n      },\n      {\n        globalConfigs: [\n          {\n            \"name\": \"hive_database\",\n            \"value\": \"Existing MySQL Database\"\n          },\n          {\n            \"name\": \"hive_hostname\",\n            \"isVisible\": false\n          }\n        ],\n        serviceName: \"HIVE\",\n        hostProperty: \"hivemetastore_host\",\n        nameNodeHost: \"namenode_host\",\n        isVisible: true,\n        serviceConfigs: [\n          {\n            serviceName: \"HIVE\",\n            configs: [\n              {\n                \"name\": \"hivemetastore_host\",\n                \"defaultValue\": null\n              },\n              {\n                \"name\": \"namenode_host\",\n                \"defaultValue\": null\n              }\n            ]\n          }\n        ],\n        result: \"hostName3\",\n        result2: [\"hostName1\", \"hostName2\"],\n        m: \"set hostNames to globalConfigs for required services and isVisible property for HIVE\"\n      }\n    ];\n\n    beforeEach(function () {\n      mainServiceInfoConfigsController.set(\"content\", Em.Object.create({}));\n      sinon.stub(mainServiceInfoConfigsController, \"getMasterComponentHostValue\", function (a,m) {\n        if (m) {\n          return [\"hostName1\", \"hostName2\"];\n        } else {\n          return \"hostName3\";\n        }\n      });\n    });\n\n    afterEach(function () {\n      mainServiceInfoConfigsController.getMasterComponentHostValue.restore();\n    });\n\n    tests.forEach(function (t) {\n      it(t.m, function () {\n        mainServiceInfoConfigsController.set(\"content.serviceName\", t.serviceName);\n        mainServiceInfoConfigsController.set(\"globalConfigs\", t.globalConfigs);\n        mainServiceInfoConfigsController.set(\"serviceConfigs\", t.serviceConfigs);\n        mainServiceInfoConfigsController.addHostNamesToGlobalConfig();\n        expect(mainServiceInfoConfigsController.get(\"globalConfigs\").findProperty(\"name\", t.hostProperty).defaultValue).to.eql(t.result);\n        expect(mainServiceInfoConfigsController.get(\"globalConfigs\").findProperty(\"name\", t.nameNodeHost).defaultValue).to.eql(t.result2);\n        if (t.serviceName == \"HIVE\" || t.serviceName == \"OOZIE\") {\n          expect(mainServiceInfoConfigsController.get(\"globalConfigs\").findProperty(\"name\", t.hostProperty).isVisible).to.eql(t.isVisible);\n        }\n      });\n    }, this);\n  });\n\n  describe(\"#doPUTClusterConfiguration\", function () {\n    var tests = [\n      {\n        configs: {\n          properties: {\n            property1: \"1001\",\n            property2: \"text\"\n          }\n        },\n        siteName: \"global\",\n        r: true,\n        m: \"save changed properties\"\n      },\n      {\n        configs: {\n          properties: {\n            property1: \"1000\",\n            property2: \"text\"\n          }\n        },\n        siteName: \"global\",\n        r: true,\n        m: \"skip saving becouse nothing changed (returns true)\"\n      },\n      {\n        configs: {\n          properties: {\n            property1: \"1001\",\n            property2: \"text\"\n          },\n          success: false\n        },\n        siteName: \"global\",\n        r: false,\n        m: \"saving failed\"\n      }\n    ];\n    var getConfigsByTags = {\n      property1: \"1000\",\n      property2: \"text\"\n    }\n    beforeEach(function () {\n      sinon.stub(App.router.get('configurationController'), \"getConfigsByTags\", function () {\n        return getConfigsByTags\n      });\n      sinon.stub(mainServiceInfoConfigsController, \"doPUTClusterConfigurationSite\", function (k) {\n        return k.success !== false;\n      });\n    });\n\n    afterEach(function () {\n      mainServiceInfoConfigsController.doPUTClusterConfigurationSite.restore();\n      App.router.get('configurationController').getConfigsByTags.restore();\n    });\n    tests.forEach(function (t) {\n      it(t.m, function () {\n        var siteNameToServerDataMap = {};\n        expect(mainServiceInfoConfigsController.doPUTClusterConfiguration(siteNameToServerDataMap, t.siteName, t.configs)).to.equal(t.r);\n        expect(siteNameToServerDataMap[t.siteName]).to.eql(t.configs);\n      })\n    });\n  });\n\n  describe(\"#createConfigObject\", function() {\n    var tests = [\n      {\n        siteName: \"global\",\n        method: \"createGlobalSiteObj\"\n      },\n      {\n        siteName: \"core-site\",\n        serviceName: \"HDFS\",\n        method: \"createCoreSiteObj\"\n      },\n      {\n        siteName: \"core-site\",\n        serviceName: \"ANY\",\n        method: false\n      },\n      {\n        siteName: \"any\",\n        method: \"createSiteObj\"\n      },\n      {\n        siteName: \"mapred-queue-acls\",\n        method: false,\n        capacitySchedulerUi: false\n      },\n      {\n        siteName: \"mapred-queue-acls\",\n        method: \"createSiteObj\",\n        capacitySchedulerUi: true\n      }\n    ];\n\n    var capacitySchedulerUi = App.supports.capacitySchedulerUi;\n    beforeEach(function() {\n      sinon.stub(mainServiceInfoConfigsController, \"createGlobalSiteObj\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"createCoreSiteObj\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"createSiteObj\", Em.K);\n      mainServiceInfoConfigsController.set(\"content\", {});\n    });\n\n    afterEach(function() {\n      mainServiceInfoConfigsController.createGlobalSiteObj.restore();\n      mainServiceInfoConfigsController.createCoreSiteObj.restore();\n      mainServiceInfoConfigsController.createSiteObj.restore();\n      App.supports.capacitySchedulerUi = capacitySchedulerUi;\n    });\n\n    tests.forEach(function(t) {\n      it(\"create object for \" + t.siteName + \" run method \" + t.method, function() {\n        App.supports.capacitySchedulerUi = t.capacitySchedulerUi;\n        mainServiceInfoConfigsController.set(\"content.serviceName\", t.serviceName);\n        mainServiceInfoConfigsController.createConfigObject(t.siteName, \"versrion1\");\n        if (t.method) {\n          expect(mainServiceInfoConfigsController[t.method].calledOnce).to.equal(true);\n        } else {\n          expect(mainServiceInfoConfigsController[\"createGlobalSiteObj\"].calledOnce).to.equal(false);\n          expect(mainServiceInfoConfigsController[\"createCoreSiteObj\"].calledOnce).to.equal(false);\n          expect(mainServiceInfoConfigsController[\"createSiteObj\"].calledOnce).to.equal(false);\n        }\n      });\n    });\n  });\n\n  describe(\"#doPUTClusterConfigurations\", function() {\n\n    var t = {\n     propertyName: \"global\",\n     properties: {\n       propertu1: \"text\",\n       property2: 1000\n     },\n     serviceConfigTags: [{\n       siteName: \"global\",\n       tagName: \"version1\"\n     }]\n    };\n\n    beforeEach(function() {\n      sinon.stub(mainServiceInfoConfigsController, \"createConfigObject\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"setNewTagNames\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"doPUTClusterConfiguration\", function (siteNameToServerDataMap) {\n        siteNameToServerDataMap[t.propertyName] = t.properties;\n        return true;\n      });\n    });\n\n    afterEach(function() {\n      mainServiceInfoConfigsController.createConfigObject.restore();\n      mainServiceInfoConfigsController.setNewTagNames.restore();\n      mainServiceInfoConfigsController.doPUTClusterConfiguration.restore();\n    });\n\n    it(\"Saves cluster level configurations\", function() {\n      var siteNameToServerDataMap = {};\n      siteNameToServerDataMap[t.propertyName] = t.properties;\n      mainServiceInfoConfigsController.set(\"serviceConfigTags\", t.serviceConfigTags);\n      expect(mainServiceInfoConfigsController.doPUTClusterConfigurations()).to.equal(true);\n      expect(mainServiceInfoConfigsController[\"createConfigObject\"].calledOnce).to.equal(true);\n      expect(mainServiceInfoConfigsController[\"setNewTagNames\"].calledOnce).to.equal(true);\n      expect(mainServiceInfoConfigsController[\"doPUTClusterConfiguration\"].calledOnce).to.equal(true);\n      expect(mainServiceInfoConfigsController.get(\"savedSiteNameToServerServiceConfigDataMap\")).to.eql(siteNameToServerDataMap);\n    });\n  });\n\n  describe(\"#putConfigGroupChanges\", function() {\n\n    var t = {\n      data: {\n        ConfigGroup: {\n          id: \"id\"\n        }\n      },\n      request: [{\n        ConfigGroup: {\n          id: \"id\"\n        }\n      }]\n    };\n\n    beforeEach(function() {\n      sinon.spy($,\"ajax\");\n    });\n    afterEach(function() {\n      $.ajax.restore();\n    });\n\n    it(\"updates configs groups\", function() {\n      mainServiceInfoConfigsController.putConfigGroupChanges(t.data);\n      expect(JSON.parse($.ajax.args[0][0].data)).to.deep.equal(t.request);\n    });\n  });\n\n  describe(\"#putConfigGroupChangesSuccess\", function() {\n    it(\"set isPutConfigGroupChangesSuccess to true\", function() {\n      mainServiceInfoConfigsController.set(\"mainServiceInfoConfigsController\", false);\n      mainServiceInfoConfigsController.putConfigGroupChangesSuccess();\n      expect(mainServiceInfoConfigsController.get(\"isPutConfigGroupChangesSuccess\")).to.equal(true);\n    });\n  });\n\n  describe(\"#setValueForCheckBox\", function() {\n    var tests = [\n      {\n        serviceConfigPropertyInput: Em.Object.create({\n          value: \"true\",\n          defaultValue: \"true\",\n          displayType: 'checkbox'\n        }),\n        serviceConfigProperty: Em.Object.create({\n            value: true,\n            defaultValue: true,\n          displayType: 'checkbox'\n        })\n      },\n      {\n        serviceConfigPropertyInput: Em.Object.create({\n          value: \"false\",\n          defaultValue: \"false\",\n          displayType: 'checkbox'\n        }),\n        serviceConfigProperty: Em.Object.create({\n          value: false,\n          defaultValue: false,\n          displayType: 'checkbox'\n        })\n      },\n      {\n        serviceConfigPropertyInput: Em.Object.create({\n          value: \"false\",\n          defaultValue: \"false\"\n        }),\n        serviceConfigProperty: Em.Object.create({\n          value: \"false\",\n          defaultValue: \"false\"\n        })\n      }\n    ];\n    tests.forEach(function(t) {\n      it(\"set \" + t.serviceConfigPropertyInput.value, function(){\n        var serviceConfigProperty = t.serviceConfigPropertyInput;\n        mainServiceInfoConfigsController.setValueForCheckBox(serviceConfigProperty);\n        expect(serviceConfigProperty).to.eql(t.serviceConfigProperty);\n      });\n    });\n  });\n\n  describe(\"#setEditability\", function () {\n\n    var tests = [\n      {\n        isAdmin: true,\n        isHostsConfigsPage: false,\n        defaultGroupSelected: true,\n        isReconfigurable: true,\n        isEditable: true,\n        m: \"\"\n      },\n      {\n        isAdmin: false,\n        isHostsConfigsPage: false,\n        defaultGroupSelected: true,\n        isReconfigurable: true,\n        isEditable: false,\n        m: \"(non admin)\"\n      },\n      {\n        isAdmin: true,\n        isHostsConfigsPage: true,\n        defaultGroupSelected: true,\n        isReconfigurable: true,\n        isEditable: false,\n        m: \"(isHostsConfigsPage)\"\n      },\n      {\n        isAdmin: true,\n        isHostsConfigsPage: false,\n        defaultGroupSelected: false,\n        isReconfigurable: true,\n        isEditable: false,\n        m: \"(defaultGroupSelected is false)\"\n      },\n      {\n        isAdmin: true,\n        isHostsConfigsPage: false,\n        defaultGroupSelected: true,\n        isReconfigurable: false,\n        isEditable: false,\n        m: \"(isReconfigurable is false)\"\n      }\n    ];\n\n    var a = App.get('isAdmin');\n    afterEach(function () {\n      App.set('isAdmin', a);\n    });\n    tests.forEach(function(t) {\n      it(\"set isEditable \" + t.isEditable + t.m, function(){\n        App.set('isAdmin', t.isAdmin);\n        mainServiceInfoConfigsController.set(\"isHostsConfigsPage\", t.isHostsConfigsPage);\n        var serviceConfigProperty = Em.Object.create({\n          isReconfigurable: t.isReconfigurable\n        });\n        mainServiceInfoConfigsController.setEditability(serviceConfigProperty, t.defaultGroupSelected);\n        expect(serviceConfigProperty.get(\"isEditable\")).to.equal(t.isEditable);\n      });\n    });\n  });\n\n  describe(\"#setValidator\", function () {\n    var tests = [\n      {\n        content: Em.Object.create({\n          serviceName: \"service1\"\n        }),\n        serviceConfigsData: {\n          configsValidator: Em.Object.create({\n            configValidators: {\n              val1: \"yarnNodemanagerResourceMemoryMb\",\n              val2: \"yarnSchedulerMaximumAllocationMb\"\n            }\n          })\n        },\n        serviceConfigPropertyInput: Em.Object.create({\n          serviceName: \"service1\",\n          name: \"val1\",\n          serviceValidator: null,\n          isVisible: true\n        }),\n        serviceConfigProperty: Em.Object.create({\n          serviceName: \"service1\",\n          name: \"val1\",\n          serviceValidator: Em.Object.create({\n            configValidators: {\n              val1: \"yarnNodemanagerResourceMemoryMb\",\n              val2: \"yarnSchedulerMaximumAllocationMb\"\n            }\n          }),\n          isVisible: true\n        }),\n\n        m: \"set appropriate configsValidator \"\n      },\n      {\n        content: Em.Object.create({\n          serviceName: \"service\"\n        }),\n        serviceConfigsData: {\n          configsValidator: Em.Object.create({\n            configValidators: {\n              val1: \"yarnNodemanagerResourceMemoryMb\",\n              val2: \"yarnSchedulerMaximumAllocationMb\"\n            }\n          })\n        },\n        serviceConfigPropertyInput: Em.Object.create({\n          serviceName: \"service1\",\n          name: \"yarnNodemanagerResourceMemoryMb\",\n          serviceValidator: null,\n          isVisible: true\n        }),\n        serviceConfigProperty: Em.Object.create({\n          serviceName: \"service1\",\n          name: \"yarnNodemanagerResourceMemoryMb\",\n          serviceValidator: null,\n          isVisible: false\n        }),\n        m: \"different service \"\n      }\n    ];\n    tests.forEach(function (t) {\n      it(t.m, function () {\n        mainServiceInfoConfigsController.set(\"content\", t.content);\n        var serviceConfigProperty = t.serviceConfigPropertyInput;\n        mainServiceInfoConfigsController.setValidator(serviceConfigProperty, t.serviceConfigsData);\n        expect(serviceConfigProperty).to.deep.eql(t.serviceConfigProperty);\n      });\n    });\n  });\n\n  describe(\"#checkOverrideProperty\", function () {\n    var tests = [{\n      overrideToAdd: {\n        name: \"name1\"\n      },\n      componentConfig: {\n        configs: [\n          {\n            name: \"name1\"\n          }\n        ]\n      },\n      add: true,\n      m: \"add property\"\n    },\n      {\n        overrideToAdd: {\n          name: \"name1\"\n        },\n        componentConfig: {\n          configs: [\n            {\n              name: \"name2\"\n            }\n          ]\n        },\n        add: false,\n        m: \"don't add property, different names\"\n      },\n      {\n        overrideToAdd: null,\n        componentConfig: {},\n        add: false,\n        m: \"don't add property, overrideToAdd is null\"\n      }];\n\n    beforeEach(function() {\n      sinon.stub(mainServiceInfoConfigsController,\"addOverrideProperty\", Em.K)\n    });\n    afterEach(function() {\n      mainServiceInfoConfigsController.addOverrideProperty.restore();\n    });\n    tests.forEach(function(t) {\n      it(t.m, function() {\n        mainServiceInfoConfigsController.set(\"overrideToAdd\", t.overrideToAdd);\n        mainServiceInfoConfigsController.checkOverrideProperty(t.componentConfig);\n        if(t.add) {\n          expect(mainServiceInfoConfigsController.addOverrideProperty.calledOnce).to.equal(true);\n          expect(mainServiceInfoConfigsController.get(\"overrideToAdd\")).to.equal(null);\n        } else {\n          expect(mainServiceInfoConfigsController.addOverrideProperty.calledOnce).to.equal(false);\n        }\n      });\n    });\n  });\n\n  describe(\"#setRecommendedDefaults\", function() {\n    var tests = [{\n      content: Em.Object.create({\n        serviceName: \"service1\"\n      }),\n      serviceConfigsDataInput:[{\n        serviceName: \"service1\",\n        defaultsProviders: [\n          App.DefaultsProvider.create({\n            getDefaults: function() {\n            return {\n              p1: \"-Xmx546m1\",\n              p2: null\n            }\n          }\n          })\n        ],\n        configsValidator: Em.Object.create({\n          recommendedDefaults: null\n        })\n      }],\n      advancedConfigs: [\n        { name: \"p1\", value: \"1\"},\n        { name: \"p2\", value: \"2\"}\n      ],\n\n      serviceConfigsData:[{\n        serviceName: \"service1\",\n        defaultsProviders: [\n          App.DefaultsProvider.create({\n            getDefaults: function() {\n              return {\n                p1: \"-Xmx546m1\",\n                p2: null\n              }\n            }\n          })\n        ],\n        configsValidator: Em.Object.create({\n          recommendedDefaults: {\n            p1: \"-Xmx546m1\",\n            p2: \"2\"\n          }\n        })\n      }]\n    }];\n\n    beforeEach(function() {\n      sinon.stub(mainServiceInfoConfigsController, \"getInfoForDefaults\", Em.K);\n    });\n    afterEach(function() {\n      mainServiceInfoConfigsController.getInfoForDefaults.restore();\n    });\n    tests.forEach(function(t) {\n      it(\"\", function() {\n        mainServiceInfoConfigsController.set(\"content\", t.content);\n        mainServiceInfoConfigsController.set(\"serviceConfigsData\", t.serviceConfigsDataInput);\n        mainServiceInfoConfigsController.setRecommendedDefaults(t.advancedConfigs);\n        expect(mainServiceInfoConfigsController.get(\"serviceConfigsData\")[0].configsValidator).to.deep.eql(t.serviceConfigsData[0].configsValidator);\n\n      });\n    });\n  });\n\n\n  describe(\"#setValuesForOverrides\", function() {\n    var tests = [\n      {\n        overrides: [\n          {name: \"override1\"},\n          {name: \"override2\"}\n        ],\n        _serviceConfigProperty: {},\n        serviceConfigProperty: Em.Object.create({overrides: Em.A([])}),\n        defaultGroupSelected: true\n      }\n    ];\n    beforeEach(function() {\n      sinon.stub(mainServiceInfoConfigsController, \"createNewSCP\", function(override) {return {name: override.name}})\n    });\n    afterEach(function() {\n      mainServiceInfoConfigsController.createNewSCP.restore();\n    });\n    tests.forEach(function(t) {\n      it(\"set values for overrides. use createNewSCP method to do this\", function() {\n        var serviceConfigProperty = t.serviceConfigProperty;\n        mainServiceInfoConfigsController.setValuesForOverrides(t.overrides, serviceConfigProperty, t.serviceConfigProperty, t.defaultGroupSelected);\n        expect(serviceConfigProperty.get(\"overrides\")[0]).to.eql(t.overrides[0]);\n        expect(serviceConfigProperty.get(\"overrides\")[1]).to.eql(t.overrides[1]);\n      });\n    });\n  });\n  describe(\"#createConfigProperty\", function() {\n    var tests = [\n      {\n        _serviceConfigProperty: {\n          overrides: {\n\n          }\n        },\n        defaultGroupSelected: true,\n        restartData: {},\n        serviceConfigsData: {},\n        serviceConfigProperty: {\n          overrides: null,\n          isOverridable: true\n        }\n      }];\n    beforeEach(function() {\n      sinon.stub(mainServiceInfoConfigsController, \"setValueForCheckBox\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"setRestartInfo\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"setValidator\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"setValuesForOverrides\", Em.K);\n      sinon.stub(mainServiceInfoConfigsController, \"setEditability\", Em.K);\n    });\n    afterEach(function() {\n      mainServiceInfoConfigsController.setValueForCheckBox.restore();\n      mainServiceInfoConfigsController.setRestartInfo.restore();\n      mainServiceInfoConfigsController.setValidator.restore();\n      mainServiceInfoConfigsController.setValuesForOverrides.restore();\n      mainServiceInfoConfigsController.setEditability.restore();\n    });\n    tests.forEach(function(t) {\n      it(\"create service config. run methods to correctly set object fileds\", function() {\n        var result = mainServiceInfoConfigsController.createConfigProperty(t._serviceConfigProperty, t.defaultGroupSelected, t.restartData, t.serviceConfigsData);\n        expect(mainServiceInfoConfigsController.setValueForCheckBox.calledWith(t.serviceConfigProperty));\n        expect(mainServiceInfoConfigsController.setRestartInfo.calledWith(t.restartData, t.serviceConfigProperty));\n        expect(mainServiceInfoConfigsController.setValidator.calledWith(t.serviceConfigProperty, t.serviceConfigsData));\n        expect(mainServiceInfoConfigsController.setValuesForOverrides.calledWith(t._serviceConfigProperty.overrides, t._serviceConfigProperty, t.serviceConfigProperty, t.defaultGroupSelected));\n        expect(mainServiceInfoConfigsController.setValidator.calledWith(t.serviceConfigProperty, t.defaultGroupSelected));\n        expect(result.getProperties('overrides','isOverridable')).to.eql(t.serviceConfigProperty);\n      });\n    });\n  });\n\n  describe(\"#createNewSCP\", function() {\n    var tests = [\n      {\n        overrides: {\n          value: \"value\",\n          group: {\n            value: \"group1\"\n          }\n        },\n        _serviceConfigProperty: {},\n        serviceConfigProperty: {\n          value: \"parentSCP\"\n        },\n        defaultGroupSelected: true,\n\n        newSCP: {\n          value: \"value\",\n          isOriginalSCP: false,\n          parentSCP:{\n            value: \"parentSCP\"\n          },\n          group: {\n            value: \"group1\"\n          },\n          isEditable: false\n        }\n      }\n    ];\n    tests.forEach(function(t) {\n      it(\"\", function() {\n        var newSCP = mainServiceInfoConfigsController.createNewSCP(t.overrides, t._serviceConfigProperty, t.serviceConfigProperty, t.defaultGroupSelected);\n        expect(newSCP.getProperties(\"value\", \"isOriginalSCP\", \"parentSCP\", \"group\", \"isEditable\")).to.eql(t.newSCP);\n      });\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nApp = require('app');\nrequire('ember');\nrequire('models/host_component')\nrequire('views/common/modal_popup');\nrequire('mixins/common/userPref');\nrequire('controllers/application');\nrequire('controllers/global/background_operations_controller');\nrequire('controllers/global/cluster_controller');\nrequire('controllers/main/service/reassign_controller')\nrequire('controllers/main/service/item');\nvar batchUtils = require('utils/batch_scheduled_requests');\n\ndescribe('App.MainServiceItemController', function () {\n\n  describe('#setStartStopState', function () {\n    var tests = [\n      {\n        serviceController: {\n          serviceName: \"YARN\"\n        },\n        backgroundOperationsController: {\n          services: [\n            {\n              isRunning: true,\n              dependentService: \"ALL_SERVICES\"\n            }\n          ]\n        },\n        isPending: true,\n        m: 'operaion is active because all services are running'\n      },\n      {\n        serviceController: {\n          serviceName: \"HBASE\"\n        },\n        backgroundOperationsController: {\n          services: [\n            {\n              isRunning: true,\n              dependentService: \"HBASE\"\n            }\n          ]\n        },\n        isPending: true,\n        m: 'operaion is active button because current service is running'\n      },\n      {\n        serviceController: {\n          serviceName: \"HDFS\"\n        },\n        backgroundOperationsController: {\n          services: [\n\n          ]\n        },\n        isPending: true,\n        m: 'pending is true - backgroundOperationsController.services is empty'\n      },\n      {\n        serviceController: {\n          serviceName: \"HBASE\"\n        },\n        backgroundOperationsController: {\n          services: [\n            {\n              isRunning: false,\n              dependentService: \"ALL_SERVICES\"\n            }\n          ]\n        },\n        isPending: false,\n        m: 'pending is false - operation is not running'\n      },\n      {\n        serviceController: {\n          serviceName: \"HBASE\"\n        },\n        backgroundOperationsController: {\n          services: [\n            {\n              isRunning: true,\n              dependentService: \"HDFS\"\n            }\n          ]\n        },\n        isPending: false,\n        m: 'pending is false - current service is not running'\n      }\n    ];\n\n\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var backgroundOperationsController = App.BackgroundOperationsController.create();\n        backgroundOperationsController.set('services', []);\n        test.backgroundOperationsController.services.forEach(function (service) {\n          backgroundOperationsController.get('services').push(service);\n        });\n        backgroundOperationsController.set(\"serviceTimestamp\", new Date().getTime());\n        App.router.set('backgroundOperationsController', backgroundOperationsController);\n        var mainServiceItemController = App.MainServiceItemController.create({content: {serviceName: test.serviceController.serviceName}});\n        mainServiceItemController.setStartStopState();\n        expect(mainServiceItemController.get('isPending')).to.equal(test.isPending);\n      });\n    })\n  });\n\n  describe('#reassignMaster()', function () {\n    var v;\n    var tests = [\n      {\n        host_components: [\n          {component_name: \"RESOURCEMANGER\"}\n        ],\n        conponentName: \"RESOURCEMANGER\",\n        result: true,\n        m: 'run reassignMaster'\n      },\n      {\n        host_components: [\n          {component_name: \"RESOURCEMANGER\"}\n        ],\n        conponentName: \"DATANODE\",\n        result: false,\n        m: 'don\\t run reassignMaster'\n      }\n    ];\n\n    tests.forEach(function (test) {\n      var reassignMasterController = App.ReassignMasterController.create({currentStep: ''});\n      beforeEach(function () {\n        sinon.spy(reassignMasterController, 'saveComponentToReassign');\n        sinon.spy(reassignMasterController, 'getSecurityStatus');\n        sinon.spy(reassignMasterController, 'setCurrentStep');\n        App.router.transitionTo = Em.K;\n      });\n      afterEach(function () {\n        reassignMasterController.saveComponentToReassign.restore();\n        reassignMasterController.getSecurityStatus.restore();\n        reassignMasterController.setCurrentStep.restore();\n        App.router.transitionTo = v;\n      });\n      it(test.m, function () {\n        v = App.router.transitionTo;\n        var mainServiceItemController = App.MainServiceItemController.create({});\n        App.router.set('reassignMasterController', reassignMasterController);\n        App.store.loadMany(App.HostComponent, test.host_components);\n        mainServiceItemController.reassignMaster(test.conponentName);\n        expect(reassignMasterController.saveComponentToReassign.calledOnce).to.equal(test.result);\n        expect(reassignMasterController.getSecurityStatus.calledOnce).to.equal(test.result);\n        expect(reassignMasterController.setCurrentStep.calledOnce).to.equal(test.result);\n      });\n    }, this);\n  });\n\n  describe(\"#updateService\", function () {\n\n    var tests = [\n      {\n        params: {\n          passive_state: \"ON\"\n        },\n        m: \"turn on passive\"\n      },\n      {\n        params: {\n          passive_state: \"OFF\"\n        },\n        m: \"turn off passive\"\n      }\n    ];\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var clusterController = App.ClusterController.create();\n        App.router.set('clusterController', clusterController);\n        var mainServiceItemController = App.MainServiceItemController.create({content: {passiveState: \"ON\"}});\n        mainServiceItemController.updateService(null, null, test.params);\n        expect(mainServiceItemController.get('content.passiveState')).to.equal(test.params.passive_state);\n      });\n    });\n  });\n\n  describe(\"#doAction\", function () {\n\n    var el = document.createElement(\"BUTTON\");\n    el.disabled = false;\n    var tests = [\n      {\n        event: {\n          target: el,\n          context: {\n            action: 'runSmokeTest'\n          }\n        },\n        m: \"run runSmokeTest\"\n      },\n      {\n        event: {\n          target: el,\n          context: {\n            action: 'refreshConfigs'\n          }\n        },\n        m: \"run refreshConfigs\"\n      },\n      {\n        event: {\n          target: el,\n          context: {\n            action: 'restartAllHostComponents'\n          }\n        },\n        m: \"run restartAllHostComponents\"\n      },\n      {\n        event: {\n          target: el,\n          context: {\n            action: 'rollingRestart'\n          }\n        },\n        m: \"run rollingRestart\"\n      }\n    ];\n\n    tests.forEach(function (test) {\n      var mainServiceItemController = App.MainServiceItemController.create({});\n      mainServiceItemController.set(test.event.context.action, Em.K);\n      beforeEach(function () {\n        sinon.spy(mainServiceItemController, test.event.context.action);\n      });\n      afterEach(function () {\n        mainServiceItemController[test.event.context.action].restore();\n      });\n      it(test.m, function () {\n        mainServiceItemController.doAction(test.event);\n        expect(mainServiceItemController[test.event.context.action].calledOnce).to.equal(!test.event.target.disabled);\n      });\n    });\n  });\n\n  describe(\"#startStopPopupPrimary\", function () {\n\n\n    var tests = [\n      {\n        data: {\n          \"serviceName\": \"HDFS\",\n          \"state\": \"STARTED\",\n          \"query\": Em.Object.create({ServiceInfo: \"FAIL\"})\n        },\n        request: {\n          \"RequestInfo\": {\n            \"context\": \"_PARSE_.START.HDFS\"\n          },\n          \"Body\": {\n            \"ServiceInfo\": {\n              \"state\": \"STARTED\"\n            }\n          }\n        },\n        m: \"Start HDFS\"\n      },\n      {\n        data: {\n          \"serviceName\": \"YARN\",\n          \"state\": \"STOPPED\",\n          \"query\": Em.Object.create({ServiceInfo: \"FAIL\"})\n        },\n        request: {\n          \"RequestInfo\": {\n            \"context\": \"_PARSE_.STOP.YARN\"\n          },\n          \"Body\": {\n            \"ServiceInfo\": {\n              \"state\": \"STOPPED\"\n            }\n          }\n        },\n        m: \"Stop YARN\"\n      }\n    ];\n\n    beforeEach(function () {\n      sinon.spy($, 'ajax');\n    });\n\n    afterEach(function () {\n      $.ajax.restore();\n    });\n\n\n    tests.forEach(function (test) {\n      it('', function () {\n        var mainServiceItemController = App.MainServiceItemController.create({content: {serviceName: test.data.serviceName}});\n        mainServiceItemController.startStopPopupPrimary(test.data.state, test.data.query);\n        expect($.ajax.calledOnce).to.equal(true);\n\n        expect(JSON.parse($.ajax.args[0][0].data).Body.ServiceInfo.state).to.equal(test.request.Body.ServiceInfo.state);\n        expect(JSON.parse($.ajax.args[0][0].data).RequestInfo.context).to.equal(test.request.RequestInfo.context);\n\n        expect(mainServiceItemController.get('isStopDisabled')).to.equal(true);\n        expect(mainServiceItemController.get('isStartDisabled')).to.equal(true);\n      });\n    });\n\n\n  });\n\n  describe(\"#startStopPopupSuccessCallback\", function () {\n\n    var data = {\n      Requests: true\n    };\n    var params = Em.Object.create({\n      query: Em.Object.create()\n    });\n    var ajaxOptions = {\n      data: '{\"RequestInfo\":{\"context\":\"_PARSE_.STOP.ZOOKEEPER\"},\"Body\":{\"ServiceInfo\":{\"state\":\"INSTALLED\"}}}'\n    };\n\n    var content = {\n      workStatus: \"\",\n      hostComponents: [\n        {\n          workStatus: \"\"\n        }\n      ]\n    };\n\n    var mainServiceItemController = App.MainServiceItemController.create({content: content});\n    var applicationController = App.ApplicationController.create(App.UserPref, {});\n    var clusterController = App.ClusterController.create({loadUpdatedStatusDelayed: Em.K});\n    var backgroundOperationsController = App.BackgroundOperationsController.create({showPopup: Em.K});\n    App.testMode = false;\n    beforeEach(function () {\n      App.testMode = false;\n      sinon.spy(clusterController, \"loadUpdatedStatusDelayed\");\n    });\n    afterEach(function () {\n      clusterController.loadUpdatedStatusDelayed.restore();\n      App.testMode = true;\n    });\n    it(\"open bgo popup\", function () {\n      App.router.set('applicationController', applicationController);\n      App.router.set('clusterController', clusterController);\n      App.router.set('backgroundOperationsController', backgroundOperationsController);\n      mainServiceItemController.startStopPopupSuccessCallback(data, ajaxOptions, params);\n      expect(clusterController.loadUpdatedStatusDelayed.calledOnce).to.equal(true);\n    })\n  });\n\n\n  describe(\"#startService , #stopService\", function () {\n    var mainServiceItemController = App.MainServiceItemController.create({startStopPopup: Em.K});\n    beforeEach(function () {\n      sinon.spy(mainServiceItemController, \"startStopPopup\");\n    });\n    afterEach(function () {\n      mainServiceItemController.startStopPopup.restore();\n    });\n    it(\"start service\", function () {\n      mainServiceItemController.startService({});\n      expect(mainServiceItemController.startStopPopup.calledWith({},App.HostComponentStatus.started)).to.equal(true);\n    });\n    it(\"stop service\", function () {\n      mainServiceItemController.stopService({});\n      expect(mainServiceItemController.startStopPopup.calledWith({},App.HostComponentStatus.stopped)).to.equal(true);\n    });\n  });\n\n\n  describe(\"#turnOnOffPassive\", function () {\n    var mainServiceItemController = App.MainServiceItemController.create({turnOnOffPassiveRequest: Em.K});\n    beforeEach(function () {\n      sinon.spy(mainServiceItemController, \"turnOnOffPassiveRequest\");\n    });\n    afterEach(function () {\n      mainServiceItemController.turnOnOffPassiveRequest.restore();\n    });\n    it(\"turns on/off passive mode for service\", function () {\n      mainServiceItemController.turnOnOffPassive({}).onPrimary();\n      expect(mainServiceItemController.turnOnOffPassiveRequest.calledOnce).to.equal(true);\n    });\n  });\n\n  describe(\"#runSmokeTest\", function () {\n    var tests = [\n      {\n        content: {\n          id: \"YARN\",\n          service_name: \"YARN\",\n          work_status: \"STARTED\"\n        },\n        startSmoke: true,\n        serviceName: \"MAPREDUCE2\",\n        m: \"don't run smoke test primary for MAPREDUCE2\"\n      },\n      {\n        content: {\n          id: \"YARN\",\n          service_name: \"YARN\",\n          work_status: \"STOPPED\"\n        },\n        startSmoke: false,\n        serviceName: \"MAPREDUCE2\",\n        m: \"run smoke test primary for MAPREDUCE2\"\n      },\n      {\n        m: \"run smoke test primary for all services (not MAPREDUCE2)\",\n        startSmoke: true,\n        default: true\n      }\n    ];\n\n    tests.forEach(function (test) {\n      var mainServiceItemController = test.default ? App.MainServiceItemController.create({runSmokeTestPrimary: Em.K}) :\n          App.MainServiceItemController.create({content: {serviceName: test.serviceName}, runSmokeTestPrimary: Em.K});\n      beforeEach(function () {\n        sinon.spy(mainServiceItemController, \"runSmokeTestPrimary\");\n      });\n      afterEach(function () {\n        mainServiceItemController.runSmokeTestPrimary.restore();\n      });\n      it(test.m, function () {\n        if (!test.default) {\n          App.store.load(App.Service, test.content);\n        }\n        mainServiceItemController.runSmokeTest({}).onPrimary();\n        expect(mainServiceItemController.runSmokeTestPrimary.calledOnce).to.equal(test.startSmoke);\n      });\n    });\n  });\n\n  describe(\"#refreshConfigs\", function () {\n    var temp = batchUtils.restartHostComponents;\n    beforeEach(function () {\n      sinon.stub(App.ajax, 'send', function(opt) {\n        return opt.data.callback({ items: [] });\n      });\n      batchUtils.restartHostComponents = Em.K;\n      sinon.spy(batchUtils, \"restartHostComponents\");\n    });\n    afterEach(function () {\n      batchUtils.restartHostComponents.restore();\n      batchUtils.restartHostComponents = temp;\n      App.ajax.send.restore();\n    });\n    var tests = [\n      {\n        isClientsOnly: true,\n        m: \"run refresh for clients\"\n      },\n      {\n        isClientsOnly: false,\n        m: \"don't run refresh for non clients\"\n      }\n    ];\n    tests.forEach(function (test) {\n      var mainServiceItemController = App.MainServiceItemController.create({content: {isClientsOnly: test.isClientsOnly}});\n      it(test.m, function () {\n        if (test.isClientsOnly) {\n          mainServiceItemController.refreshConfigs().onPrimary();\n        } else {\n          mainServiceItemController.refreshConfigs();\n        }\n        expect(batchUtils.restartHostComponents.calledOnce).to.equal(test.isClientsOnly);\n      });\n    }, this);\n  });\n\n  describe(\"#startStopPopup\", function () {\n    var el = document.createElement(\"BUTTON\");\n    el.disabled = false;\n    var event = {\n      target: el\n    }\n    var mainServiceItemController = App.MainServiceItemController.create({content: {serviceName: \"HDFS\"}});\n    beforeEach(function () {\n      sinon.spy(mainServiceItemController, \"startStopPopupPrimary\");\n    });\n    afterEach(function () {\n      mainServiceItemController.startStopPopupPrimary.restore();\n    });\n    it(\"start start/stop service popup\", function () {\n      mainServiceItemController.startStopPopup(event, \"\").onPrimary();\n      expect(mainServiceItemController.startStopPopupPrimary.calledOnce).to.equal(true);\n    });\n  });\n\n  describe(\"#restartAllHostComponents\", function () {\n    var temp = batchUtils.restartAllServiceHostComponents;\n    beforeEach(function () {\n      batchUtils.restartAllServiceHostComponents = Em.K;\n      sinon.spy(batchUtils, \"restartAllServiceHostComponents\");\n    });\n    afterEach(function () {\n      batchUtils.restartAllServiceHostComponents.restore();\n      batchUtils.restartAllServiceHostComponents = temp;\n    });\n\n    var mainServiceItemController = App.MainServiceItemController.create({content: {displayName: \"HDFS\"}});\n\n    it(\"start restartAllHostComponents for service\", function () {\n      mainServiceItemController.restartAllHostComponents({}).onPrimary();\n      expect(batchUtils.restartAllServiceHostComponents.calledOnce).to.equal(true);\n    });\n  });\n\n  describe(\"#rollingRestart\", function () {\n    var temp = batchUtils.launchHostComponentRollingRestart;\n    beforeEach(function () {\n      batchUtils.launchHostComponentRollingRestart = Em.K;\n      sinon.spy(batchUtils, \"launchHostComponentRollingRestart\");\n    });\n    afterEach(function () {\n      batchUtils.launchHostComponentRollingRestart.restore();\n      batchUtils.launchHostComponentRollingRestart = temp;\n    });\n\n    var mainServiceItemController = App.MainServiceItemController.create();\n\n    it(\"start restartAllHostComponents for service\", function () {\n      mainServiceItemController.rollingRestart();\n      expect(batchUtils.launchHostComponentRollingRestart.calledOnce).to.equal(true);\n    });\n  });\n\n  describe(\"#isStartDisabled\", function () {\n    var tests = [\n      {\n        content: {\n          healthStatus: 'red'\n        },\n        isPending: true,\n        disabled: true,\n        m: \"disabled because of pending\"\n      },\n      {\n        content: {\n          healthStatus: 'green'\n        },\n        isPending: false,\n        disabled: true,\n        m: \"disabled because healthStatus is not red\"\n      },\n      {\n        content: {\n          healthStatus: 'red'\n        },\n        isPending: false,\n        disabled: false,\n        m: \"enabled because healthStatus is red and pending is false\"\n      }\n    ];\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var mainServiceItemController = App.MainServiceItemController.create({content: {healthStatus: test.content.healthStatus}, isPending: test.isPending});\n        expect(mainServiceItemController.get('isStartDisabled')).to.equal(test.disabled);\n      });\n    });\n  });\n\n  describe(\"#isSopDisabled\", function () {\n    var tests = [\n      {\n        content: {\n          healthStatus: 'red'\n        },\n        isPending: true,\n        disabled: true,\n        m: \"disabled because of pending\"\n      },\n      {\n        content: {\n          healthStatus: 'green'\n        },\n        isPending: false,\n        disabled: false,\n        m: \"enabled because healthStatus is green and pending is false\"\n      },\n      {\n        content: {\n          healthStatus: 'red'\n        },\n        isPending: false,\n        disabled: true,\n        m: \"disabled because healthStatus is not green\"\n      }\n    ];\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var mainServiceItemController = App.MainServiceItemController.create({content: test.content, isPending: test.isPending});\n        expect(mainServiceItemController.get('isStopDisabled')).to.equal(test.disabled);\n      });\n    });\n  });\n\n  describe(\"#runRebalancer\", function () {\n    it(\"run rebalancer\", function () {\n      var mainServiceItemController = App.MainServiceItemController.create({content: {runRebalancer: false}});\n      mainServiceItemController.runRebalancer().onPrimary();\n      expect(mainServiceItemController.get(\"content.runRebalancer\")).to.equal(true);\n    });\n  });\n\n  describe(\"#runCompaction\", function () {\n    it(\"run compaction\", function () {\n      var mainServiceItemController = App.MainServiceItemController.create({content: {runCompaction: false}});\n      mainServiceItemController.runCompaction().onPrimary();\n      expect(mainServiceItemController.get(\"content.runCompaction\")).to.equal(true);\n    });\n  });\n\n  describe(\"#turnOnOffPassiveRequest\", function () {\n    var tests = [\n      {\n        data: {\n          \"requestInfo\": 'Turn On Maintenance Mode',\n          \"serviceName\" : \"HDFS\",\n          \"passive_state\": \"ON\"\n        },\n        RequestInfo: {\n          \"context\": 'Turn On Maintenance Mode'\n        },\n        Body: {\n          ServiceInfo: {\n            maintenance_state: \"ON\"\n          }\n        }\n      }\n    ];\n\n    beforeEach(function () {\n      sinon.spy($, 'ajax');\n    });\n\n    afterEach(function () {\n      $.ajax.restore();\n    });\n\n    tests.forEach(function (test) {\n      it('send request to turn on passive state', function () {\n        var mainServiceItemController = App.MainServiceItemController.create({content: {serviceName: test.data.serviceName}});\n        mainServiceItemController.turnOnOffPassiveRequest(test.data.passive_state, test.data.requestInfo);\n        expect($.ajax.calledOnce).to.equal(true);\n\n        expect(JSON.parse($.ajax.args[0][0].data).Body.ServiceInfo.maintenance_state).to.equal(test.Body.ServiceInfo.maintenance_state);\n        expect(JSON.parse($.ajax.args[0][0].data).RequestInfo.context).to.equal(test.RequestInfo.context);\n      });\n    });\n  });\n\n  describe(\"#runSmokeTestPrimary\", function () {\n    var tests = [\n      {\n        data: {\n          'serviceName': \"HDFS\",\n          'displayName': \"HDFS\",\n          'query': \"test\"\n        },\n        \"RequestInfo\": {\n          \"context\": \"HDFS Service Check\",\n          \"command\" : \"HDFS_SERVICE_CHECK\"\n        },\n        \"Requests/resource_filters\": [{\"service_name\" : \"HDFS\"}]\n      }\n    ];\n    tests.forEach(function (test) {\n\n    var mainServiceItemController = App.MainServiceItemController.create({content: {serviceName: test.data.serviceName,\n      displayName: test.data.displayName}});\n    beforeEach(function () {\n      mainServiceItemController.set(\"runSmokeTestErrorCallBack\", Em.K);\n      mainServiceItemController.set(\"runSmokeTestSuccessCallBack\", Em.K);\n      sinon.spy($, 'ajax');\n    });\n\n    afterEach(function () {\n      $.ajax.restore();\n    });\n\n      it('send request to run smoke test', function () {\n\n        mainServiceItemController.runSmokeTestPrimary(test.data.query);\n        expect($.ajax.calledOnce).to.equal(true);\n\n        expect(JSON.parse($.ajax.args[0][0].data).RequestInfo.context).to.equal(test.RequestInfo.context);\n        expect(JSON.parse($.ajax.args[0][0].data).RequestInfo.command).to.equal(test.RequestInfo.command);\n        expect(JSON.parse($.ajax.args[0][0].data)[\"Requests/resource_filters\"][0].serviceName).to.equal(test[\"Requests/resource_filters\"][0].serviceName);\n      });\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/cluster');\nrequire('controllers/wizard');\nrequire('controllers/main/service/reassign_controller');\n\ndescribe('App.ReassignMasterController', function () {\n\n  var reassignMasterController = App.ReassignMasterController.create({});\n\n  describe('#totalSteps', function () {\n    it('check', function () {\n      expect(reassignMasterController.get('totalSteps')).to.equal(6);\n    });\n  });\n\n  reassignMasterController.set('content.reassign', {service_id:null});\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('controllers/main/service');\n\nvar mainServiceController;\n\ndescribe('App.MainServiceController', function () {\n\n  var tests = Em.A([\n    {\n      isStartStopAllClicked: false,\n      content: Em.A([\n        Em.Object.create({\n          healthStatus: 'green',\n          serviceName: 'HIVE',\n          isClientsOnly: false\n        }),\n        Em.Object.create({\n          healthStatus: 'green',\n          serviceName: 'HDFS',\n          isClientsOnly: false\n        }),\n        Em.Object.create({\n          healthStatus: 'red',\n          serviceName: 'TEZ',\n          isClientsOnly: true\n        })\n      ]),\n      eStart: true,\n      eStop: false,\n      mStart: 'mainServiceController StartAll is Disabled 1',\n      mStop: 'mainServiceController StopAll is Enabled 1'\n    },\n    {\n      isStartStopAllClicked: true,\n      content: Em.A([\n        Em.Object.create({\n          healthStatus: 'red',\n          serviceName: 'HIVE',\n          isClientsOnly: false\n        }),\n        Em.Object.create({\n          healthStatus: 'red',\n          serviceName: 'HDFS',\n          isClientsOnly: false\n        }),\n        Em.Object.create({\n          healthStatus: 'red',\n          serviceName: 'TEZ',\n          isClientsOnly: true\n        })\n      ]),\n      eStart: true,\n      eStop: true,\n      mStart: 'mainServiceController StartAll is Disabled 2',\n      mStop: 'mainServiceController StopAll is Disabled 2'\n    },\n    {\n      isStartStopAllClicked: false,\n      content: Em.A([\n        Em.Object.create({\n          healthStatus: 'green',\n          serviceName: 'HIVE',\n          isClientsOnly: false\n        }),\n        Em.Object.create({\n          healthStatus: 'red',\n          serviceName: 'HDFS',\n          isClientsOnly: false\n        }),\n        Em.Object.create({\n          healthStatus: 'red',\n          serviceName: 'TEZ',\n          isClientsOnly: true\n        })\n      ]),\n      eStart: false,\n      eStop: false,\n      mStart: 'mainServiceController StartAll is Enabled 3',\n      mStop: 'mainServiceController StopAll is Enabled 3'\n    }\n\n  ]);\n  describe('#isStartAllDisabled', function () {\n    tests.forEach(function (test) {\n      it(test.mStart, function () {\n        mainServiceController = App.MainServiceController.create({\n          content: test.content,\n          isStartStopAllClicked: test.isStartStopAllClicked\n        });\n        expect(mainServiceController.get('isStartAllDisabled')).to.equals(test.eStart);\n      });\n    });\n  });\n\n  describe('#isStopAllDisabled', function () {\n    tests.forEach(function (test) {\n      it(test.mStop, function () {\n        mainServiceController = App.MainServiceController.create({\n          content: test.content,\n          isStartStopAllClicked: test.isStartStopAllClicked\n        });\n        expect(mainServiceController.get('isStopAllDisabled')).to.equals(test.eStop);\n      });\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nvar Ember = require('ember');\n\nrequire('models/host');\nrequire('controllers/wizard/stack_upgrade/step3_controller');\n\nif (!App.router) {\n  App.router = Em.Object.create({});\n}\n\nApp.router.set('stackUpgradeController', Em.Object.create({\n  save: Em.K\n}));\n\ndescribe('App.StackUpgradeStep3Controller', function() {\n\n  var stackUpgradeStep3Controller = App.StackUpgradeStep3Controller.create();\n\n  describe('#runUpgradeErrorCallback', function() {\n    var processes = [\n      Ember.Object.create({\n        status: '',\n        isRetry: false,\n        name: 'UPGRADE_SERVICES'\n      })\n    ];\n\n    stackUpgradeStep3Controller.set('processes', processes);\n    stackUpgradeStep3Controller.set('content', {cluster: {}, controllerName:'stackUpgradeController'});\n\n    it('check process condition', function() {\n      App.testMode = true;\n      stackUpgradeStep3Controller.runUpgradeErrorCallback();\n      expect(stackUpgradeStep3Controller.get('processes').findProperty('name', 'UPGRADE_SERVICES').get('status')).to.equal('FAILED');\n      expect(stackUpgradeStep3Controller.get('processes').findProperty('name', 'UPGRADE_SERVICES').get('isRetry')).to.equal(true);\n      expect(stackUpgradeStep3Controller.get('submitButton')).to.equal(false);\n      App.testMode = false;\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/cluster_states');\nrequire('controllers/wizard/step0_controller');\nvar wizardStep0Controller;\n\nif (!App.router) {\n  App.router = Em.Object.create({});\n}\nApp.router.set('send', Em.K);\n\ndescribe('App.WizardStep0Controller', function () {\n\n  beforeEach(function() {\n    wizardStep0Controller = App.WizardStep0Controller.create({content: {cluster: {}}});\n    sinon.stub(App.clusterStatus, 'set', Em.K);\n    sinon.spy(App.router, 'send');\n  });\n\n  afterEach(function() {\n    App.clusterStatus.set.restore();\n    App.router.send.restore();\n  });\n\n  describe('#invalidClusterName', function () {\n    it('should return true if no cluster name is present', function () {\n      wizardStep0Controller.set('hasSubmitted', true);\n      wizardStep0Controller.set('content', {'cluster':{'name':''}});\n      expect(wizardStep0Controller.get('invalidClusterName')).to.equal(true);\n    });\n    it('should return true if cluster name contains white spaces', function () {\n      wizardStep0Controller.set('hasSubmitted', true);\n      wizardStep0Controller.set('content', {'cluster':{'name':'the cluster'}});\n      expect(wizardStep0Controller.get('invalidClusterName')).to.equal(true);\n    });\n    it('should return true if cluster name contains special chars', function () {\n      wizardStep0Controller.set('hasSubmitted', true);\n      wizardStep0Controller.set('content', {'cluster':{'name':'$cluster'}});\n      expect(wizardStep0Controller.get('invalidClusterName')).to.equal(true);\n    })\n  });\n\n  describe('#loadStep', function() {\n    it('should clear step data', function() {\n      wizardStep0Controller.loadStep();\n      expect(wizardStep0Controller.get('hasSubmitted')).to.equal(false);\n      expect(wizardStep0Controller.get('clusterNameError')).to.equal('');\n    });\n  });\n\n  describe('#submit', function() {\n    it('if cluster name is valid should proceed', function() {\n      wizardStep0Controller.set('content.cluster.name', 'tdk');\n      wizardStep0Controller.submit();\n      expect(wizardStep0Controller.get('content.cluster.status')).to.equal('PENDING');\n      expect(wizardStep0Controller.get('content.cluster.isCompleted')).to.equal(false);\n      expect(App.router.send.calledWith('next')).to.equal(true);\n      expect(App.clusterStatus.set.calledWith('clusterName', 'tdk')).to.equal(true);\n    });\n\n    it('if cluster name isn\\'t valid shouldn\\'t proceed', function() {\n      wizardStep0Controller.set('content.cluster.name', '@@@@');\n      wizardStep0Controller.submit();\n      expect(App.router.send.called).to.equal(false);\n      expect(App.clusterStatus.set.called).to.equal(false);\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\nvar App = require('app');\nrequire('controllers/wizard/step10_controller');\n\nvar controller;\n\ndescribe('App.WizardStep10Controller', function () {\n\n  beforeEach(function() {\n    controller = App.WizardStep10Controller.create();\n    controller.set('content', {cluster: {status: 'INSTALL COMPLETE'}});\n  });\n\n  afterEach(function() {\n    controller.clearStep();\n  });\n\n  describe('#clearStep', function() {\n    it('should clear clusterInfo', function() {\n      controller.get('clusterInfo').pushObject({});\n      controller.clearStep();\n      expect(controller.get('clusterInfo.length')).to.equal(0);\n    });\n  });\n\n  describe('#loadStep', function() {\n    beforeEach(function() {\n      sinon.spy(controller, 'clearStep');\n      sinon.stub(controller, 'loadRegisteredHosts', Em.K);\n      sinon.stub(controller, 'loadInstalledHosts', Em.K);\n      sinon.stub(controller, 'loadInstallTime', Em.K);\n    });\n    afterEach(function() {\n      controller.clearStep.restore();\n      controller.loadRegisteredHosts.restore();\n      controller.loadInstalledHosts.restore();\n      controller.loadInstallTime.restore();\n    });\n    it('should call clearStep', function() {\n      controller.loadStep();\n      expect(controller.clearStep.calledOnce).to.equal(true);\n    });\n    it('should call loadInstalledHosts', function() {\n      controller.loadStep();\n      expect(controller.loadInstalledHosts.calledOnce).to.equal(true);\n    });\n    it('should loadInstallTime if not installerController', function() {\n      controller.set('content.controllerName', 'addServiceController');\n      controller.loadStep();\n      expect(controller.loadInstallTime.calledOnce).to.equal(true);\n    });\n    var testsForLoadInstallTime = Em.A([\n      {\n        loadMasterComponents: true,\n        loadStartedServices: true,\n        e: true\n      },\n      {\n        loadMasterComponents: true,\n        loadStartedServices: false,\n        e: false\n      },\n      {\n        loadMasterComponents: false,\n        loadStartedServices: false,\n        e: false\n      },\n      {\n        loadMasterComponents: false,\n        loadStartedServices: false,\n        e: false\n      }\n    ]);\n    testsForLoadInstallTime.forEach(function(test) {\n      it('loadMasterComponents: ' + test.loadMasterComponents.toString() + ' loadStartedServices: ' + test.loadStartedServices.toString(), function() {\n        controller.set('content.controllerName', 'installerController');\n        sinon.stub(controller, 'loadMasterComponents', function() {return test.loadMasterComponents;});\n        sinon.stub(controller, 'loadStartedServices', function() {return test.loadStartedServices;});\n        controller.loadStep();\n        expect(controller.loadInstallTime.called).to.equal(test.e);\n        controller.loadMasterComponents.restore();\n        controller.loadStartedServices.restore();\n      });\n    });\n  });\n\n  describe('#loadInstalledHosts', function() {\n    var tests = Em.A([\n      {\n        hosts: {\n          'h1': Em.Object.create({status: 'success', tasks: []}),\n          'h2': Em.Object.create({status: 'success', tasks: []}),\n          'h3': Em.Object.create({status: 'success', tasks: []})\n        },\n        m: 'all success',\n        e: Em.A([\n          {id: 1, l: 3}\n        ])\n      },\n      {\n        hosts: {\n          'h1': Em.Object.create({status: 'warning', tasks: []}),\n          'h2': Em.Object.create({status: 'failed', tasks: []}),\n          'h3': Em.Object.create({status: 'failed', tasks: []})\n        },\n        m: 'some failed, some warning',\n        e: Em.A([\n          {id: 2, l: 3}\n        ])\n      },\n      {\n        hosts: {\n          'h1': Em.Object.create({status: 'failed', tasks: []}),\n          'h2': Em.Object.create({status: 'success', tasks: []}),\n          'h3': Em.Object.create({status: 'warning', tasks: []})\n        },\n        m: 'sone failed, some success, some warning',\n        e: Em.A([\n          {id: 1, l: 1},\n          {id: 2, l: 2}\n        ])\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        controller.set('content.hosts', test.hosts);\n        controller.set('clusterInfo', Em.A([Em.Object.create({id: 1, status: []})]));\n        controller.loadInstalledHosts();\n        test.e.forEach(function(ex) {\n          expect(controller.get('clusterInfo').findProperty('id', 1).get('status').findProperty('id', ex.id).get('displayStatement').contains(ex.l)).to.equal(true);\n        });\n      })\n    });\n    var testsForFailedTasks = Em.A([\n      {\n        hosts: {\n          'h1': Em.Object.create({\n            status: 'failed',\n            tasks: [\n              {Tasks: {status: 'FAILED'}},\n              {Tasks: {status: 'FAILED'}}\n            ]\n          }),\n          'h2': Em.Object.create({\n            status: 'failed',\n            tasks: [\n              {Tasks: {status: 'FAILED'}}\n            ]\n          }),\n          'h3': Em.Object.create({status: 'failed', tasks: []})\n        },\n        m: 'only failed tasks',\n        e: Em.A([\n          {st: 'failed', l: 3}\n        ])\n      },\n      {\n        hosts: {\n          'h1': Em.Object.create({\n            status: 'failed',\n            tasks: [\n              {Tasks: {status: 'TIMEDOUT'}}\n            ]\n          }),\n          'h2': Em.Object.create({\n            status: 'failed',\n            tasks: [\n              {Tasks: {status: 'TIMEDOUT'}}\n            ]\n          }),\n          'h3': Em.Object.create({\n            status: 'failed',\n            tasks: [\n              {Tasks: {status: 'TIMEDOUT'}}\n            ]\n          })\n        },\n        m: 'only timedout tasks',\n        e: Em.A([\n          {st: 'timedout', l: 3}\n        ])\n      },\n      {\n        hosts: {\n          'h1': Em.Object.create({\n            status: 'failed',\n            tasks: []\n          }),\n          'h2': Em.Object.create({\n            status: 'failed',\n            tasks: []\n          }),\n          'h3': Em.Object.create({\n            status: 'failed',\n            tasks: [\n              {Tasks: {status: 'ABORTED'}},\n              {Tasks: {status: 'ABORTED'}},\n              {Tasks: {status: 'ABORTED'}}\n            ]\n          })\n        },\n        m: 'only aborted tasks',\n        e: Em.A([\n          {st: 'aborted', l: 3}\n        ])\n      },\n      {\n        hosts: {\n          'h1': Em.Object.create({\n            status: 'warning',\n            tasks: [\n              {Tasks: {status: 'FAILED'}},\n              {Tasks: {status: 'FAILED'}}\n            ]\n          }),\n          'h2': Em.Object.create({\n            status: 'warning',\n            tasks: [\n              {Tasks: {status: 'FAILED'}}\n            ]\n          }),\n          'h3': Em.Object.create({status: 'warning', tasks: []})\n        },\n        m: 'only failed tasks, warning hosts',\n        e: Em.A([\n          {st: 'failed', l: 3}\n        ])\n      },\n      {\n        hosts: {\n          'h1': Em.Object.create({\n            status: 'warning',\n            tasks: [\n              {Tasks: {status: 'TIMEDOUT'}}\n            ]\n          }),\n          'h2': Em.Object.create({\n            status: 'warning',\n            tasks: [\n              {Tasks: {status: 'TIMEDOUT'}}\n            ]\n          }),\n          'h3': Em.Object.create({\n            status: 'warning',\n            tasks: [\n              {Tasks: {status: 'TIMEDOUT'}}\n            ]\n          })\n        },\n        m: 'only timedout tasks, warning hosts',\n        e: Em.A([\n          {st: 'timedout', l: 3}\n        ])\n      },\n      {\n        hosts: {\n          'h1': Em.Object.create({\n            status: 'warning',\n            tasks: []\n          }),\n          'h2': Em.Object.create({\n            status: 'warning',\n            tasks: []\n          }),\n          'h3': Em.Object.create({\n            status: 'warning',\n            tasks: [\n              {Tasks: {status: 'ABORTED'}},\n              {Tasks: {status: 'ABORTED'}},\n              {Tasks: {status: 'ABORTED'}}\n            ]\n          })\n        },\n        m: 'only aborted tasks, warning hosts',\n        e: Em.A([\n          {st: 'aborted', l: 3}\n        ])\n      }\n    ]);\n    testsForFailedTasks.forEach(function(test) {\n      it(test.m, function() {\n        controller.set('content.hosts', test.hosts);\n        controller.set('clusterInfo', Em.A([Em.Object.create({id: 1, status: []})]));\n        controller.loadInstalledHosts();\n        test.e.forEach(function(ex) {\n          expect(controller.get('clusterInfo').findProperty('id', 1).get('status').findProperty('id', 2).get('statements').mapProperty('status', ex.st).length).to.equal(ex.l);\n        });\n      })\n    });\n  });\n\n  describe('#loadMasterComponent', function() {\n    var tests = Em.A([\n      {\n        component: Em.Object.create({hostName: 'h1'}),\n        e: 1\n      },\n      {\n        component: Em.Object.create({}),\n        e: 0\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.component.get('hostName') ? 'Has hosNBame' : 'Doesn\\'t have hostName', function() {\n        controller.clearStep();\n        controller.get('clusterInfo').pushObject(Em.Object.create({id: 2, status: []}));\n        controller.loadMasterComponent(test.component);\n        expect(controller.get('clusterInfo').findProperty('id', 2).get('status').length).to.equal(test.e);\n      })\n    });\n  });\n\n  describe('#loadStartedServices', function() {\n    var tests = Em.A([\n      {\n        status: 'STARTED',\n        e: {\n          ids: [3, 4],\n          r: true\n        }\n      },\n      {\n        status: 'FAILED',\n        e: {\n          ids: [3],\n          r: false\n        }\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.status, function() {\n        controller.set('content', {cluster: {status: test.status}});\n        var r = controller.loadStartedServices();\n        expect(r).to.equal(test.e.r);\n        expect(controller.get('clusterInfo').mapProperty('id')).to.eql(test.e.ids);\n      });\n    });\n  });\n\n  describe('#loadInstallTime', function() {\n    var tests = Em.A([\n      {\n        installTime: 123,\n        e: [5]\n      },\n      {\n        installTime: null,\n        e: []\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it('Install time' + test.installTime ? ' available' : ' not available', function() {\n        controller.set('content', {cluster: {installTime: test.installTime}});\n        var r = controller.loadInstallTime();\n        expect(controller.get('clusterInfo').mapProperty('id')).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#calculateInstallTime', function () {\n    it('from \"9.21\" to 9 minutes 12 seconds', function () {\n      expect(controller.calculateInstallTime('9.21')).to.eql({minutes: 9, seconds: 12});\n    });\n    it('from \"0\" to 0 minutes 0 seconds', function () {\n      expect(controller.calculateInstallTime('0')).to.eql({minutes: 0, seconds: 0});\n    });\n    it('from \"10\" to 10 minutes 0 seconds', function () {\n      expect(controller.calculateInstallTime('10')).to.eql({minutes: 10, seconds: 0});\n    });\n    it('from \"0.5\" to 0 minutes 30 seconds', function () {\n      expect(controller.calculateInstallTime('0.5')).to.eql({minutes: 0, seconds: 30});\n    });\n  });\n\n  describe('#loadMasterComponents', function() {\n\n    var components = Em.A(['NAMENODE','SECONDARY_NAMENODE','JOBTRACKER','HISTORYSERVER','RESOURCEMANAGER','HBASE_MASTER','HIVE_SERVER','OOZIE_SERVER','GANGLIA_SERVER','NAGIOS_SERVER']);\n\n    d3.range(1, components.length).forEach(function(i) {\n      d3.range(1, i).forEach(function(j) {\n        var c = components.slice(0, j);\n        it(c.join(', '), function() {\n          var m = c.map(function(component){return {component: component, displayName: component, hostName: 'h1'};});\n          controller.set('content.masterComponentHosts', m);\n          controller.loadMasterComponents();\n          expect(controller.get('clusterInfo').findProperty('id', 2).get('status').length).to.equal(m.length);\n        });\n      });\n    });\n\n  });\n\n  describe('#isNagiosRestartRequired', function() {\n    Em.A([\n      {\n        controllerName: 'addServiceController',\n        isLoaded: true,\n        e: true\n      },\n      {\n        controllerName: 'installerController',\n        isLoaded: true,\n        e: false\n      },\n      {\n        controllerName: 'addServiceController',\n        isLoaded: false,\n        e: false\n      },\n      {\n        controllerName: 'installerController',\n        isLoaded: false,\n        e: false\n      }\n    ]).forEach(function (test) {\n        it(test.controllerName + ' Nagios loaded' + test.isLoaded.toString(), function () {\n          controller.set('content.controllerName', test.controllerName);\n          sinon.stub(App.Service, 'find', function() {\n            return Em.Object.create({\n              isLoaded: test.isLoaded\n            })\n          });\n          expect(controller.get('isNagiosRestartRequired')).to.equal(test.e);\n          App.Service.find.restore();\n        });\n      });\n  });\n\n  describe('#loadRegisteredHosts', function() {\n    it('should add object to clusterInfo', function() {\n      var masterComponentHosts = [{hostName: 'h1'}, {hostName: 'h2'}, {hostName: 'h3'}],\n        slaveComponentHosts = [{hosts: [{hostName: 'h1'}, {hostName: 'h4'}]}, {hosts: [{hostName: 'h2'}, {hostName: 'h5'}]}],\n        hosts = [{hostName: 'h6'}, {hostName: 'h3'}, {hostName: 'h7'}];\n      controller.set('content.masterComponentHosts', masterComponentHosts);\n      controller.set('content.slaveComponentHosts', slaveComponentHosts);\n      controller.set('clusterInfo', []);\n      sinon.stub(App.Host, 'find', function() {\n        return hosts;\n      });\n      var obj = controller.loadRegisteredHosts();\n      App.Host.find.restore();\n      expect(obj.id).to.equal(1);\n      expect(obj.color).to.equal('text-info');\n      expect(obj.displayStatement).to.equal(Em.I18n.t('installer.step10.hostsSummary').format(7));\n      expect(obj.status).to.eql([]);\n      expect(controller.get('clusterInfo.firstObject')).to.eql(obj);\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nvar Ember = require('ember');\nrequire('controllers/wizard/step2_controller');\nrequire('models/host');\nrequire('models/host_component');\nrequire('messages');\nvar c;\ndescribe('App.WizardStep2Controller', function () {\n\n  beforeEach(function() {\n    c = App.WizardStep2Controller.create();\n  });\n\n  describe('#isInstaller', function() {\n    it('true if controllerName is installerController', function() {\n      var controller = App.WizardStep2Controller.create({content: {controllerName: 'installerController'}});\n      expect(controller.get('isInstaller')).to.equal(true);\n    });\n    it('false if controllerName isn\\'t installerController', function() {\n      var controller = App.WizardStep2Controller.create({content: {controllerName: 'addServiceController'}});\n      expect(controller.get('isInstaller')).to.equal(false);\n    });\n  });\n\n  describe('#manualInstall', function() {\n    it('should be equal to content.installOptions.manualInstall', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {manualInstall: true}}});\n      expect(controller.get('manualInstall')).to.equal(true);\n      controller.toggleProperty('content.installOptions.manualInstall');\n      expect(controller.get('manualInstall')).to.equal(false);\n    });\n  });\n\n  describe('#hostNames', function() {\n    it('should be equal to content.installOptions.hostNames', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {hostNames: ['1','2','3']}}});\n      expect(controller.get('hostNames')).to.eql(['1','2','3']);\n      controller.set('content.installOptions.hostNames', ['1', '2']);\n      expect(controller.get('hostNames')).to.eql(['1', '2']);\n    });\n  });\n\n  describe('#sshKey', function() {\n    it('should be equal to content.installOptions.sshKey', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {sshKey: '123'}}});\n      expect(controller.get('sshKey')).to.equal('123');\n      controller.set('content.installOptions.sshKey', '321');\n      expect(controller.get('sshKey')).to.equal('321');\n    });\n  });\n\n  describe('#sshUser', function() {\n    it('should be equal to content.installOptions.sshUser', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {sshUser: '123'}}});\n      expect(controller.get('sshUser')).to.equal('123');\n      controller.set('content.installOptions.sshUser', '321');\n      expect(controller.get('sshUser')).to.equal('321');\n    });\n  });\n\n  describe('#installType', function() {\n    it('should be manualDriven if manualInstall is selected', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {manualInstall: true}}});\n      expect(controller.get('installType')).to.equal('manualDriven');\n    });\n    it('should be ambariDriven if manualInstall isn\\'t selected', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {manualInstall: false}}});\n      expect(controller.get('installType')).to.equal('ambariDriven');\n    });\n  });\n\n  describe('#updateHostNameArr()', function () {\n\n      var controller = App.WizardStep2Controller.create({\n        hostNames: 'apache.ambari'\n      });\n      App.store.load(App.Host, {'host_name': 'apache.ambari', id: '1'});\n      controller.updateHostNameArr();\n\n      it('should push to hostNameArr only new host names', function(){\n        expect(controller.get('hostNameArr').length).to.equal(0);\n      });\n\n      it('should push to inputtedAgainHostNames already installed host names', function(){\n        expect(controller.get('inputtedAgainHostNames').length).to.equal(1);\n      })\n  });\n\n  describe('#isAllHostNamesValid()', function () {\n\n    var controller = App.WizardStep2Controller.create({\n      hostNames: ''\n    });\n\n    it('should return true if all host names are valid', function(){\n      controller.set('hostNames', 'amache.org ambari.com');\n      expect(controller.isAllHostNamesValid()).to.equal(true);\n    });\n\n    var tests = Em.A([\n      'hostname',\n      '-hostname.com',\n      'hostname-.com',\n      'host_name.com',\n      '123.123.123.123',\n      'hostnamehostnamehostnamehostnamehostnamehostnamehostnamehostname.hostnamehostnamehostnamehostnamehostnamehostnamehostnamehostname.hostnamehostnamehostnamehostnamehostnamehostnamehostnamehostname.hostnamehostnamehostnamehostnamehostnamehostnamehostnamehostname',\n      'hostnamehostnamehostnamehostnamehostnamehostnamehostnamehostnamehostname.hostname'\n    ]);\n    tests.forEach(function (test) {\n      it('should return false for invalid host names ' + test + ' ', function () {\n        controller.set('hostNames', test);\n        expect(controller.isAllHostNamesValid()).to.equal(false);\n      });\n    });\n  });\n\n  describe('#checkHostError()', function () {\n\n    var controller = App.WizardStep2Controller.create();\n\n    it('should set hostsError if hostNames is \"\"', function () {\n      controller.set('content', {'installOptions': {'hostNames': ''}});\n      controller.checkHostError();\n      expect(controller.get('hostsError').length).to.be.above(2);\n    });\n\n    it('should set hostsError to null if hostNames is valid', function () {\n      controller.set('content', {'installOptions': {'hostNames': 'ambari'}});\n      controller.checkHostError();\n      expect(controller.get('hostsError')).to.equal(null);\n    })\n  });\n\n  describe('#checkHostAfterSubmitHandler()', function () {\n\n    it('should be called after changing hasSubmitted', function (done) {\n      var controller = App.WizardStep2Controller.create({\n        checkHostError: function () {\n          done();\n        }\n      });\n      controller.set('hasSubmitted', true);\n    });\n\n    it('should be called after changing hostNames', function (done) {\n      var controller = App.WizardStep2Controller.create({\n        hasSubmitted: true,\n        checkHostError: function () {\n          done();\n        }\n      });\n      controller.set('content', {'installOptions': {'hostNames': 'ambari'}});\n    })\n  });\n\n  describe('#sshKeyError', function () {\n\n    var tests = Em.A([\n      {\n        manualInstall: false,\n        sshKey: '',\n        hasSubmitted: false,\n        e: null\n      },\n      {\n        manualInstall: true,\n        sshKey: '',\n        hasSubmitted: false,\n        e: null\n      },\n      {\n        manualInstall: true,\n        sshKey: 'nobody',\n        hasSubmitted: false,\n        e: null\n      },\n      {\n        manualInstall: false,\n        sshKey: 'nobody',\n        hasSubmitted: false,\n        e: null\n      },\n      {\n        manualInstall: false,\n        sshKey: '',\n        hasSubmitted: true,\n        e: null\n      },\n      {\n        manualInstall: true,\n        sshKey: '',\n        hasSubmitted: true,\n        e: null\n      },\n      {\n        manualInstall: true,\n        sshKey: 'nobody',\n        hasSubmitted: true,\n        e: null\n      },\n      {\n        manualInstall: false,\n        sshKey: 'nobody',\n        hasSubmitted: true,\n        e: null\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.sshKey + ' ' + test.manualInstall.toString() + ' ' + test.hasSubmitted.toString(), function() {\n        var controller = App.WizardStep2Controller.create({content: {installOptions: {manualInstall: test.manualInstall, sshKey: test.sshKey}}});\n        if(Em.isNone(test.e)) {\n          expect(controller.get('sshKeyError')).to.equal(null);\n        }\n        else {\n          expect(controller.get('sshKeyError').length).to.be.above(2);\n        }\n      });\n    });\n  });\n\n  describe('#sshUserError', function () {\n\n    var tests = Em.A([\n      {\n        manualInstall: false,\n        sshUser: '',\n        e: ''\n      },\n      {\n        manualInstall: true,\n        sshUser: '',\n        e: null\n      },\n      {\n        manualInstall: true,\n        sshUser: 'nobody',\n        e: null\n      },\n      {\n        manualInstall: false,\n        sshUser: 'nobody',\n        e: null\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it('', function() {\n        var controller = App.WizardStep2Controller.create({content: {installOptions: {manualInstall: test.manualInstall, sshUser: test.sshUser}}});\n        if(Em.isNone(test.e)) {\n          expect(controller.get('sshUserError')).to.equal(null);\n        }\n        else {\n          expect(controller.get('sshUserError').length).to.be.above(2);\n        }\n      });\n    });\n\n  });\n\n  describe('#getHostInfo()', function () {\n\n    it('should return object with bootStatus, installType and name for every element in hostNameArr', function () {\n      var controller = App.WizardStep2Controller.create({\n        hostNameArr: ['apache', 'ambari'],\n        installType: 'manualDriven'\n      });\n\n      var test = controller.getHostInfo();\n      expect(test).to.eql({\n        'apache':{'name':'apache', 'installType': 'manualDriven', 'bootStatus': 'PENDING'},\n        'ambari':{'name':'ambari', 'installType': 'manualDriven', 'bootStatus': 'PENDING'}\n      });\n    })\n  });\n\n  describe('#setSshKey()', function () {\n\n    it('should set content.installOptions.sshKey', function () {\n      var controller = App.WizardStep2Controller.create({\n       content: {'installOptions': {'sshKey': '111'}}\n      });\n      controller.setSshKey('222');\n      expect(controller.get('content.installOptions.sshKey')).to.equal('222');\n    })\n  });\n\n  describe('#evaluateStep()', function () {\n\n    it('should return false if isSubmitDisabled is true', function () {\n      var controller = App.WizardStep2Controller.create({\n        hostNames: 'apache.ambari'\n      });\n      controller.set('isSubmitDisabled', true);\n      expect(controller.evaluateStep()).to.equal(false);\n    });\n\n    it('should return false if hostsError is not empty', function () {\n      var controller = App.WizardStep2Controller.create({\n        hostNames: 'apache.ambari'\n      });\n      controller.set('hostsError', 'error');\n      expect(controller.evaluateStep()).to.equal(false);\n    });\n\n    it('should return false if sshKeyError is not empty', function () {\n      var controller = App.WizardStep2Controller.create({\n        hostNames: 'apache.ambari'\n      });\n      controller.set('sshKeyError', 'error');\n      expect(controller.evaluateStep()).to.equal(false);\n    });\n\n    it('should return false if hostNameArr is empty', function () {\n      var controller = App.WizardStep2Controller.create({\n        hostNames: ''\n      });\n      expect(controller.evaluateStep()).to.equal(false);\n    });\n\n    it('should return false if isPattern is false', function () {\n      var controller = App.WizardStep2Controller.create({\n        hostNames: 'apache.ambari',\n        isPattern: false\n      });\n      expect(controller.evaluateStep()).to.equal(false);\n    })\n  });\n\n  describe('#parseHostNamesAsPatternExpression()', function () {\n\n    it('should parse hosts from pattern expression to hostNameArr', function () {\n      var controller = App.WizardStep2Controller.create({\n        hostNameArr: ['host[001-011]']\n      });\n      controller.parseHostNamesAsPatternExpression();\n      var result = true;\n      var hosts = controller.get('hostNameArr');\n      for (var i = 1; i<12; i++) {\n        var extra = (i.toString().length == 1) ? 0 : '';\n        if (hosts[i-1] !== 'host0' + extra + i) {\n          result = false;\n        }\n      }\n      expect(result).to.equal(true);\n    })\n  });\n\n  describe('#proceedNext()', function () {\n\n    it('should call warningPopup if not isAllHostNamesValid and no warningConfirmed', function() {\n      c.reopen({\n        isAllHostNamesValid: function() {\n          return false;\n        },\n        warningPopup: Em.K\n      });\n      sinon.spy(c, 'warningPopup');\n      var r = c.proceedNext(false);\n      expect(r).to.equal(false);\n      expect(c.warningPopup.calledOnce).to.equal(true);\n    });\n\n    it('should call manualInstallPopup if manualInstall is true', function () {\n      c.reopen({\n        hostNames: '',\n        manualInstall: true,\n        manualInstallPopup: Em.K\n      });\n      sinon.spy(c, 'manualInstallPopup');\n      var r = c.proceedNext(true);\n      expect(r).to.equal(false);\n      expect(c.manualInstallPopup.calledOnce).to.equal(true);\n    });\n\n    it ('should save hosts and proceed next if skipBootstrap is true', function() {\n      sinon.stub(App, 'get', function(k) {\n        if ('skipBootstrap' === k) {\n          return true;\n        }\n        return Em.get(App, k);\n      });\n      sinon.stub(App.router, 'send', Em.K);\n      c.reopen({\n        hostNameArr: ['h1'],\n        isAllHostNamesValid: function() {return true;},\n        content: {\n          installOptions: {},\n          hosts: null\n        }\n      });\n      var r = c.proceedNext();\n      expect(r).to.equal(true);\n      expect(Em.keys(c.get('content.hosts'))).to.eql(['h1']);\n      expect(App.router.send.calledWith('next')).to.equal(true);\n      App.get.restore();\n      App.router.send.restore();\n    });\n\n    it('should call setupBootStrap', function() {\n      sinon.stub(App, 'get', function(k) {\n        if ('skipBootstrap' === k) {\n          return false;\n        }\n        return Em.get(App, k);\n      });\n      c.reopen({\n        hostNameArr: ['h1'],\n        isAllHostNamesValid: function() {return true;},\n        content: {\n          installOptions: {},\n          hosts: null\n        }\n      });\n      sinon.stub(c, 'setupBootStrap', Em.K);\n      var r = c.proceedNext();\n      expect(r).to.equal(true);\n      expect(c.setupBootStrap.calledOnce).to.eql(true);\n      App.get.restore();\n      c.setupBootStrap.restore();\n    });\n\n  });\n\n  describe('#isSubmitDisabled', function () {\n\n    var controller = App.WizardStep2Controller.create({\n      hostsError: '',\n      sshKeyError: ''\n    });\n\n    it('should return value if hostsError is not empty', function () {\n      controller.set('hostsError', 'error');\n      expect(controller.get('isSubmitDisabled').length).to.above(0);\n    });\n\n    it('should return value if sshKeyError is not empty', function () {\n      controller.set('sshKeyError', 'error');\n      controller.set('hostsError', '');\n      expect(controller.get('isSubmitDisabled').length).to.above(0);\n    })\n  });\n\n  describe('#installedHostsPopup', function() {\n    beforeEach(function() {\n      sinon.spy(App.ModalPopup, 'show');\n      sinon.stub(c, 'proceedNext', Em.K);\n    });\n    afterEach(function() {\n      App.ModalPopup.show.restore();\n      c.proceedNext.restore();\n    });\n    it('should call App.ModalPopup.show', function() {\n      c.installedHostsPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n    });\n    it('should proceed next on primary', function() {\n      c.installedHostsPopup().onPrimary();\n      expect(c.proceedNext.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#warningPopup', function() {\n    beforeEach(function() {\n      sinon.spy(App.ModalPopup, 'show');\n      sinon.stub(c, 'proceedNext', Em.K);\n    });\n    afterEach(function() {\n      App.ModalPopup.show.restore();\n      c.proceedNext.restore();\n\n    });\n    it('should call App.ModalPopup.show', function() {\n      c.warningPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n    });\n    it('should proceed next on primary', function() {\n      c.warningPopup().onPrimary();\n      expect(c.proceedNext.calledWith(true)).to.equal(true);\n    });\n  });\n\n  describe('#hostNamePatternPopup', function() {\n    beforeEach(function() {\n      sinon.spy(App.ModalPopup, 'show');\n      sinon.stub(c, 'proceedNext', Em.K);\n    });\n    afterEach(function() {\n      App.ModalPopup.show.restore();\n      c.proceedNext.restore();\n    });\n    it('should call App.ModalPopup.show', function() {\n      c.hostNamePatternPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n    });\n    it('should proceed next on primary', function() {\n      c.hostNamePatternPopup().onPrimary();\n      expect(c.proceedNext.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#manualInstallPopup', function() {\n    beforeEach(function() {\n      sinon.spy(App.ModalPopup, 'show');\n      sinon.stub(App.router, 'send', Em.K);\n      sinon.stub(c, 'saveHosts', Em.K);\n    });\n    afterEach(function() {\n      App.ModalPopup.show.restore();\n      App.router.send.restore();\n      c.saveHosts.restore();\n    });\n    it('should call App.ModalPopup.show', function() {\n      c.manualInstallPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n    });\n    it('should save hosts and go next on primary', function() {\n      c.manualInstallPopup().onPrimary();\n      expect(c.saveHosts.calledOnce).to.equal(true);\n      expect(App.router.send.calledWith('next')).to.equal(true);\n    });\n  });\n\n  describe('#manualInstallWarningPopup', function() {\n    beforeEach(function() {\n      sinon.spy(App.ModalPopup, 'show');\n    });\n    afterEach(function() {\n      App.ModalPopup.show.restore();\n    });\n    it('should call App.ModalPopup.show if content.installOptions.useSsh is false', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {useSsh: false}}});\n      controller.manualInstallWarningPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n    });\n    it('shouldn\\'t call App.ModalPopup.show if content.installOptions.useSsh is true', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {useSsh: true}}});\n      controller.manualInstallWarningPopup();\n      expect(App.ModalPopup.show.called).to.equal(false);\n    });\n  });\n\n  describe('#setAmbariJavaHome', function() {\n    beforeEach(function() {\n      sinon.spy($, 'ajax');\n    });\n    afterEach(function() {\n      $.ajax.restore();\n    });\n    it('should do ajax-request', function() {\n      var controller = App.WizardStep2Controller.create({onGetAmbariJavaHomeSuccess: Em.K, onGetAmbariJavaHomeError: Em.K});\n      controller.setAmbariJavaHome();\n      expect($.ajax.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#onGetAmbariJavaHomeSuccess', function() {\n    it('should set java.home value receiced from server', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {}}});\n      var test = {RootServiceComponents: {properties: {'java.home': '/root'}}};\n      controller.onGetAmbariJavaHomeSuccess(test);\n      expect(controller.content.installOptions.javaHome).to.equal('/root');\n    });\n  });\n\n  describe('#onGetAmbariJavaHomeError', function() {\n    it('should set default java.home value', function() {\n      var controller = App.WizardStep2Controller.create({content: {installOptions: {}}});\n      controller.onGetAmbariJavaHomeError();\n      expect(controller.content.installOptions.javaHome).to.equal(App.get('defaultJavaHome'));\n    });\n  });\n\n  describe('#saveHosts', function() {\n    beforeEach(function() {\n      sinon.stub(c, 'setAmbariJavaHome', Em.K);\n      c.reopen({\n        hostNameArr: ['h1'],\n        content: {\n          hosts: null\n        }\n      });\n    });\n    afterEach(function() {\n      c.setAmbariJavaHome.restore();\n    });\n    it('should call setAmbariJavaHome', function() {\n      c.saveHosts();\n      expect(c.setAmbariJavaHome.calledOnce).to.equal(true);\n    });\n    it('should set content.hosts', function() {\n      c.saveHosts();\n      expect(Em.keys(c.get('content.hosts'))).to.eql(['h1']);\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Ember = require('ember');\nvar App = require('app');\nvar c;\nrequire('utils/http_client');\nrequire('models/host');\nrequire('controllers/wizard/step3_controller');\n\ndescribe('App.WizardStep3Controller', function () {\n\n  beforeEach(function() {\n    c = App.WizardStep3Controller.create({\n      wizardController: App.InstallerController.create(),\n      disablePreviousSteps: Em.K\n    });\n  });\n\n  describe('#getAllRegisteredHostsCallback', function () {\n    it('One host is already in the cluster, one host is registered', function() {\n      var controller = App.WizardStep3Controller.create({\n        hostsInCluster: [{\n          hostName: 'wst3_host1'\n        }],\n        bootHosts: [\n          {name:'wst3_host1'},\n          {name:'wst3_host2'}\n        ]\n      });\n      var test_data = {\n        items: [\n          {\n            Hosts: {\n              host_name: 'wst3_host1'\n            }\n          },\n          {\n            Hosts: {\n              host_name: 'wst3_host2'\n            }\n          },\n          {\n            Hosts: {\n              host_name: 'wst3_host3'\n            }\n          }\n        ]\n      };\n      controller.getAllRegisteredHostsCallback(test_data);\n      expect(controller.get('hasMoreRegisteredHosts')).to.equal(true);\n      expect(controller.get('registeredHosts').length).to.equal(1);\n    });\n\n    it('All hosts are new', function() {\n      var controller = App.WizardStep3Controller.create({\n        hostsInCluster: [{\n          hostName: 'wst3_host1'\n        }],\n        bootHosts: [\n          {name:'wst3_host3'},\n          {name:'wst3_host4'}\n        ]\n      });\n      var test_data = {\n        items: [\n          {\n            Hosts: {\n              host_name: 'wst3_host3'\n            }\n          },\n          {\n            Hosts: {\n              host_name: 'wst3_host4'\n            }\n          }\n        ]\n      };\n      controller.getAllRegisteredHostsCallback(test_data);\n      expect(controller.get('hasMoreRegisteredHosts')).to.equal(false);\n      expect(controller.get('registeredHosts')).to.equal('');\n    });\n\n    it('No new hosts', function() {\n      var controller = App.WizardStep3Controller.create({\n        hostsInCluster: [{\n          hostName: 'wst3_host1'\n        }],\n        bootHosts: [\n          {name:'wst3_host1'}\n        ]\n      });\n      var test_data = {\n        items: [\n          {\n            Hosts: {\n              host_name: 'wst3_host1'\n            }\n          }\n        ]\n      };\n      controller.getAllRegisteredHostsCallback(test_data);\n      expect(controller.get('hasMoreRegisteredHosts')).to.equal(false);\n      expect(controller.get('registeredHosts')).to.equal('');\n    });\n\n  });\n\n  describe('#registrationTimeoutSecs', function() {\n    it('Manual install', function() {\n      var controller = App.WizardStep3Controller.create({\n        content: {\n          installOptions: {\n            manualInstall: true\n          }\n        }\n      });\n      expect(controller.get('registrationTimeoutSecs')).to.equal(15);\n    });\n    it('Not manual install', function() {\n      var controller = App.WizardStep3Controller.create({\n        content: {\n          installOptions: {\n            manualInstall: false\n          }\n        }\n      });\n      expect(controller.get('registrationTimeoutSecs')).to.equal(120);\n    });\n  });\n\n  describe('#isHostHaveWarnings', function() {\n    var tests = [\n      {\n        warnings: [{},{}],\n        m: 'Warnings exist',\n        e: true\n      },\n      {\n        warnings: [],\n        m: 'Warnings don\\'t exist',\n        e: false\n      }\n    ];\n    tests.forEach(function(test) {\n      var controller = App.WizardStep3Controller.create();\n      controller.set('warnings', test.warnings);\n      it(test.m, function() {\n        expect(controller.get('isHostHaveWarnings')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#isWarningsBoxVisible', function() {\n    it('for testMode should be always true', function() {\n      App.testMode = true;\n      expect(c.get('isWarningsBoxVisible')).to.equal(true);\n      App.testMode = false;\n    });\n    it('for \"real\" mode should be based on isRegistrationInProgress', function() {\n      c.set('disablePreviousSteps', Em.K);\n      App.testMode = false;\n      c.set('isRegistrationInProgress', false);\n      expect(c.get('isWarningsBoxVisible')).to.equal(true);\n      c.set('isRegistrationInProgress', true);\n      expect(c.get('isWarningsBoxVisible')).to.equal(false);\n      App.testMode = true;\n    });\n  });\n\n  describe('#clearStep', function() {\n    it('should clear hosts', function() {\n      c.set('hosts', [{}, {}]);\n      c.clearStep();\n      expect(c.get('hosts')).to.eql([]);\n    });\n    it('should clear bootHosts', function() {\n      c.set('bootHosts', [{}, {}]);\n      c.clearStep();\n      expect(c.get('bootHosts').length).to.equal(0);\n    });\n    it('should set stopBootstrap to false', function() {\n      c.set('stopBootstrap', true);\n      c.clearStep();\n      expect(c.get('stopBootstrap')).to.equal(false);\n    });\n    it('should set wizardController DBProperty bootStatus to false', function() {\n      c.get('wizardController').setDBProperty('bootStatus', true);\n      c.clearStep();\n      expect(c.get('wizardController').getDBProperty('bootStatus')).to.equal(false);\n    });\n    it('should set isSubmitDisabled to true', function() {\n      c.set('isSubmitDisabled', false);\n      c.clearStep();\n      expect(c.get('isSubmitDisabled')).to.equal(true);\n    });\n    it('should set isSubmitDisabled to true', function() {\n      c.set('isRetryDisabled', false);\n      c.clearStep();\n      expect(c.get('isRetryDisabled')).to.equal(true);\n    });\n  });\n\n  describe('#loadStep', function() {\n    it('should set registrationStartedAt to null', function() {\n      c.set('disablePreviousSteps', Em.K);\n      c.set('registrationStartedAt', {});\n      c.loadStep();\n      expect(c.get('registrationStartedAt')).to.be.null;\n    });\n    it('should set isLoaded to false', function() {\n      c.set('disablePreviousSteps', Em.K);\n      c.set('clearStep', Em.K);\n      c.set('loadHosts', Em.K);\n      c.set('isLoaded', true);\n      c.loadStep();\n      expect(c.get('isLoaded')).to.equal(false);\n    });\n    it('should call clearStep', function() {\n      c.set('disablePreviousSteps', Em.K);\n      c.set('loadHosts', Em.K);\n      sinon.spy(c, 'clearStep');\n      c.loadStep();\n      expect(c.get('clearStep').calledOnce).to.equal(true);\n      c.clearStep.restore();\n    });\n    it('should call loadHosts', function() {\n      c.set('disablePreviousSteps', Em.K);\n      c.set('loadHosts', Em.K);\n      sinon.spy(c, 'loadHosts');\n      c.loadStep();\n      expect(c.get('loadHosts').calledOnce).to.equal(true);\n      c.loadHosts.restore();\n    });\n    it('should call disablePreviousSteps', function() {\n      c.set('disablePreviousSteps', Em.K);\n      c.set('loadHosts', Em.K);\n      sinon.spy(c, 'disablePreviousSteps');\n      c.loadStep();\n      expect(c.get('disablePreviousSteps').calledOnce).to.equal(true);\n      c.disablePreviousSteps.restore();\n    });\n  });\n\n  describe('#loadHosts', function() {\n    it('should set isLoaded to true', function() {\n      c.set('navigateStep', Em.K);\n      c.set('content', {hosts: {}});\n      c.loadHosts();\n      expect(c.get('isLoaded')).to.equal(true);\n    });\n    it('should set bootStatus REGISTERED on testMode', function() {\n      App.testMode = true;\n      c.set('navigateStep', Em.K);\n      c.set('content', {hosts: {c: {name: 'name'}}});\n      c.loadHosts();\n      expect(c.get('hosts').everyProperty('bootStatus', 'REGISTERED')).to.equal(true);\n    });\n    it('should set bootStatus DONE on \"real\" mode and when installOptions.manualInstall is selected', function() {\n      App.testMode = false;\n      c.set('navigateStep', Em.K);\n      c.set('content', {installOptions:{manualInstall: true}, hosts: {c: {name: 'name'}}});\n      c.loadHosts();\n      expect(c.get('hosts').everyProperty('bootStatus', 'DONE')).to.equal(true);\n      App.testMode = true;\n    });\n    it('should set bootStatus PENDING on \"real\" mode and when installOptions.manualInstall is not selected', function() {\n      App.testMode = false;\n      c.set('navigateStep', Em.K);\n      c.set('content', {installOptions:{manualInstall: false}, hosts: {c: {name: 'name'}}});\n      c.loadHosts();\n      expect(c.get('hosts').everyProperty('bootStatus', 'PENDING')).to.equal(true);\n      App.testMode = true;\n    });\n    it('should set bootStatus PENDING on \"real\" mode and when installOptions.manualInstall is not selected', function() {\n      c.set('navigateStep', Em.K);\n      c.set('content', {hosts: {c: {name: 'name'}, d: {name: 'name1'}}});\n      c.loadHosts();\n      expect(c.get('hosts').everyProperty('isChecked', false)).to.equal(true);\n    });\n  });\n\n  describe('#parseHostInfo', function() {\n\n    var tests = Em.A([\n      {\n        bootHosts: Em.A([\n          Em.Object.create({name: 'c1', bootStatus: 'REGISTERED', bootLog: ''}),\n          Em.Object.create({name: 'c2', bootStatus: 'REGISTERING', bootLog: ''}),\n          Em.Object.create({name: 'c3', bootStatus: 'RUNNING', bootLog: ''})\n        ]),\n        hostsStatusFromServer: Em.A([\n          {hostName: 'c1', status: 'REGISTERED', log: 'c1'},\n          {hostName: 'c2', status: 'REGISTERED', log: 'c2'},\n          {hostName: 'c3', status: 'RUNNING', log: 'c3'}\n        ]),\n        m: 'bootHosts not empty, hostsStatusFromServer not empty, one is RUNNING',\n        e: {\n          c: true,\n          r: true\n        }\n      },\n      {\n        bootHosts: Em.A([]),\n        hostsStatusFromServer: Em.A([\n          {hostName: 'c1', status: 'REGISTERED', log: 'c1'},\n          {hostName: 'c2', status: 'REGISTERED', log: 'c2'},\n          {hostName: 'c3', status: 'RUNNING', log: 'c3'}\n        ]),\n        m: 'bootHosts is empty',\n        e: {\n          c: false,\n          r: false\n        }\n      },\n      {\n        bootHosts: Em.A([\n          Em.Object.create({name: 'c1', bootStatus: 'REGISTERED', bootLog: ''}),\n          Em.Object.create({name: 'c2', bootStatus: 'REGISTERING', bootLog: ''}),\n          Em.Object.create({name: 'c3', bootStatus: 'REGISTERED', bootLog: ''})\n        ]),\n        hostsStatusFromServer: Em.A([\n          {hostName: 'c1', status: 'REGISTERED', log: 'c1'},\n          {hostName: 'c2', status: 'REGISTERED', log: 'c2'},\n          {hostName: 'c3', status: 'REGISTERED', log: 'c3'}\n        ]),\n        m: 'bootHosts not empty, hostsStatusFromServer not empty, no one is RUNNING',\n        e: {\n          c: true,\n          r: false\n        }\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        c.set('bootHosts', test.bootHosts);\n        var r = c.parseHostInfo(test.hostsStatusFromServer);\n        expect(r).to.equal(test.e.r);\n        if (test.e.c) {\n          test.hostsStatusFromServer.forEach(function(h) {\n            var r = c.get('bootHosts').findProperty('name', h.hostName);\n            if (!['REGISTERED', 'REGISTERING'].contains(r.get('bootStatus'))) {\n              expect(r.get('bootStatus')).to.equal(h.status);\n              expect(r.get('bootLog')).to.equal(h.log);\n            }\n          });\n        }\n      });\n    });\n  });\n\n  describe('#removeHosts', function() {\n    it('should call App.showConfirmationPopup', function() {\n      sinon.spy(App, 'showConfirmationPopup');\n      c.removeHosts(Em.A([]));\n      expect(App.showConfirmationPopup.calledOnce).to.equal(true);\n      App.showConfirmationPopup.restore();\n    });\n    it('primary should disable Submit if no more hosts', function() {\n      var hosts = [{}];\n      c.set('hosts', hosts);\n      var popup = c.removeHosts(hosts);\n      popup.onPrimary();\n      expect(c.get('isSubmitDisabled')).to.equal(true);\n    });\n  });\n\n  describe('#removeHost', function() {\n    it('should call removeHosts with array as arg', function() {\n      var host = {a:''};\n      sinon.spy(c, 'removeHosts');\n      c.removeHost(host);\n      expect(c.removeHosts.calledWith([host]));\n      c.removeHosts.restore();\n    });\n  });\n\n  describe('#removeSelectedHosts', function() {\n    it('should remove selected hosts', function() {\n      c = App.WizardStep3Controller.create({\n        wizardController: App.InstallerController.create(),\n        hosts: [\n          {isChecked: true, name: 'c1'},\n          {isChecked: false, name: 'c2'}\n        ]\n      });\n      c.removeSelectedHosts().onPrimary();\n      expect(c.get('hosts').mapProperty('name')).to.eql(['c2']);\n    });\n  });\n\n  describe('#selectedHostsPopup', function() {\n    it('should show App.ModalPopup', function() {\n      sinon.spy(App.ModalPopup, 'show');\n      c.selectedHostsPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#retryHosts', function () {\n    var s;\n    var installer = {launchBootstrap: Em.K};\n\n    beforeEach(function () {\n      sinon.spy(installer, \"launchBootstrap\");\n      s = sinon.stub(App.router, 'get', function () {\n        return installer;\n      });\n      sinon.stub(c, 'doBootstrap', Em.K);\n    });\n\n    afterEach(function () {\n      c.doBootstrap.restore();\n      s.restore();\n      installer.launchBootstrap.restore();\n    });\n\n    it('should set numPolls to 0', function () {\n      c.set('content', {installOptions: {}});\n      c.set('numPolls', 123);\n      c.retryHosts(Em.A([]));\n      expect(c.get('numPolls')).to.equal(0);\n    });\n    it('should set registrationStartedAt to null', function () {\n      c.set('content', {installOptions: {}});\n      c.retryHosts(Em.A([]));\n      expect(c.get('registrationStartedAt')).to.be.null;\n    });\n    it('should startRegistration if installOptions.manualInstall is true', function () {\n      sinon.spy(c, 'startRegistration');\n      c.set('content', {installOptions: {manualInstall: true}});\n      c.retryHosts(Em.A([]));\n      expect(c.startRegistration.calledOnce).to.equal(true);\n      c.startRegistration.restore();\n    });\n    it('should launchBootstrap if installOptions.manualInstall is false', function () {\n      c.set('content', {installOptions: {manualInstall: false}});\n      c.retryHosts(Em.A([]));\n      expect(installer.launchBootstrap.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#retryHost', function() {\n    it('should callretryHosts with array as arg', function() {\n      var host = {n: 'c'}, s = sinon.stub(App.router, 'get', function() {\n        return {launchBootstrap: Em.K}\n      });\n      sinon.spy(c, 'retryHosts');\n      c.set('content', {installOptions: {}});\n      c.set('doBootstrap', Em.K);\n      c.retryHost(host);\n      expect(c.retryHosts.calledWith([host])).to.equal(true);\n      c.retryHosts.restore();\n      s.restore();\n    });\n  });\n\n  describe('#retrySelectedHosts', function() {\n    it('shouldn\\'t do nothing if isRetryDisabled is true', function() {\n      c.set('isRetryDisabled', true);\n      sinon.spy(c, 'retryHosts');\n      c.retrySelectedHosts();\n      expect(c.retryHosts.called).to.equal(false);\n      c.retryHosts.restore();\n    });\n    it('should retry hosts with FAILED bootStatus and set isRetryDisabled to true', function() {\n      var s = sinon.stub(App.router, 'get', function() {\n        return {launchBootstrap: Em.K}\n      });\n      c = App.WizardStep3Controller.create({\n        wizardController: App.InstallerController.create(),\n        isRetryDisabled: false,\n        bootHosts: Em.A([Em.Object.create({name: 'c1', bootStatus: 'FAILED'}), Em.Object.create({name: 'c2', bootStatus: 'REGISTERED'})]),\n        content: {installOptions: {}},\n        doBootstrap: Em.K\n      });\n      sinon.spy(c, 'retryHosts');\n      c.retrySelectedHosts();\n      expect(c.retryHosts.calledWith([{name: 'c1', bootStatus: 'RUNNING'}]));\n      expect(c.get('isRetryDisabled')).to.equal(true);\n      c.retryHosts.restore();\n      s.restore();\n    });\n  });\n\n  describe('#startBootstrap', function() {\n    it('should drop numPolls and registrationStartedAt', function() {\n      c.set('numPolls', 123);\n      c.set('registrationStartedAt', 1234);\n      c.set('doBootstrap', Em.K);\n      c.startBootstrap();\n      expect(c.get('numPolls')).to.equal(0);\n      expect(c.get('registrationStartedAt')).to.be.null;\n    });\n    it('should drop numPolls and registrationStartedAt', function() {\n      var hosts = Em.A([{name: 'c1'}, {name: 'c2'}]);\n      c = App.WizardStep3Controller.create({\n        wizardController: App.InstallerController.create(),\n        doBootstrap: Em.K,\n        setRegistrationInProgressOnce: Em.K,\n        hosts: hosts\n      });\n      c.startBootstrap();\n      expect(c.get('bootHosts').mapProperty('name')).to.eql(['c1','c2']);\n    });\n  });\n\n  describe('#setRegistrationInProgressOnce', function() {\n    it('should call Ember.run.once with \"setRegistrationInProgress\"', function() {\n      sinon.spy(Em.run, 'once');\n      c.setRegistrationInProgressOnce();\n      expect(Em.run.once.firstCall.args[1]).to.equal('setRegistrationInProgress');\n      Em.run.once.restore();\n    });\n  });\n\n  describe('#setRegistrationInProgress', function() {\n    var tests = Em.A([\n      {\n        bootHosts: [],\n        isLoaded: false,\n        e: true,\n        m: 'no bootHosts and isLoaded is false'\n      },\n      {\n        bootHosts: [],\n        isLoaded: true,\n        e: false,\n        m: 'no bootHosts and isLoaded is true'\n      },\n      {\n        bootHosts: [\n          Em.Object.create({bootStatus: 'RUNNING'}),\n          Em.Object.create({bootStatus: 'RUNNING'})\n        ],\n        isLoaded: true,\n        e: false,\n        m: 'bootHosts without REGISTERED/FAILED and isLoaded is true'\n      },\n      {\n        bootHosts: [\n          Em.Object.create({bootStatus: 'RUNNING'}),\n          Em.Object.create({bootStatus: 'RUNNING'})\n        ],\n        isLoaded: false,\n        e: true,\n        m: 'bootHosts without REGISTERED/FAILED and isLoaded is false'\n      },\n      {\n        bootHosts: [\n          Em.Object.create({bootStatus: 'REGISTERED'}),\n          Em.Object.create({bootStatus: 'RUNNING'})\n        ],\n        isLoaded: false,\n        e: true,\n        m: 'bootHosts with one REGISTERED and isLoaded is false'\n      },\n      {\n        bootHosts: [\n          Em.Object.create({bootStatus: 'FAILED'}),\n          Em.Object.create({bootStatus: 'RUNNING'})\n        ],\n        isLoaded: false,\n        e: true,\n        m: 'bootHosts with one FAILED and isLoaded is false'\n      },\n      {\n        bootHosts: [\n          Em.Object.create({bootStatus: 'REGISTERED'}),\n          Em.Object.create({bootStatus: 'RUNNING'})\n        ],\n        isLoaded: true,\n        e: false,\n        m: 'bootHosts with one REGISTERED and isLoaded is true'\n      },\n      {\n        bootHosts: [\n          Em.Object.create({bootStatus: 'FAILED'}),\n          Em.Object.create({bootStatus: 'RUNNING'})\n        ],\n        isLoaded: true,\n        e: false,\n        m: 'bootHosts with one FAILED and isLoaded is true'\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        sinon.stub(c, 'disablePreviousSteps', Em.K);\n        c.set('bootHosts', test.bootHosts);\n        c.set('isLoaded', test.isLoaded);\n        c.setRegistrationInProgress();\n        expect(c.get('isRegistrationInProgress')).to.equal(test.e);\n        c.disablePreviousSteps.restore();\n      });\n    });\n  });\n\n  describe('#doBootstrap', function() {\n    beforeEach(function() {\n      sinon.spy(App.ajax, 'send');\n    });\n    afterEach(function() {\n      App.ajax.send.restore();\n    });\n    it('shouldn\\'t do nothing if stopBootstrap is true', function() {\n      c.set('stopBootstrap', true);\n      c.doBootstrap();\n      expect(App.ajax.send.called).to.equal(false);\n    });\n    it('should increment numPolls if stopBootstrap is false', function() {\n      c.set('stopBootstrap', false);\n      c.set('numPolls', 0);\n      c.doBootstrap();\n      expect(c.get('numPolls')).to.equal(1);\n    });\n    it('should do ajax call if stopBootstrap is false', function() {\n      c.set('stopBootstrap', false);\n      c.doBootstrap();\n      expect(App.ajax.send.called).to.equal(true);\n    });\n  });\n\n  describe('#startRegistration', function() {\n    it('shouldn\\'t do nothing if registrationStartedAt isn\\'t null', function() {\n      c.set('registrationStartedAt', 1234);\n      sinon.spy(c, 'isHostsRegistered');\n      c.startRegistration();\n      expect(c.isHostsRegistered.called).to.equal(false);\n      expect(c.get('registrationStartedAt')).to.equal(1234);\n      c.isHostsRegistered.restore();\n    });\n    it('shouldn\\'t do nothing if registrationStartedAt isn\\'t null', function() {\n      c.set('registrationStartedAt', null);\n      sinon.spy(c, 'isHostsRegistered');\n      c.startRegistration();\n      expect(c.isHostsRegistered.calledOnce).to.equal(true);\n      c.isHostsRegistered.restore();\n    });\n  });\n\n  describe('#isHostsRegistered', function() {\n    beforeEach(function() {\n      sinon.spy(App.ajax, 'send');\n    });\n    afterEach(function() {\n      App.ajax.send.restore();\n    });\n    it('shouldn\\'t do nothing if stopBootstrap is true', function() {\n      c.set('stopBootstrap', true);\n      c.isHostsRegistered();\n      expect(App.ajax.send.called).to.equal(false);\n    });\n    it('should do ajax call if stopBootstrap is false', function() {\n      c.set('stopBootstrap', false);\n      c.isHostsRegistered();\n      expect(App.ajax.send.called).to.equal(true);\n\n    });\n  });\n\n  describe('#isHostsRegisteredSuccessCallback', function() {\n    var tests = Em.A([\n      {\n        bootHosts: Em.A([\n          Em.Object.create({bootStatus: 'DONE'})\n        ]),\n        data: {items:[]},\n        m: 'one host DONE',\n        e: {\n          bs: 'REGISTERING',\n          getHostInfoCalled: false\n        }\n      },\n      {\n        bootHosts: Em.A([\n          Em.Object.create({bootStatus: 'REGISTERING', name: 'c1'})\n        ]),\n        data: {items:[{Hosts: {host_name: 'c1'}}]},\n        m: ' one host REGISTERING',\n        e: {\n          bs: 'FAILED',\n          getHostInfoCalled: false\n        }\n      },\n      {\n        bootHosts: Em.A([\n          Em.Object.create({bootStatus: 'REGISTERING', name: 'c1'})\n        ]),\n        data: {items:[{Hosts: {host_name: 'c2'}}]},\n        m: 'one host REGISTERING but data without info about it',\n        e: {\n          bs: 'FAILED',\n          getHostInfoCalled: false\n        }\n      },\n      {\n        bootHosts: Em.A([\n          Em.Object.create({bootStatus: 'RUNNING', name: 'c1'})\n        ]),\n        data: {items:[{Hosts: {host_name: 'c1'}}]},\n        m: ' one host RUNNING',\n        e: {\n          bs: 'RUNNING',\n          getHostInfoCalled: false\n        }\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        sinon.spy(c, 'getHostInfo');\n        c.set('bootHosts', test.bootHosts);\n        c.isHostsRegisteredSuccessCallback(test.data);\n        expect(c.get('bootHosts')[0].get('bootStatus')).to.equal(test.e.bs);\n        expect(c.getHostInfo.called).to.equal(test.e.getHostInfoCalled);\n        c.getHostInfo.restore();\n      });\n    });\n  });\n\n  describe('#getAllRegisteredHosts', function() {\n    it('should call App.ajax.send', function() {\n      sinon.spy(App.ajax, 'send');\n      c.getAllRegisteredHosts();\n      expect(App.ajax.send.calledOnce).to.equal(true);\n      App.ajax.send.restore();\n    });\n  });\n\n  describe('#getAllRegisteredHostsCallback', function() {\n    var tests = Em.A([\n      {\n        hostsInCluster: ['c3'],\n        bootHosts: [{name:'c1'},{name:'c2'}],\n        hosts: Em.A([\n          {Hosts: {host_name:'c1'}},\n          {Hosts: {host_name:'c2'}}\n        ]),\n        m: 'No registered hosts',\n        e: {\n          hasMoreRegisteredHosts: false,\n          registeredHosts: ''\n        }\n      },\n      {\n        hostsInCluster: ['c4'],\n        bootHosts: [{name:'c3'},{name:'c5'}],\n        hosts: Em.A([\n          {Hosts: {host_name:'c1'}},\n          {Hosts: {host_name:'c2'}}\n        ]),\n        m: '2 registered hosts',\n        e: {\n          hasMoreRegisteredHosts: true,\n          registeredHosts: ['c1','c2']\n        }\n      },\n      {\n        hostsInCluster: ['c4'],\n        bootHosts: [{name:'c1'},{name:'c5'}],\n        hosts: Em.A([\n          {Hosts: {host_name:'c1'}},\n          {Hosts: {host_name:'c2'}}\n        ]),\n        m: '1 registered host',\n        e: {\n          hasMoreRegisteredHosts: true,\n          registeredHosts: ['c2']\n        }\n      },\n      {\n        hostsInCluster: ['c1'],\n        bootHosts: [{name:'c3'},{name:'c5'}],\n        hosts: Em.A([\n          {Hosts: {host_name:'c1'}},\n          {Hosts: {host_name:'c2'}}\n        ]),\n        m: '1 registered host (2)',\n        e: {\n          hasMoreRegisteredHosts: true,\n          registeredHosts: ['c2']\n        }\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        c.reopen({hostsInCluster: test.hostsInCluster, setRegistrationInProgress: Em.K});\n        c.set('bootHosts', test.bootHosts);\n        c.getAllRegisteredHostsCallback({items:test.hosts});\n        expect(c.get('hasMoreRegisteredHosts')).to.equal(test.e.hasMoreRegisteredHosts);\n        expect(c.get('registeredHosts')).to.eql(test.e.registeredHosts);\n      });\n    });\n  });\n\n  describe('#registerErrPopup', function() {\n    it('should call App.ModalPopup.show', function() {\n      sinon.spy(App.ModalPopup, 'show');\n      c.registerErrPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#getHostInfo', function() {\n    it('should do ajax request', function() {\n      sinon.spy(App.ajax, 'send');\n      c.getHostInfo();\n      expect(App.ajax.send.calledOnce).to.equal(true);\n      App.ajax.send.restore();\n    });\n  });\n\n  describe('#getHostInfoErrorCallback', function() {\n    it('should call registerErrPopup', function() {\n      sinon.spy(c, 'registerErrPopup');\n      c.getHostInfoErrorCallback();\n      expect(c.registerErrPopup.calledOnce).to.equal(true);\n      c.registerErrPopup.restore();\n    });\n  });\n\n  describe('#stopRegistration', function() {\n    var tests = Em.A([\n      {\n        bootHosts: [{bootStatus: 'REGISTERED'}, {bootStatus: 'RUNNING'}],\n        e: {isSubmitDisabled: false, isRetryDisabled: true}\n      },\n      {\n        bootHosts: [{bootStatus: 'FAILED'}, {bootStatus: 'RUNNING'}],\n        e: {isSubmitDisabled: true, isRetryDisabled: false}\n      },\n      {\n        bootHosts: [{bootStatus: 'FAILED'}, {bootStatus: 'REGISTERED'}],\n        e: {isSubmitDisabled: false, isRetryDisabled: false}\n      },\n      {\n        bootHosts: [{bootStatus: 'RUNNING'}, {bootStatus: 'RUNNING'}],\n        e: {isSubmitDisabled: true, isRetryDisabled: true}\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.bootHosts.mapProperty('bootStatus').join(', '), function() {\n        c.reopen({bootHosts: test.bootHosts});\n        c.stopRegistration();\n        expect(c.get('isSubmitDisabled')).to.equal(test.e.isSubmitDisabled);\n        expect(c.get('isRetryDisabled')).to.equal(test.e.isRetryDisabled);\n      });\n    });\n  });\n\n  describe('#submit', function() {\n    it('if isHostHaveWarnings should show confirmation popup', function() {\n      c.reopen({isHostHaveWarnings: true});\n      sinon.spy(App.ModalPopup, 'show');\n      c.submit();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n    it('if isHostHaveWarnings should show confirmation popup. on Primary should set bootHosts to content.hosts', function() {\n      var bootHosts = [{name: 'c1'}];\n      c.reopen({isHostHaveWarnings: true, bootHosts: bootHosts, hosts: []});\n      c.submit().onPrimary();\n      expect(c.get('content.hosts')).to.eql(bootHosts);\n    });\n    it('if isHostHaveWarnings is false should set bootHosts to content.hosts', function() {\n      var bootHosts = [{name: 'c1'}];\n      c.reopen({isHostHaveWarnings: false, bootHosts: bootHosts, hosts: []});\n      c.submit();\n      expect(c.get('content.hosts')).to.eql(bootHosts);\n    });\n  });\n\n  describe('#hostLogPopup', function() {\n    it('should show App.ModalPopup', function() {\n      sinon.spy(App.ModalPopup, 'show');\n      c.hostLogPopup({context:Em.Object.create({})});\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#rerunChecksSuccessCallback', function() {\n    beforeEach(function() {\n      sinon.stub(c, 'parseWarnings', Em.K);\n    });\n    afterEach(function() {\n      c.parseWarnings.restore();\n    });\n    it('should set checksUpdateProgress to 100', function() {\n      c.set('checksUpdateProgress', 0);\n      c.rerunChecksSuccessCallback({});\n      expect(c.get('checksUpdateProgress')).to.equal(100);\n    });\n    it('should set checksUpdateStatus to SUCCESS', function() {\n      c.set('checksUpdateStatus', '');\n      c.rerunChecksSuccessCallback({});\n      expect(c.get('checksUpdateStatus')).to.equal('SUCCESS');\n    });\n    it('should set call parseWarnings', function() {\n      c.rerunChecksSuccessCallback({});\n      expect(c.parseWarnings.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#rerunChecksErrorCallback', function() {\n    it('should set checksUpdateProgress to 100', function() {\n      c.set('checksUpdateProgress', 0);\n      c.rerunChecksErrorCallback({});\n      expect(c.get('checksUpdateProgress')).to.equal(100);\n    });\n    it('should set checksUpdateStatus to FAILED', function() {\n      c.set('checksUpdateStatus', '');\n      c.rerunChecksErrorCallback({});\n      expect(c.get('checksUpdateStatus')).to.equal('FAILED');\n    });\n  });\n\n  describe('#filterBootHosts', function() {\n    var tests = Em.A([\n      {\n        bootHosts: [\n          Em.Object.create({name: 'c1'}),\n          Em.Object.create({name: 'c2'})\n        ],\n        data: {\n          items: [\n            {Hosts: {host_name: 'c1'}}\n          ]\n        },\n        m: 'one host',\n        e: ['c1']\n      },\n      {\n        bootHosts: [\n          Em.Object.create({name: 'c1'}),\n          Em.Object.create({name: 'c2'})\n        ],\n        data: {\n          items: [\n            {Hosts: {host_name: 'c3'}}\n          ]\n        },\n        m: 'no hosts',\n        e: []\n      },\n      {\n      bootHosts: [\n        Em.Object.create({name: 'c1'}),\n        Em.Object.create({name: 'c2'})\n      ],\n        data: {\n        items: [\n          {Hosts: {host_name: 'c1'}},\n          {Hosts: {host_name: 'c2'}}\n        ]\n      },\n      m: 'many hosts',\n        e: ['c1', 'c2']\n    }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        c.reopen({bootHosts: test.bootHosts});\n        var filteredData = c.filterBootHosts(test.data);\n        expect(filteredData.items.mapProperty('Hosts.host_name')).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#hostWarningsPopup', function() {\n    it('should show App.ModalPopup', function() {\n      sinon.stub(App.ModalPopup, 'show', Em.K);\n      c.hostWarningsPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n    it('should clear checksUpdateStatus on primary', function() {\n      c.set('checksUpdateStatus', 'not null value');\n      c.hostWarningsPopup().onPrimary();\n      expect(c.get('checksUpdateStatus')).to.be.null;\n    });\n    it('should clear checksUpdateStatus on close', function() {\n      c.set('checksUpdateStatus', 'not null value');\n      c.hostWarningsPopup().onClose();\n      expect(c.get('checksUpdateStatus')).to.be.null;\n    });\n    it('should rerunChecks onSecondary', function() {\n      sinon.stub(c, 'rerunChecks', Em.K);\n      c.hostWarningsPopup().onSecondary();\n      expect(c.rerunChecks.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#registeredHostsPopup', function() {\n    it('should show App.ModalPopup', function() {\n      sinon.spy(App.ModalPopup, 'show');\n      c.registeredHostsPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#parseWarnings', function() {\n    it('no warnings if last_agent_env isn\\'t specified', function() {\n      c.set('warnings', [{}]);\n      c.set('warningsByHost', [{},{}]);\n      c.parseWarnings({items:[{Hosts:{host_name:'c1'}}]});\n      expect(c.get('warnings')).to.eql([]);\n      expect(c.get('warningsByHost.length')).to.equal(1); // default group\n      expect(c.get('isWarningsLoaded')).to.equal(true);\n    });\n\n    Em.A([\n        {\n          m: 'parse stackFoldersAndFiles',\n          tests : Em.A([\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {stackFoldersAndFiles: []}}}],\n              m: 'empty stackFoldersAndFiles',\n              e: {\n                warnings: [],\n                warningsByHost: [0]\n              }\n            },\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {stackFoldersAndFiles: [{name: 'n1'}]}}}],\n              m: 'not empty stackFoldersAndFiles',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1'],\n                  onSingleHost: true,\n                  category: 'fileFolders'\n                }],\n                warningsByHost: [1]\n              }\n            },\n            {\n              items: [\n                {Hosts:{host_name: 'c1', last_agent_env: {stackFoldersAndFiles: [{name: 'n1'}]}}},\n                {Hosts:{host_name: 'c2', last_agent_env: {stackFoldersAndFiles: [{name: 'n1'}]}}}\n              ],\n              m: 'not empty stackFoldersAndFiles on two hosts',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1', 'c2'],\n                  onSingleHost: false,\n                  category: 'fileFolders'\n                }],\n                warningsByHost: [1]\n              }\n            }\n          ])\n        },\n        {\n          m: 'parse installedPackages',\n          tests : Em.A([\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {installedPackages: []}}}],\n              m: 'empty installedPackages',\n              e: {\n                warnings: [],\n                warningsByHost: [0]\n              }\n            },\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {installedPackages: [{name: 'n1'}]}}}],\n              m: 'not empty installedPackages',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1'],\n                  onSingleHost: true,\n                  category: 'packages'\n                }],\n                warningsByHost: [1]\n              }\n            },\n            {\n              items: [\n                {Hosts:{host_name: 'c1', last_agent_env: {installedPackages: [{name: 'n1'}]}}},\n                {Hosts:{host_name: 'c2', last_agent_env: {installedPackages: [{name: 'n1'}]}}}\n              ],\n              m: 'not empty installedPackages on two hosts',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1', 'c2'],\n                  onSingleHost: false,\n                  category: 'packages'\n                }],\n                warningsByHost: [1]\n              }\n            }\n          ])\n        },\n        {\n          m: 'parse hostHealth.liveServices',\n          tests : Em.A([\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {hostHealth: []}}}],\n              m: 'empty hostHealth',\n              e: {\n                warnings: [],\n                warningsByHost: [0]\n              }\n            },\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {hostHealth:{liveServices: []}}}}],\n              m: 'empty liveServices',\n              e: {\n                warnings: [],\n                warningsByHost: [0]\n              }\n            },\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {hostHealth:{liveServices: [{status: 'Unhealthy', name: 'n1'}]}}}}],\n              m: 'not empty hostHealth.liveServices',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1'],\n                  onSingleHost: true,\n                  category: 'services'\n                }],\n                warningsByHost: [1]\n              }\n            },\n            {\n              items: [\n                {Hosts:{host_name: 'c1', last_agent_env: {hostHealth:{liveServices: [{status: 'Unhealthy', name: 'n1'}]}}}},\n                {Hosts:{host_name: 'c2', last_agent_env: {hostHealth:{liveServices: [{status: 'Unhealthy', name: 'n1'}]}}}}\n              ],\n              m: 'not empty hostHealth.liveServices on two hosts',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1', 'c2'],\n                  onSingleHost: false,\n                  category: 'services'\n                }],\n                warningsByHost: [1, 1]\n              }\n            }\n          ])\n        },\n        {\n          m: 'parse existingUsers',\n          tests : Em.A([\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {existingUsers: []}}}],\n              m: 'empty existingUsers',\n              e: {\n                warnings: [],\n                warningsByHost: [0]\n              }\n            },\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {existingUsers: [{userName: 'n1'}]}}}],\n              m: 'not empty existingUsers',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1'],\n                  onSingleHost: true,\n                  category: 'users'\n                }],\n                warningsByHost: [1]\n              }\n            },\n            {\n              items: [\n                {Hosts:{host_name: 'c1', last_agent_env: {existingUsers: [{userName: 'n1'}]}}},\n                {Hosts:{host_name: 'c2', last_agent_env: {existingUsers: [{userName: 'n1'}]}}}\n              ],\n              m: 'not empty existingUsers on two hosts',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1', 'c2'],\n                  onSingleHost: false,\n                  category: 'users'\n                }],\n                warningsByHost: [1, 1]\n              }\n            }\n          ])\n        },\n        {\n          m: 'parse alternatives',\n          tests : Em.A([\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {alternatives: []}}}],\n              m: 'empty alternatives',\n              e: {\n                warnings: [],\n                warningsByHost: [0]\n              }\n            },\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {alternatives: [{name: 'n1'}]}}}],\n              m: 'not empty alternatives',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1'],\n                  onSingleHost: true,\n                  category: 'alternatives'\n                }],\n                warningsByHost: [1]\n              }\n            },\n            {\n              items: [\n                {Hosts:{host_name: 'c1', last_agent_env: {alternatives: [{name: 'n1'}]}}},\n                {Hosts:{host_name: 'c2', last_agent_env: {alternatives: [{name: 'n1'}]}}}\n              ],\n              m: 'not empty alternatives on two hosts',\n              e: {\n                warnings: [{\n                  name: 'n1',\n                  hosts: ['c1', 'c2'],\n                  onSingleHost: false,\n                  category: 'alternatives'\n                }],\n                warningsByHost: [1, 1]\n              }\n            }\n          ])\n        },\n        {\n          m: 'parse hostHealth.activeJavaProcs',\n          tests : Em.A([\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {hostHealth: [], javaProcs: []}}}],\n              m: 'empty hostHealth',\n              e: {\n                warnings: [],\n                warningsByHost: [0]\n              }\n            },\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {hostHealth:{activeJavaProcs: []}}}}],\n              m: 'empty activeJavaProcs',\n              e: {\n                warnings: [],\n                warningsByHost: [0]\n              }\n            },\n            {\n              items: [{Hosts:{host_name: 'c1', last_agent_env: {hostHealth:{activeJavaProcs: [{pid: 'n1', command: ''}]}}}}],\n              m: 'not empty hostHealth.activeJavaProcs',\n              e: {\n                warnings: [{\n                  pid: 'n1',\n                  hosts: ['c1'],\n                  onSingleHost: true,\n                  category: 'processes'\n                }],\n                warningsByHost: [1]\n              }\n            },\n            {\n              items: [\n                {Hosts:{host_name: 'c1', last_agent_env: {hostHealth:{activeJavaProcs: [{pid: 'n1', command: ''}]}}}},\n                {Hosts:{host_name: 'c2', last_agent_env: {hostHealth:{activeJavaProcs: [{pid: 'n1', command: ''}]}}}}\n              ],\n              m: 'not empty hostHealth.activeJavaProcs on two hosts',\n              e: {\n                warnings: [{\n                  pid: 'n1',\n                  hosts: ['c1', 'c2'],\n                  onSingleHost: false,\n                  category: 'processes'\n                }],\n                warningsByHost: [1, 1]\n              }\n            }\n          ])\n        }\n    ]).forEach(function(category) {\n      describe(category.m, function() {\n        category.tests.forEach(function(test) {\n          it(test.m, function() {\n            c.parseWarnings({items: test.items});\n            c.get('warnings').forEach(function(w, i) {\n              Em.keys(test.e.warnings[i]).forEach(function(k) {\n                expect(w[k]).to.eql(test.e.warnings[i][k]);\n              });\n            });\n            for(var i in test.e.warningsByHost) {\n              if(test.e.warningsByHost.hasOwnProperty(i)) {\n                expect(c.get('warningsByHost')[i].warnings.length).to.equal(test.e.warningsByHost[i]);\n              }\n            }\n          });\n        });\n      });\n    });\n\n  });\n\n  describe('#hostsInCluster', function() {\n    it('should load data from App.Host model', function() {\n      var hosts = [\n        Em.Object.create({hostName: 'h1'}),\n        Em.Object.create({hostName: 'h2'}),\n        Em.Object.create({hostName: 'h3'})\n      ], expected = ['h1', 'h2', 'h3'];\n      sinon.stub(App.Host, 'find', function() {\n        return hosts;\n      });\n      expect(c.get('hostsInCluster')).to.eql(expected);\n      App.Host.find.restore();\n    });\n  });\n\n  describe('#navigateStep', function() {\n    Em.A([\n        {\n          isLoaded: true,\n          manualInstall: false,\n          bootStatus: false,\n          m: 'should call startBootstrap',\n          e: true\n        },\n        {\n          isLoaded: true,\n          manualInstall: false,\n          bootStatus: true,\n          m: 'shouldn\\'t call startBootstrap (1)',\n          e: false\n        },\n        {\n          isLoaded: false,\n          manualInstall: false,\n          bootStatus: false,\n          m: 'shouldn\\'t call startBootstrap (2)',\n          e: false\n        },\n        {\n          isLoaded: false,\n          manualInstall: true,\n          bootStatus: false,\n          m: 'shouldn\\'t call startBootstrap (3)',\n          e: false\n        }\n    ]).forEach(function(test) {\n        it(test.m, function() {\n          c.reopen({\n            isLoaded: test.isLoaded,\n            content: {\n              installOptions: {\n                manualInstall: test.manualInstall\n              }\n            },\n            wizardController: Em.Object.create({\n              getDBProperty: function() {\n                return test.bootStatus\n              }\n            })\n          });\n          sinon.stub(c, 'startBootstrap', Em.K);\n          c.navigateStep();\n          if(test.e) {\n            expect(c.startBootstrap.calledOnce).to.equal(true);\n          }\n          else {\n            expect(c.startBootstrap.called).to.equal(false);\n          }\n          c.startBootstrap.restore();\n        });\n      });\n\n    it('should set test data if testMode is true', function() {\n      c.reopen({\n        isLoaded: true,\n        hosts: [{}, {}, {}],\n        content: {\n          installOptions: {\n            manualInstall: true\n          }\n        },\n        setRegistrationInProgress: Em.K\n      });\n      sinon.stub(App, 'get', function(k) {\n        if('testMode' === k) return true;\n        return Em.get(App, k);\n      });\n      c.navigateStep();\n      App.get.restore();\n      expect(c.get('bootHosts.length')).to.equal(c.get('hosts.length'));\n      expect(c.get('bootHosts').everyProperty('cpu', '2')).to.equal(true);\n      expect(c.get('bootHosts').everyProperty('memory', '2000000')).to.equal(true);\n      expect(c.get('isSubmitDisabled')).to.equal(false);\n    });\n\n    it('should start registration', function() {\n      c.reopen({\n        isLoaded: true,\n        hosts: [{}, {}, {}],\n        content: {\n          installOptions: {\n            manualInstall: true\n          }\n        },\n        setRegistrationInProgress: Em.K,\n        startRegistration: Em.K\n      });\n      sinon.spy(c, 'startRegistration');\n      sinon.stub(App, 'get', function(k) {\n        if('testMode' === k) return false;\n        return Em.get(App, k);\n      });\n      c.navigateStep();\n      App.get.restore();\n      expect(c.startRegistration.calledOnce).to.equal(true);\n      expect(c.get('bootHosts.length')).to.equal(c.get('hosts.length'));\n      expect(c.get('registrationStartedAt')).to.be.null;\n      c.startRegistration.restore();\n    });\n\n  });\n\n  describe('#checkHostDiskSpace', function() {\n    Em.A([\n        {\n          diskInfo: [\n            {\n              available: App.minDiskSpace * 1024 * 1024 - 1024,\n              mountpoint: '/'\n            }\n          ],\n          m: 'available less than App.minDiskSpace',\n          e: false\n        },\n        {\n          diskInfo: [\n            {\n              available: App.minDiskSpaceUsrLib * 1024 * 1024 - 1024,\n              mountpoint: '/usr'\n            }\n          ],\n          m: 'available less than App.minDiskSpaceUsrLib (1)',\n          e: false\n        },\n        {\n          diskInfo: [\n            {\n              available: App.minDiskSpaceUsrLib * 1024 * 1024 - 1024,\n              mountpoint: '/usr/lib'\n            }\n          ],\n          m: 'available less than App.minDiskSpaceUsrLib (2)',\n          e: false\n        },\n        {\n          diskInfo: [\n            {\n              available: App.minDiskSpace * 1024 * 1024 + 1024,\n              mountpoint: '/'\n            }\n          ],\n          m: 'available greater than App.minDiskSpace',\n          e: true\n        },\n        {\n          diskInfo: [\n            {\n              available: App.minDiskSpaceUsrLib * 1024 * 1024 + 1024,\n              mountpoint: '/usr'\n            }\n          ],\n          m: 'available greater than App.minDiskSpaceUsrLib (1)',\n          e: true\n        },\n        {\n          diskInfo: [\n            {\n              available: App.minDiskSpaceUsrLib * 1024 * 1024 + 1024,\n              mountpoint: '/usr/lib'\n            }\n          ],\n          m: 'available greater than App.minDiskSpaceUsrLib (2)',\n          e: true\n        },\n        {\n          diskInfo: [\n            {\n              available: App.minDiskSpaceUsrLib * 1024 * 1024 + 1024,\n              mountpoint: '/home/tdk'\n            }\n          ],\n          m: 'mount point without free space checks',\n          e: true\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          var r = c.checkHostDiskSpace('', test.diskInfo);\n          expect(Em.isEmpty(r)).to.equal(test.e);\n        });\n      });\n  });\n\n  describe('#checkHostOSType', function() {\n    it('should return empty string if no stacks provided', function() {\n      c.reopen({content: {stacks: null}});\n      expect(c.checkHostOSType()).to.equal('');\n    });\n    it('os type is valid', function() {\n      var osType = 'redhat6';\n      c.reopen({\n        content: {\n          stacks: [\n            Em.Object.create({isSelected: true, operatingSystems: [{selected: true, osType: osType}]})\n          ]\n        }\n      });\n      expect(c.checkHostOSType(osType, '')).to.equal('');\n    });\n    it('os type is invalid', function() {\n      var osType = 'os2';\n      c.reopen({\n        content: {\n          stacks: [\n            Em.Object.create({isSelected: true, operatingSystems: [{selected: true, osType: 'os1'}]})\n          ]\n        }\n      });\n      expect(Em.isEmpty(c.checkHostOSType(osType, ''))).to.equal(false);\n    });\n  });\n\n  describe('#getHostInfoSuccessCallback', function() {\n\n    beforeEach(function() {\n      sinon.stub(c, 'parseWarnings', Em.K);\n      sinon.stub(c, 'stopRegistration', Em.K);\n    });\n\n    afterEach(function() {\n      c.parseWarnings.restore();\n      c.stopRegistration.restore();\n    });\n\n    it('should call _setHostDataWithSkipBootstrap if skipBootstrap is true', function() {\n      sinon.spy(c, '_setHostDataWithSkipBootstrap');\n      sinon.stub(App, 'get', function(k) {\n        if ('skipBootstrap' === k) return true;\n        return Em.get(App, k);\n      });\n      c.reopen({\n        bootHosts: [Em.Object.create({name: 'h1'})]\n      });\n      var jsonData = {items: [{Hosts: {host_name: 'h1'}}]};\n      c.getHostInfoSuccessCallback(jsonData);\n      expect(c._setHostDataWithSkipBootstrap.calledOnce).to.equal(true);\n      App.get.restore();\n      c._setHostDataWithSkipBootstrap.restore();\n    });\n\n    it('should add repo warnings', function() {\n\n      var jsonData = {items: [{Hosts: {host_name: 'h1'}}]};\n\n      sinon.stub(c, 'checkHostOSType', function() {return 'not_null_value';});\n      sinon.stub(c, 'checkHostDiskSpace', Em.K);\n      sinon.stub(c, '_setHostDataFromLoadedHostInfo', Em.K);\n\n      sinon.stub(App, 'get', function(k) {\n        if ('skipBootstrap' === k) return false;\n        return Em.get(App, k);\n      });\n\n      c.reopen({\n        bootHosts: [Em.Object.create({name: 'h1'})]\n      });\n\n      c.getHostInfoSuccessCallback(jsonData);\n      expect(c.get('repoCategoryWarnings.length')).to.equal(1);\n      expect(c.get('repoCategoryWarnings.firstObject.hostsNames').contains('h1')).to.equal(true);\n\n      c.checkHostOSType.restore();\n      c.checkHostDiskSpace.restore();\n      c._setHostDataFromLoadedHostInfo.restore();\n      App.get.restore();\n    });\n\n    it('should add disk warnings', function() {\n\n      var jsonData = {items: [{Hosts: {host_name: 'h1'}}]};\n\n      sinon.stub(c, 'checkHostDiskSpace', function() {return 'not_null_value';});\n      sinon.stub(c, 'checkHostOSType', Em.K);\n      sinon.stub(c, '_setHostDataFromLoadedHostInfo', Em.K);\n\n      sinon.stub(App, 'get', function(k) {\n        if ('skipBootstrap' === k) return false;\n        return Em.get(App, k);\n      });\n\n      c.reopen({\n        bootHosts: [Em.Object.create({name: 'h1'})]\n      });\n\n      c.getHostInfoSuccessCallback(jsonData);\n      expect(c.get('diskCategoryWarnings.length')).to.equal(1);\n      expect(c.get('diskCategoryWarnings.firstObject.hostsNames').contains('h1')).to.equal(true);\n\n      c.checkHostOSType.restore();\n      c.checkHostDiskSpace.restore();\n      c._setHostDataFromLoadedHostInfo.restore();\n      App.get.restore();\n    });\n\n  });\n\n  describe('#_setHostDataWithSkipBootstrap', function() {\n    it('should set mock-data', function() {\n      var host = Em.Object.create({});\n      c._setHostDataWithSkipBootstrap(host);\n      expect(host.get('cpu')).to.equal(2);\n      expect(host.get('memory')).to.equal('2000000.00');\n      expect(host.get('disk_info.length')).to.equal(4);\n    });\n  });\n\n  describe('#_setHostDataFromLoadedHostInfo', function() {\n    it('should set data from hostInfo', function() {\n      var host = Em.Object.create(),\n        hostInfo = {\n          Hosts: {\n            cpu_count: 2,\n            total_mem: 12345,\n            os_type: 't1',\n            os_arch: 'os1',\n            ip: '0.0.0.0',\n            disk_info: [\n              {mountpoint: '/boot'},\n              {mountpoint: '/usr'},\n              {mountpoint: '/no-boot'},\n              {mountpoint: '/boot'}\n            ]\n          }\n        };\n      c._setHostDataFromLoadedHostInfo(host, hostInfo);\n      expect(host.get('cpu')).to.equal(2);\n      expect(host.get('os_type')).to.equal('t1');\n      expect(host.get('os_arch')).to.equal('os1');\n      expect(host.get('ip')).to.equal('0.0.0.0');\n      expect(host.get('memory')).to.equal('12345.00');\n      expect(host.get('disk_info.length')).to.equal(2);\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\nrequire('controllers/wizard/step4_controller');\n\ndescribe('App.WizardStep4Controller', function () {\n\n  var services = [\n    'HDFS', 'MAPREDUCE', 'NAGIOS', 'GANGLIA', 'OOZIE', 'HIVE', 'HBASE', 'PIG', 'SCOOP', 'ZOOKEEPER', 'HCATALOG',\n    'WEBHCAT', 'YARN', 'MAPREDUCE2', 'FALCON', 'TEZ', 'STORM'\n  ];\n\n  var controller = App.WizardStep4Controller.create();\n  services.forEach(function(serviceName, index){\n    controller.pushObject(Ember.Object.create({\n      'serviceName':serviceName, 'isSelected': true, 'canBeSelected': true, 'isInstalled': false, 'isDisabled': 'HDFS' === serviceName\n    }));\n  });\n\n  describe('#isSubmitDisabled', function () {\n    it('should return false if at least one selected service is not installed', function () {\n      expect(controller.get('isSubmitDisabled')).to.equal(false);\n    });\n    it('should return true if all selected services are already installed', function () {\n      controller.setEach('isInstalled', true);\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', false);\n      expect(controller.get('isSubmitDisabled')).to.equal(true);\n    });\n  });\n\n  describe('#isAll', function () {\n    it('should return true if all services are selected', function () {\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', true);\n      expect(controller.get('isAll')).to.equal(true);\n    });\n\n    it('should return false if at least one service is not selected', function () {\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', false);\n      expect(controller.get('isAll')).to.equal(false);\n    });\n  });\n\n  describe('#isMinimum', function () {\n    it('should return true if there are no services selected, except disabled', function () {\n      controller.setEach('isSelected', false);\n      expect(controller.get('isMinimum')).to.equal(true);\n    });\n\n    it('should return false if at least one service is selected, except disabled', function () {\n      controller.findProperty('serviceName', 'MAPREDUCE').set('isSelected', true);\n      expect(controller.get('isMinimum')).to.equal(false);\n    });\n  });\n\n  describe('#selectAll()', function () {\n    it('should select all services', function () {\n      controller.setEach('isSelected', false);\n      controller.selectAll();\n      expect(controller.filterProperty('canBeSelected', true).everyProperty('isSelected', true)).to.equal(true);\n    });\n  });\n\n  describe('#selectMinimum()', function () {\n    it('should set isSelected false for all not disabled services', function () {\n      controller.setEach('isSelected', true);\n      controller.selectMinimum();\n      expect(controller.findProperty('serviceName', 'HDFS').get('isSelected')).to.equal(true);\n      expect(controller.filterProperty('isDisabled', false).everyProperty('isSelected', false)).to.equal(true);\n    });\n  });\n\n  describe('#needToAddMapReduce()', function () {\n    it('should return true if Pig is selected and MapReduce is not selected', function () {\n      controller.setEach('isSelected', false);\n      controller.findProperty('serviceName', 'PIG').set('isSelected', true);\n      expect(controller.needToAddMapReduce()).to.equal(true);\n    });\n\n    it('should return true if Oozie is selected and MapReduce is not selected', function () {\n      controller.setEach('isSelected', false);\n      controller.findProperty('serviceName', 'OOZIE').set('isSelected', true);\n      expect(controller.needToAddMapReduce()).to.equal(true);\n    });\n\n    it('should return true if Hive is selected and MapReduce is not selected', function () {\n      controller.setEach('isSelected', false);\n      controller.findProperty('serviceName', 'HIVE').set('isSelected', true);\n      expect(controller.needToAddMapReduce()).to.equal(true);\n    });\n\n    it('should return false if MapReduce is selected or Pig, Oozie and Hive are not selected', function () {\n      controller.findProperty('serviceName', 'MAPREDUCE').set('isSelected', true);\n      expect(controller.needToAddMapReduce()).to.equal(false);\n      controller.setEach('isSelected', false);\n      expect(controller.needToAddMapReduce()).to.equal(false);\n    });\n  });\n\n  describe('#needToAddYarnMapReduce2()', function () {\n    it('should return true if Pig is selected and YARN+MapReduce2 is not selected', function () {\n      controller.setEach('isSelected', false);\n      controller.findProperty('serviceName', 'PIG').set('isSelected', true);\n      expect(controller.needToAddYarnMapReduce2()).to.equal(true);\n    });\n\n    it('should return true if Oozie is selected and YARN+MapReduce2 is not selected', function () {\n      controller.setEach('isSelected', false);\n      controller.findProperty('serviceName', 'OOZIE').set('isSelected', true);\n      expect(controller.needToAddYarnMapReduce2()).to.equal(true);\n    });\n\n    it('should return true if Hive is selected and YARN+MapReduce2 is not selected', function () {\n      controller.setEach('isSelected', false);\n      controller.findProperty('serviceName', 'HIVE').set('isSelected', true);\n      expect(controller.needToAddYarnMapReduce2()).to.equal(true);\n    });\n\n    it('should return false if YARN+MapReduce2 is selected or Pig, Oozie and Hive are not selected', function () {\n      controller.findProperty('serviceName', 'YARN').set('isSelected', true);\n      expect(controller.needToAddYarnMapReduce2()).to.equal(false);\n      controller.setEach('isSelected', false);\n      expect(controller.needToAddYarnMapReduce2()).to.equal(false);\n    });\n  });\n\n  describe('#needToAddZooKeeper()', function () {\n    beforeEach(function() {\n      ajax_send = App.ajax.send;\n      App.ajax.send = function() {};\n    });\n\n    afterEach(function() {\n      App.ajax.send = ajax_send;\n    });\n    var originalStackVersion = App.get('currentStackVersion');\n\n    it('should return false if ZOOKEEPER is selected and Hadoop version above 2', function () {\n      App.set('currentStackVersion', 'HDP-2.1.1');\n      controller.findProperty('serviceName', 'ZOOKEEPER').set('isSelected', true);\n      expect(controller.needToAddZooKeeper()).to.equal(false);\n    });\n    it('should return true if ZOOKEEPER is not selected and Hadoop version above 2', function () {\n      controller.findProperty('serviceName', 'ZOOKEEPER').set('isSelected', false);\n      expect(controller.needToAddZooKeeper()).to.equal(true);\n    });\n    it('should return false if none of the HBASE, HIVE, WEBHCAT, STORM is selected and Hadoop version below 2', function () {\n      App.set('currentStackVersion', 'HDP-1.3.0');\n      expect(controller.needToAddZooKeeper()).to.equal(false);\n    });\n    it('should return true if HBASE is not selected and Hadoop version below 2', function () {\n      controller.findProperty('serviceName', 'HBASE').set('isSelected', true);\n      expect(controller.needToAddZooKeeper()).to.equal(true);\n    });\n    it('should return true if HBASE, HIVE, WEBHCAT, STORM are selected and Hadoop version below 2', function () {\n      controller.findProperty('serviceName', 'HIVE').set('isSelected', true);\n      controller.findProperty('serviceName', 'WEBHCAT').set('isSelected', true);\n      controller.findProperty('serviceName', 'STORM').set('isSelected', true);\n      expect(controller.needToAddZooKeeper()).to.equal(true);\n      App.set('currentStackVersion', originalStackVersion);\n    });\n  });\n\n  describe('#gangliaOrNagiosNotSelected()', function () {\n    it('should return true if Nagios or Ganglia is not selected', function () {\n      controller.setEach('isSelected', true);\n      controller.findProperty('serviceName', 'NAGIOS').set('isSelected', false);\n      expect(controller.gangliaOrNagiosNotSelected()).to.equal(true);\n      controller.setEach('isSelected', true);\n      controller.findProperty('serviceName', 'GANGLIA').set('isSelected', false);\n      expect(controller.gangliaOrNagiosNotSelected()).to.equal(true);\n    });\n\n    it('should return false if Nagios and Ganglia is selected', function () {\n      controller.setEach('isSelected', false);\n      controller.findProperty('serviceName', 'GANGLIA').set('isSelected', true);\n      controller.findProperty('serviceName', 'NAGIOS').set('isSelected', true);\n      expect(controller.gangliaOrNagiosNotSelected()).to.equal(false);\n    });\n  });\n\n  describe('#needToAddTez()', function () {\n    it('should return false if YARN is present, but not selected', function () {\n      controller.findProperty('serviceName', 'YARN').set('isSelected', false);\n      expect(controller.needToAddTez()).to.equal(false);\n    });\n    it('should return true if YARN is selected', function () {\n      controller.findProperty('serviceName', 'YARN').set('isSelected', true);\n      expect(controller.needToAddTez()).to.equal(true);\n    });\n  });\n\n  describe('#needToAddOozie()', function () {\n    it('should return false if FALCON is present, but not selected', function () {\n      controller.findProperty('serviceName', 'FALCON').set('isSelected', false);\n      expect(controller.needToAddOozie()).to.equal(false);\n    });\n    it('should return true if FALCON is selected', function () {\n      controller.findProperty('serviceName', 'FALCON').set('isSelected', true);\n      expect(controller.needToAddOozie()).to.equal(true);\n    });\n  });\n\n  describe('#noDFSs()', function () {\n    it('should return true if HDFS is not selected and GLUSTERFS is absent', function () {\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', false);\n      expect(controller.noDFSs()).to.equal(true);\n    });\n    it('should return false if HDFS is selected and GLUSTERFS is absent', function () {\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', true);\n      expect(controller.noDFSs()).to.equal(false);\n    });\n    it('should return true if HDFS is not selected and GLUSTERFS is not selected, but present', function () {\n      controller.pushObject(Ember.Object.create({\n        'serviceName':'GLUSTERFS', 'isSelected': false, 'canBeSelected': true, 'isInstalled': false, 'isDisabled': false\n      }));\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', false);\n      expect(controller.noDFSs()).to.equal(true);\n    });\n    it('should return false if HDFS is not selected and GLUSTERFS is selected', function () {\n      controller.findProperty('serviceName', 'GLUSTERFS').set('isSelected', true);\n      expect(controller.noDFSs()).to.equal(false);\n    });\n  });\n\n  describe('#multipleDFSs()', function () {\n    it('should return true if HDFS is selected and GLUSTERFS is selected', function () {\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', true);\n      controller.findProperty('serviceName', 'GLUSTERFS').set('isSelected', true);\n      expect(controller.multipleDFSs()).to.equal(true);\n    });\n    it('should return false if HDFS is not selected and GLUSTERFS is selected', function () {\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', false);\n      expect(controller.multipleDFSs()).to.equal(false);\n    });\n    it('should return false if HDFS is selected and GLUSTERFS is not selected', function () {\n      controller.findProperty('serviceName', 'HDFS').set('isSelected', true);\n      controller.findProperty('serviceName', 'GLUSTERFS').set('isSelected', false);\n      expect(controller.multipleDFSs()).to.equal(false);\n    });\n  });\n\n  describe('#checkDependencies()', function () {\n    var testCases = [\n      {\n        title: 'should set HCATALOG and WEBHCAT isSelected to true when HIVE is selected',\n        condition: {\n          'HBASE': true,\n          'ZOOKEEPER': true,\n          'HIVE': true,\n          'HCATALOG': true,\n          'WEBHCAT': true\n        },\n        result: {\n          'HCATALOG': true,\n          'WEBHCAT': true\n        }\n      },\n      {\n        title: 'should set HCATALOG and WEBHCAT isSelected to false when HIVE is not selected',\n        condition: {\n          'HBASE': true,\n          'ZOOKEEPER': true,\n          'HIVE': false,\n          'HCATALOG': true,\n          'WEBHCAT': true\n        },\n        result: {\n          'HCATALOG': false,\n          'WEBHCAT': false\n        }\n      },\n      {\n        title: 'should set MAPREDUCE2 isSelected to true when YARN is selected',\n        condition: {\n          'HBASE': true,\n          'ZOOKEEPER': true,\n          'HIVE': false,\n          'HCATALOG': true,\n          'WEBHCAT': true,\n          'YARN': true,\n          'MAPREDUCE2': true\n        },\n        result: {\n          'MAPREDUCE2': true,\n          'HCATALOG': false,\n          'WEBHCAT': false\n        }\n      },\n      {\n        title: 'should set MAPREDUCE2 isSelected to false when YARN is not selected',\n        condition: {\n          'HBASE': true,\n          'ZOOKEEPER': true,\n          'HIVE': true,\n          'HCATALOG': true,\n          'WEBHCAT': true,\n          'YARN': false,\n          'MAPREDUCE2': true\n        },\n        result: {\n          'MAPREDUCE2': false,\n          'HCATALOG': true,\n          'WEBHCAT': true\n        }\n      }\n    ];\n\n    testCases.forEach(function(testCase){\n      it(testCase.title, function () {\n        controller.clear();\n        for(var id in testCase.condition) {\n          controller.pushObject(Ember.Object.create({\n            'serviceName':id, 'isSelected': testCase.condition[id], 'canBeSelected': true, 'isInstalled': false\n          }));\n        }\n        controller.checkDependencies();\n        for(var service in testCase.result) {\n          expect(controller.findProperty('serviceName', service).get('isSelected')).to.equal(testCase.result[service]);\n        }\n      });\n    }, this);\n  });\n\n  describe('#monitoringCheckPopup', function() {\n    it('should show App.ModalPopup', function() {\n      sinon.spy(App.ModalPopup, 'show');\n      controller.monitoringCheckPopup();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n    it('onPrimary should proceed to next step', function() {\n      sinon.stub(App.router, 'send', Em.K);\n      controller.monitoringCheckPopup().onPrimary();\n      expect(App.router.send.calledWith('next')).to.equal(true);\n      App.router.send.restore();\n    });\n  });\n\n  describe('#needToAddServicePopup', function() {\n    Em.A([\n        {\n          m: 'one service',\n          services: {selected: true, serviceName: 's1'},\n          content: [Em.Object.create({serviceName: 's1', isSelected: false})],\n          e: [true]\n        },\n        {\n          m: 'many services',\n          services: [{selected: true, serviceName: 's1'}, {selected: false, serviceName: 's2'}],\n          content: [Em.Object.create({serviceName: 's1', isSelected: false}),\n            Em.Object.create({serviceName: 's2', isSelected: true})],\n          e: [true, false]\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          sinon.stub(controller, 'submit', Em.K);\n          controller.set('content', test.content);\n          controller.needToAddServicePopup(test.services, '').onPrimary();\n          expect(controller.submit.calledOnce).to.equal(true);\n          expect(controller.mapProperty('isSelected')).to.eql(test.e);\n          controller.submit.restore();\n        });\n      });\n  });\n\n  describe('#validateMonitoring', function() {\n    Em.A([\n        {\n          gangliaOrNagiosNotSelected: true,\n          e: {\n            monitoringCheckPopup: true,\n            send: false\n          }\n        },\n        {\n          gangliaOrNagiosNotSelected: false,\n          e: {\n            monitoringCheckPopup: false,\n            send: true\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          sinon.stub(controller, 'monitoringCheckPopup', Em.K);\n          sinon.stub(App.router, 'send', Em.K);\n          sinon.stub(controller, 'gangliaOrNagiosNotSelected', function() {\n            return test.gangliaOrNagiosNotSelected;\n          });\n          controller.validateMonitoring();\n          if (test.e.monitoringCheckPopup) {\n           expect(controller.monitoringCheckPopup.calledOnce).to.equal(true);\n          }\n          else {\n            expect(controller.monitoringCheckPopup.called).to.equal(false);\n          }\n          if (test.e.send) {\n            expect(App.router.send.calledWith('next')).to.equal(true);\n          }\n          else {\n            expect(App.router.send.called).to.equal(false);\n          }\n          controller.gangliaOrNagiosNotSelected.restore();\n          controller.monitoringCheckPopup.restore();\n          App.router.send.restore();\n        });\n      });\n  });\n\n  describe('#submit', function() {\n    beforeEach(function() {\n      sinon.stub(controller, 'validateMonitoring', Em.K);\n    });\n    afterEach(function() {\n      controller.validateMonitoring.restore();\n    });\n    it('if not isSubmitDisabled shound\\'t do nothing', function() {\n      controller.reopen({isSubmitDisabled: true});\n      controller.submit();\n      expect(controller.validateMonitoring.called).to.equal(false);\n    });\n    it('if isSubmitDisabled and not submitChecks should call validateMonitoring', function() {\n      controller.reopen({\n        isSubmitDisabled: false,\n        submitChecks: []\n      });\n      controller.submit();\n      expect(controller.validateMonitoring.calledOnce).to.equal(true);\n    });\n    it('if isSubmitDisabled and some submitChecks true shouldn\\'t call validateMonitoring', function() {\n      controller.reopen({\n        isSubmitDisabled: false,\n        submitChecks: [\n          {\n            checkCallback: 'needToAddMapReduce',\n            popupParams: [\n              {serviceName: 'MAPREDUCE', selected: true},\n              'mapreduceCheck'\n            ]\n          }\n        ]\n      });\n      sinon.stub(controller, 'needToAddMapReduce', function() {return true;});\n      controller.submit();\n      expect(controller.validateMonitoring.called).to.equal(false);\n      controller.needToAddMapReduce.restore();\n    });\n    it('if isSubmitDisabled and some submitChecks false should call validateMonitoring', function() {\n      controller.reopen({\n        isSubmitDisabled: false,\n        submitChecks: [\n          {\n            checkCallback: 'needToAddMapReduce',\n            popupParams: [\n              {serviceName: 'MAPREDUCE', selected: true},\n              'mapreduceCheck'\n            ]\n          }\n        ]\n      });\n      sinon.stub(controller, 'needToAddMapReduce', function() {return false;});\n      controller.submit();\n      expect(controller.validateMonitoring.calledOnce).to.equal(true);\n      controller.needToAddMapReduce.restore();\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\nrequire('controllers/wizard/step5_controller');\nvar c;\ndescribe('App.WizardStep5Controller', function () {\n  beforeEach(function() {\n    c = App.WizardStep5Controller.create();\n  });\n  var controller = App.WizardStep5Controller.create();\n  controller.set('content', {});\n  var cpu = 2, memory = 4;\n\n  var schemes = Em.A([\n    {'description': 'empty condition'},\n    {\n      'description': 'second host if amount more than 1',\n      \"else\": 1\n    },\n    {\n      'description': 'first host if amount less than 3, third host if amount less than 6, fourth host if amount more than 5',\n      \"3\": 0,\n      \"6\": 2,\n      \"else\": 3\n    },\n    {\n      'description': 'second host if amount less than 3, second host if amount less than 6, third host if amount less than 31, sixth host if amount more than 30',\n      \"3\": 1,\n      \"6\": 1,\n      \"31\": 2,\n      \"else\": 5\n    }\n  ]);\n\n  var test_config = [\n    {\n      title: '1 host',\n      hosts: ['host0'],\n      equals: [0, 0, 0, 0]\n    },\n    {\n      title: '2 hosts',\n      hosts: ['host0', 'host1'],\n      equals: [0, 1, 0, 1]\n    },\n    {\n      title: '3 hosts',\n      hosts: ['host0', 'host1', 'host2'],\n      equals: [0, 1, 2, 1]\n    },\n    {\n      title: '5 hosts',\n      hosts: ['host0', 'host1', 'host2', 'host3', 'host4'],\n      equals: [0, 1, 2, 1]\n    },\n    {\n      title: '6 hosts',\n      hosts: ['host0', 'host1', 'host2', 'host3', 'host4', 'host6'],\n      equals: [0, 1, 3, 2]\n    },\n    {\n      title: '10 hosts',\n      hosts: ['host0', 'host1', 'host2', 'host3', 'host4', 'host5', 'host6', 'host7', 'host8', 'host9'],\n      equals: [0, 1, 3, 2]\n    },\n    {\n      title: '31 hosts',\n      hosts: ['host0', 'host1', 'host2', 'host3', 'host4', 'host5', 'host6', 'host7', 'host8', 'host9', 'host10', 'host11', 'host12', 'host13', 'host14', 'host15', 'host16', 'host17', 'host18', 'host19', 'host20', 'host21', 'host22', 'host23', 'host24', 'host25', 'host26', 'host27', 'host28', 'host29', 'host30'],\n      equals: [0, 1, 3, 5]\n    }\n  ];\n\n  schemes.forEach(function(scheme, index) {\n    describe('#getHostForComponent() condition: ' + scheme.description, function() {\n\n      delete scheme['description'];\n\n      test_config.forEach(function(test) {\n        it(test.title, function () {\n          controller.get('hosts').clear();\n          test.hosts.forEach(function(_host) {\n            controller.get('hosts').pushObject(Em.Object.create({\n              host_name: _host,\n              cpu: cpu,\n              memory: memory\n            }));\n          });\n          expect(controller.getHostForComponent(test.hosts.length, scheme).host_name).to.equal(test.hosts[test.equals[index]]);\n        });\n      });\n    });\n  });\n\n  describe('#getZooKeeperServer', function() {\n    it('should be array with three host names if hosts number more than three', function() {\n      var hosts = [\n        {host_name: 'host1'},\n        {host_name: 'host2'},\n        {host_name: 'host3'}\n      ];\n\n      controller.set('hosts', hosts);\n      expect(controller.getZooKeeperServer(hosts.length)).to.eql(['host1', 'host2', 'host3']);\n    });\n\n    it('should be array with one host names if hosts number less than three', function() {\n      var hosts = [\n        {host_name: 'host1'},\n        {host_name: 'host2'}\n      ];\n\n      controller.set('hosts', hosts);\n      expect(controller.getZooKeeperServer(hosts.length)).to.eql(['host1']);\n    });\n  });\n\n  describe('#getServerHost', function() {\n    it('should be host name if one host ', function() {\n      var hosts = [\n        {host_name: 'host1'}\n      ];\n\n      controller.set('hosts', hosts);\n      expect(controller.getServerHost(hosts.length)).to.eql('host1');\n    });\n\n    it('should be host name if hosts number more than one', function() {\n      var hosts = [\n        {host_name: 'host1'},\n        {host_name: 'host2'}\n      ];\n\n      controller.set('hosts', hosts);\n      expect(controller.getServerHost(hosts.length)).to.eql('host1');\n    });\n\n    it('should be host name different from localhost if hosts number more than one', function() {\n      var hosts = [\n        {host_name: location.hostname},\n        {host_name: 'host2'}\n      ];\n      //first host_name is empty string, because of location.hostname = \"\" in console,\n      //to implement current test case\n\n      controller.set('hosts', hosts);\n      expect(controller.getServerHost(hosts.length)).to.eql('host2');\n    });\n  });\n\n\n  controller.set('content', {});\n\n  describe('#isReassignWizard', function() {\n    it('true if content.controllerName is reassignMasterController', function() {\n      controller.set('content.controllerName', 'reassignMasterController');\n      expect(controller.get('isReassignWizard')).to.equal(true);\n    });\n    it('false if content.controllerName is not reassignMasterController', function() {\n      controller.set('content.controllerName', 'mainController');\n      expect(controller.get('isReassignWizard')).to.equal(false);\n    });\n  });\n\n  describe('#isAddServiceWizard', function() {\n    it('true if content.controllerName is addServiceController', function() {\n      controller.set('content.controllerName', 'addServiceController');\n      expect(controller.get('isAddServiceWizard')).to.equal(true);\n    });\n    it('false if content.controllerName is not addServiceController', function() {\n      controller.set('content.controllerName', 'mainController');\n      expect(controller.get('isAddServiceWizard')).to.equal(false);\n    });\n  });\n\n  describe('#isReassignHive', function() {\n\n    var tests = Em.A([\n      {\n        servicesMasters: Em.A([{component_name: 'HIVE_SERVER'}]),\n        controllerName: 'reassignMasterController',\n        e: true\n      },\n      {\n        servicesMasters: Em.A([{component_name: 'HIVE_SERVER'}]),\n        controllerName: 'addServiceController',\n        e: false\n      },\n      {\n        servicesMasters: Em.A([{component_name: 'ZOOKEEPER_SERVER'}]),\n        controllerName: 'reassignMasterController',\n        e: false\n      },\n      {\n        servicesMasters: Em.A([{component_name: 'ZOOKEEPER_SERVER'}]),\n        controllerName: 'addServiceController',\n        e: false\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.controllerName + ' ' + test.servicesMasters.mapProperty('component_name').join(','), function() {\n        controller.set('content.controllerName', test.controllerName);\n        controller.set('servicesMasters', test.servicesMasters);\n        expect(controller.get('isReassignHive')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#sortHosts', function() {\n\n    var tests = Em.A([\n      {\n        hosts: [\n          Em.Object.create({memory: 4, cpu: 1, host_name: 'host1', id: 1}),\n          Em.Object.create({memory: 3, cpu: 1, host_name: 'host2', id: 2}),\n          Em.Object.create({memory: 2, cpu: 1, host_name: 'host3', id: 3}),\n          Em.Object.create({memory: 1, cpu: 1, host_name: 'host4', id: 4})\n        ],\n        m: 'memory',\n        e: [1,2,3,4]\n      },\n      {\n        hosts: [\n          Em.Object.create({memory: 1, cpu: 4, host_name: 'host1', id: 1}),\n          Em.Object.create({memory: 1, cpu: 3, host_name: 'host2', id: 2}),\n          Em.Object.create({memory: 1, cpu: 2, host_name: 'host3', id: 3}),\n          Em.Object.create({memory: 1, cpu: 1, host_name: 'host4', id: 4})\n        ],\n        m: 'cpu',\n        e: [1,2,3,4]\n      },\n      {\n        hosts: [\n          Em.Object.create({memory: 1, cpu: 1, host_name: 'host4', id: 1}),\n          Em.Object.create({memory: 1, cpu: 1, host_name: 'host2', id: 2}),\n          Em.Object.create({memory: 1, cpu: 1, host_name: 'host3', id: 3}),\n          Em.Object.create({memory: 1, cpu: 1, host_name: 'host1', id: 4})\n        ],\n        m: 'host_name',\n        e: [4,2,3,1]\n      },\n      {\n        hosts: [\n          Em.Object.create({memory: 2, cpu: 1, host_name: 'host1', id: 1}),\n          Em.Object.create({memory: 1, cpu: 2, host_name: 'host3', id: 2}),\n          Em.Object.create({memory: 1, cpu: 1, host_name: 'host4', id: 3}),\n          Em.Object.create({memory: 1, cpu: 1, host_name: 'host2', id: 4})\n        ],\n        m: 'mix',\n        e: [1,2,4,3]\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var hosts = Em.copy(test.hosts);\n        controller.sortHosts(hosts);\n        expect(Em.A(hosts).mapProperty('id')).to.eql(test.e);\n      });\n    });\n\n  });\n\n  describe('#renderHostInfo', function() {\n\n    var tests = Em.A([\n      {\n        hosts: {\n          h1: {memory: 4, cpu: 1, name: 'host1', bootStatus: 'INIT'},\n          h2: {memory: 3, cpu: 1, name: 'host2', bootStatus: 'INIT'},\n          h3: {memory: 2, cpu: 1, name: 'host3', bootStatus: 'INIT'},\n          h4: {memory: 1, cpu: 1, name: 'host4', bootStatus: 'INIT'}\n        },\n        m: 'no one host is REGISTERED',\n        e: []\n      },\n      {\n        hosts: {\n          h1: {memory: 4, cpu: 1, name: 'host1', bootStatus: 'REGISTERED'},\n          h2: {memory: 3, cpu: 1, name: 'host2', bootStatus: 'REGISTERED'},\n          h3: {memory: 2, cpu: 1, name: 'host3', bootStatus: 'REGISTERED'},\n          h4: {memory: 1, cpu: 1, name: 'host4', bootStatus: 'REGISTERED'}\n        },\n        m: 'all hosts are REGISTERED, memory',\n        e: ['host1', 'host2', 'host3', 'host4']\n      },\n      {\n        hosts: {\n          h1: {memory: 1, cpu: 4, name: 'host1', bootStatus: 'REGISTERED'},\n          h2: {memory: 1, cpu: 3, name: 'host2', bootStatus: 'REGISTERED'},\n          h3: {memory: 1, cpu: 2, name: 'host3', bootStatus: 'REGISTERED'},\n          h4: {memory: 1, cpu: 1, name: 'host4', bootStatus: 'REGISTERED'}\n        },\n        m: 'all hosts are REGISTERED, cpu',\n        e: ['host1', 'host2', 'host3', 'host4']\n      },\n      {\n        hosts: {\n          h1: {memory: 1, cpu: 1, name: 'host4', bootStatus: 'REGISTERED'},\n          h2: {memory: 1, cpu: 1, name: 'host2', bootStatus: 'REGISTERED'},\n          h3: {memory: 1, cpu: 1, name: 'host3', bootStatus: 'REGISTERED'},\n          h4: {memory: 1, cpu: 1, name: 'host1', bootStatus: 'REGISTERED'}\n        },\n        m: 'all hosts are REGISTERED, host_name',\n        e: ['host1', 'host2', 'host3', 'host4']\n      },\n      {\n        hosts: {\n          h1: {memory: 2, cpu: 1, name: 'host1', bootStatus: 'REGISTERED'},\n          h2: {memory: 1, cpu: 2, name: 'host3', bootStatus: 'INIT'},\n          h3: {memory: 1, cpu: 1, name: 'host4', bootStatus: 'REGISTERED'},\n          h4: {memory: 1, cpu: 1, name: 'host2', bootStatus: 'INIT'}\n        },\n        m: 'mix',\n        e: ['host1', 'host4']\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        controller.set('content', {hosts: test.hosts});\n        controller.renderHostInfo();\n        var r = controller.get('hosts');\n        expect(Em.A(r).mapProperty('host_name')).to.eql(test.e);\n      });\n    });\n\n  });\n\n  describe('#hasHiveServer', function() {\n\n    var tests = Em.A([\n      {\n        selectedServicesMasters: Em.A([{component_name: 'HIVE_SERVER'}]),\n        controllerName: 'reassignMasterController',\n        e: false\n      },\n      {\n        selectedServicesMasters: Em.A([{component_name: 'HIVE_SERVER'}]),\n        controllerName: 'addServiceController',\n        e: true\n      },\n      {\n        selectedServicesMasters: Em.A([{component_name: 'ANOTHER'}]),\n        controllerName: 'addServiceController',\n        e: false\n      },\n      {\n        selectedServicesMasters: Em.A([{component_name: 'ANOTHER'}]),\n        controllerName: 'reassignMasterController',\n        e: false\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.controllerName + ' ' + test.selectedServicesMasters.mapProperty('component_name').join(','), function() {\n        controller.set('content.controllerName', test.controllerName);\n        controller.set('selectedServicesMasters', test.selectedServicesMasters);\n        expect(controller.get('hasHiveServer')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#selectHost', function() {\n\n    var tests = Em.A([\n      {componentName: 'KERBEROS_SERVER', hostsCount: 1, e: 'host1'},\n      {componentName: 'KERBEROS_SERVER', hostsCount: 3, e: 'host2'},\n      {componentName: 'KERBEROS_SERVER', hostsCount: 6, e: 'host4'},\n      {componentName: 'KERBEROS_SERVER', hostsCount: 31, e: 'host6'},\n      {componentName: 'KERBEROS_SERVER', hostsCount: 32, e: 'host6'},\n      {componentName: 'NAMENODE', hostsCount: 1, e: 'host1'},\n      {componentName: 'NAMENODE', hostsCount: 2, e: 'host1'},\n      {componentName: 'SECONDARY_NAMENODE', hostsCount: 1, e: 'host1'},\n      {componentName: 'SECONDARY_NAMENODE', hostsCount: 2, e: 'host2'},\n      {componentName: 'JOBTRACKER', hostsCount: 1, e: 'host1'},\n      {componentName: 'JOBTRACKER', hostsCount: 3, e: 'host2'},\n      {componentName: 'JOBTRACKER', hostsCount: 6, e: 'host2'},\n      {componentName: 'JOBTRACKER', hostsCount: 31, e: 'host3'},\n      {componentName: 'JOBTRACKER', hostsCount: 32, e: 'host3'},\n      {componentName: 'HISTORYSERVER', hostsCount: 1, e: 'host1'},\n      {componentName: 'HISTORYSERVER', hostsCount: 3, e: 'host2'},\n      {componentName: 'HISTORYSERVER', hostsCount: 6, e: 'host2'},\n      {componentName: 'HISTORYSERVER', hostsCount: 31, e: 'host3'},\n      {componentName: 'HISTORYSERVER', hostsCount: 32, e: 'host3'},\n      {componentName: 'RESOURCEMANAGER', hostsCount: 1, e: 'host1'},\n      {componentName: 'RESOURCEMANAGER', hostsCount: 3, e: 'host2'},\n      {componentName: 'RESOURCEMANAGER', hostsCount: 6, e: 'host2'},\n      {componentName: 'RESOURCEMANAGER', hostsCount: 31, e: 'host3'},\n      {componentName: 'RESOURCEMANAGER', hostsCount: 32, e: 'host3'},\n      {componentName: 'HBASE_MASTER', hostsCount: 1, e: ['host1']},\n      {componentName: 'HBASE_MASTER', hostsCount: 3, e: ['host1']},\n      {componentName: 'HBASE_MASTER', hostsCount: 6, e: ['host3']},\n      {componentName: 'HBASE_MASTER', hostsCount: 31, e: ['host4']},\n      {componentName: 'HBASE_MASTER', hostsCount: 32, e: ['host4']},\n      {componentName: 'OOZIE_SERVER', hostsCount: 1, e: 'host1'},\n      {componentName: 'OOZIE_SERVER', hostsCount: 3, e: 'host2'},\n      {componentName: 'OOZIE_SERVER', hostsCount: 6, e: 'host3'},\n      {componentName: 'OOZIE_SERVER', hostsCount: 31, e: 'host4'},\n      {componentName: 'OOZIE_SERVER', hostsCount: 32, e: 'host4'},\n      {componentName: 'HIVE_SERVER', hostsCount: 1, e: 'host1'},\n      {componentName: 'HIVE_SERVER', hostsCount: 3, e: 'host2'},\n      {componentName: 'HIVE_SERVER', hostsCount: 6, e: 'host3'},\n      {componentName: 'HIVE_SERVER', hostsCount: 31, e: 'host5'},\n      {componentName: 'HIVE_SERVER', hostsCount: 32, e: 'host5'},\n      {componentName: 'HIVE_METASTORE', hostsCount: 1, e: 'host1'},\n      {componentName: 'HIVE_METASTORE', hostsCount: 3, e: 'host2'},\n      {componentName: 'HIVE_METASTORE', hostsCount: 6, e: 'host3'},\n      {componentName: 'HIVE_METASTORE', hostsCount: 31, e: 'host5'},\n      {componentName: 'HIVE_METASTORE', hostsCount: 32, e: 'host5'},\n      {componentName: 'WEBHCAT_SERVER', hostsCount: 1, e: 'host1'},\n      {componentName: 'WEBHCAT_SERVER', hostsCount: 3, e: 'host2'},\n      {componentName: 'WEBHCAT_SERVER', hostsCount: 6, e: 'host3'},\n      {componentName: 'WEBHCAT_SERVER', hostsCount: 31, e: 'host5'},\n      {componentName: 'WEBHCAT_SERVER', hostsCount: 32, e: 'host5'},\n      {componentName: 'APP_TIMELINE_SERVER', hostsCount: 1, e: 'host1'},\n      {componentName: 'APP_TIMELINE_SERVER', hostsCount: 3, e: 'host2'},\n      {componentName: 'APP_TIMELINE_SERVER', hostsCount: 6, e: 'host2'},\n      {componentName: 'APP_TIMELINE_SERVER', hostsCount: 31, e: 'host3'},\n      {componentName: 'APP_TIMELINE_SERVER', hostsCount: 32, e: 'host3'},\n      {componentName: 'FALCON_SERVER', hostsCount: 1, e: 'host1'},\n      {componentName: 'FALCON_SERVER', hostsCount: 3, e: 'host2'},\n      {componentName: 'FALCON_SERVER', hostsCount: 6, e: 'host3'},\n      {componentName: 'FALCON_SERVER', hostsCount: 31, e: 'host4'},\n      {componentName: 'FALCON_SERVER', hostsCount: 32, e: 'host4'}\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.componentName + ' ' + test.hostsCount, function() {\n        controller.set('hosts', d3.range(1, test.hostsCount + 1).map(function(i) { return {host_name: 'host' + i.toString()};}));\n        expect(controller.selectHost(test.componentName)).to.eql(test.e);\n      });\n    });\n\n    describe('getServerHost should be called for', function() {\n      Em.A(['STORM_UI_SERVER','DRPC_SERVER','STORM_REST_API','NIMBUS','GANGLIA_SERVER','NAGIOS_SERVER','HUE_SERVER']).forEach(function(componentName) {\n        it(componentName, function() {\n          sinon.spy(controller, 'getServerHost');\n          controller.selectHost(componentName);\n          expect(controller.getServerHost.calledOnce).to.equal(true);\n          controller.getServerHost.restore();\n        });\n      });\n    });\n\n  });\n\n  describe('#last', function() {\n\n    var tests = Em.A([\n      {\n        selectedServicesMasters: Em.A([\n          {component_name: 'c1', indx: 1},\n          {component_name: 'c2', indx: 2},\n          {component_name: 'c1', indx: 2}\n        ]),\n        m: 'Components exists',\n        c: 'c1',\n        e: 2\n      },\n      {\n        selectedServicesMasters: Em.A([\n          {component_name: 'c1', indx: 1},\n          {component_name: 'c2', indx: 2},\n          {component_name: 'c1', indx: 2}\n        ]),\n        m: 'Components don\\'t exists',\n        c: 'c3',\n        e: null\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        controller.set('selectedServicesMasters', test.selectedServicesMasters);\n        if (!Em.isNone(test.e)) {\n          expect(controller.last(test.c).indx).to.equal(test.e);\n        }\n        else {\n          expect(Em.isNone(controller.last(test.c))).to.equal(true);\n        }\n      })\n    });\n\n  });\n\n  describe('#isSubmitDisabled', function() {\n    it('should be false if it\\'s not a isReassignWizard', function() {\n      c.set('controllerName', 'addServiceController');\n      expect(c.get('isSubmitDisabled')).to.equal(false);\n    });\n  });\n\n  describe('#remainingHosts', function() {\n    it('should show count of hosts without masters', function() {\n      c.reopen({masterHostMapping: [{}]});\n      c.set('hosts', [{},{},{}]);\n      expect(c.get('remainingHosts')).to.equal(2);\n    });\n  });\n\n  describe('#clearStep', function() {\n    var tests = Em.A([\n      {p: 'hosts'},\n      {p: 'selectedServicesMasters'},\n      {p: 'servicesMasters'}\n    ]);\n    tests.forEach(function(test) {\n      it('should cleanup ' + test.p, function() {\n        c.set(test.p, [Em.Object.create({}),Em.Object.create({})]);\n        c.clearStep();\n        expect(c.get(test.p).length).to.equal(0);\n      });\n    });\n  });\n\n  describe('#updateComponent', function() {\n    var tests = Em.A([\n      {\n        componentName: 'HBASE_SERVER',\n        services: Em.A([\n          Em.Object.create({isInstalled: true, serviceName: 'HBASE'})\n        ]),\n        selectedServicesMasters: Em.A([\n          Em.Object.create({showAddControl: false, showRemoveControl: true, component_name: 'HBASE_SERVER'}),\n          Em.Object.create({showAddControl: true, showRemoveControl: false, component_name: 'HBASE_SERVER'})\n        ]),\n        hosts: Em.A([\n          Em.Object.create({})\n        ]),\n        controllerName: 'addServiceController',\n        m: 'service is installed',\n        e: {\n          showAddControl: true,\n          showRemoveControl: false\n        }\n      },\n      {\n        componentName: 'HBASE_SERVER',\n        services: Em.A([\n          Em.Object.create({isInstalled: false, serviceName: 'HBASE'})\n        ]),\n        selectedServicesMasters: Em.A([\n          Em.Object.create({showAddControl: true, showRemoveControl: false, component_name: 'HBASE_SERVER'})\n        ]),\n        hosts: Em.A([\n          Em.Object.create({})\n        ]),\n        controllerName: 'addServiceController',\n        m: 'service not installed, but all host already have provided component',\n        e: {\n          showAddControl: true,\n          showRemoveControl: false\n        }\n      },\n      {\n        componentName: 'HBASE_SERVER',\n        services: Em.A([\n          Em.Object.create({isInstalled: false, serviceName: 'HBASE'})\n        ]),\n        selectedServicesMasters: Em.A([\n          Em.Object.create({showAddControl: false, showRemoveControl: true, component_name: 'HBASE_SERVER'})\n        ]),\n        hosts: Em.A([\n          Em.Object.create({}),\n          Em.Object.create({})\n        ]),\n        controllerName: 'addServiceController',\n        m: 'service not installed, not all host already have provided component',\n        e: {\n          showAddControl: true,\n          showRemoveControl: true\n        }\n      },\n      {\n        componentName: 'HBASE_SERVER',\n        services: Em.A([\n          Em.Object.create({isInstalled: false, serviceName: 'HBASE'})\n        ]),\n        selectedServicesMasters: Em.A([\n          Em.Object.create({showAddControl: false, showRemoveControl: true, component_name: 'HBASE_SERVER'})\n        ]),\n        hosts: Em.A([\n          Em.Object.create({}),\n          Em.Object.create({})\n        ]),\n        controllerName: 'reassignMasterController',\n        m: 'service not installed, not all host already have provided component, but is reassignMasterController',\n        e: {\n          showAddControl: false,\n          showRemoveControl: false\n        }\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        c.reopen({\n          content: Em.Object.create({\n            services: test.services,\n            controllerName: test.controllerName\n          }),\n          selectedServicesMasters: test.selectedServicesMasters\n        });\n        c.updateComponent(test.componentName);\n        Em.keys(test.e).forEach(function(k) {\n          expect(c.last(test.componentName).get(k)).to.equal(test.e[k]);\n        });\n      });\n    });\n  });\n\n  describe('#renderComponents', function() {\n    var tests = Em.A([\n      {\n        masterComponents: Em.A([\n          {component_name: 'ZOOKEEPER_SERVER'}\n        ]),\n        services: Em.A([]),\n        controllerName: 'reassignMasterController',\n        m: 'One component',\n        isHaEnabled: false,\n        component_name: 'ZOOKEEPER_SERVER',\n        e: {\n          selectedServicesMasters: ['ZOOKEEPER_SERVER'],\n          servicesMasters: ['ZOOKEEPER_SERVER'],\n          showRemoveControl: [false],\n          isInstalled: [false],\n          zId: [1]\n        }\n      },\n      {\n        masterComponents: Em.A([\n          {component_name: 'ZOOKEEPER_SERVER'},\n          {component_name: 'SECONDARY_NAMENODE'}\n        ]),\n        services: Em.A([]),\n        controllerName: 'addServiceController',\n        m: 'One component',\n        isHaEnabled: true,\n        component_name: 'ZOOKEEPER_SERVER',\n        e: {\n          selectedServicesMasters: ['ZOOKEEPER_SERVER'],\n          servicesMasters: ['ZOOKEEPER_SERVER'],\n          showRemoveControl: [false],\n          zId: [1]\n        }\n      },\n      {\n        masterComponents: Em.A([\n          {component_name: 'ZOOKEEPER_SERVER'},\n          {component_name: 'ZOOKEEPER_SERVER'}\n        ]),\n        services: Em.A([\n          Em.Object.create({serviceName:'ZOOKEEPER', isInstalled: true})\n        ]),\n        controllerName: 'addServiceController',\n        m: 'Two components, but service is installed',\n        isHaEnabled: false,\n        component_name: 'ZOOKEEPER_SERVER',\n        e: {\n          selectedServicesMasters: ['ZOOKEEPER_SERVER', 'ZOOKEEPER_SERVER'],\n          servicesMasters: ['ZOOKEEPER_SERVER', 'ZOOKEEPER_SERVER'],\n          showRemoveControl: [false, false],\n          zId: [1, 2]\n        }\n      },\n      {\n        masterComponents: Em.A([\n          {component_name: 'ZOOKEEPER_SERVER'},\n          {component_name: 'ZOOKEEPER_SERVER'},\n          {component_name: 'NAMENODE'}\n        ]),\n        services: Em.A([\n        ]),\n        controllerName: 'addServiceController',\n        m: 'Two components, but service is installed',\n        isHaEnabled: false,\n        component_name: 'ZOOKEEPER_SERVER',\n        e: {\n          selectedServicesMasters: ['ZOOKEEPER_SERVER', 'ZOOKEEPER_SERVER', 'NAMENODE'],\n          servicesMasters: ['ZOOKEEPER_SERVER', 'ZOOKEEPER_SERVER', 'NAMENODE'],\n          showRemoveControl: [true, true, undefined],\n          zId: [1, 2, 1]\n        }\n      }\n    ]);\n    tests.forEach(function(test) {\n      beforeEach(function() {\n        App.reopen({isHaEnabled: test.isHaEnabled});\n      });\n      it(test.m, function() {\n        App.set('isHaEnabled', test.isHaEnabled);\n        c.reopen({\n          content: Em.Object.create({\n            services: test.services,\n            controllerName: test.controllerName,\n            reassign: {component_name: test.component_name}\n          })\n        });\n        c.renderComponents(test.masterComponents);\n        expect(c.get('selectedServicesMasters').mapProperty('component_name')).to.eql(test.e.selectedServicesMasters);\n        expect(c.get('servicesMasters').mapProperty('component_name')).to.eql(test.e.servicesMasters);\n        expect(c.get('selectedServicesMasters').mapProperty('showRemoveControl')).to.eql(test.e.showRemoveControl);\n        expect(c.get('selectedServicesMasters').mapProperty('zId')).to.eql(test.e.zId);\n        if (c.get('isReasignController')) {\n          expect(c.get('servicesMasters').mapProperty('isInstalled')).to.eql(test.e.isInstalled);\n        }\n      });\n    });\n  });\n\n  describe('#updateHiveCoHosts', function() {\n    var tests = Em.A([\n      {\n        selectedServicesMasters: Em.A([\n          Em.Object.create({component_name: 'HIVE_SERVER', selectedHost: 'h1'}),\n          Em.Object.create({component_name: 'HIVE_METASTORE', selectedHost: 'h2'}),\n          Em.Object.create({component_name: 'WEBHCAT_SERVER', selectedHost: 'h3'})\n        ]),\n        servicesMasters: Em.A([\n          Em.Object.create({component_name: 'HIVE_SERVER', selectedHost: 'h1'})\n        ]),\n        isReassignHive: false,\n        m: 'should set new host for both',\n        e: ['h1','h1','h1']\n      },\n      {\n        selectedServicesMasters: Em.A([\n          Em.Object.create({component_name: 'HIVE_SERVER', selectedHost: 'h1'}),\n          Em.Object.create({component_name: 'HIVE_METASTORE', selectedHost: 'h2'}),\n          Em.Object.create({component_name: 'WEBHCAT_SERVER', selectedHost: 'h3'})\n        ]),\n        servicesMasters: Em.A([\n          Em.Object.create({component_name: 'HIVE_METASTORE', selectedHost: 'h1'})\n        ]),\n        isReassignHive: false,\n        m: 'should set new host for WEBHCAT_SERVER',\n        e: ['h1','h2','h1']\n      },\n      {\n        selectedServicesMasters: Em.A([\n          Em.Object.create({component_name: 'HIVE_METASTORE', selectedHost: 'h2'}),\n          Em.Object.create({component_name: 'WEBHCAT_SERVER', selectedHost: 'h3'})\n        ]),\n        servicesMasters: Em.A([\n          Em.Object.create({component_name: 'HIVE_METASTORE', selectedHost: 'h1'})\n        ]),\n        isReassignHive: false,\n        m: 'missing HIVE_SERVER',\n        e: ['h2','h3']\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        c.set('selectedServicesMasters', test.selectedServicesMasters);\n        c.set('servicesMasters', test.servicesMasters);\n        c.reopen({isReassignHive: test.isReassignHive});\n        c.updateHiveCoHosts();\n        expect(c.get('selectedServicesMasters').mapProperty('selectedHost')).to.eql(test.e);\n      });\n    });\n\n  });\n\n  describe('#assignHostToMaster', function() {\n    var tests = Em.A([\n      {\n        componentName: 'c1',\n        selectedHost: 'h2',\n        zId: '1',\n        e: {\n          indx: 0\n        }\n      },\n      {\n        componentName: 'c2',\n        selectedHost: 'h3',\n        zId: '2',\n        e: {\n          indx: 3\n        }\n      },\n      {\n        componentName: 'c3',\n        selectedHost: 'h1',\n        e: {\n          indx: 2\n        }\n      },\n      {\n        componentName: 'c2',\n        selectedHost: 'h4',\n        e: {\n          indx: 1\n        }\n      }\n    ]),\n    selectedServicesMasters = Em.A([\n      Em.Object.create({component_name: 'c1', zId: '1', selectedHost: 'h1'}),\n      Em.Object.create({component_name: 'c2', zId: '1', selectedHost: 'h1'}),\n      Em.Object.create({component_name: 'c3', zId: '1', selectedHost: 'h3'}),\n      Em.Object.create({component_name: 'c2', zId: '2', selectedHost: 'h2'})\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.componentName + ' ' + test.selectedHost + ' ' + test.zId, function() {\n        c.set('selectedServicesMasters', selectedServicesMasters);\n        c.assignHostToMaster(test.componentName, test.selectedHost, test.zId);\n        expect(c.get('selectedServicesMasters').objectAt(test.e.indx).get('selectedHost')).to.equal(test.selectedHost);\n      })\n    });\n  });\n\n  describe('#submit', function() {\n    beforeEach(function() {\n      sinon.spy(App.router, 'send');\n    });\n    afterEach(function() {\n      App.router.send.restore();\n    });\n    it('should go next if not isSubmitDisabled', function() {\n      c.reopen({isSubmitDisabled: false});\n      c.submit();\n      expect(App.router.send.calledWith('next')).to.equal(true);\n    });\n    it('shouldn\\'t go next if isSubmitDisabled', function() {\n      c.reopen({isSubmitDisabled: true});\n      c.submit();\n      expect(App.router.send.called).to.equal(false);\n    });\n  });\n\n  describe('#removeComponent', function() {\n    var tests = Em.A([\n      {\n        componentName: 'c1',\n        zId: 1,\n        selectedServicesMasters: Em.A([]),\n        hosts: [],\n        m: 'empty selectedServicesMasters',\n        e: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        zId: 1,\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'HBASE_SERVER'})\n        ]),\n        hosts: [],\n        m: 'no such components',\n        e: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        zId: 1,\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'ZOOKEPEER_SERVER'})\n        ]),\n        hosts: [],\n        m: 'component is only 1',\n        e: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        zId: 2,\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false}),\n          Em.Object.create({zId: 2, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false})\n        ]),\n        hosts: [{},{}],\n        m: 'two components, add allowed, remove not allowed',\n        e: true,\n        showAddControl: true,\n        showRemoveControl: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        zId: 2,\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false}),\n          Em.Object.create({zId: 2, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false})\n        ]),\n        hosts: [{}],\n        m: 'two components, add not allowed, remove not allowed',\n        e: true,\n        showAddControl: false,\n        showRemoveControl: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        zId: 2,\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false}),\n          Em.Object.create({zId: 2, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false}),\n          Em.Object.create({zId: 3, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: true})\n        ]),\n        hosts: [{},{}],\n        m: 'three components, add not allowed, remove allowed',\n        e: true,\n        showAddControl: false,\n        showRemoveControl: true\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        zId: 2,\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false}),\n          Em.Object.create({zId: 2, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false}),\n          Em.Object.create({zId: 3, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: true})\n        ]),\n        hosts: [{},{}, {}],\n        m: 'three components, add allowed, remove allowed',\n        e: true,\n        showAddControl: true,\n        showRemoveControl: true\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        c.set('selectedServicesMasters', test.selectedServicesMasters);\n        c.set('hosts', test.hosts);\n        expect(c.removeComponent(test.componentName, test.zId)).to.equal(test.e);\n        if(test.e) {\n          expect(c.get('selectedServicesMasters.lastObject.showRemoveControl')).to.equal(test.showRemoveControl);\n          expect(c.get('selectedServicesMasters.lastObject.showAddControl')).to.equal(test.showAddControl);\n        }\n      })\n    });\n  });\n\n  describe('#addComponent', function() {\n    var tests = Em.A([\n      {\n        componentName: 'c1',\n        selectedServicesMasters: Em.A([]),\n        hosts: [],\n        m: 'empty selectedServicesMasters',\n        e: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'HBASE_SERVER'})\n        ]),\n        hosts: [],\n        m: 'no such components',\n        e: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'ZOOKEPEER_SERVER'})\n        ]),\n        hosts: [],\n        m: 'one component, 0 hosts',\n        e: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false}),\n          Em.Object.create({zId: 2, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false})\n        ]),\n        hosts: [Em.Object.create({}), Em.Object.create({})],\n        m: 'two components, two hosts',\n        e: false\n      },\n      {\n        componentName: 'ZOOKEPEER_SERVER',\n        selectedServicesMasters: Em.A([\n          Em.Object.create({zId: 1, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false}),\n          Em.Object.create({zId: 2, component_name: 'ZOOKEPEER_SERVER', showAddControl: false, showRemoveControl: false})\n        ]),\n        hosts: [Em.Object.create({}), Em.Object.create({}), Em.Object.create({})],\n        m: 'two components, 3 hosts',\n        e: true\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        c.set('selectedServicesMasters', test.selectedServicesMasters);\n        c.set('hosts', test.hosts);\n        expect(c.addComponent(test.componentName)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#loadStep', function() {\n    var methods = Em.A(['clearStep', 'renderHostInfo', 'renderComponents', 'loadComponents']);\n    describe('should call several methods', function() {\n      beforeEach(function() {\n        methods.forEach(function(m) {\n          sinon.spy(c, m);\n        });\n        c.reopen({content: {services: Em.A([])}});\n      });\n      afterEach(function() {\n        methods.forEach(function(m) {\n          c[m].restore();\n        });\n      });\n      methods.forEach(function(m) {\n        it(m, function() {\n          c.loadStep();\n          expect(c[m].calledOnce).to.equal(true);\n        });\n      });\n    });\n    it('should update HBASE if App.supports.multipleHBaseMasters is true', function() {\n      App.set('supports.multipleHBaseMasters', true);\n      sinon.spy(c, 'updateComponent');\n      c.reopen({content: {services: Em.A([])}});\n      c.loadStep();\n      expect(c.updateComponent.calledTwice).to.equal(true);\n      c.updateComponent.restore();\n    });\n  });\n\n  describe('#title', function() {\n    it('should be custom title for reassignMasterController', function() {\n      c.set('content', {controllerName: 'reassignMasterController'});\n      expect(c.get('title')).to.equal(Em.I18n.t('installer.step5.reassign.header'));\n    });\n    it('should be default for other', function() {\n      c.set('content', {controllerName: 'notReassignMasterController'});\n      expect(c.get('title')).to.equal(Em.I18n.t('installer.step5.header'));\n    });\n  });\n\n  describe('#isSubmitDisabled', function() {\n    it('should be false if no isReassignWizard', function() {\n      c.reopen({isReassignWizard: false});\n      expect(c.get('isSubmitDisabled')).to.equal(false);\n    });\n    it('should be true if isReassignWizard', function() {\n      var hostComponents = Em.A([\n        Em.Object.create({componentName: 'c1', host: Em.Object.create({hostName: 'h1'})}),\n        Em.Object.create({componentName: 'c1', host: Em.Object.create({hostName: 'h2'})})\n      ]);\n      sinon.stub(App.HostComponent, 'find', function() {\n        return hostComponents;\n      });\n      c.reopen({\n        isReassignWizard: true,\n        content:{\n          reassign:{\n            component_name: 'c1'\n          }\n        },\n        servicesMasters: [\n          {selectedHost: 'h5'},\n          {selectedHost: 'h4'},\n          {selectedHost: 'h3'}\n        ]\n      });\n      expect(c.get('isSubmitDisabled')).to.equal(true);\n      App.HostComponent.find.restore();\n    });\n\n    it('should be false if isReassignWizard', function() {\n      var hostComponents = Em.A([\n        Em.Object.create({componentName: 'c1', host: Em.Object.create({hostName: 'h1'})}),\n        Em.Object.create({componentName: 'c1', host: Em.Object.create({hostName: 'h2'})}),\n        Em.Object.create({componentName: 'c1', host: Em.Object.create({hostName: 'h3'})})\n      ]);\n      sinon.stub(App.HostComponent, 'find', function() {\n        return hostComponents;\n      });\n      c.reopen({\n        isReassignWizard: true,\n        content:{\n          reassign:{\n            component_name: 'c1'\n          }\n        },\n        servicesMasters: [\n          {selectedHost: 'h1'},\n          {selectedHost: 'h2'}\n        ]\n      });\n      expect(c.get('isSubmitDisabled')).to.equal(false);\n      App.HostComponent.find.restore();\n    });\n\n  });\n\n  describe('#masterHostMapping', function() {\n    Em.A([\n        {\n          selectedServicesMasters: [\n            Em.Object.create({selectedHost: 'h1'}),\n            Em.Object.create({selectedHost: 'h2'}),\n            Em.Object.create({selectedHost: 'h1'})\n          ],\n          hosts: [\n            Em.Object.create({host_name: 'h1', host_info: {}}),\n            Em.Object.create({host_name: 'h2', host_info: {}})\n          ],\n          m: 'Two hosts',\n          e: [\n            {host_name: 'h1', hostInfo: {}, masterServices: [{}, {}]},\n            {host_name: 'h2', hostInfo: {}, masterServices: [{}]}\n          ]\n        },\n        {\n          selectedServicesMasters: [],\n          hosts: [],\n          m: 'No hosts',\n          e: []\n        },\n        {\n          selectedServicesMasters: [\n            Em.Object.create({selectedHost: 'h1'}),\n            Em.Object.create({selectedHost: 'h1'})\n          ],\n          hosts: [\n            Em.Object.create({host_name: 'h1', host_info: {}})\n          ],\n          m: 'One host',\n          e: [\n            {host_name: 'h1', hostInfo: {}, masterServices: [{}, {}]}\n          ]\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          c.reopen({\n            selectedServicesMasters: test.selectedServicesMasters,\n            hosts: test.hosts\n          });\n          var result = c.get('masterHostMapping');\n          expect(result.length).to.equal(test.e.length);\n          result.forEach(function(r, i) {\n            expect(r.get('host_name')).to.equal(test.e[i].host_name);\n            expect(r.get('masterServices.length')).to.equal(test.e[i].masterServices.length);\n            expect(r.get('hostInfo')).to.be.an.object;\n          });\n        });\n      });\n  });\n\n  describe('#loadComponents', function() {\n    Em.A([\n        {\n          services: [\n            Em.Object.create({isSelected: true, serviceName: 's1'})\n          ],\n          masterComponents: Em.A([\n            Em.Object.create({displayName: 'c1d', serviceName: 's1', componentName: 'c1', isShownOnInstallerAssignMasterPage: true})\n          ]),\n          masterComponentHosts: Em.A([\n            {component: 'c1', hostName: 'h2', isInstalled: true}\n          ]),\n          selectHost: 'h3',\n          m: 'savedComponent exists',\n          e: {\n            component_name: 'c1',\n            display_name: 'c1d',\n            selectedHost: 'h2',\n            isInstalled: true,\n            serviceId: 's1'\n          }\n        },\n        {\n          services: [\n            Em.Object.create({isSelected: true, serviceName: 's1'})\n          ],\n          masterComponents: Em.A([\n            Em.Object.create({displayName: 'c1d', serviceName: 's1', componentName: 'c1', isShownOnInstallerAssignMasterPage: true})\n          ]),\n          masterComponentHosts: Em.A([\n            {component: 'c2', hostName: 'h2', isInstalled: true}\n          ]),\n          selectHost: 'h3',\n          m: 'savedComponent doesn\\'t exist',\n          e: {\n            component_name: 'c1',\n            display_name: 'c1d',\n            selectedHost: 'h3',\n            isInstalled: false,\n            serviceId: 's1'\n          }\n        },\n        {\n          services: [\n            Em.Object.create({isSelected: true, serviceName: 's1'})\n          ],\n          masterComponents: Em.A([\n            Em.Object.create({displayName: 'c1d', serviceName: 's1', componentName: 'ZOOKEEPER_SERVER', isShownOnInstallerAssignMasterPage: true})\n          ]),\n          masterComponentHosts: Em.A([\n            {component: 'c1', hostName: 'h2', isInstalled: true}\n          ]),\n          selectHost: ['h3'],\n          m: 'component ZOOKEEPER_SERVER',\n          e: {\n            component_name: 'ZOOKEEPER_SERVER',\n            display_name: 'c1d',\n            selectedHost: 'h3',\n            isInstalled: false,\n            serviceId: 's1',\n            isHiveCoHost: false\n          }\n        },\n        {\n          services: [\n            Em.Object.create({isSelected: true, serviceName: 's1'})\n          ],\n          masterComponents: Em.A([\n            Em.Object.create({displayName: 'c1d', serviceName: 's1', componentName: 'HBASE_MASTER', isShownOnInstallerAssignMasterPage: true})\n          ]),\n          masterComponentHosts: Em.A([\n            {component: 'c1', hostName: 'h2', isInstalled: true}\n          ]),\n          selectHost: ['h3'],\n          m: 'component HBASE_MASTER',\n          e: {\n            component_name: 'HBASE_MASTER',\n            display_name: 'c1d',\n            selectedHost: 'h3',\n            isInstalled: false,\n            serviceId: 's1',\n            isHiveCoHost: false\n          }\n        },\n        {\n          services: [\n            Em.Object.create({isSelected: true, serviceName: 's1'})\n          ],\n          masterComponents: Em.A([\n            Em.Object.create({displayName: 'c1d', serviceName: 's1', componentName: 'ZOOKEEPER_SERVER', isShownOnInstallerAssignMasterPage: true})\n          ]),\n          masterComponentHosts: Em.A([\n            {component: 'ZOOKEEPER_SERVER', hostName: 'h2', isInstalled: true}\n          ]),\n          selectHost: ['h3'],\n          m: 'component ZOOKEEPER_SERVER(2)',\n          e: {\n            component_name: 'ZOOKEEPER_SERVER',\n            display_name: 'c1d',\n            selectedHost: 'h2',\n            isInstalled: true,\n            serviceId: 's1',\n            isHiveCoHost: false\n          }\n        },\n        {\n          services: [\n            Em.Object.create({isSelected: true, serviceName: 's1'})\n          ],\n          masterComponents: Em.A([\n            Em.Object.create({displayName: 'c1d', serviceName: 's1', componentName: 'HBASE_MASTER', isShownOnInstallerAssignMasterPage: true})\n          ]),\n          masterComponentHosts: Em.A([\n            {component: 'HBASE_MASTER', hostName: 'h2', isInstalled: true}\n          ]),\n          selectHost: ['h3'],\n          m: 'component HBASE_MASTER (2)',\n          e: {\n            component_name: 'HBASE_MASTER',\n            display_name: 'c1d',\n            selectedHost: 'h2',\n            isInstalled: true,\n            serviceId: 's1',\n            isHiveCoHost: false\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function() {\n          c.reopen({\n            content: {\n              services: test.services,\n              masterComponentHosts: test.masterComponentHosts\n            }\n          });\n          sinon.stub(App.StackServiceComponent, 'find', function() {\n            return test.masterComponents;\n          });\n          sinon.stub(c, 'selectHost', function() {\n            return test.selectHost;\n          });\n          var r = c.loadComponents();\n          App.StackServiceComponent.find.restore();\n          c.selectHost.restore();\n          expect(r.length).to.equal(1);\n          Em.keys(test.e).forEach(function(k) {\n            expect(r[0][k]).to.equal(test.e[k]);\n          });\n        });\n      });\n  });\n\n  describe('#_isHiveCoHost', function() {\n    Em.A([\n        {\n          componentName: 'HIVE_METASTORE',\n          isReassignWizard: false,\n          e: true\n        },\n        {\n          componentName: 'WEBHCAT_SERVER',\n          isReassignWizard: false,\n          e: true\n        },\n        {\n          componentName: 'HIVE_METASTORE',\n          isReassignWizard: true,\n          e: false\n        },\n        {\n          componentName: 'WEBHCAT_SERVER',\n          isReassignWizard: true,\n          e: false\n        },\n        {\n          componentName: 'C1',\n          isReassignWizard: false,\n          e: false\n        },\n        {\n          componentName: 'C1',\n          isReassignWizard: true,\n          e: false\n        }\n      ]).forEach(function (test) {\n        it(test.componentName.toString() + ' ' + test.isReassignWizard.toString(), function () {\n          c.reopen({\n            isReassignWizard: test.isReassignWizard\n          });\n          var r = c._isHiveCoHost(test.componentName);\n          expect(r).to.equal(test.e);\n        });\n      });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\nrequire('utils/helper');\nrequire('controllers/wizard/step6_controller');\nvar controller,\n  services = [\n    Em.Object.create({\n      serviceName: 'MAPREDUCE',\n      isSelected: true\n    }),\n    Em.Object.create({\n      serviceName: 'YARN',\n      isSelected: true\n    }),\n    Em.Object.create({\n      serviceName: 'HBASE',\n      isSelected: true\n    }),\n    Em.Object.create({\n      serviceName: 'HDFS',\n      isSelected: true\n    }),\n    Em.Object.create({\n      serviceName: 'STORM',\n      isSelected: true\n    }),\n    Em.Object.create({\n      serviceName: 'FLUME',\n      isSelected: true\n    })\n  ];\ndescribe('App.WizardStep6Controller', function () {\n\n  beforeEach(function () {\n    controller = App.WizardStep6Controller.create();\n    controller.set('content', {\n      hosts: {},\n      masterComponentHosts: {},\n      services: services\n    });\n    sinon.stub(controller, 'getComponentDisplayName', function (c) {\n      return App.format.components[c];\n    });\n\n    var h = {}, m = [];\n    Em.A(['host0', 'host1', 'host2', 'host3']).forEach(function (hostName) {\n      var obj = Em.Object.create({\n        name: hostName,\n        hostName: hostName,\n        bootStatus: 'REGISTERED'\n      });\n      h[hostName] = obj;\n      m.push(obj);\n    });\n\n    controller.set('content.hosts', h);\n    controller.set('content.masterComponentHosts', m);\n    controller.set('isMasters', false);\n\n  });\n\n  afterEach(function () {\n    controller.getComponentDisplayName.restore();\n  });\n\n  describe('#loadStep', function () {\n    Em.A([\n        {\n          isMasters: false,\n          services: [\n            Em.Object.create({\n              serviceName: 'MAPREDUCE',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 2,\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          isMasters: false,\n          services: [\n            Em.Object.create({\n              serviceName: 'MAPREDUCE',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'YARN',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 3,\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          isMasters: false,\n          services: [\n            Em.Object.create({\n              serviceName: 'MAPREDUCE',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'YARN',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'HBASE',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 4,\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          isMasters: false,\n          services: [\n            Em.Object.create({\n              serviceName: 'MAPREDUCE',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'YARN',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'HBASE',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'HDFS',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 5,\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          isMasters: false,\n          services: [\n            Em.Object.create({\n              serviceName: 'MAPREDUCE',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'YARN',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'HBASE',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'HDFS',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'STORM',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 6,\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          isMasters: false,\n          services: [\n            Em.Object.create({\n              serviceName: 'MAPREDUCE',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'YARN',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'HBASE',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'HDFS',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'STORM',\n              isSelected: true\n            }),\n            Em.Object.create({\n              serviceName: 'FLUME',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 7,\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          isMasters: true,\n          multipleHBaseMasters: true,\n          services: [\n            Em.Object.create({\n              serviceName: 'HBASE',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 1,\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          isMasters: true,\n          multipleHBaseMasters: false,\n          services: [\n            Em.Object.create({\n              serviceName: 'HBASE',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 0,\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          isMasters: true,\n          services: [\n            Em.Object.create({\n              serviceName: 'ZOOKEEPER',\n              isSelected: true\n            })\n          ],\n          e: {\n            l: 1,\n            allChecked: false,\n            noChecked: true\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.isMasters.toString() + ' ' + test.services.mapProperty('serviceName').join(', '), function () {\n          if (test.hasOwnProperty('multipleHBaseMasters')) {\n            App.set('supports.multipleHBaseMasters', test.multipleHBaseMasters);\n          }\n          controller.set('content.services', test.services);\n          controller.set('isMasters', test.isMasters);\n          sinon.stub(controller, 'render', Em.K);\n          controller.loadStep();\n          expect(controller.get('headers.length')).to.equal(test.e.l);\n          expect(controller.get('headers').everyProperty('allChecked', test.e.allChecked)).to.equal(true);\n          expect(controller.get('headers').everyProperty('noChecked', test.e.noChecked)).to.equal(true);\n          controller.clearStep();\n          controller.render.restore();\n        });\n      });\n\n    Em.A([\n        {\n          p: {\n            isMasters: true,\n            skipMasterStep: true\n          },\n          e: true\n        },\n        {\n          p: {\n            isMasters: false,\n            skipMasterStep: true\n          },\n          e: false\n        },\n        {\n          p: {\n            isMasters: true,\n            skipMasterStep: false\n          },\n          e: false\n        },\n        {\n          p: {\n            isMasters: false,\n            skipMasterStep: false\n          },\n          e: false\n        }\n      ]).forEach(function (test) {\n        it('should skip this step if isMasters is ' + test.p.isMasters + ' and content.skipMasterStep is ' + test.p.skipMasterStep, function () {\n          controller.set('isMasters', test.p.isMasters);\n          controller.set('content.skipMasterStep', test.p.skipMasterStep);\n          sinon.stub(App.router, 'send', Em.K);\n          controller.loadStep();\n          expect(App.router.send.calledWith('next')).to.equal(test.e);\n          App.router.send.restore();\n        });\n      });\n\n    Em.A([\n        {\n          p: {\n            isMasters: true,\n            skipSlavesStep: true\n          },\n          e: false\n        },\n        {\n          p: {\n            isMasters: false,\n            skipSlavesStep: true\n          },\n          e: true\n        },\n        {\n          p: {\n            isMasters: true,\n            skipSlavesStep: false\n          },\n          e: false\n        },\n        {\n          p: {\n            isMasters: false,\n            skipSlavesStep: false\n          },\n          e: false\n        }\n      ]).forEach(function (test) {\n        it('should skip this step if isMasters is ' + test.p.isMasters + ' and content.skipSlavesStep is ' + test.p.skipSlavesStep, function () {\n          controller.set('isMasters', test.p.isMasters);\n          controller.set('content.skipSlavesStep', test.p.skipSlavesStep);\n          sinon.stub(App.router, 'send', Em.K);\n          controller.loadStep();\n          expect(App.router.send.calledWith('next')).to.equal(test.e);\n          App.router.send.restore();\n        });\n      });\n\n  });\n\n  describe('#isAddHostWizard', function () {\n    it('true if content.controllerName is addHostController', function () {\n      controller.set('content.controllerName', 'addHostController');\n      expect(controller.get('isAddHostWizard')).to.equal(true);\n    });\n    it('false if content.controllerName is not addHostController', function () {\n      controller.set('content.controllerName', 'mainController');\n      expect(controller.get('isAddHostWizard')).to.equal(false);\n    });\n  });\n\n  describe('#isInstallerWizard', function () {\n    it('true if content.controllerName is addHostController', function () {\n      controller.set('content.controllerName', 'installerController');\n      expect(controller.get('isInstallerWizard')).to.equal(true);\n    });\n    it('false if content.controllerName is not addHostController', function () {\n      controller.set('content.controllerName', 'mainController');\n      expect(controller.get('isInstallerWizard')).to.equal(false);\n    });\n  });\n\n  describe('#isAddServiceWizard', function () {\n    it('true if content.controllerName is addServiceController', function () {\n      controller.set('content.controllerName', 'addServiceController');\n      expect(controller.get('isAddServiceWizard')).to.equal(true);\n    });\n    it('false if content.controllerName is not addServiceController', function () {\n      controller.set('content.controllerName', 'mainController');\n      expect(controller.get('isAddServiceWizard')).to.equal(false);\n    });\n  });\n\n  describe('#setAllNodes', function () {\n\n    var test_config = Em.A([\n      {\n        title: 'DataNode',\n        name: 'DATANODE',\n        state: false\n      },\n      {\n        title: 'DataNode',\n        name: 'DATANODE',\n        state: true\n      },\n      {\n        title: 'TaskTracker',\n        name: 'TASKTRACKER',\n        state: false\n      },\n      {\n        title: 'TaskTracker',\n        name: 'TASKTRACKER',\n        state: true\n      }\n    ]);\n\n    test_config.forEach(function (test) {\n      it((test.state ? 'Select' : 'Deselect') + ' all ' + test.title, function () {\n        controller.loadStep();\n        controller.setAllNodes(test.name, test.state);\n        var hosts = controller.get('hosts');\n        hosts.forEach(function (host) {\n          var cb = host.get('checkboxes').filterProperty('isInstalled', false).findProperty('component', test.name);\n          if (cb) {\n            expect(cb.get('checked')).to.equal(test.state);\n          }\n        });\n      });\n    });\n\n\n  });\n\n  describe('#isServiceSelected', function () {\n    describe('selected', function () {\n      services.forEach(function (service) {\n        it(service.serviceName + ' is selected', function () {\n          expect(controller.isServiceSelected(service.serviceName)).to.equal(true);\n        });\n      });\n    });\n    var unselectedService = 'FAKESERVICE';\n    it(unselectedService + ' is not selected', function () {\n      expect(controller.isServiceSelected(unselectedService)).to.equal(false);\n    });\n  });\n\n  describe('#validateEachComponent', function () {\n    beforeEach(function () {\n      controller.loadStep();\n    });\n    it('Nothing checked', function () {\n      controller.get('hosts').forEach(function (host) {\n        host.get('checkboxes').setEach('checked', false);\n      });\n      expect(controller.validateEachComponent('')).to.equal(false);\n    });\n    it('One slave is not selected for no one host', function () {\n      controller.get('hosts').forEach(function (host) {\n        host.get('checkboxes').forEach(function (checkbox, index) {\n          checkbox.set('checked', index === 0);\n        });\n      });\n      expect(controller.validateEachComponent('')).to.equal(false);\n    });\n    it('All checked', function () {\n      controller.get('hosts').forEach(function (host) {\n        host.get('checkboxes').forEach(function (checkbox) {\n          checkbox.set('checked', true);\n        });\n      });\n      expect(controller.validateEachComponent('')).to.equal(true);\n    });\n  });\n\n  describe('#validateEachHost', function () {\n    beforeEach(function () {\n      controller.loadStep();\n    });\n    it('Nothing checked', function () {\n      controller.get('hosts').forEach(function (host) {\n        host.get('checkboxes').setEach('checked', false);\n      });\n      expect(controller.validateEachHost('')).to.equal(false);\n    });\n    it('One host doesn\\'t have assigned slaves', function () {\n      controller.get('hosts').forEach(function (host, index) {\n        host.get('checkboxes').setEach('checked', index === 0);\n      });\n      expect(controller.validateEachHost('')).to.equal(false);\n    });\n    it('All checked', function () {\n      controller.get('hosts').forEach(function (host) {\n        host.get('checkboxes').setEach('checked', true);\n      });\n      expect(controller.validateEachHost('')).to.equal(true);\n    });\n  });\n\n  describe('#clearStep', function () {\n    beforeEach(function () {\n      sinon.stub(controller, 'clearError', Em.K);\n    });\n    afterEach(function () {\n      controller.clearError.restore();\n    });\n    it('should call clearError', function () {\n      controller.clearStep();\n      expect(controller.clearError.calledOnce).to.equal(true);\n    });\n    it('should clear hosts', function () {\n      controller.set('hosts', [\n        {},\n        {}\n      ]);\n      controller.clearStep();\n      expect(controller.get('hosts')).to.eql([]);\n    });\n    it('should clear headers', function () {\n      controller.set('headers', [\n        {},\n        {}\n      ]);\n      controller.clearStep();\n      expect(controller.get('headers')).to.eql([]);\n    });\n    it('should set isLoaded to false', function () {\n      controller.set('isLoaded', true);\n      controller.clearStep();\n      expect(controller.get('isLoaded')).to.equal(false);\n    });\n  });\n\n  describe('#selectAllNodes', function () {\n    beforeEach(function () {\n      sinon.stub(controller, 'setAllNodes', Em.K);\n    });\n    afterEach(function () {\n      controller.setAllNodes.restore();\n    });\n    it('should call setAllNodes', function () {\n      controller.selectAllNodes({context: {name: 'name'}});\n      expect(controller.setAllNodes.calledWith('name', true)).to.equal(true);\n    });\n    it('shouldn\\'t call setAllNodes', function () {\n      controller.selectAllNodes();\n      expect(controller.setAllNodes.called).to.equal(false);\n    });\n  });\n\n  describe('#deselectAllNodes', function () {\n    beforeEach(function () {\n      sinon.stub(controller, 'setAllNodes', Em.K);\n    });\n    afterEach(function () {\n      controller.setAllNodes.restore();\n    });\n    it('should call setAllNodes', function () {\n      controller.deselectAllNodes({context: {name: 'name'}});\n      expect(controller.setAllNodes.calledWith('name', false)).to.equal(true);\n    });\n    it('shouldn\\'t call setAllNodes', function () {\n      controller.deselectAllNodes();\n      expect(controller.setAllNodes.called).to.equal(false);\n    });\n  });\n\n  describe('#checkCallback', function () {\n    beforeEach(function () {\n      sinon.stub(controller, 'clearError', Em.K);\n    });\n    afterEach(function () {\n      controller.clearError.restore();\n    });\n    it('should call clearError', function () {\n      controller.checkCallback('');\n      expect(controller.clearError.calledOnce).to.equal(true);\n    });\n    Em.A([\n        {\n          m: 'all checked, isInstalled false',\n          headers: Em.A([\n            Em.Object.create({name: 'c1'})\n          ]),\n          hosts: Em.A([\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: false,\n                  checked: true\n                })\n              ])\n            })\n          ]),\n          component: 'c1',\n          e: {\n            allChecked: true,\n            noChecked: false\n          }\n        },\n        {\n          m: 'all checked, isInstalled true',\n          headers: Em.A([\n            Em.Object.create({name: 'c1'})\n          ]),\n          hosts: Em.A([\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: true,\n                  checked: true\n                })\n              ])\n            })\n          ]),\n          component: 'c1',\n          e: {\n            allChecked: true,\n            noChecked: true\n          }\n        },\n        {\n          m: 'no one checked',\n          headers: Em.A([\n            Em.Object.create({name: 'c1'})\n          ]),\n          hosts: Em.A([\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: false,\n                  checked: false\n                })\n              ])\n            })\n          ]),\n          component: 'c1',\n          e: {\n            allChecked: false,\n            noChecked: true\n          }\n        },\n        {\n          m: 'some checked',\n          headers: Em.A([\n            Em.Object.create({name: 'c1'})\n          ]),\n          hosts: Em.A([\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: false,\n                  checked: true\n                }),\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: false,\n                  checked: false\n                })\n              ])\n            })\n          ]),\n          component: 'c1',\n          e: {\n            allChecked: false,\n            noChecked: false\n          }\n        },\n        {\n          m: 'some checked, some isInstalled true',\n          headers: Em.A([\n            Em.Object.create({name: 'c1'})\n          ]),\n          hosts: Em.A([\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: true,\n                  checked: true\n                }),\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: true,\n                  checked: true\n                })\n              ])\n            })\n          ]),\n          component: 'c1',\n          e: {\n            allChecked: true,\n            noChecked: true\n          }\n        },\n        {\n          m: 'some checked, some isInstalled true (2)',\n          headers: Em.A([\n            Em.Object.create({name: 'c1'})\n          ]),\n          hosts: Em.A([\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: false,\n                  checked: false\n                }),\n                Em.Object.create({\n                  component: 'c1',\n                  isInstalled: true,\n                  checked: true\n                })\n              ])\n            })\n          ]),\n          component: 'c1',\n          e: {\n            allChecked: false,\n            noChecked: true\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          controller.clearStep();\n          controller.set('headers', test.headers);\n          controller.set('hosts', test.hosts);\n          controller.checkCallback(test.component);\n          var header = controller.get('headers').findProperty('name', test.component);\n          expect(header.get('allChecked')).to.equal(test.e.allChecked);\n          expect(header.get('noChecked')).to.equal(test.e.noChecked);\n        });\n      });\n  });\n\n  describe('#getHostNames', function () {\n    var tests = Em.A([\n      {\n        hosts: {\n          h1: {bootStatus: 'REGISTERED', name: 'h1'},\n          h2: {bootStatus: 'REGISTERED', name: 'h2'},\n          h3: {bootStatus: 'REGISTERED', name: 'h3'}\n        },\n        m: 'All REGISTERED',\n        e: ['h1', 'h2', 'h3']\n      },\n      {\n        hosts: {\n          h1: {bootStatus: 'REGISTERED', name: 'h1'},\n          h2: {bootStatus: 'FAILED', name: 'h2'},\n          h3: {bootStatus: 'REGISTERED', name: 'h3'}\n        },\n        m: 'Some REGISTERED',\n        e: ['h1', 'h3']\n      },\n      {\n        hosts: {\n          h1: {bootStatus: 'FAILED', name: 'h1'},\n          h2: {bootStatus: 'FAILED', name: 'h2'},\n          h3: {bootStatus: 'FAILED', name: 'h3'}\n        },\n        m: 'No one REGISTERED',\n        e: []\n      },\n      {\n        hosts: {},\n        m: 'Empty hosts',\n        e: []\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        controller.set('content.hosts', test.hosts);\n        var r = controller.getHostNames();\n        expect(r).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#validate', function () {\n    var tests = Em.A([\n      {\n        controllerName: 'addHostController',\n        method: 'validateEachHost',\n        r: true,\n        e: true\n      },\n      {\n        controllerName: 'addHostController',\n        method: 'validateEachHost',\n        r: false,\n        e: false\n      },\n      {\n        controllerName: 'addServiceController',\n        method: 'validateEachComponent',\n        r: true,\n        e: true\n      },\n      {\n        controllerName: 'addServiceController',\n        method: 'validateEachComponent',\n        r: false,\n        e: false\n      },\n      {\n        controllerName: 'installerController',\n        method: 'validateEachComponent',\n        r: true,\n        e: true\n      },\n      {\n        controllerName: 'installerController',\n        method: 'validateEachComponent',\n        r: false,\n        e: false\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.controllerName + ' ' + test.method + ' returns ' + test.r.toString(), function () {\n        sinon.stub(controller, test.method, function () {\n          return test.r\n        });\n        controller.set('content.controllerName', test.controllerName);\n        expect(controller.validate()).to.equal(test.e);\n        controller[test.method].restore();\n      });\n    });\n  });\n\n  describe('#getMasterComponentsForHost', function () {\n    var tests = Em.A([\n      {\n        masterComponentHosts: Em.A([\n          {hostName: 'h1', component: 'c1'}\n        ]),\n        hostName: 'h1',\n        m: 'host exists',\n        e: ['c1']\n      },\n      {\n        masterComponentHosts: Em.A([\n          {hostName: 'h1', component: 'c1'}\n        ]),\n        hostName: 'h2',\n        m: 'host donesn\\'t exists',\n        e: []\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        controller.set('content.masterComponentHosts', test.masterComponentHosts);\n        var r = controller.getMasterComponentsForHost(test.hostName);\n        expect(r).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#selectMasterComponents', function () {\n    var tests = Em.A([\n      {\n        masterComponentHosts: Em.A([\n          {\n            hostName: 'h1',\n            component: 'c1'\n          }\n        ]),\n        hostsObj: [\n          Em.Object.create({\n            hostName: 'h1',\n            checkboxes: [\n              Em.Object.create({\n                component: 'c1',\n                checked: false\n              })\n            ]\n          })\n        ],\n        e: true,\n        m: 'host and component exist'\n      },\n      {\n        masterComponentHosts: Em.A([\n          {\n            hostName: 'h1',\n            component: 'c2'\n          }\n        ]),\n        hostsObj: [\n          Em.Object.create({\n            hostName: 'h1',\n            checkboxes: [\n              Em.Object.create({\n                component: 'c1',\n                checked: false\n              })\n            ]\n          })\n        ],\n        e: false,\n        m: 'host exists'\n      },\n      {\n        masterComponentHosts: Em.A([\n          {\n            hostName: 'h2',\n            component: 'c2'\n          }\n        ]),\n        hostsObj: [\n          Em.Object.create({\n            hostName: 'h1',\n            checkboxes: [\n              Em.Object.create({\n                component: 'c1',\n                checked: false\n              })\n            ]\n          })\n        ],\n        e: false,\n        m: 'host and component don\\'t exist'\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        controller.set('content.masterComponentHosts', test.masterComponentHosts);\n        var r = controller.selectMasterComponents(test.hostsObj);\n        expect(r.findProperty('hostName', 'h1').get('checkboxes').findProperty('component', 'c1').get('checked')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#render', function () {\n    beforeEach(function () {\n      sinon.stub(controller, 'selectMasterComponents', Em.K);\n      sinon.stub(controller, 'renderSlaves', Em.K);\n    });\n    afterEach(function () {\n      controller.selectMasterComponents.restore();\n      controller.renderSlaves.restore();\n    });\n    it('should call selectMasterComponents if isMasters is true', function () {\n      controller.set('isMasters', true);\n      controller.render();\n      expect(controller.selectMasterComponents.calledOnce).to.equal(true);\n      expect(controller.renderSlaves.called).to.equal(false);\n    });\n    it('should call renderSlaves if isMasters is false', function () {\n      controller.set('isMasters', false);\n      controller.render();\n      expect(controller.selectMasterComponents.called).to.equal(false);\n      expect(controller.renderSlaves.calledOnce).to.equal(true);\n    });\n    it('should set isLoaded to true', function () {\n      controller.set('isLoaded', false);\n      controller.render();\n      expect(controller.get('isLoaded')).to.equal(true);\n    });\n  });\n\n  describe('#renderSlaves', function () {\n    Em.A([\n        {\n          controllerName: 'addServiceController',\n          slaveComponents: [],\n          hostsObj: [\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: ''}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: true\n            })\n          ],\n          m: 'host with masters, empty slaveComponents, controllerName - addServiceController',\n          e: [\n            [false, false, false]\n          ]\n        },\n        {\n          controllerName: 'addServiceController',\n          slaveComponents: [],\n          hostsObj: [\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: ''}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: false\n            })\n          ],\n          m: 'host without masters, empty slaveComponents, controllerName - addServiceController',\n          e: [\n            [false, true, true]\n          ]\n        },\n        {\n          controllerName: 'addServiceController',\n          slaveComponents: [],\n          services: [\n            Em.Object.create({serviceName: 'HDFS', isSelected: true})\n          ],\n          hostsObj: [\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: 'DataNode', checked: true}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: false\n            })\n          ],\n          m: 'host without masters, empty slaveComponents, controllerName - addServiceController, one datanode checked',\n          e: [\n            [true, true, true]\n          ]\n        },\n        {\n          controllerName: 'addServiceController',\n          slaveComponents: [],\n          services: [\n            Em.Object.create({serviceName: 'HDFS', isSelected: true})\n          ],\n          hostsObj: [\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: 'DataNode', checked: false}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: true\n            })\n          ],\n          m: 'host with masters, empty slaveComponents, controllerName - addServiceController, one datanode not checked',\n          e: [\n            [false, false, false]\n          ]\n        },\n        {\n          controllerName: 'installerController',\n          slaveComponents: [],\n          services: [\n            Em.Object.create({serviceName: 'HDFS', isSelected: true})\n          ],\n          hostsObj: [\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: 'DataNode', checked: true}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: true\n            })\n          ],\n          m: 'host with masters, empty slaveComponents, controllerName - installerController, one datanode checked',\n          e: [\n            [true, true, true]\n          ]\n        },\n        {\n          controllerName: 'installerController',\n          slaveComponents: [],\n          services: [\n            Em.Object.create({serviceName: 'HDFS', isSelected: true})\n          ],\n          hostsObj: [\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: 'DataNode', checked: false}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: true\n            }),\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: 'DataNode', checked: true}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: true\n            })\n          ],\n          m: 'hosts with masters, empty slaveComponents, controllerName - installerController, one datanode checked',\n          e: [\n            [false, false, false],\n            [true, true, true]\n          ]\n        },\n        {\n          controllerName: 'installerController',\n          slaveComponents: [],\n          services: [\n            Em.Object.create({serviceName: 'HDFS', isSelected: true})\n          ],\n          hostsObj: [\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: 'DataNode', checked: false}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: true\n            }),\n            Em.Object.create({\n              checkboxes: Em.A([\n                Em.Object.create({isInstalled: false, title: 'Client'}),\n                Em.Object.create({isInstalled: false, title: 'DataNode', checked: true}),\n                Em.Object.create({isInstalled: false, title: ''})\n              ]),\n              hasMaster: false\n            })\n          ],\n          m: 'some hosts with masters, empty slaveComponents, controllerName - installerController, one datanode checked',\n          e: [\n            [false, false, false],\n            [true, true, true]\n          ]\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          controller.set('content.slaveComponents', test.slaveComponents);\n          controller.set('content.controllerName', test.controllerName);\n          if (test.services) {\n            controller.set('content.services', test.services);\n          }\n          controller.set('isMasters', false);\n          controller.loadStep();\n          var r = controller.renderSlaves(test.hostsObj);\n          expect(r.map(function (i) {\n            return i.get('checkboxes').map(function (j) {\n              return j.get('checked');\n            });\n          })).to.eql(test.e);\n        });\n      });\n\n    Em.A([\n        {\n          slaveComponents: [\n            {componentName: 'c1', hosts: [\n              {hostName: 'h1', isInstalled: false},\n              {hostName: 'h2', isInstalled: false}\n            ]},\n            {componentName: 'c2', hosts: [\n              {hostName: 'h1', isInstalled: false},\n              {hostName: 'h2', isInstalled: false}\n            ]}\n          ],\n          headers: [\n            Em.Object.create({name: 'c1', label: 'C1'}),\n            Em.Object.create({name: 'c2', label: 'C2'})\n          ],\n          hostsObj: [\n            Em.Object.create({\n              hostName: 'h1',\n              checkboxes: [\n                Em.Object.create({\n                  title: 'C1',\n                  checked: false,\n                  isInstalled: false\n                }),\n                Em.Object.create({\n                  title: 'C2',\n                  checked: false,\n                  isInstalled: false\n                })\n              ]\n            }),\n            Em.Object.create({\n              hostName: 'h2',\n              checkboxes: [\n                Em.Object.create({\n                  title: 'C1',\n                  checked: false,\n                  isInstalled: false\n                }),\n                Em.Object.create({\n                  title: 'C2',\n                  checked: false,\n                  isInstalled: false\n                })\n              ]\n            })\n          ],\n          m: 'all Checked, nothing installed before',\n          e: {\n            checked: [\n              [true, true],\n              [true, true]\n            ],\n            isInstalled: [\n              [false, false],\n              [false, false]\n            ]\n          }\n        },\n        {\n          slaveComponents: [\n            {componentName: 'c1', hosts: [\n              {hostName: 'h1', isInstalled: true},\n              {hostName: 'h2', isInstalled: true}\n            ]},\n            {componentName: 'c2', hosts: [\n              {hostName: 'h1', isInstalled: true},\n              {hostName: 'h2', isInstalled: true}\n            ]}\n          ],\n          headers: [\n            Em.Object.create({name: 'c1', label: 'C1'}),\n            Em.Object.create({name: 'c2', label: 'C2'})\n          ],\n          hostsObj: [\n            Em.Object.create({\n              hostName: 'h1',\n              checkboxes: [\n                Em.Object.create({\n                  title: 'C1',\n                  checked: false,\n                  isInstalled: false\n                }),\n                Em.Object.create({\n                  title: 'C2',\n                  checked: false,\n                  isInstalled: false\n                })\n              ]\n            }),\n            Em.Object.create({\n              hostName: 'h2',\n              checkboxes: [\n                Em.Object.create({\n                  title: 'C1',\n                  checked: false,\n                  isInstalled: false\n                }),\n                Em.Object.create({\n                  title: 'C2',\n                  checked: false,\n                  isInstalled: false\n                })\n              ]\n            })\n          ],\n          m: 'all Checked, all installed before',\n          e: {\n            checked: [\n              [true, true],\n              [true, true]\n            ],\n            isInstalled: [\n              [true, true],\n              [true, true]\n            ]\n          }\n        },\n        {\n          slaveComponents: [\n            {componentName: 'c1', hosts: [\n              {hostName: 'h1', isInstalled: true}\n            ]},\n            {componentName: 'c2', hosts: [\n              {hostName: 'h2', isInstalled: true}\n            ]}\n          ],\n          headers: [\n            Em.Object.create({name: 'c1', label: 'C1'}),\n            Em.Object.create({name: 'c2', label: 'C2'})\n          ],\n          hostsObj: [\n            Em.Object.create({\n              hostName: 'h1',\n              checkboxes: [\n                Em.Object.create({\n                  title: 'C1',\n                  checked: false,\n                  isInstalled: false\n                }),\n                Em.Object.create({\n                  title: 'C2',\n                  checked: false,\n                  isInstalled: false\n                })\n              ]\n            }),\n            Em.Object.create({\n              hostName: 'h2',\n              checkboxes: [\n                Em.Object.create({\n                  title: 'C1',\n                  checked: false,\n                  isInstalled: false\n                }),\n                Em.Object.create({\n                  title: 'C2',\n                  checked: false,\n                  isInstalled: false\n                })\n              ]\n            })\n          ],\n          m: 'some Checked, some installed before',\n          e: {\n            checked: [\n              [true, false],\n              [false, true]\n            ],\n            isInstalled: [\n              [true, false],\n              [false, true]\n            ]\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          controller.set('content.slaveComponentHosts', test.slaveComponents);\n          controller.set('headers', test.headers);\n          var r = controller.renderSlaves(test.hostsObj);\n          var checked = r.map(function (i) {\n            return i.get('checkboxes').map(function (j) {\n              return j.get('checked')\n            })\n          });\n          var isInstalled = r.map(function (i) {\n            return i.get('checkboxes').map(function (j) {\n              return j.get('isInstalled')\n            })\n          });\n          expect(checked).to.eql(test.e.checked);\n          expect(isInstalled).to.eql(test.e.isInstalled);\n        });\n      });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nvar numberUtils = require('utils/number_utils');\nrequire('mixins/common/localStorage');\nrequire('models/config_group');\nrequire('controllers/wizard/step7_controller');\n\nvar installerStep7Controller;\n\ndescribe('App.InstallerStep7Controller', function () {\n\n  beforeEach(function () {\n    installerStep7Controller = App.WizardStep7Controller.create();\n  });\n\n  describe('#installedServiceNames', function () {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({\n          controllerName: 'installerController',\n          services: Em.A([\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'SQOOP'\n            }),\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'HDFS'\n            })\n          ])\n        }),\n        e: ['SQOOP', 'HDFS'],\n        m: 'installerController with SQOOP'\n      },\n      {\n        content: Em.Object.create({\n          controllerName: 'installerController',\n          services: Em.A([\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'HIVE'\n            }),\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'HDFS'\n            })\n          ])\n        }),\n        e: ['HIVE', 'HDFS'],\n        m: 'installerController without SQOOP'\n      },\n      {\n        content: Em.Object.create({\n          controllerName: 'addServiceController',\n          services: Em.A([\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'HIVE'\n            }),\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'HDFS'\n            })\n          ])\n        }),\n        e: ['HIVE', 'HDFS'],\n        m: 'addServiceController without SQOOP'\n      },\n      {\n        content: Em.Object.create({\n          controllerName: 'addServiceController',\n          services: Em.A([\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'SQOOP'\n            }),\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'HIVE'\n            }),\n            Em.Object.create({\n              isInstalled: true,\n              serviceName: 'HDFS'\n            })\n          ])\n        }),\n        e: ['HIVE', 'HDFS'],\n        m: 'addServiceController with SQOOP'\n      }\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        installerStep7Controller.set('content', test.content);\n        expect(installerStep7Controller.get('installedServiceNames')).to.include.members(test.e);\n        expect(test.e).to.include.members(installerStep7Controller.get('installedServiceNames'));\n      });\n    });\n\n  });\n\n  describe('#isSubmitDisabled', function () {\n    it('should be true if miscModalVisible', function () {\n      installerStep7Controller.reopen({miscModalVisible: true});\n      expect(installerStep7Controller.get('isSubmitDisabled')).to.equal(true);\n    });\n    it('should be true if some of stepConfigs has errors', function () {\n      installerStep7Controller.reopen({\n        miscModalVisible: false,\n        stepConfigs: [\n          {\n            showConfig: true,\n            errorCount: 1\n          }\n        ]\n      });\n      expect(installerStep7Controller.get('isSubmitDisabled')).to.equal(true);\n    });\n    it('should be false if all of stepConfigs don\\'t have errors and miscModalVisible is false', function () {\n      installerStep7Controller.reopen({\n        miscModalVisible: false,\n        stepConfigs: [\n          {\n            showConfig: true,\n            errorCount: 0\n          }\n        ]\n      });\n      expect(installerStep7Controller.get('isSubmitDisabled')).to.equal(false);\n    });\n  });\n\n  describe('#selectedServiceNames', function () {\n    it('should use content.services as source of data', function () {\n      installerStep7Controller.set('content', {\n        services: [\n          {isSelected: true, isInstalled: false, serviceName: 's1'},\n          {isSelected: false, isInstalled: false, serviceName: 's2'},\n          {isSelected: true, isInstalled: true, serviceName: 's3'},\n          {isSelected: false, isInstalled: false, serviceName: 's4'},\n          {isSelected: true, isInstalled: false, serviceName: 's5'},\n          {isSelected: false, isInstalled: false, serviceName: 's6'},\n          {isSelected: true, isInstalled: true, serviceName: 's7'},\n          {isSelected: false, isInstalled: false, serviceName: 's8'}\n        ]\n      });\n      var expected = ['s1', 's5'];\n      expect(installerStep7Controller.get('selectedServiceNames')).to.eql(expected);\n    });\n  });\n\n  describe('#allSelectedServiceNames', function () {\n    it('should use content.services as source of data', function () {\n      installerStep7Controller.set('content', {\n        services: [\n          {isSelected: true, isInstalled: false, serviceName: 's1'},\n          {isSelected: false, isInstalled: false, serviceName: 's2'},\n          {isSelected: true, isInstalled: true, serviceName: 's3'},\n          {isSelected: false, isInstalled: false, serviceName: 's4'},\n          {isSelected: true, isInstalled: false, serviceName: 's5'},\n          {isSelected: false, isInstalled: false, serviceName: 's6'},\n          {isSelected: true, isInstalled: true, serviceName: 's7'},\n          {isSelected: false, isInstalled: false, serviceName: 's8'}\n        ]\n      });\n      var expected = ['s1', 's3', 's5', 's7'];\n      expect(installerStep7Controller.get('allSelectedServiceNames')).to.eql(expected);\n    });\n  });\n\n  describe('#masterComponentHosts', function () {\n    it('should be equal to content.masterComponentHosts', function () {\n      var masterComponentHosts = [\n        {},\n        {},\n        {}\n      ];\n      installerStep7Controller.reopen({content: {masterComponentHosts: masterComponentHosts}});\n      expect(installerStep7Controller.get('masterComponentHosts')).to.eql(masterComponentHosts);\n    });\n  });\n\n  describe('#slaveComponentHosts', function () {\n    it('should be equal to content.slaveGroupProperties', function () {\n      var slaveGroupProperties = [\n        {},\n        {},\n        {}\n      ];\n      installerStep7Controller.reopen({content: {slaveGroupProperties: slaveGroupProperties}});\n      expect(installerStep7Controller.get('slaveComponentHosts')).to.eql(slaveGroupProperties);\n    });\n  });\n\n  describe('#clearStep', function () {\n    it('should clear serviceConfigTags', function () {\n      installerStep7Controller.set('serviceConfigTags', [\n        {},\n        {}\n      ]);\n      installerStep7Controller.clearStep();\n      expect(installerStep7Controller.get('serviceConfigTags.length')).to.equal(0);\n    });\n    it('should clear stepConfigs', function () {\n      installerStep7Controller.set('stepConfigs', [\n        {},\n        {}\n      ]);\n      installerStep7Controller.clearStep();\n      expect(installerStep7Controller.get('stepConfigs.length')).to.equal(0);\n    });\n    it('should clear filter', function () {\n      installerStep7Controller.set('filter', 'filter');\n      installerStep7Controller.clearStep();\n      expect(installerStep7Controller.get('filter')).to.equal('');\n    });\n    it('should set for each filterColumns \"selected\" false', function () {\n      installerStep7Controller.set('filterColumns', [\n        {selected: true},\n        {selected: false},\n        {selected: true}\n      ]);\n      installerStep7Controller.clearStep();\n      expect(installerStep7Controller.get('filterColumns').everyProperty('selected', false)).to.equal(true);\n    });\n  });\n\n  describe('#loadInstalledServicesConfigGroups', function () {\n    before(function () {\n      sinon.stub(App.ajax, 'send', Em.K);\n    });\n    after(function () {\n      App.ajax.send.restore();\n    });\n    it('should do ajax request for each received service name', function () {\n      var serviceNames = ['s1', 's2', 's3'];\n      installerStep7Controller.loadInstalledServicesConfigGroups(serviceNames);\n      expect(App.ajax.send.callCount).to.equal(serviceNames.length);\n    });\n  });\n\n  describe('#getConfigTags', function () {\n    before(function () {\n      sinon.stub(App.ajax, 'send', Em.K);\n    });\n    after(function () {\n      App.ajax.send.restore();\n    });\n    it('should do ajax-request', function () {\n      installerStep7Controller.getConfigTags();\n      expect(App.ajax.send.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#setGroupsToDelete', function () {\n    beforeEach(function () {\n      installerStep7Controller.set('wizardController', Em.Object.create(App.LocalStorage, {name: 'tdk'}));\n    });\n    it('should add new groups to groupsToDelete', function () {\n      var groupsToDelete = [\n          {id: '1'},\n          {id: '2'}\n        ],\n        groups = [\n          Em.Object.create({id: '3'}),\n          Em.Object.create(),\n          Em.Object.create({id: '5'})\n        ],\n        expected = [\n          {id: \"1\"},\n          {id: \"2\"},\n          {id: \"3\"},\n          {id: \"5\"}\n        ];\n      installerStep7Controller.set('groupsToDelete', groupsToDelete);\n      installerStep7Controller.setGroupsToDelete(groups);\n      expect(installerStep7Controller.get('groupsToDelete')).to.eql(expected);\n      expect(installerStep7Controller.get('wizardController').getDBProperty('groupsToDelete')).to.eql(expected);\n    });\n  });\n\n  describe('#selectConfigGroup', function () {\n    beforeEach(function () {\n      installerStep7Controller.reopen({content: {services: []}});\n      sinon.stub(installerStep7Controller, 'switchConfigGroupConfigs', Em.K);\n    });\n    afterEach(function () {\n      installerStep7Controller.switchConfigGroupConfigs.restore();\n    });\n    it('should set selectedConfigGroup', function () {\n      var group = {':': []};\n      installerStep7Controller.selectConfigGroup({context: group});\n      expect(installerStep7Controller.get('selectedConfigGroup')).to.eql(group);\n    });\n  });\n\n  describe('#submit', function () {\n    beforeEach(function () {\n      sinon.stub(App.router, 'send', Em.K);\n    });\n    afterEach(function () {\n      App.router.send.restore();\n    });\n    it('should proceed if submit is not disabled', function () {\n      installerStep7Controller.reopen({isSubmitDisabled: false});\n      installerStep7Controller.submit();\n      expect(App.router.send.calledOnce).to.equal(true);\n    });\n    it('should not proceed if submit is disabled', function () {\n      installerStep7Controller.reopen({isSubmitDisabled: true});\n      installerStep7Controller.submit();\n      expect(App.router.send.called).to.equal(false);\n    });\n  });\n\n  describe('#addOverrideProperty', function () {\n    it('should add override property', function () {\n      var groupName = 'groupName',\n        selectedService = {configGroups: [Em.Object.create({name: groupName, properties: []})]},\n        selectedConfigGroup = {name: groupName},\n        serviceConfigProperty = Em.Object.create({overrides: []}),\n        expected = Em.Object.create({\n          value: '',\n          isOriginalSCP: false,\n          isEditable: true\n        });\n      installerStep7Controller.reopen({selectedService: selectedService, selectedConfigGroup: selectedConfigGroup});\n      var newSCP = installerStep7Controller.addOverrideProperty(serviceConfigProperty);\n      Em.keys(expected).forEach(function (k) {\n        expect(newSCP.get(k)).to.equal(expected.get(k));\n      });\n      var group = installerStep7Controller.get('selectedService.configGroups').findProperty('name', groupName);\n      expect(newSCP.get('group')).to.eql(group);\n      expect(newSCP.get('parentSCP')).to.eql(serviceConfigProperty);\n      expect(group.get('properties.length')).to.equal(1);\n    });\n  });\n\n  describe('#getConfigTagsSuccess', function () {\n    it('should update serviceConfigTags', function () {\n      var installedServiceNames = ['s1', 's2'],\n        serviceConfigsData = [\n          {serviceName: 's1', sites: ['s1-site', 's1-log']},\n          {serviceName: 's2', sites: ['s2-site', 'core-site']},\n          {serviceName: 's3', sites: ['s3-site']}\n        ],\n        data = {\n          Clusters: {\n            desired_configs: {\n              \"core-site\": {\n                \"user\": \"admin\",\n                \"tag\": \"version1398780546992\"\n              },\n              \"global\": {\n                \"user\": \"admin\",\n                \"tag\": \"version1398780546992\"\n              },\n              \"s1-site\": {\n                \"user\": \"admin\",\n                \"tag\": \"version1\"\n              },\n              \"s1-log\": {\n                \"user\": \"admin\",\n                \"tag\": \"version1\"\n              },\n              \"s2-site\": {\n                \"user\": \"admin\",\n                \"tag\": \"version1\"\n              },\n              \"s3-site\": {\n                \"user\": \"admin\",\n                \"tag\": \"version1\"\n              }\n            }\n          }\n        },\n        serviceConfigTags = [\n          {siteName: 'core-site', tagName: 'version1398780546992', newTagName: null},\n          {siteName: 's1-site', tagName: 'version1', newTagName: null},\n          {siteName: 's1-log', tagName: 'version1', newTagName: null},\n          {siteName: 's2-site', tagName: 'version1', newTagName: null}\n        ];\n      installerStep7Controller.reopen({serviceConfigsData: serviceConfigsData, installedServiceNames: installedServiceNames});\n      installerStep7Controller.getConfigTagsSuccess(data);\n      expect(installerStep7Controller.get('serviceConfigTags')).to.eql(serviceConfigTags);\n    });\n  });\n\n  describe('#resolveStormConfigs', function () {\n    beforeEach(function () {\n      installerStep7Controller.reopen({\n        content: {services: []},\n        wizardController: Em.Object.create({\n          getDBProperty: function () {\n            return [\n              {component: 'GANGLIA_SERVER', hostName: 'h1'}\n            ];\n          }\n        })\n      });\n    });\n    it('shouldn\\'t do nothing if Ganglia and Storm are installed', function () {\n      var installedServiceNames = ['GANGLIA', 'STORM'],\n        configs = [\n          {name: 'nimbus.childopts', value: '.jar=host=', defaultValue: ''},\n          {name: 'supervisor.childopts', value: '.jar=host=', defaultValue: ''},\n          {name: 'worker.childopts', value: '.jar=host=', defaultValue: ''}\n        ],\n        expected = [\n          {name: 'nimbus.childopts', value: '.jar=host=', defaultValue: ''},\n          {name: 'supervisor.childopts', value: '.jar=host=', defaultValue: ''},\n          {name: 'worker.childopts', value: '.jar=host=', defaultValue: ''}\n        ];\n      installerStep7Controller.reopen({installedServiceNames: installedServiceNames});\n      installerStep7Controller.resolveStormConfigs(configs);\n      expect(configs).to.eql(expected);\n    });\n    it('shouldn\\'t do nothing if Ganglia is in allSelectedServiceNames', function () {\n      var allSelectedServiceNames = ['GANGLIA'],\n        configs = [\n          {name: 'nimbus.childopts', value: '.jar=host=', defaultValue: ''},\n          {name: 'supervisor.childopts', value: '.jar=host=', defaultValue: ''},\n          {name: 'worker.childopts', value: '.jar=host=', defaultValue: ''}\n        ],\n        expected = [\n          {name: 'nimbus.childopts', value: '.jar=host=h1', defaultValue: '.jar=host=h1', forceUpdate: true},\n          {name: 'supervisor.childopts', value: '.jar=host=h1', defaultValue: '.jar=host=h1', forceUpdate: true},\n          {name: 'worker.childopts', value: '.jar=host=h1', defaultValue: '.jar=host=h1', forceUpdate: true}\n        ];\n      installerStep7Controller.reopen({allSelectedServiceNames: allSelectedServiceNames});\n      installerStep7Controller.resolveStormConfigs(configs);\n      Em.keys(expected[0]).forEach(function (k) {\n        expect(configs.mapProperty(k)).to.eql(expected.mapProperty(k));\n      });\n    });\n    it('shouldn\\'t do nothing if Ganglia is in installedServiceNames', function () {\n      var installedServiceNames = ['GANGLIA'],\n        configs = [\n          {name: 'nimbus.childopts', value: '.jar=host=', defaultValue: ''},\n          {name: 'supervisor.childopts', value: '.jar=host=', defaultValue: ''},\n          {name: 'worker.childopts', value: '.jar=host=', defaultValue: ''}\n        ],\n        expected = [\n          {name: 'nimbus.childopts', value: '.jar=host=h1', defaultValue: '.jar=host=h1', forceUpdate: true},\n          {name: 'supervisor.childopts', value: '.jar=host=h1', defaultValue: '.jar=host=h1', forceUpdate: true},\n          {name: 'worker.childopts', value: '.jar=host=h1', defaultValue: '.jar=host=h1', forceUpdate: true}\n        ];\n      installerStep7Controller.reopen({installedServiceNames: installedServiceNames});\n      installerStep7Controller.resolveStormConfigs(configs);\n      Em.keys(expected[0]).forEach(function (k) {\n        expect(configs.mapProperty(k)).to.eql(expected.mapProperty(k));\n      });\n    });\n  });\n\n  describe('#resolveServiceDependencyConfigs', function () {\n    beforeEach(function () {\n      sinon.stub(installerStep7Controller, 'resolveStormConfigs', Em.K);\n    });\n    afterEach(function () {\n      installerStep7Controller.resolveStormConfigs.restore();\n    });\n    it('should call resolveStormConfigs if serviceName is STORM', function () {\n      var serviceName = 'STORM', configs = [\n        {},\n        {},\n        {}\n      ];\n      installerStep7Controller.resolveServiceDependencyConfigs(serviceName, configs);\n      expect(installerStep7Controller.resolveStormConfigs.calledWith(configs)).to.equal(true);\n    });\n  });\n\n  describe('#selectedServiceObserver', function () {\n    beforeEach(function () {\n      installerStep7Controller.reopen({content: {services: []}});\n      sinon.stub(installerStep7Controller, 'switchConfigGroupConfigs', Em.K);\n    });\n    afterEach(function () {\n      installerStep7Controller.switchConfigGroupConfigs.restore();\n    });\n    it('shouldn\\'t do nothing if App.supports.hostOverridesInstaller is false', function () {\n      App.set('supports.hostOverridesInstaller', false);\n      var configGroups = [\n          {},\n          {}\n        ],\n        selectedConfigGroup = {};\n      installerStep7Controller.reopen({configGroups: configGroups, selectedConfigGroup: selectedConfigGroup});\n      installerStep7Controller.selectedServiceObserver();\n      expect(installerStep7Controller.get('configGroups')).to.eql(configGroups);\n      expect(installerStep7Controller.get('selectedConfigGroup')).to.eql(selectedConfigGroup);\n    });\n    it('shouldn\\'t do nothing if selectedService is null', function () {\n      App.set('supports.hostOverridesInstaller', true);\n      var configGroups = [\n          {},\n          {}\n        ],\n        selectedConfigGroup = {};\n      installerStep7Controller.reopen({selectedService: null, configGroups: configGroups, selectedConfigGroup: selectedConfigGroup});\n      installerStep7Controller.selectedServiceObserver();\n      expect(installerStep7Controller.get('configGroups')).to.eql(configGroups);\n      expect(installerStep7Controller.get('selectedConfigGroup')).to.eql(selectedConfigGroup);\n    });\n    it('shouldn\\'t do nothing if selectedService.serviceName is MISC', function () {\n      App.set('supports.hostOverridesInstaller', true);\n      var configGroups = [\n          {},\n          {}\n        ],\n        selectedConfigGroup = {};\n      installerStep7Controller.reopen({selectedService: {serviceName: 'MISC'}, configGroups: configGroups, selectedConfigGroup: selectedConfigGroup});\n      installerStep7Controller.selectedServiceObserver();\n      expect(installerStep7Controller.get('configGroups')).to.eql(configGroups);\n      expect(installerStep7Controller.get('selectedConfigGroup')).to.eql(selectedConfigGroup);\n    });\n    it('should update configGroups and selectedConfigGroup', function () {\n      App.set('supports.hostOverridesInstaller', true);\n      var defaultGroup = {isDefault: true, n: 'n2'},\n        configGroups = [\n          {isDefault: false, n: 'n1'},\n          defaultGroup,\n          {n: 'n3'}\n        ],\n        selectedConfigGroup = {};\n      installerStep7Controller.reopen({selectedService: {serviceName: 's1', configGroups: configGroups}});\n      installerStep7Controller.selectedServiceObserver();\n      expect(installerStep7Controller.get('configGroups').mapProperty('n')).to.eql(['n2', 'n1', 'n3']);\n      expect(installerStep7Controller.get('selectedConfigGroup')).to.eql(defaultGroup);\n    });\n  });\n\n  describe('#loadConfigGroups', function () {\n    beforeEach(function () {\n      installerStep7Controller.reopen({\n        wizardController: Em.Object.create({\n          allHosts: [\n            {hostName: 'h1'},\n            {hostName: 'h2'},\n            {hostName: 'h3'}\n          ]\n        })\n      });\n    });\n    it('shouldn\\'t do nothing if only MISC available', function () {\n      var configGroups = [\n        {}\n      ];\n      installerStep7Controller.reopen({\n        stepConfigs: [Em.Object.create({serviceName: 'MISC', configGroups: configGroups})]\n      });\n      installerStep7Controller.loadConfigGroups([]);\n      expect(installerStep7Controller.get('stepConfigs.firstObject.configGroups')).to.eql(configGroups);\n    });\n    it('should set configGroups for service if they don\\'t exist', function () {\n      var configGroups = [],\n        serviceName = 'HDFS',\n        serviceConfigGroups = [\n          {service: {id: 's1'}}\n        ];\n      installerStep7Controller.reopen({\n        stepConfigs: [Em.Object.create({serviceName: serviceName, configGroups: configGroups})]\n      });\n      installerStep7Controller.loadConfigGroups(serviceConfigGroups);\n      expect(installerStep7Controller.get('stepConfigs.firstObject.configGroups.length')).to.equal(1);\n      var group = installerStep7Controller.get('stepConfigs.firstObject.configGroups.firstObject');\n      expect(group.get('name')).to.equal(serviceName + ' Default');\n      expect(group.get('description').contains(serviceName)).to.equal(true);\n      expect(group.get('isDefault')).to.equal(true);\n      expect(group.get('hosts')).to.eql(['h1', 'h2', 'h3']);\n      expect(group.get('service.id')).to.equal(serviceName);\n      expect(group.get('serviceName')).to.equal(serviceName);\n    });\n    it('should update configGroups for service (only default group)', function () {\n      var configGroups = [],\n        serviceName = 'HDFS',\n        serviceConfigGroups = [\n          {service: {id: 'HDFS'}, isDefault: true, n: 'n1'}\n        ];\n      installerStep7Controller.reopen({\n        stepConfigs: [Em.Object.create({serviceName: serviceName, configGroups: configGroups})]\n      });\n      installerStep7Controller.loadConfigGroups(serviceConfigGroups);\n      expect(installerStep7Controller.get('stepConfigs.firstObject.configGroups').findProperty('isDefault').get('n')).to.equal('n1');\n    });\n    it('should update configGroups for service', function () {\n      var configGroups = [],\n        serviceName = 'HDFS',\n        serviceConfigGroups = [\n          {service: {id: 'HDFS'}, properties: [\n            {},\n            {}\n          ], isDefault: true, n: 'n1'},\n          {service: {id: 'HDFS'}, properties: [\n            {},\n            {}\n          ], isDefault: false, n: 'n2'}\n        ];\n      installerStep7Controller.reopen({\n        stepConfigs: [Em.Object.create({serviceName: serviceName, configGroups: configGroups})]\n      });\n      installerStep7Controller.loadConfigGroups(serviceConfigGroups);\n      expect(installerStep7Controller.get('stepConfigs.firstObject.configGroups.length')).to.equal(2);\n      expect(installerStep7Controller.get('stepConfigs.firstObject.configGroups').findProperty('isDefault').get('n')).to.equal('n1');\n      expect(installerStep7Controller.get('stepConfigs.firstObject.configGroups').findProperty('isDefault', false).get('properties').everyProperty('group.n', 'n2')).to.equal(true);\n      expect(installerStep7Controller.get('stepConfigs.firstObject.configGroups').findProperty('isDefault', false).get('parentConfigGroup.n')).to.equal('n1');\n    });\n  });\n\n  describe('#_getDisplayedConfigGroups', function () {\n    it('should return [] if no selected group', function () {\n      installerStep7Controller.reopen({\n        content: {services: []},\n        selectedConfigGroup: null\n      });\n      expect(installerStep7Controller._getDisplayedConfigGroups()).to.eql([]);\n    });\n    it('should return default config group if another selected', function () {\n      var defaultGroup = Em.Object.create({isDefault: false});\n      installerStep7Controller.reopen({\n        content: {services: []},\n        selectedConfigGroup: defaultGroup\n      });\n      expect(installerStep7Controller._getDisplayedConfigGroups()).to.eql([defaultGroup]);\n    });\n    it('should return other groups if default selected', function () {\n      var defaultGroup = Em.Object.create({isDefault: true}),\n        cfgG = Em.Object.create({isDefault: true}),\n        configGroups = Em.A([\n          Em.Object.create({isDefault: false}),\n          Em.Object.create({isDefault: false}),\n          cfgG,\n          Em.Object.create({isDefault: false})\n        ]);\n      installerStep7Controller.reopen({\n        content: {services: []},\n        selectedConfigGroup: defaultGroup,\n        selectedService: {configGroups: configGroups}\n      });\n      expect(installerStep7Controller._getDisplayedConfigGroups()).to.eql(configGroups.without(cfgG));\n    });\n  });\n\n  describe('#_setEditableValue', function () {\n    it('shouldn\\'t update config if no selectedConfigGroup', function () {\n      installerStep7Controller.reopen({\n        selectedConfigGroup: null\n      });\n      var config = Em.Object.create({isEditable: null});\n      var updatedConfig = installerStep7Controller._setEditableValue(config);\n      expect(updatedConfig.get('isEditable')).to.be.null;\n    });\n    it('should set isEditable equal to selectedGroup.isDefault if service not installed', function () {\n      var isDefault = true;\n      installerStep7Controller.reopen({\n        installedServiceNames: [],\n        selectedService: {serviceName: 'abc'},\n        selectedConfigGroup: Em.Object.create({isDefault: isDefault})\n      });\n      var config = Em.Object.create({isEditable: null});\n      var updatedConfig = installerStep7Controller._setEditableValue(config);\n      expect(updatedConfig.get('isEditable')).to.equal(isDefault);\n      installerStep7Controller.toggleProperty('selectedConfigGroup.isDefault');\n      updatedConfig = installerStep7Controller._setEditableValue(config);\n      expect(updatedConfig.get('isEditable')).to.equal(!isDefault);\n    });\n    Em.A([\n        {\n          isEditable: false,\n          isReconfigurable: false,\n          isDefault: true,\n          e: false\n        },\n        {\n          isEditable: true,\n          isReconfigurable: true,\n          isDefault: true,\n          e: true\n        },\n        {\n          isEditable: false,\n          isReconfigurable: true,\n          isDefault: false,\n          e: false\n        },\n        {\n          isEditable: true,\n          isReconfigurable: false,\n          isDefault: false,\n          e: false\n        }\n      ]).forEach(function (test) {\n        it('service installed, isEditable = ' + test.isEditable.toString() + ', isReconfigurable = ' + test.isReconfigurable.toString(), function () {\n          var config = Em.Object.create({\n            isReconfigurable: test.isReconfigurable,\n            isEditable: test.isEditable\n          });\n          installerStep7Controller.reopen({\n            installedServiceNames: Em.A(['a']),\n            selectedService: Em.Object.create({serviceName: 'a'}),\n            selectedConfigGroup: Em.Object.create({isDefault: test.isDefault})\n          });\n          var updateConfig = installerStep7Controller._setEditableValue(config);\n          expect(updateConfig.get('isEditable')).to.equal(test.e);\n        });\n      });\n  });\n\n  describe('#_setOverrides', function () {\n    it('shouldn\\'t update config if no selectedConfigGroup', function () {\n      installerStep7Controller.reopen({\n        selectedConfigGroup: null\n      });\n      var config = Em.Object.create({overrides: null});\n      var updatedConfig = installerStep7Controller._setOverrides(config, []);\n      expect(updatedConfig.get('overrides')).to.be.null;\n    });\n    it('no overrideToAdd', function () {\n      var isDefault = true,\n        name = 'n1',\n        config = Em.Object.create({overrides: null, name: name, flag: 'flag'}),\n        overrides = Em.A([\n          Em.Object.create({name: name, value: 'v1'}),\n          Em.Object.create({name: name, value: 'v2'}),\n          Em.Object.create({name: 'n2', value: 'v3'})\n        ]);\n      installerStep7Controller.reopen({\n        overrideToAdd: null,\n        selectedConfigGroup: Em.Object.create({\n          isDefault: isDefault\n        })\n      });\n      var updatedConfig = installerStep7Controller._setOverrides(config, overrides);\n      expect(updatedConfig.get('overrides.length')).to.equal(2);\n      expect(updatedConfig.get('overrides').everyProperty('isEditable', !isDefault)).to.equal(true);\n      expect(updatedConfig.get('overrides').everyProperty('parentSCP.flag', 'flag')).to.equal(true);\n    });\n    it('overrideToAdd exists', function () {\n      var isDefault = true,\n        name = 'n1',\n        config = Em.Object.create({overrides: null, name: name, flag: 'flag'}),\n        overrides = Em.A([\n          Em.Object.create({name: name, value: 'v1'}),\n          Em.Object.create({name: name, value: 'v2'}),\n          Em.Object.create({name: 'n2', value: 'v3'})\n        ]);\n      installerStep7Controller.reopen({\n        overrideToAdd: Em.Object.create({name: name}),\n        selectedService: {configGroups: [Em.Object.create({name: 'n', properties: []})]},\n        selectedConfigGroup: Em.Object.create({\n          isDefault: isDefault,\n          name: 'n'\n        })\n      });\n      var updatedConfig = installerStep7Controller._setOverrides(config, overrides);\n      expect(updatedConfig.get('overrides.length')).to.equal(3);\n      expect(updatedConfig.get('overrides').everyProperty('isEditable', !isDefault)).to.equal(true);\n      expect(updatedConfig.get('overrides').everyProperty('parentSCP.flag', 'flag')).to.equal(true);\n    });\n  });\n\n  describe('#switchConfigGroupConfigs', function () {\n    it('if selectedConfigGroup is null, serviceConfigs shouldn\\'t be changed', function () {\n      installerStep7Controller.reopen({\n        selectedConfigGroup: null,\n        content: {services: []},\n        serviceConfigs: {configs: [\n          {overrides: []},\n          {overrides: []}\n        ]}\n      });\n      installerStep7Controller.switchConfigGroupConfigs();\n      expect(installerStep7Controller.get('serviceConfigs.configs').everyProperty('overrides.length', 0)).to.equal(true);\n    });\n    it('should set configs for serviceConfigs', function () {\n      var configGroups = [\n        Em.Object.create({\n          properties: [\n            {name: 'g1', value: 'v1'},\n            {name: 'g2', value: 'v2'}\n          ]\n        })\n      ];\n      sinon.stub(installerStep7Controller, '_getDisplayedConfigGroups', function () {\n        return configGroups;\n      });\n      sinon.stub(installerStep7Controller, '_setEditableValue', function (config) {\n        config.set('isEditable', true);\n        return config;\n      });\n      installerStep7Controller.reopen({\n        selectedConfigGroup: Em.Object.create({isDefault: true, name: 'g1'}),\n        content: {services: []},\n        selectedService: {configs: Em.A([Em.Object.create({name: 'g1', overrides: [], properties: []}), Em.Object.create({name: 'g2', overrides: []})])},\n        serviceConfigs: {configs: [Em.Object.create({name: 'g1'})]}\n      });\n      installerStep7Controller.switchConfigGroupConfigs();\n      var configs = installerStep7Controller.get('selectedService.configs');\n      expect(configs.findProperty('name', 'g1').get('overrides').length).to.equal(1);\n      expect(configs.findProperty('name', 'g2').get('overrides').length).to.equal(1);\n      expect(configs.everyProperty('isEditable', true)).to.equal(true);\n      installerStep7Controller._getDisplayedConfigGroups.restore();\n      installerStep7Controller._setEditableValue.restore();\n    });\n  });\n\n  describe('#selectProperService', function () {\n    Em.A([\n        {\n          name: 'addServiceController',\n          stepConfigs: [\n            {selected: false, name: 'n1'},\n            {selected: true, name: 'n2'},\n            {selected: true, name: 'n3'}\n          ],\n          e: 'n2'\n        },\n        {\n          name: 'installerController',\n          stepConfigs: [\n            {showConfig: false, name: 'n1'},\n            {showConfig: false, name: 'n2'},\n            {showConfig: true, name: 'n3'}\n          ],\n          e: 'n3'\n        }\n      ]).forEach(function (test) {\n        it(test.name, function () {\n          sinon.stub(installerStep7Controller, 'selectedServiceObserver', Em.K);\n          installerStep7Controller.reopen({\n            wizardController: Em.Object.create({\n              name: test.name\n            }),\n            stepConfigs: test.stepConfigs\n          });\n          installerStep7Controller.selectProperService();\n          expect(installerStep7Controller.get('selectedService.name')).to.equal(test.e);\n          installerStep7Controller.selectedServiceObserver.restore();\n        });\n      });\n  });\n\n  describe('#setStepConfigs', function () {\n    beforeEach(function () {\n      installerStep7Controller.reopen({\n        content: {services: []},\n        wizardController: Em.Object.create({\n          getDBProperty: function (key) {\n            return this.get(key);\n          }\n        })\n      });\n    });\n    afterEach(function () {\n      App.config.renderConfigs.restore();\n    });\n    it('if wizard isn\\'t addService, should set output of App.config.renderConfigs', function () {\n      var serviceConfigs = Em.A([\n        {},\n        {}\n      ]);\n      sinon.stub(App.config, 'renderConfigs', function () {\n        return serviceConfigs;\n      });\n      installerStep7Controller.set('wizardController.name', 'installerController');\n      installerStep7Controller.setStepConfigs([], []);\n      expect(installerStep7Controller.get('stepConfigs')).to.eql(serviceConfigs);\n    });\n    it('addServiceWizard used', function () {\n      var serviceConfigs = Em.A([Em.Object.create({serviceName: 's1'}), Em.Object.create({serviceName: 's2'})]);\n      installerStep7Controller.set('wizardController.name', 'addServiceController');\n      installerStep7Controller.reopen({selectedServiceNames: ['s2']});\n      sinon.stub(App.config, 'renderConfigs', function () {\n        return serviceConfigs;\n      });\n      installerStep7Controller.setStepConfigs([], []);\n      expect(installerStep7Controller.get('stepConfigs').everyProperty('showConfig', true)).to.equal(true);\n      expect(installerStep7Controller.get('stepConfigs').findProperty('serviceName', 's2').get('selected')).to.equal(true);\n    });\n    it('addServiceWizard used, HA enabled', function () {\n      sinon.stub(App, 'get', function (k) {\n        if (k === 'isHaEnabled') {\n          return true;\n        }\n        return Em.get(App, k);\n      });\n      var serviceConfigs = Em.A([\n        Em.Object.create({\n          serviceName: 'HDFS',\n          configs: [\n            {category: 'SNameNode'},\n            {category: 'SNameNode'},\n            {category: 'NameNode'},\n            {category: 'NameNode'},\n            {category: 'SNameNode'}\n          ]\n        }),\n        Em.Object.create({serviceName: 's2'})]\n      );\n      installerStep7Controller.set('wizardController.name', 'addServiceController');\n      installerStep7Controller.reopen({selectedServiceNames: ['HDFS', 's2']});\n      sinon.stub(App.config, 'renderConfigs', function () {\n        return serviceConfigs;\n      });\n      installerStep7Controller.setStepConfigs([], []);\n      expect(installerStep7Controller.get('stepConfigs').everyProperty('showConfig', true)).to.equal(true);\n      expect(installerStep7Controller.get('stepConfigs').findProperty('serviceName', 'HDFS').get('selected')).to.equal(true);\n      expect(installerStep7Controller.get('stepConfigs').findProperty('serviceName', 'HDFS').get('configs').length).to.equal(2);\n      App.get.restore();\n    });\n  });\n\n  describe('#checkHostOverrideInstaller', function () {\n    beforeEach(function () {\n      sinon.stub(installerStep7Controller, 'loadConfigGroups', Em.K);\n      sinon.stub(installerStep7Controller, 'loadInstalledServicesConfigGroups', Em.K);\n    });\n    afterEach(function () {\n      installerStep7Controller.loadConfigGroups.restore();\n      installerStep7Controller.loadInstalledServicesConfigGroups.restore();\n      App.get.restore();\n    });\n    Em.A([\n        {\n          hostOverridesInstaller: false,\n          installedServiceNames: [],\n          m: 'hostOverridesInstaller is false, installedServiceNames is empty',\n          e: {\n            loadConfigGroups: false,\n            loadInstalledServicesConfigGroups: false\n          }\n        },\n        {\n          hostOverridesInstaller: false,\n          installedServiceNames: ['s1', 's2'],\n          m: 'hostOverridesInstaller is false, installedServiceNames is n\\'t empty',\n          e: {\n            loadConfigGroups: false,\n            loadInstalledServicesConfigGroups: false\n          }\n        },\n        {\n          hostOverridesInstaller: true,\n          installedServiceNames: [],\n          m: 'hostOverridesInstaller is true, installedServiceNames is empty',\n          e: {\n            loadConfigGroups: true,\n            loadInstalledServicesConfigGroups: false\n          }\n        },\n        {\n          hostOverridesInstaller: true,\n          installedServiceNames: ['s1', 's2', 's3'],\n          m: 'hostOverridesInstaller is true, installedServiceNames isn\\'t empty',\n          e: {\n            loadConfigGroups: true,\n            loadInstalledServicesConfigGroups: true\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          sinon.stub(App, 'get', function (k) {\n            if (k === 'supports.hostOverridesInstaller') return test.hostOverridesInstaller;\n            return Em.get(App, k);\n          });\n          installerStep7Controller.reopen({installedServiceNames: test.installedServiceNames});\n          installerStep7Controller.checkHostOverrideInstaller();\n          if (test.e.loadConfigGroups) {\n            expect(installerStep7Controller.loadConfigGroups.calledOnce).to.equal(true);\n          }\n          else {\n            expect(installerStep7Controller.loadConfigGroups.called).to.equal(false);\n          }\n          if (test.e.loadInstalledServicesConfigGroups) {\n            expect(installerStep7Controller.loadInstalledServicesConfigGroups.calledOnce).to.equal(true);\n          }\n          else {\n            expect(installerStep7Controller.loadInstalledServicesConfigGroups.called).to.equal(false);\n          }\n        });\n      });\n  });\n\n  describe('#loadStep', function () {\n    beforeEach(function () {\n      installerStep7Controller.reopen({\n        content: {services: []},\n        wizardController: Em.Object.create({\n          getDBProperty: function (k) {\n            return this.get(k);\n          }\n        })\n      });\n      sinon.stub(App.config, 'mergePreDefinedWithStored', Em.K);\n      sinon.stub(App.config, 'addAdvancedConfigs', Em.K);\n      sinon.stub(App.config, 'addCustomConfigs', Em.K);\n      sinon.stub(App.config, 'fileConfigsIntoTextarea', Em.K);\n      sinon.stub(installerStep7Controller, 'clearStep', Em.K);\n      sinon.stub(installerStep7Controller, 'getConfigTags', Em.K);\n      sinon.stub(installerStep7Controller, 'setInstalledServiceConfigs', Em.K);\n      sinon.stub(installerStep7Controller, 'resolveServiceDependencyConfigs', Em.K);\n      sinon.stub(installerStep7Controller, 'setStepConfigs', Em.K);\n      sinon.stub(installerStep7Controller, 'checkHostOverrideInstaller', Em.K);\n      sinon.stub(installerStep7Controller, 'activateSpecialConfigs', Em.K);\n      sinon.stub(installerStep7Controller, 'selectProperService', Em.K);\n      sinon.stub(App.router, 'send', Em.K);\n    });\n    afterEach(function () {\n      App.config.mergePreDefinedWithStored.restore();\n      App.config.addAdvancedConfigs.restore();\n      App.config.addCustomConfigs.restore();\n      App.config.fileConfigsIntoTextarea.restore();\n      installerStep7Controller.clearStep.restore();\n      installerStep7Controller.getConfigTags.restore();\n      installerStep7Controller.setInstalledServiceConfigs.restore();\n      installerStep7Controller.resolveServiceDependencyConfigs.restore();\n      installerStep7Controller.setStepConfigs.restore();\n      installerStep7Controller.checkHostOverrideInstaller.restore();\n      installerStep7Controller.activateSpecialConfigs.restore();\n      installerStep7Controller.selectProperService.restore();\n      App.router.send.restore();\n    });\n    it('should call clearStep', function () {\n      installerStep7Controller.loadStep();\n      expect(installerStep7Controller.clearStep.calledOnce).to.equal(true);\n    });\n    it('shouldn\\'t do nothing if isAdvancedConfigLoaded is false', function () {\n      installerStep7Controller.set('isAdvancedConfigLoaded', false);\n      installerStep7Controller.loadStep();\n      expect(installerStep7Controller.clearStep.called).to.equal(false);\n    });\n    it('should use App.config to map configs', function () {\n      installerStep7Controller.loadStep();\n      expect(App.config.mergePreDefinedWithStored.calledOnce).to.equal(true);\n      expect(App.config.addAdvancedConfigs.calledOnce).to.equal(true);\n      expect(App.config.addCustomConfigs.calledOnce).to.equal(true);\n    });\n    Em.A([\n        {\n          allSelectedServiceNames: ['YARN'],\n          capacitySchedulerUi: false,\n          e: true\n        },\n        {\n          allSelectedServiceNames: ['YARN'],\n          capacitySchedulerUi: true,\n          e: false\n        },\n        {\n          allSelectedServiceNames: ['HDFS'],\n          capacitySchedulerUi: false,\n          e: false\n        },\n        {\n          allSelectedServiceNames: ['HDFS'],\n          capacitySchedulerUi: true,\n          e: false\n        }\n      ]).forEach(function (test) {\n        it('allSelectedServiceNames = ' + JSON.stringify(test.allSelectedServiceNames) + ', capacitySchedulerUi = ' + test.capacitySchedulerUi.toString(), function () {\n          sinon.stub(App, 'get', function (k) {\n            if (k === 'supports.capacitySchedulerUi') return test.capacitySchedulerUi;\n            return Em.get(App, k);\n          });\n          installerStep7Controller.reopen({allSelectedServiceNames: test.allSelectedServiceNames});\n          installerStep7Controller.loadStep();\n          if (test.e) {\n            expect(App.config.fileConfigsIntoTextarea.calledOnce).to.equal(true);\n          }\n          else {\n            expect(App.config.fileConfigsIntoTextarea.called).to.equal(false);\n          }\n          App.get.restore();\n        });\n      });\n    it('should call getConfigTags, setInstalledServiceConfigs for addServiceController', function () {\n      installerStep7Controller.set('wizardController.name', 'addServiceController');\n      installerStep7Controller.loadStep();\n      expect(installerStep7Controller.getConfigTags.calledOnce).to.equal(true);\n      expect(installerStep7Controller.setInstalledServiceConfigs.calledOnce).to.equal(true);\n    });\n    Em.A([\n        {\n          allSelectedServiceNames: ['STORM'],\n          installedServiceNames: ['STORM'],\n          m: 'allSelectedServiceNames contains STORM, installedServiceNames contains STORM',\n          e: true\n        },\n        {\n          allSelectedServiceNames: [],\n          installedServiceNames: ['STORM'],\n          m: 'allSelectedServiceNames doesn\\'t contain STORM, installedServiceNames contains STORM',\n          e: true\n        },\n        {\n          allSelectedServiceNames: ['STORM'],\n          installedServiceNames: [],\n          m: 'allSelectedServiceNames contains STORM, installedServiceNames doesn\\'t contain STORM',\n          e: true\n        },\n        {\n          allSelectedServiceNames: [],\n          installedServiceNames: [],\n          m: 'allSelectedServiceNames doesn\\'t contain STORM, installedServiceNames doesn\\'t contain STORM',\n          e: false\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          installerStep7Controller.reopen({\n            allSelectedServiceNames: test.allSelectedServiceNames,\n            installedServiceNames: test.installedServiceNames\n          });\n          installerStep7Controller.loadStep();\n          if (test.e) {\n            expect(installerStep7Controller.resolveServiceDependencyConfigs.calledOnce).to.equal(true);\n          }\n          else {\n            expect(installerStep7Controller.resolveServiceDependencyConfigs.called).to.equal(false);\n          }\n        });\n      });\n    it('should call setStepConfigs', function () {\n      installerStep7Controller.loadStep();\n      expect(installerStep7Controller.setStepConfigs.calledOnce).to.equal(true);\n    });\n    it('should call checkHostOverrideInstaller', function () {\n      installerStep7Controller.loadStep();\n      expect(installerStep7Controller.checkHostOverrideInstaller.calledOnce).to.equal(true);\n    });\n    it('should call activateSpecialConfigs', function () {\n      installerStep7Controller.loadStep();\n      expect(installerStep7Controller.activateSpecialConfigs.calledOnce).to.equal(true);\n    });\n    it('should call selectProperService', function () {\n      installerStep7Controller.loadStep();\n      expect(installerStep7Controller.selectProperService.calledOnce).to.equal(true);\n    });\n    Em.A([\n        {\n          m: 'should skip config step',\n          skipConfigStep: true,\n          e: true\n        },\n        {\n          m: 'shouldn\\'t skip config step',\n          skipConfigStep: false,\n          e: false\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          installerStep7Controller.set('content.skipConfigStep', test.skipConfigStep);\n          installerStep7Controller.loadStep();\n          if (test.e) {\n            expect(App.router.send.calledWith('next')).to.equal(true);\n          }\n          else {\n            expect(App.router.send.called).to.equal(false);\n          }\n        });\n      });\n  });\n\n  describe('#_updateValueForCheckBoxConfig', function () {\n    Em.A([\n        {\n          v: 'true',\n          e: true\n        },\n        {\n          v: 'false',\n          e: false\n        }\n      ]).forEach(function (test) {\n        it(test.v, function () {\n          var serviceConfigProperty = Em.Object.create({value: test.v});\n          installerStep7Controller._updateValueForCheckBoxConfig(serviceConfigProperty);\n          expect(serviceConfigProperty.get('value')).to.equal(test.e);\n          expect(serviceConfigProperty.get('defaultValue')).to.equal(test.e);\n        });\n      });\n  });\n\n  describe('#_updateIsEditableFlagForConfig', function () {\n    Em.A([\n        {\n          isAdmin: false,\n          isReconfigurable: false,\n          isHostsConfigsPage: true,\n          defaultGroupSelected: false,\n          m: 'false for non-admin users',\n          e: false\n        },\n        {\n          isAdmin: true,\n          isReconfigurable: false,\n          isHostsConfigsPage: true,\n          defaultGroupSelected: false,\n          m: 'false if defaultGroupSelected is false and isHostsConfigsPage is true',\n          e: false\n        },\n        {\n          isAdmin: true,\n          isReconfigurable: false,\n          isHostsConfigsPage: true,\n          defaultGroupSelected: true,\n          m: 'false if defaultGroupSelected is true and isHostsConfigsPage is true',\n          e: false\n        },\n        {\n          isAdmin: true,\n          isReconfigurable: false,\n          isHostsConfigsPage: false,\n          defaultGroupSelected: false,\n          m: 'false if defaultGroupSelected is false and isHostsConfigsPage is false',\n          e: false\n        },\n        {\n          isAdmin: true,\n          isReconfigurable: true,\n          isHostsConfigsPage: false,\n          defaultGroupSelected: true,\n          m: 'equal to isReconfigurable if defaultGroupSelected is true and isHostsConfigsPage is false',\n          e: true\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          sinon.stub(App, 'get', function (k) {\n            if (k === 'isAdmin') return test.isAdmin;\n            return Em.get(App, k);\n          });\n          installerStep7Controller.reopen({isHostsConfigsPage: test.isHostsConfigsPage});\n          var serviceConfigProperty = Em.Object.create({\n            isReconfigurable: test.isReconfigurable\n          });\n          installerStep7Controller._updateIsEditableFlagForConfig(serviceConfigProperty, test.defaultGroupSelected);\n          App.get.restore();\n          expect(serviceConfigProperty.get('isEditable')).to.equal(test.e);\n        });\n      });\n  });\n\n  describe('#_updateOverridesForConfig', function () {\n\n    it('should set empty array', function () {\n      var serviceConfigProperty = Em.Object.create({\n        overrides: null\n      }), component = Em.Object.create();\n      installerStep7Controller._updateOverridesForConfig(serviceConfigProperty, component);\n      expect(serviceConfigProperty.get('overrides')).to.eql(Em.A([]));\n    });\n\n    it('host overrides not supported', function () {\n      var serviceConfigProperty = Em.Object.create({\n        overrides: [\n          {value: 'new value'}\n        ]\n      }), component = Em.Object.create({selectedConfigGroup: {isDefault: false}});\n      installerStep7Controller._updateOverridesForConfig(serviceConfigProperty, component);\n      expect(serviceConfigProperty.get('overrides').length).to.equal(1);\n      expect(serviceConfigProperty.get('overrides.firstObject.value')).to.equal('new value');\n      expect(serviceConfigProperty.get('overrides.firstObject.isOriginalSCP')).to.equal(false);\n      expect(serviceConfigProperty.get('overrides.firstObject.parentSCP')).to.eql(serviceConfigProperty);\n    });\n\n    it('host overrides supported', function () {\n      sinon.stub(App, 'get', function (k) {\n        if (k === 'supports.hostOverrides') return true;\n        return Em.get(App, k);\n      });\n      var serviceConfigProperty = Em.Object.create({\n          overrides: [\n            {value: 'new value', group: Em.Object.create({name: 'n1'})}\n          ]\n        }),\n        component = Em.Object.create({\n          selectedConfigGroup: {isDefault: true},\n          configGroups: Em.A([\n            Em.Object.create({name: 'n1', properties: []})\n          ])\n        });\n      installerStep7Controller._updateOverridesForConfig(serviceConfigProperty, component);\n      App.get.restore();\n      expect(serviceConfigProperty.get('overrides').length).to.equal(1);\n      expect(serviceConfigProperty.get('overrides.firstObject.value')).to.equal('new value');\n      expect(serviceConfigProperty.get('overrides.firstObject.isOriginalSCP')).to.equal(false);\n      expect(serviceConfigProperty.get('overrides.firstObject.parentSCP')).to.eql(serviceConfigProperty);\n      expect(component.get('configGroups.firstObject.properties').length).to.equal(1);\n      expect(component.get('configGroups.firstObject.properties.firstObject.isEditable')).to.equal(false);\n      expect(component.get('configGroups.firstObject.properties.firstObject.group')).to.be.object;\n    });\n\n  });\n\n  describe('#_updateValidatorsForConfig', function () {\n\n    it('should set isVisible to false', function () {\n      var serviceConfigProperty = Em.Object.create({serviceName: 's1', isVisible: true}),\n        component = Em.Object.create({serviceName: 's2'}),\n        serviceConfigsData = {};\n      installerStep7Controller._updateValidatorsForConfig(serviceConfigProperty, component, serviceConfigsData);\n      expect(serviceConfigProperty.get('isVisible')).to.equal(false);\n    });\n\n    it('should set serviceValidator', function () {\n      var serviceConfigProperty = Em.Object.create({serviceName: 's1', name: 'n1', serviceValidator: null}),\n        component = Em.Object.create({serviceName: 's1'}),\n        serviceConfigsData = {\n          configsValidator: Em.Object.create({\n            configValidators: {\n              n1: {},\n              n2: {}\n            }\n          })\n        };\n      installerStep7Controller._updateValidatorsForConfig(serviceConfigProperty, component, serviceConfigsData);\n      expect(serviceConfigProperty.get('serviceValidator')).to.be.object;\n      expect(Em.keys(serviceConfigProperty.get('serviceValidator.configValidators'))).to.eql(['n1', 'n2']);\n    });\n\n  });\n\n  describe('#getRecommendedDefaultsForComponent', function () {\n    beforeEach(function () {\n      sinon.stub(App.router, 'get', function (k) {\n        if (k === 'mainServiceInfoConfigsController') return Em.Object.create({\n          getInfoForDefaults: Em.K\n        });\n        return Em.get(App.router, k);\n      });\n    });\n    afterEach(function () {\n      App.router.get.restore();\n    });\n    it('should return empty object', function () {\n      var serviceConfigsData = [\n          {serviceName: 's1'}\n        ],\n        serviceName = 's1';\n      installerStep7Controller.reopen({serviceConfigsData: serviceConfigsData});\n      var r = installerStep7Controller._getRecommendedDefaultsForComponent(serviceName);\n      expect(r).to.eql({});\n    });\n\n    it('should return recommendedDefaults', function () {\n      var serviceConfigsData = [\n          {serviceName: 's1', defaultsProviders: [\n            {getDefaults: function () {\n              return {c1: 'v1', c2: 'v2'};\n            }},\n            {getDefaults: function () {\n              return {c3: 'v3', c4: 'v4'};\n            }}\n          ]}\n        ],\n        serviceName = 's1';\n      installerStep7Controller.reopen({serviceConfigsData: serviceConfigsData});\n      var r = installerStep7Controller._getRecommendedDefaultsForComponent(serviceName);\n      expect(r).to.eql({c1: 'v1', c2: 'v2', c3: 'v3', c4: 'v4'});\n    });\n\n  });\n\n  describe('#loadComponentConfigs', function () {\n\n    beforeEach(function () {\n      sinon.stub(installerStep7Controller, '_updateValidatorsForConfig', Em.K);\n      sinon.stub(installerStep7Controller, '_updateOverridesForConfig', Em.K);\n      sinon.stub(installerStep7Controller, '_updateIsEditableFlagForConfig', Em.K);\n    });\n\n    afterEach(function () {\n      installerStep7Controller._updateIsEditableFlagForConfig.restore();\n      installerStep7Controller._updateOverridesForConfig.restore();\n      installerStep7Controller._updateValidatorsForConfig.restore();\n    });\n\n    it('should set recommended defaults', function () {\n      var configs = [],\n        serviceConfigsData = [\n          {serviceName: 's1', configsValidator: Em.Object.create({recommendedDefaults: {}})}\n        ],\n        component = Em.Object.create({serviceName: 's1'}),\n        componentConfig = {},\n        recommendedDefaults = {c1: 'v1', c2: 'v2'};\n      installerStep7Controller.reopen({serviceConfigsData: serviceConfigsData});\n      sinon.stub(installerStep7Controller, '_getRecommendedDefaultsForComponent', function () {\n        return recommendedDefaults;\n      });\n      installerStep7Controller.loadComponentConfigs(configs, componentConfig, component);\n      installerStep7Controller._getRecommendedDefaultsForComponent.restore();\n      expect(installerStep7Controller.get('serviceConfigsData.firstObject.configsValidator.recommendedDefaults')).to.eql(recommendedDefaults);\n    });\n\n    it('should skip null configs', function () {\n      var configs = [null, null, null],\n        serviceConfigsData = [\n          {serviceName: 's1'}\n        ],\n        component = Em.Object.create({serviceName: 's1'}),\n        componentConfig = Em.Object.create({configs: []});\n      installerStep7Controller.reopen({serviceConfigsData: serviceConfigsData});\n      installerStep7Controller.loadComponentConfigs(configs, componentConfig, component);\n      expect(componentConfig.get('configs.length')).to.equal(0);\n    });\n\n    it('should update isOverridable flag', function () {\n      var configs = [Em.Object.create({validate: Em.K}), Em.Object.create({validate: Em.K})],\n        componentConfig = Em.Object.create({configs: []}),\n        serviceConfigsData = [\n          {serviceName: 's1'}\n        ],\n        component = Em.Object.create({serviceName: 's1'});\n      installerStep7Controller.reopen({serviceConfigsData: serviceConfigsData});\n      installerStep7Controller.loadComponentConfigs(configs, componentConfig, component);\n      expect(componentConfig.get('configs').getEach('isOverridable')).to.eql([true, true]);\n    });\n\n    it('should update value for checkboxes', function () {\n      var configs = [\n          Em.Object.create({displayType: 'checkbox', value: 'true', validate: Em.K}),\n          Em.Object.create({displayType: 'checkbox', value: 'false', validate: Em.K})\n        ],\n        componentConfig = Em.Object.create({configs: []}),\n        serviceConfigsData = [\n          {serviceName: 's1'}\n        ],\n        component = Em.Object.create({serviceName: 's1'});\n      installerStep7Controller.reopen({serviceConfigsData: serviceConfigsData});\n      installerStep7Controller.loadComponentConfigs(configs, componentConfig, component);\n      expect(componentConfig.get('configs').getEach('value')).to.eql([true, false]);\n      expect(componentConfig.get('configs').getEach('defaultValue')).to.eql([true, false]);\n    });\n\n  });\n\n  describe('#_createSiteToTagMap', function () {\n    it('should map sites', function () {\n      var desired_configs = {\n          s1: {tag: 't1'},\n          s2: {tag: 't1'},\n          s3: {tag: 't3'},\n          s4: {tag: 't1'},\n          s5: {tag: 't2'}\n        },\n        sites = ['s1', 's2', 's3'],\n        expected = {s1: 't1', s2: 't1', s3: 't3'};\n      var r = installerStep7Controller._createSiteToTagMap(desired_configs, sites);\n      expect(r).to.eql(expected);\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('utils/ajax/ajax_queue');\nrequire('controllers/main/admin/security');\nrequire('controllers/main/service/info/configs');\nrequire('controllers/wizard/step8_controller');\nvar installerStep8Controller, configurationController;\n\ndescribe('App.WizardStep8Controller', function () {\n\n  var configs = Em.A([\n    Em.Object.create({filename: 'hdfs-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'hdfs-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'hue-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'hue-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'mapred-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'mapred-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'yarn-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'yarn-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'capacity-scheduler.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'capacity-scheduler.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'mapred-queue-acls.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'mapred-queue-acls.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'hbase-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'hbase-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'oozie-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'oozie-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'hive-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'hive-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'pig-properties.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'webhcat-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'webhcat-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'tez-site.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'tez-site.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'falcon-startup.properties.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'falcon-startup.properties.xml', name: 'p2', value: 'v2'}),\n    Em.Object.create({filename: 'falcon-runtime.properties.xml', name: 'p1', value: 'v1'}),\n    Em.Object.create({filename: 'falcon-runtime.properties.xml', name: 'p2', value: 'v2'})\n  ]);\n\n  beforeEach(function () {\n    installerStep8Controller = App.WizardStep8Controller.create({\n      configs: configs\n    });\n    configurationController = App.MainServiceInfoConfigsController.create({});\n  });\n\n  var siteObjTests = Em.A([\n    {name: 'createHdfsSiteObj', e: {type: 'hdfs-site', tag: 'version1', l: 2}},\n    {name: 'createHueSiteObj', e: {type: 'hue-site', tag: 'version1', l: 2}},\n    {name: 'createMrSiteObj', e: {type: 'mapred-site', tag: 'version1', l: 2}},\n    {name: 'createYarnSiteObj', e: {type: 'yarn-site', tag: 'version1', l: 2}},\n    {name: 'createCapacityScheduler', e: {type: 'capacity-scheduler', tag: 'version1', l: 2}},\n    {name: 'createMapredQueueAcls', e: {type: 'mapred-queue-acls', tag: 'version1', l: 2}},\n    {name: 'createHbaseSiteObj', e: {type: 'hbase-site', tag: 'version1', l: 2}},\n    {name: 'createOozieSiteObj', e: {type: 'oozie-site', tag: 'version1', l: 2}},\n    {name: 'createHiveSiteObj', e: {type: 'hive-site', tag: 'version1', l: 2}},\n    {name: 'createWebHCatSiteObj', e: {type: 'webhcat-site', tag: 'version1', l: 2}},\n    {name: 'createTezSiteObj', e: {type: 'tez-site', tag: 'version1', l: 2}},\n    {name: 'createPigPropertiesSiteObj', e: {type: 'pig-properties', tag: 'version1', l: 1}},\n    {name: 'createFalconStartupSiteObj', e: {type: 'falcon-startup.properties', tag: 'version1', l: 2}},\n    {name: 'createFalconRuntimeSiteObj', e: {type: 'falcon-runtime.properties', tag: 'version1', l: 2}}\n  ]);\n\n  siteObjTests.forEach(function (test) {\n    describe('#' + test.name, function () {\n\n      it(test.name, function () {\n\n        var siteObj = installerStep8Controller.createSiteObj(test.e.type);\n        expect(siteObj.tag).to.equal(test.e.tag);\n        expect(Em.keys(siteObj.properties).length).to.equal(test.e.l);\n      });\n\n    });\n  });\n\n  describe('#createConfigurations', function () {\n\n    it('verify if its installerController', function () {\n      installerStep8Controller.set('content', {controllerName: 'installerController', services: Em.A([])});\n      installerStep8Controller.createConfigurations();\n      expect(installerStep8Controller.get('serviceConfigTags').length).to.equal(4);\n      installerStep8Controller.clearStep();\n    });\n\n    it('verify if its not installerController', function () {\n      installerStep8Controller.set('content', {controllerName: 'addServiceController', services: Em.A([])});\n      installerStep8Controller.createConfigurations();\n      expect(installerStep8Controller.get('serviceConfigTags').length).to.equal(2);\n      installerStep8Controller.clearStep();\n    });\n\n    it('verify not App.supports.capacitySchedulerUi', function () {\n      installerStep8Controller = App.WizardStep8Controller.create({\n        content: {controllerName: 'addServiceController', services: Em.A([\n          {isSelected: true, isInstalled: false, serviceName: 'MAPREDUCE'}\n        ])},\n        configs: configs\n      });\n      App.set('supports.capacitySchedulerUi', false);\n      installerStep8Controller.createConfigurations();\n      expect(installerStep8Controller.get('serviceConfigTags').length).to.equal(4);\n      installerStep8Controller.clearStep();\n    });\n\n    it('verify App.supports.capacitySchedulerUi', function () {\n      installerStep8Controller = App.WizardStep8Controller.create({\n        content: {controllerName: 'addServiceController', services: Em.A([\n          {isSelected: true, isInstalled: false, serviceName: 'MAPREDUCE'}\n        ])},\n        configs: configs\n      });\n      App.set('supports.capacitySchedulerUi', true);\n      installerStep8Controller.createConfigurations();\n      expect(installerStep8Controller.get('serviceConfigTags').length).to.equal(6);\n      installerStep8Controller.clearStep();\n    });\n\n\n    // e - without global and core!\n    var tests = Em.A([\n      {selectedServices: Em.A(['MAPREDUCE2']), e: 2},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN']), e: 5},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE']), e: 7},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE']), e: 9},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE']), e: 12},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT']), e: 13},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE']), e: 14},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG']), e: 16},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG', 'FALCON']), e: 18},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG', 'FALCON', 'STORM']), e: 19},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG', 'FALCON', 'STORM', 'TEZ']), e: 20},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG', 'FALCON', 'STORM', 'TEZ', 'ZOOKEEPER']), e: 22}\n\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.selectedServices.join(','), function () {\n        var services = test.selectedServices.map(function (serviceName) {\n          return Em.Object.create({isSelected: true, isInstalled: false, serviceName: serviceName});\n        });\n        installerStep8Controller = App.WizardStep8Controller.create({\n          content: {controllerName: 'addServiceController', services: services},\n          configs: configs\n        });\n        installerStep8Controller.createConfigurations();\n        expect(installerStep8Controller.get('serviceConfigTags').length).to.equal(test.e + 2);\n        installerStep8Controller.clearStep();\n      });\n    });\n\n    // Verify xml character escaping is not done for log4j files and falcon startup-properties and runtime-properties files.\n    it('escape xml character for installer wizard', function () {\n      var services = Em.A([Em.Object.create({isSelected: true, isInstalled: false, serviceName: 'OOZIE'}),\n        Em.Object.create({isSelected: true, isInstalled: false, serviceName: 'FALCON'})]);\n\n      var nonXmlConfigs = [\n        {filename: 'oozie-log4j.xml', name: 'p1', value: \"'.'v1\"},\n        {filename: 'falcon-startup.properties.xml', name: 'p1', value: \"'.'v1\"} ,\n        {filename: 'falcon-startup.properties.xml', name: 'p2', value: 'v2'},\n        {filename: 'falcon-runtime.properties.xml', name: 'p1', value: \"'.'v1\"},\n        {filename: 'falcon-runtime.properties.xml', name: 'p2', value: 'v2'}\n      ];\n      installerStep8Controller = App.WizardStep8Controller.create({\n        content: {controllerName: 'installerController', services: services},\n        configs: nonXmlConfigs\n      });\n      installerStep8Controller.createConfigurations();\n      var nonXmlConfigTypes = ['oozie-log4j', 'falcon-startup.properties', 'falcon-runtime.properties'];\n      nonXmlConfigTypes.forEach(function (_nonXmlConfigType) {\n        var nonXmlConfigTypeObj = installerStep8Controller.get('serviceConfigTags').findProperty('type', _nonXmlConfigType);\n        var nonXmlSitePropertyVal = nonXmlConfigTypeObj.properties['p1'];\n        expect(nonXmlSitePropertyVal).to.equal(\"'.'v1\");\n      });\n      installerStep8Controller.clearStep();\n    });\n\n  });\n\n  describe('#createSelectedServicesData', function () {\n\n    var tests = Em.A([\n      {selectedServices: Em.A(['MAPREDUCE2']), e: 2},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN']), e: 5},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE']), e: 7},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE']), e: 9},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE']), e: 12},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT']), e: 13},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE']), e: 14},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG']), e: 15},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG', 'FALCON']), e: 17},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG', 'FALCON', 'STORM']), e: 18},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG', 'FALCON', 'STORM', 'TEZ']), e: 19},\n      {selectedServices: Em.A(['MAPREDUCE2', 'YARN', 'HBASE', 'OOZIE', 'HIVE', 'WEBHCAT', 'HUE', 'PIG', 'FALCON', 'STORM', 'TEZ', 'ZOOKEEPER']), e: 21}\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.selectedServices.join(','), function () {\n        var services = test.selectedServices.map(function (serviceName) {\n          return Em.Object.create({isSelected: true, isInstalled: false, serviceName: serviceName});\n        });\n        installerStep8Controller = App.WizardStep8Controller.create({\n          content: {controllerName: 'addServiceController', services: services},\n          configs: configs\n        });\n        var serviceData = installerStep8Controller.createSelectedServicesData();\n        expect(serviceData.mapProperty('ServiceInfo.service_name')).to.eql(test.selectedServices.toArray());\n        installerStep8Controller.clearStep();\n      });\n    });\n\n  });\n\n  describe('#getRegisteredHosts', function () {\n\n    var tests = Em.A([\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'REGISTERED', name: 'h1'}),\n          h2: Em.Object.create({bootStatus: 'OTHER', name: 'h2'})\n        },\n        e: ['h1'],\n        m: 'Two hosts, one registered'\n      },\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'OTHER', name: 'h1'}),\n          h2: Em.Object.create({bootStatus: 'OTHER', name: 'h2'})\n        },\n        e: [],\n        m: 'Two hosts, zero registered'\n      },\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'REGISTERED', name: 'h1'}),\n          h2: Em.Object.create({bootStatus: 'REGISTERED', name: 'h2'})\n        },\n        e: ['h1', 'h2'],\n        m: 'Two hosts, two registered'\n      }\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        installerStep8Controller.set('content', Em.Object.create({hosts: test.hosts}));\n        var registeredHosts = installerStep8Controller.getRegisteredHosts();\n        expect(registeredHosts.mapProperty('hostName').toArray()).to.eql(test.e);\n      });\n    });\n\n  });\n\n  describe('#createRegisterHostData', function () {\n\n    var tests = Em.A([\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'REGISTERED', name: 'h1', isInstalled: false}),\n          h2: Em.Object.create({bootStatus: 'REGISTERED', name: 'h2', isInstalled: false})\n        },\n        e: ['h1', 'h2'],\n        m: 'two registered, two isInstalled false'\n      },\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'OTHER', name: 'h1', isInstalled: false}),\n          h2: Em.Object.create({bootStatus: 'REGISTERED', name: 'h2', isInstalled: false})\n        },\n        e: ['h2'],\n        m: 'one registered, two isInstalled false'\n      },\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'OTHER', name: 'h1', isInstalled: true}),\n          h2: Em.Object.create({bootStatus: 'REGISTERED', name: 'h2', isInstalled: false})\n        },\n        e: ['h2'],\n        m: 'one registered, one isInstalled false'\n      },\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'REGISTERED', name: 'h1', isInstalled: true}),\n          h2: Em.Object.create({bootStatus: 'REGISTERED', name: 'h2', isInstalled: false})\n        },\n        e: ['h2'],\n        m: 'two registered, one isInstalled false'\n      },\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'OTHER', name: 'h1', isInstalled: false}),\n          h2: Em.Object.create({bootStatus: 'OTHER', name: 'h2', isInstalled: false})\n        },\n        e: [],\n        m: 'zero registered, two isInstalled false'\n      },\n      {\n        hosts: {\n          h1: Em.Object.create({bootStatus: 'REGISTERED', name: 'h1', isInstalled: true}),\n          h2: Em.Object.create({bootStatus: 'REGISTERED', name: 'h2', isInstalled: true})\n        },\n        e: [],\n        m: 'two registered, zeto insInstalled false'\n      }\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        installerStep8Controller.set('content', Em.Object.create({hosts: test.hosts}));\n        var registeredHostData = installerStep8Controller.createRegisterHostData();\n        expect(registeredHostData.mapProperty('Hosts.host_name').toArray()).to.eql(test.e);\n      });\n    });\n\n  });\n\n  describe('#clusterName', function () {\n    it('should be equal to content.cluster.name', function () {\n      installerStep8Controller.set('content', {cluster: {name: 'new_name'}});\n      expect(installerStep8Controller.get('clusterName')).to.equal('new_name');\n    });\n  });\n\n  describe('#loadStep', function () {\n    beforeEach(function () {\n      sinon.stub(installerStep8Controller, 'clearStep', Em.K);\n      sinon.stub(installerStep8Controller, 'formatProperties', Em.K);\n      sinon.stub(installerStep8Controller, 'loadGlobals', Em.K);\n      sinon.stub(installerStep8Controller, 'loadConfigs', Em.K);\n      sinon.stub(installerStep8Controller, 'loadClusterInfo', Em.K);\n      sinon.stub(installerStep8Controller, 'loadServices', Em.K);\n      installerStep8Controller.set('content', {controllerName: 'installerController'});\n    });\n    afterEach(function () {\n      installerStep8Controller.clearStep.restore();\n      installerStep8Controller.formatProperties.restore();\n      installerStep8Controller.loadGlobals.restore();\n      installerStep8Controller.loadConfigs.restore();\n      installerStep8Controller.loadClusterInfo.restore();\n      installerStep8Controller.loadServices.restore();\n    });\n    it('should call clearStep', function () {\n      installerStep8Controller.loadStep();\n      expect(installerStep8Controller.clearStep.calledOnce).to.equal(true);\n    });\n    it('should call loadClusterInfo', function () {\n      installerStep8Controller.loadStep();\n      expect(installerStep8Controller.loadClusterInfo.calledOnce).to.equal(true);\n    });\n    it('should call loadServices', function () {\n      installerStep8Controller.loadStep();\n      expect(installerStep8Controller.loadServices.calledOnce).to.equal(true);\n    });\n    it('should call formatProperties if content.serviceConfigProperties is true', function () {\n      installerStep8Controller.set('content.serviceConfigProperties', true);\n      installerStep8Controller.loadStep();\n      expect(installerStep8Controller.loadServices.calledOnce).to.equal(true);\n    });\n    it('should call loadGlobals if content.serviceConfigProperties is true', function () {\n      installerStep8Controller.set('content.serviceConfigProperties', true);\n      installerStep8Controller.loadStep();\n      expect(installerStep8Controller.loadGlobals.calledOnce).to.equal(true);\n    });\n    it('should call loadConfigs if content.serviceConfigProperties is true', function () {\n      installerStep8Controller.set('content.serviceConfigProperties', true);\n      installerStep8Controller.loadStep();\n      expect(installerStep8Controller.loadConfigs.calledOnce).to.equal(true);\n    });\n    it('should set isSubmitDisabled to false', function () {\n      installerStep8Controller.loadStep();\n      expect(installerStep8Controller.get('isSubmitDisabled')).to.equal(false);\n    });\n    it('should set isBackBtnDisabled to false', function () {\n      installerStep8Controller.loadStep();\n      expect(installerStep8Controller.get('isBackBtnDisabled')).to.equal(false);\n    });\n    it('should call setSecurityStatus for non-installerController', function () {\n      var obj = Em.Object.create({\n        setSecurityStatus: Em.K\n      });\n      sinon.stub(App.router, 'get', function () {\n        return obj;\n      });\n      sinon.spy(obj, 'setSecurityStatus');\n      installerStep8Controller.set('content.controllerName', 'addServiceController');\n      installerStep8Controller.loadStep();\n      expect(obj.setSecurityStatus.calledOnce).to.equal(true);\n      obj.setSecurityStatus.restore();\n      App.router.get.restore();\n\n    });\n  });\n\n  describe('#loadGlobals', function () {\n    beforeEach(function () {\n      sinon.stub(installerStep8Controller, 'removeHiveConfigs', function (o) {\n        return o;\n      });\n      sinon.stub(installerStep8Controller, 'removeOozieConfigs', function (o) {\n        return o;\n      });\n    });\n    afterEach(function () {\n      installerStep8Controller.removeHiveConfigs.restore();\n      installerStep8Controller.removeOozieConfigs.restore();\n    });\n    Em.A([\n        {\n          configs: [],\n          m: 'empty configs, removeHiveConfigs isn\\'t called, removeOozieConfigs ins\\'t called',\n          e: {\n            globals: [],\n            removeHiveConfigs: false,\n            removeOozieConfigs: false\n          }\n        },\n        {\n          configs: [\n            Em.Object.create({id: 'puppet var', name: 'n1'})\n          ],\n          m: 'not empty configs, removeHiveConfigs isn\\'t called, removeOozieConfigs ins\\'t called',\n          e: {\n            globals: ['n1'],\n            removeHiveConfigs: false,\n            removeOozieConfigs: false\n          }\n        },\n        {\n          configs: [\n            Em.Object.create({id: 'puppet var', name: 'n1'}),\n            Em.Object.create({id: 'puppet var', name: 'hive_database'})\n          ],\n          m: 'not empty configs, removeHiveConfigs called, removeOozieConfigs ins\\'t called',\n          e: {\n            globals: ['n1', 'hive_database'],\n            removeHiveConfigs: true,\n            removeOozieConfigs: false\n          }\n        },\n        {\n          configs: [\n            Em.Object.create({id: 'puppet var', name: 'n1'}),\n            Em.Object.create({id: 'puppet var', name: 'oozie_database'})\n          ],\n          m: 'not empty configs, removeHiveConfigs isn\\'t called, removeOozieConfigs called',\n          e: {\n            globals: ['n1', 'oozie_database'],\n            removeHiveConfigs: false,\n            removeOozieConfigs: true\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          installerStep8Controller.set('content', {serviceConfigProperties: test.configs});\n          installerStep8Controller.loadGlobals();\n          if (test.e.removeHiveConfigs) {\n            expect(installerStep8Controller.removeHiveConfigs.calledOnce).to.equal(true);\n          }\n          else {\n            expect(installerStep8Controller.removeHiveConfigs.called).to.equal(false);\n          }\n          if (test.e.removeOozieConfigs) {\n            expect(installerStep8Controller.removeOozieConfigs.calledOnce).to.equal(true);\n          }\n          else {\n            expect(installerStep8Controller.removeOozieConfigs.called).to.equal(false);\n          }\n          expect(installerStep8Controller.get('globals').mapProperty('name')).to.eql(test.e.globals);\n        });\n      });\n  });\n\n  describe('#removeHiveConfigs', function () {\n    Em.A([\n        {\n          globals: [\n            {name: 'hive_database', value: 'New MySQL Database'},\n            {name: 'hive_ambari_host', value: 'h1'},\n            {name: 'hive_hostname', value: 'h2'}\n          ],\n          removed: Em.A(['hive_existing_mysql_host', 'hive_existing_mysql_database', 'hive_existing_oracle_host',\n            'hive_existing_oracle_database', 'hive_existing_postgresql_host', 'hive_existing_postgresql_database']),\n          hive_database_type: 'mysql',\n          m: 'hive_database: New MySQL Database',\n          host: 'h1'\n        },\n        {\n          globals: [\n            {name: 'hive_database', value: 'Existing MySQL Database'},\n            {name: 'hive_existing_mysql_host', value: 'h1'},\n            {name: 'hive_hostname', value: 'h2'}\n          ],\n          removed: Em.A(['hive_ambari_host', 'hive_ambari_database', 'hive_existing_oracle_host',\n            'hive_existing_oracle_database', 'hive_existing_postgresql_host', 'hive_existing_postgresql_database']),\n          hive_database_type: 'mysql',\n          m: 'hive_database: Existing MySQL Database',\n          host: 'h1'\n        },\n        {\n          globals: [\n            {name: 'hive_database', value: 'Existing PostgreSQL Database'},\n            {name: 'hive_existing_postgresql_host', value: 'h1'},\n            {name: 'hive_hostname', value: 'h2'}\n          ],\n          removed: Em.A(['hive_ambari_host', 'hive_ambari_database', 'hive_existing_oracle_host',\n            'hive_existing_oracle_database', 'hive_existing_mysql_host', 'hive_existing_mysql_database']),\n          hive_database_type: 'postgres',\n          m: 'hive_database: Existing PostgreSQL Database',\n          host: 'h1'\n        },\n        {\n          globals: [\n            {name: 'hive_database', value: 'Existing Oracle Database'},\n            {name: 'hive_existing_oracle_host', value: 'h1'},\n            {name: 'hive_hostname', value: 'h2'}\n          ],\n          removed: Em.A(['hive_ambari_host', 'hive_ambari_database', 'hive_existing_mysql_host',\n            'hive_existing_mysql_database', 'hive_existing_postgresql_host', 'hive_existing_postgresql_database']),\n          hive_database_type: 'oracle',\n          m: 'hive_database: Existing Oracle Database',\n          host: 'h1'\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          test.removed.forEach(function (c) {\n            test.globals.pushObject({name: c})\n          });\n          var configs = installerStep8Controller.removeHiveConfigs(test.globals);\n          test.removed.forEach(function(name) {\n            expect(Em.isNone(configs.findProperty('name', name))).to.equal(true);\n          });\n          expect(configs.findProperty('name', 'hive_database_type').value).to.equal(test.hive_database_type);\n          expect(configs.findProperty('name', 'hive_hostname').value).to.equal(test.host);\n        });\n      });\n  });\n\n  describe('#removeOozieConfigs', function () {\n    Em.A([\n        {\n          globals: [\n            {name: 'oozie_database', value: 'New Derby Database'},\n            {name: 'oozie_ambari_host', value: 'h1'},\n            {name: 'oozie_hostname', value: 'h2'}\n          ],\n          removed: Em.A(['oozie_ambari_host', 'oozie_ambari_database', 'oozie_existing_mysql_host',\n            'oozie_existing_mysql_database', 'oozie_existing_oracle_host', 'oozie_existing_oracle_database',\n            'oozie_existing_postgresql_host', 'oozie_existing_postgresql_database']),\n          oozie_database_type: 'derby',\n          m: 'oozie_database: New Derby Database',\n          host: 'h1'\n        },\n        {\n          globals: [\n            {name: 'oozie_database', value: 'Existing MySQL Database'},\n            {name: 'oozie_existing_mysql_host', value: 'h1'},\n            {name: 'oozie_hostname', value: 'h2'}\n          ],\n          removed: Em.A(['oozie_ambari_host', 'oozie_ambari_database', 'oozie_existing_oracle_host',\n            'oozie_existing_oracle_database', 'oozie_derby_database', 'oozie_existing_postgresql_host', 'oozie_existing_postgresql_database']),\n          oozie_database_type: 'mysql',\n          m: 'oozie_database: Existing MySQL Database',\n          host: 'h1'\n        },\n        {\n          globals: [\n            {name: 'oozie_database', value: 'Existing PostgreSQL Database'},\n            {name: 'oozie_existing_postgresql_host', value: 'h1'},\n            {name: 'oozie_hostname', value: 'h2'}\n          ],\n          removed: Em.A(['oozie_ambari_host', 'oozie_ambari_database', 'oozie_existing_oracle_host',\n            'oozie_existing_oracle_database', 'oozie_existing_mysql_host', 'oozie_existing_mysql_database']),\n          oozie_database_type: 'postgresql',\n          m: 'oozie_database: Existing PostgreSQL Database',\n          host: 'h1'\n        },\n        {\n          globals: [\n            {name: 'oozie_database', value: 'Existing Oracle Database'},\n            {name: 'oozie_existing_oracle_host', value: 'h1'},\n            {name: 'oozie_hostname', value: 'h2'}\n          ],\n          removed: Em.A(['oozie_ambari_host', 'oozie_ambari_database', 'oozie_existing_mysql_host',\n            'oozie_existing_mysql_database', 'oozie_derby_database', 'oozie_existing_postgresql_host', 'oozie_existing_postgresql_database']),\n          oozie_database_type: 'oracle',\n          m: 'oozie_database: Existing Oracle Database',\n          host: 'h1'\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          test.removed.forEach(function (c) {\n            if (!test.globals.findProperty('name', c)) {\n              test.globals.pushObject({name: c})\n            }\n          });\n          var configs = installerStep8Controller.removeOozieConfigs(test.globals);\n          test.removed.forEach(function(name) {\n            expect(Em.isNone(configs.findProperty('name', name))).to.equal(true);\n          });\n          expect(configs.findProperty('name', 'oozie_database_type').value).to.equal(test.oozie_database_type);\n          expect(configs.findProperty('name', 'oozie_hostname').value).to.equal(test.host);\n        });\n      });\n  });\n\n  describe('#getRegisteredHosts', function() {\n    Em.A([\n        {\n          hosts: {},\n          m: 'no content.hosts',\n          e: []\n        },\n        {\n          hosts: {\n            h1:{bootStatus: ''},\n            h2:{bootStatus: ''}\n          },\n          m: 'no registered hosts',\n          e: []\n        },\n        {\n          hosts: {\n            h1:{bootStatus: 'REGISTERED', hostName: '', name: 'n1'},\n            h2:{bootStatus: 'REGISTERED', hostName: '', name: 'n2'}\n          },\n          m: 'registered hosts available',\n          e: ['n1', 'n2']\n        }\n      ]).forEach(function(test) {\n        it(test.m, function() {\n          installerStep8Controller.set('content', {hosts: test.hosts});\n          var hosts = installerStep8Controller.getRegisteredHosts();\n          expect(hosts.mapProperty('hostName')).to.eql(test.e);\n        });\n    });\n  });\n\n  describe('#loadRepoInfo', function() {\n    it('should use App.currentStackVersion', function() {\n      var version = 'HDP-1.1.1';\n      sinon.stub(App, 'get', function() {return version;});\n      sinon.stub(App.ajax, 'send', Em.K);\n      installerStep8Controller.loadRepoInfo();\n      var data = App.ajax.send.args[0][0].data;\n      expect(data).to.eql({stackName: 'HDP', stackVersion: '1.1.1'});\n      App.ajax.send.restore();\n      App.get.restore();\n    });\n  });\n\n  describe('#loadRepoInfoSuccessCallback', function () {\n    beforeEach(function () {\n      installerStep8Controller.set('clusterInfo', Em.Object.create({}));\n    });\n    Em.A([\n        {\n          items: [],\n          m: 'no data',\n          e: {\n            base_url: [],\n            os_type: []\n          }\n        },\n        {\n          items: [\n            {\n              repositories: [\n                {\n                  Repositories: {\n                    os_type: 'bulgenos',\n                    base_url: 'url1'\n                  }\n                }\n              ]\n            }\n          ],\n          m: 'unsupported os',\n          e: {\n            base_url: [],\n            os_type: []\n          }\n        },\n        {\n          items: [\n            {\n              repositories: [\n                {\n                  Repositories: {\n                    os_type: 'redhat5',\n                    base_url: 'url1'\n                  }\n                }\n              ]\n            }\n          ],\n          m: 'only redhat5',\n          e: {\n            base_url: ['url1'],\n            os_type: [Em.I18n.t(\"installer.step8.repoInfo.osType.redhat5\")]\n          }\n        },\n        {\n          items: [\n            {\n              repositories: [\n                {\n                  Repositories: {\n                    os_type: 'redhat5',\n                    base_url: 'url1'\n                  }\n                }\n              ]\n            },\n            {\n              repositories: [\n                {\n                  Repositories: {\n                    os_type: 'redhat6',\n                    base_url: 'url2'\n                  }\n                }\n              ]\n            }\n          ],\n          m: 'redhat5, redhat6',\n          e: {\n            base_url: ['url1', 'url2'],\n            os_type: [Em.I18n.t(\"installer.step8.repoInfo.osType.redhat5\"), Em.I18n.t(\"installer.step8.repoInfo.osType.redhat6\")]\n          }\n        },\n        {\n          items: [\n            {\n              repositories: [\n                {\n                  Repositories: {\n                    os_type: 'redhat5',\n                    base_url: 'url1'\n                  }\n                }\n              ]\n            },\n            {\n              repositories: [\n                {\n                  Repositories: {\n                    os_type: 'redhat6',\n                    base_url: 'url2'\n                  }\n                }\n              ]\n            },\n            {\n              repositories: [\n                {\n                  Repositories: {\n                    os_type: 'sles11',\n                    base_url: 'url3'\n                  }\n                }\n              ]\n            }\n          ],\n          m: 'redhat5, redhat6, sles11',\n          e: {\n            base_url: ['url1', 'url2', 'url3'],\n            os_type: [Em.I18n.t(\"installer.step8.repoInfo.osType.redhat5\"), Em.I18n.t(\"installer.step8.repoInfo.osType.redhat6\"), Em.I18n.t(\"installer.step8.repoInfo.osType.sles11\")]\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          installerStep8Controller.loadRepoInfoSuccessCallback({items: test.items});\n          expect(installerStep8Controller.get('clusterInfo.repoInfo').mapProperty('base_url')).to.eql(test.e.base_url);\n          expect(installerStep8Controller.get('clusterInfo.repoInfo').mapProperty('os_type')).to.eql(test.e.os_type);\n        });\n      });\n  });\n\n  describe('#loadRepoInfoErrorCallback', function() {\n    it('should set [] to repoInfo', function() {\n      installerStep8Controller.set('clusterInfo', Em.Object.create({repoInfo: [{}, {}]}));\n      installerStep8Controller.loadRepoInfoErrorCallback({});\n      expect(installerStep8Controller.get('clusterInfo.repoInfo.length')).to.eql(0);\n    });\n  });\n\n  describe('#loadHiveDbValue', function() {\n    beforeEach(function() {\n      installerStep8Controller.set('wizardController', Em.Object.create({\n        getDBProperty: Em.K\n      }));\n    });\n    Em.A([\n        {\n          serviceConfigProperties: [\n            {name: 'hive_database', value: 'New MySQL Database'}\n          ],\n          m: 'New MySQL Database',\n          e: 'MySQL (New Database)'\n        },\n        {\n          serviceConfigProperties: [\n            {name: 'hive_database', value: 'Existing MySQL Database'},\n            {name: 'hive_existing_mysql_database', value: 'dbname'}\n          ],\n          m: 'Existing MySQL Database',\n          e: 'dbname (Existing MySQL Database)'\n        },\n        {\n          serviceConfigProperties: [\n            {name: 'hive_database', value: 'Existing PostgreSQL Database'},\n            {name: 'hive_existing_postgresql_database', value: 'dbname'}\n          ],\n          m: 'Existing PostgreSQL Database',\n          e: 'dbname (Existing PostgreSQL Database)'\n        },\n        {\n          serviceConfigProperties: [\n            {name: 'hive_database', value: 'Existing Oracle Database'},\n            {name: 'hive_existing_oracle_database', value: 'dbname'}\n          ],\n          m: 'Existing Oracle Database',\n          e: 'dbname (Existing Oracle Database)'\n        }\n      ]).forEach(function(test) {\n        it(test.m, function() {\n          sinon.stub(installerStep8Controller.get('wizardController'), 'getDBProperty', function() {\n            return test.serviceConfigProperties;\n          });\n          var dbComponent = Em.Object.create({});\n          installerStep8Controller.loadHiveDbValue(dbComponent);\n          expect(dbComponent.get('component_value')).to.equal(test.e);\n          installerStep8Controller.get('wizardController').getDBProperty.restore();\n        });\n    });\n  });\n\n  describe('#loadHbaseMasterValue', function () {\n    Em.A([\n        {\n          masterComponentHosts: [{component: 'HBASE_MASTER', hostName: 'h1'}],\n          component: Em.Object.create({component_name: 'HBASE_MASTER'}),\n          m: 'one host',\n          e: 'h1'\n        },\n        {\n          masterComponentHosts: [{component: 'HBASE_MASTER', hostName: 'h1'}, {component: 'HBASE_MASTER', hostName: 'h2'}, {component: 'HBASE_MASTER', hostName: 'h3'}],\n          component: Em.Object.create({component_name: 'HBASE_MASTER'}),\n          m: 'many hosts',\n          e: 'h1 ' + Em.I18n.t('installer.step8.other').format(2)\n        }\n      ]).forEach(function (test) {\n        it(test.m, function() {\n          installerStep8Controller.set('content', {masterComponentHosts: test.masterComponentHosts});\n          installerStep8Controller.loadHbaseMasterValue(test.component);\n          expect(test.component.component_value).to.equal(test.e);\n        });\n      });\n  });\n\n  describe('#loadZkServerValue', function() {\n    Em.A([\n        {\n          masterComponentHosts: [{component: 'ZOOKEEPER_SERVER'}],\n          component: Em.Object.create({component_name: 'ZOOKEEPER_SERVER'}),\n          m: '1 host',\n          e: '1 host'\n        },\n        {\n          masterComponentHosts: [{component: 'ZOOKEEPER_SERVER'},{component: 'ZOOKEEPER_SERVER'},{component: 'ZOOKEEPER_SERVER'}],\n          component: Em.Object.create({component_name: 'ZOOKEEPER_SERVER'}),\n          m: 'many hosts',\n          e: '3 hosts'\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          installerStep8Controller.set('content', {masterComponentHosts: test.masterComponentHosts});\n          installerStep8Controller.loadZkServerValue(test.component);\n          expect(test.component.component_value).to.equal(test.e);\n        });\n      });\n  });\n\n  describe('#loadOozieDbValue', function() {\n    beforeEach(function() {\n      installerStep8Controller.set('wizardController', Em.Object.create({\n        getDBProperty: Em.K\n      }));\n    });\n    Em.A([\n        {\n          serviceConfigProperties: [\n            {name: 'oozie_database', value: 'New Derby Database'},\n            {name: 'oozie_derby_database', value: 'dbname'}\n          ],\n          m: 'New Derby Database',\n          e: 'dbname (New Derby Database)'\n        },\n        {\n          serviceConfigProperties: [\n            {name: 'oozie_database', value: 'Existing MySQL Database'},\n            {name: 'oozie_existing_mysql_database', value: 'dbname'}\n          ],\n          m: 'Existing MySQL Database',\n          e: 'dbname (Existing MySQL Database)'\n        },\n        {\n          serviceConfigProperties: [\n            {name: 'oozie_database', value: 'Existing PostgreSQL Database'},\n            {name: 'oozie_existing_postgresql_database', value: 'dbname'}\n          ],\n          m: 'Existing PostgreSQL Database',\n          e: 'dbname (Existing PostgreSQL Database)'\n        },\n        {\n          serviceConfigProperties: [\n            {name: 'oozie_database', value: 'Existing Oracle Database'},\n            {name: 'oozie_existing_oracle_database', value: 'dbname'}\n          ],\n          m: 'Existing Oracle Database',\n          e: 'dbname (Existing Oracle Database)'\n        }\n      ]).forEach(function(test) {\n        it(test.m, function() {\n          sinon.stub(installerStep8Controller.get('wizardController'), 'getDBProperty', function() {\n            return test.serviceConfigProperties;\n          });\n          var dbComponent = Em.Object.create({});\n          installerStep8Controller.loadOozieDbValue(dbComponent);\n          expect(dbComponent.get('component_value')).to.equal(test.e);\n          installerStep8Controller.get('wizardController').getDBProperty.restore();\n        });\n      });\n  });\n\n  describe('#loadNagiosAdminValue', function() {\n    it('should use serviceConfigProperties nagios_web_login and nagios_contact', function() {\n      installerStep8Controller.set('content', {\n        serviceConfigProperties: [\n          {name: 'nagios_web_login', value: 'admin'},\n          {name: 'nagios_contact', value: 'admin@admin.com'}\n        ]\n      });\n      var nagiosAdmin = Em.Object.create({\n        component_value: ''\n      });\n      installerStep8Controller.loadNagiosAdminValue(nagiosAdmin);\n      expect(nagiosAdmin.get('component_value')).to.equal('admin / (admin@admin.com)');\n    });\n  });\n\n  describe('#submit', function() {\n    beforeEach(function() {\n      sinon.stub(installerStep8Controller, 'submitProceed', Em.K);\n      sinon.spy(App, 'showConfirmationPopup');\n    });\n    afterEach(function() {\n      installerStep8Controller.submitProceed.restore();\n      App.showConfirmationPopup.restore();\n    });\n    Em.A([\n        {\n          controllerName: 'addHostController',\n          securityEnabled: true,\n          e: true\n        },\n        {\n          controllerName: 'addHostController',\n          securityEnabled: false,\n          e: false\n        },\n        {\n          controllerName: 'addServiceController',\n          securityEnabled: true,\n          e: false\n        },\n        {\n          controllerName: 'addServiceController',\n          securityEnabled: false,\n          e: false\n        }\n      ]).forEach(function (test) {\n        it(test.controllerName + ' ' + test.securityEnabled.toString(), function () {\n          installerStep8Controller.reopen({isSubmitDisabled: false, securityEnabled: test.securityEnabled, content: {controllerName: test.controllerName}});\n          installerStep8Controller.submit();\n          if (test.e) {\n            expect(App.showConfirmationPopup.calledOnce).to.equal(true);\n            expect(installerStep8Controller.submitProceed.called).to.equal(false);\n          }\n          else {\n            expect(App.showConfirmationPopup.called).to.equal(false);\n            expect(installerStep8Controller.submitProceed.calledOnce).to.equal(true);\n          }\n        });\n      });\n    it('should call submitProceed when Ok clicked', function() {\n      installerStep8Controller.reopen({isSubmitDisabled: false, securityEnabled: true, content: {controllerName: 'addHostController'}});\n      installerStep8Controller.submit().onPrimary();\n      expect(installerStep8Controller.submitProceed.calledOnce).to.equal(true);\n    });\n    it('shouldn\\'t do nothing if isSubmitDisabled is true', function() {\n      installerStep8Controller.reopen({isSubmitDisabled: true});\n      installerStep8Controller.submit();\n      expect(App.showConfirmationPopup.called).to.equal(false);\n      expect(installerStep8Controller.submitProceed.called).to.equal(false);\n    });\n  });\n\n  describe('#getExistingClusterNamesSuccessCallBack', function() {\n    it('should set clusterNames received from server', function() {\n      var data = {\n        items:[\n          {Clusters: {cluster_name: 'c1'}},\n          {Clusters: {cluster_name: 'c2'}},\n          {Clusters: {cluster_name: 'c3'}}\n        ]\n      },\n      clasterNames = ['c1','c2','c3'];\n      installerStep8Controller.getExistingClusterNamesSuccessCallBack(data);\n      expect(installerStep8Controller.get('clusterNames')).to.eql(clasterNames);\n    });\n  });\n\n  describe('#getExistingClusterNamesErrorCallback', function() {\n    it('should set [] to clusterNames', function() {\n      installerStep8Controller.set('clusterNames', ['c1', 'c2']);\n      installerStep8Controller.getExistingClusterNamesErrorCallback();\n      expect(installerStep8Controller.get('clusterNames')).to.eql([]);\n    });\n  });\n\n  describe('#deleteClusters', function() {\n    it('should call App.ajax.send for each provided clusterName', function() {\n      sinon.stub(App.ajax, 'send', Em.K);\n      var clusterNames = ['h1', 'h2', 'h3'];\n      installerStep8Controller.deleteClusters(clusterNames);\n      expect(App.ajax.send.callCount).to.equal(clusterNames.length);\n      clusterNames.forEach(function(n, i) {\n        expect(App.ajax.send.getCall(i).args[0].data).to.eql({name: n});\n      });\n      App.ajax.send.restore();\n    });\n  });\n\n  describe('#createSelectedServicesData', function() {\n    it('should reformat provided data', function() {\n      var selectedServices = [\n        Em.Object.create({serviceName: 's1'}),\n        Em.Object.create({serviceName: 's2'}),\n        Em.Object.create({serviceName: 's3'})\n      ];\n      var expected = [\n        {\"ServiceInfo\": { \"service_name\": 's1' }},\n        {\"ServiceInfo\": { \"service_name\": 's2' }},\n        {\"ServiceInfo\": { \"service_name\": 's3' }}\n      ];\n      installerStep8Controller.reopen({selectedServices: selectedServices});\n      var createdData = installerStep8Controller.createSelectedServicesData();\n      expect(createdData).to.eql(expected);\n    });\n  });\n\n  describe('#createRegisterHostData', function() {\n    it('should return empty data if no hosts', function() {\n      sinon.stub(installerStep8Controller, 'getRegisteredHosts', function() {return [];});\n      expect(installerStep8Controller.createRegisterHostData()).to.eql([]);\n      installerStep8Controller.getRegisteredHosts.restore();\n    });\n    it('should return computed data', function() {\n      var data = [\n        {isInstalled: false, hostName: 'h1'},\n        {isInstalled: true, hostName: 'h2'},\n        {isInstalled: false, hostName: 'h3'}\n      ];\n      var expected = [\n        {\"Hosts\": { \"host_name\": 'h1'}},\n        {\"Hosts\": { \"host_name\": 'h3'}}\n      ];\n      sinon.stub(installerStep8Controller, 'getRegisteredHosts', function() {return data;});\n      expect(installerStep8Controller.createRegisterHostData()).to.eql(expected);\n      installerStep8Controller.getRegisteredHosts.restore();\n    });\n  });\n\n  describe('#createZooCfgObj', function() {\n    it('should affect zoo.cfg properties', function() {\n      var configs = [\n          {filename: 'zoo.cfg', value: 'a&amp;b', name: 'p1'},\n          {filename: 'zoo.cfg', value: 'a&lt;b', name: 'p2'},\n          {filename: 'zoo.cfg', value: 'a&gt;b', name: 'p3'},\n          {filename: 'zoo.cfg', value: 'a&quot;b', name: 'p4'},\n          {filename: 'zoo.cfg', value: 'a&apos;b', name: 'p5'}\n        ],\n        expected = {\n          type: 'zoo.cfg',\n          tag: 'version1',\n          properties: {\n            p1: 'a&b',\n            p2: 'a<b',\n            p3: 'a>b',\n            p4: 'a\"b',\n            p5: 'a\\'b'\n          }\n        };\n      installerStep8Controller.reopen({configs: configs});\n      expect(installerStep8Controller.createZooCfgObj()).to.eql(expected);\n    });\n  });\n\n  describe('#createStormSiteObj', function() {\n    it('should remove quotes for some properties', function() {\n      var configs = [\n          {filename: 'storm-site.xml', value: [\"a\", \"b\"], name: 'nimbus.childopts'},\n          {filename: 'storm-site.xml', value: [\"a\", \"b\"], name: 'supervisor.childopts'},\n          {filename: 'storm-site.xml', value: [\"a\", \"b\"], name: 'worker.childopts'}\n        ],\n        expected = {\n          type: 'storm-site',\n          tag: 'version1',\n          properties: {\n            'nimbus.childopts': '[a,b]',\n            'supervisor.childopts': '[a,b]',\n            'worker.childopts': '[a,b]'\n          }\n        };\n      installerStep8Controller.reopen({configs: configs});\n      expect(installerStep8Controller.createStormSiteObj()).to.eql(expected);\n    });\n    it('should replace quote \\'\"\\' to \"\\'\" for some properties', function() {\n      var configs = [\n          {filename: 'storm-site.xml', value: [\"a\", \"b\"], name: 'storm.zookeeper.servers'}\n        ],\n        expected = {\n          type: 'storm-site',\n          tag: 'version1',\n          properties: {\n            'storm.zookeeper.servers': '[\\'a\\',\\'b\\']'\n          }\n        };\n      installerStep8Controller.reopen({configs: configs});\n      expect(installerStep8Controller.createStormSiteObj()).to.eql(expected);\n    });\n    it('should affect storm-site.xml properties', function() {\n      var configs = [\n          {filename: 'storm-site.xml', value: 'a&amp;b', name: 'p1'},\n          {filename: 'storm-site.xml', value: 'a&lt;b', name: 'p2'},\n          {filename: 'storm-site.xml', value: 'a&gt;b', name: 'p3'},\n          {filename: 'storm-site.xml', value: 'a&quot;b', name: 'p4'},\n          {filename: 'storm-site.xml', value: 'a&apos;b', name: 'p5'}\n        ],\n        expected = {\n          type: 'storm-site',\n          tag: 'version1',\n          properties: {\n            p1: 'a&b',\n            p2: 'a<b',\n            p3: 'a>b',\n            p4: 'a\"b',\n            p5: 'a\\'b'\n          }\n        };\n      installerStep8Controller.reopen({configs: configs});\n      expect(installerStep8Controller.createStormSiteObj()).to.eql(expected);\n    });\n  });\n\n  describe('#ajaxQueueFinished', function() {\n    it('should call App.router.next', function() {\n      sinon.stub(App.router, 'send', Em.K);\n      installerStep8Controller.ajaxQueueFinished();\n      expect(App.router.send.calledWith('next')).to.equal(true);\n      App.router.send.restore();\n    });\n  });\n\n  describe('#addRequestToAjaxQueue', function() {\n    describe('testMode = true', function() {\n      before(function() {\n        App.set('testMode', true);\n      });\n      after(function() {\n        App.set('testMode', false);\n      });\n      it('shouldn\\'t do nothing', function() {\n        installerStep8Controller.set('ajaxRequestsQueue', App.ajaxQueue.create());\n        installerStep8Controller.get('ajaxRequestsQueue').clear();\n        installerStep8Controller.addRequestToAjaxQueue({});\n        expect(installerStep8Controller.get('ajaxRequestsQueue.queue.length')).to.equal(0);\n      });\n    });\n    describe('testMode = true', function() {\n      before(function() {\n        App.set('testMode', false);\n      });\n      it('should add request', function() {\n        var clusterName = 'c1';\n        installerStep8Controller.reopen({clusterName: clusterName});\n        installerStep8Controller.set('ajaxRequestsQueue', App.ajaxQueue.create());\n        installerStep8Controller.get('ajaxRequestsQueue').clear();\n        installerStep8Controller.addRequestToAjaxQueue({name:'name', data:{}});\n        var request = installerStep8Controller.get('ajaxRequestsQueue.queue.firstObject');\n        expect(request.error).to.equal('ajaxQueueRequestErrorCallback');\n        expect(request.data.cluster).to.equal(clusterName);\n      });\n    });\n  });\n\n  describe('#ajaxQueueRequestErrorCallback', function() {\n    var obj = Em.Object.create({\n      registerErrPopup: Em.K,\n      setStepsEnable: Em.K\n    });\n    beforeEach(function() {\n      sinon.stub(App.router, 'get', function() {\n        return obj;\n      });\n      sinon.spy(obj, 'registerErrPopup');\n      sinon.spy(obj, 'setStepsEnable');\n    });\n    afterEach(function() {\n      App.router.get.restore();\n      obj.registerErrPopup.restore();\n      obj.setStepsEnable.restore();\n    });\n    it('should set hasErrorOccurred true', function () {\n      installerStep8Controller.set('hasErrorOccurred', false);\n      installerStep8Controller.ajaxQueueRequestErrorCallback({responseText: '{\"message\": \"\"}'});\n      expect(installerStep8Controller.get('hasErrorOccurred')).to.equal(true);\n    });\n    it('should set isSubmitDisabled false', function () {\n      installerStep8Controller.set('isSubmitDisabled', true);\n      installerStep8Controller.ajaxQueueRequestErrorCallback({responseText: '{\"message\": \"\"}'});\n      expect(installerStep8Controller.get('isSubmitDisabled')).to.equal(false);\n    });\n    it('should set isBackBtnDisabled false', function () {\n      installerStep8Controller.set('isBackBtnDisabled', true);\n      installerStep8Controller.ajaxQueueRequestErrorCallback({responseText: '{\"message\": \"\"}'});\n      expect(installerStep8Controller.get('isBackBtnDisabled')).to.equal(false);\n    });\n    it('should call setStepsEnable', function () {\n      installerStep8Controller.ajaxQueueRequestErrorCallback({responseText: '{\"message\": \"\"}'});\n      expect(obj.setStepsEnable.calledOnce).to.equal(true);\n    });\n    it('should call registerErrPopup', function () {\n      installerStep8Controller.ajaxQueueRequestErrorCallback({responseText: '{\"message\": \"\"}'});\n      expect(obj.registerErrPopup.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#removeInstalledServicesConfigurationGroups', function() {\n    beforeEach(function() {\n      sinon.stub(App.config, 'deleteConfigGroup', Em.K);\n    });\n    afterEach(function() {\n      App.config.deleteConfigGroup.restore();\n    });\n    it('should call App.config.deleteConfigGroup for each received group', function() {\n      var groups = [{}, {}, {}];\n      installerStep8Controller.removeInstalledServicesConfigurationGroups(groups);\n      expect(App.config.deleteConfigGroup.callCount).to.equal(groups.length);\n    });\n  });\n\n  describe('#assignComponentHosts', function() {\n    it('component with custom handler', function() {\n      var castom_value = 'custom',\n        component = Em.Object.create({\n        customHandler: 'customHandler'\n      });\n      installerStep8Controller.reopen({\n        customHandler: function(o) {o.set('component_value', castom_value)}\n      });\n      installerStep8Controller.assignComponentHosts(component);\n      expect(component.get('component_value')).to.equal(castom_value);\n    });\n    it('component is master', function() {\n      var component = Em.Object.create({\n          component_name: 'c1',\n          isMaster: true\n        }),\n        masterComponentHosts = [\n          {component: 'c1', hostName: 'h1'}\n        ];\n      installerStep8Controller.reopen({content: {masterComponentHosts: masterComponentHosts}});\n      installerStep8Controller.assignComponentHosts(component);\n      expect(component.get('component_value')).to.equal('h1');\n    });\n    it('component isn\\'t master, 1 host', function() {\n      var component = Em.Object.create({\n          component_name: 'c1',\n          isMaster: false\n        }),\n        slaveComponentHosts = [\n          {componentName: 'c1', hosts: [{}]}\n        ];\n      installerStep8Controller.reopen({content: {slaveComponentHosts: slaveComponentHosts}});\n      installerStep8Controller.assignComponentHosts(component);\n      expect(component.get('component_value')).to.equal('1 host');\n    });\n    it('component isn\\'t master, 2 hosts', function() {\n      var component = Em.Object.create({\n          component_name: 'c1',\n          isMaster: false\n        }),\n        slaveComponentHosts = [\n          {componentName: 'c1', hosts: [{}, {}]}\n        ];\n      installerStep8Controller.reopen({content: {slaveComponentHosts: slaveComponentHosts}});\n      installerStep8Controller.assignComponentHosts(component);\n      expect(component.get('component_value')).to.equal('2 hosts');\n    });\n  });\n\n  describe('#addDynamicProperties', function() {\n    it('shouldn\\'t add property', function() {\n      var serviceConfigProperties = [\n          {name: 'templeton.hive.properties'}\n        ],\n        configs = [];\n      installerStep8Controller.reopen({content: {serviceConfigProperties: serviceConfigProperties}});\n      installerStep8Controller.addDynamicProperties(configs);\n      expect(configs.length).to.equal(0);\n    });\n    it('should add property', function() {\n      var serviceConfigProperties = [],\n        configs = [];\n      installerStep8Controller.reopen({content: {serviceConfigProperties: serviceConfigProperties}});\n      installerStep8Controller.addDynamicProperties(configs);\n      expect(configs.length).to.equal(1);\n    });\n  });\n\n  describe('#formatProperties', function() {\n\n  });\n\n  describe('#updateConfigurations', function() {\n\n    beforeEach(function() {\n      sinon.stub(configurationController, 'doPUTClusterConfigurationSite', Em.K);\n      sinon.stub(App.router, 'get', function() {\n        return configurationController;\n      });\n    });\n\n    afterEach(function() {\n      configurationController.doPUTClusterConfigurationSite.restore();\n      App.router.get.restore();\n    });\n\n    it('empty configsToUpdate', function() {\n      installerStep8Controller.updateConfigurations([]);\n      expect(configurationController.doPUTClusterConfigurationSite.called).to.be.false;\n    });\n\n    it('one service, no site properties', function() {\n      var configsToUpdate = [\n        {serviceName: 's1', id: ''},\n        {serviceName: 's1', id: ''}\n      ];\n      installerStep8Controller.updateConfigurations(configsToUpdate);\n      expect(configurationController.doPUTClusterConfigurationSite.called).to.be.false;\n    });\n\n    it('one service, site properties, 2 files', function() {\n      var configsToUpdate = [\n        {serviceName: 's1', id: 'site property', filename: 'f1.xml', name: 'n1', value: 'v1'},\n        {serviceName: 's1', id: 'site property', filename: 'f2.xml', name: 'n2', value: 'v2'}\n      ];\n      installerStep8Controller.updateConfigurations(configsToUpdate);\n      expect(configurationController.doPUTClusterConfigurationSite.calledTwice).to.be.true;\n    });\n\n    it('two services, site properties, 2 files', function() {\n      var configsToUpdate = [\n        {serviceName: 's1', id: 'site property', filename: 'f1.xml', name: 'n1', value: 'v1'},\n        {serviceName: 's1', id: 'site property', filename: 'f1.xml', name: 'n12', value: 'v12'},\n        {serviceName: 's1', id: 'site property', filename: 'f2.xml', name: 'n2', value: 'v2'},\n        {serviceName: 's2', id: 'site property', filename: 'f2.xml', name: 'n3', value: 'v3'}\n      ];\n      installerStep8Controller.updateConfigurations(configsToUpdate);\n      expect(configurationController.doPUTClusterConfigurationSite.calledThrice).to.be.true;\n      var firstCallArgs = configurationController.doPUTClusterConfigurationSite.args[0][0];\n      expect(firstCallArgs.type).to.equal('f1');\n      expect(firstCallArgs.properties).to.eql({\"n1\":\"v1\",\"n12\":\"v12\"});\n      var secondCallArgs = configurationController.doPUTClusterConfigurationSite.args[1][0];\n      expect(secondCallArgs.type).to.equal('f2');\n      expect(secondCallArgs.properties).to.eql({\"n2\":\"v2\"});\n      var thirdCallArgs = configurationController.doPUTClusterConfigurationSite.args[2][0];\n      expect(thirdCallArgs.type).to.equal('f2');\n      expect(thirdCallArgs.properties).to.eql({\"n3\":\"v3\"});\n    });\n\n  });\n\n  describe('#loadServices', function() {\n\n    beforeEach(function() {\n      sinon.stub(installerStep8Controller, 'assignComponentHosts', function(obj) {\n        Em.set(obj, 'component_value', 'component_value');\n      });\n      installerStep8Controller.set('services', []);\n    });\n\n    afterEach(function() {\n      installerStep8Controller.assignComponentHosts.restore();\n    });\n\n    it('no reviewService', function() {\n      installerStep8Controller.set('rawContent', []);\n      installerStep8Controller.loadServices();\n      expect(installerStep8Controller.get('services')).to.eql([]);\n    });\n\n    it('no reviewService 2', function() {\n      installerStep8Controller.set('rawContent', [{config_name: 'services'}]);\n      installerStep8Controller.loadServices();\n      expect(installerStep8Controller.get('services')).to.eql([]);\n    });\n\n    it('no selectedServices', function() {\n      installerStep8Controller.reopen({\n        selectedServices: [],\n        rawContent: [{config_name: 'services', config_value: [{}]}]\n      });\n      installerStep8Controller.loadServices();\n      expect(installerStep8Controller.get('services')).to.eql([]);\n    });\n\n    it('no intersections selectedServices and reviewService.services', function() {\n      installerStep8Controller.reopen({\n        selectedServices: [{serviceName: 's1'}],\n        rawContent: [{config_name: 'services', config_value: [{service_name: 's2'}]}]\n      });\n      installerStep8Controller.loadServices();\n      expect(installerStep8Controller.get('services')).to.eql([]);\n    });\n\n    it('push some services', function() {\n      installerStep8Controller.reopen({\n        selectedServices: [{serviceName: 's1'}],\n        rawContent: [\n          {\n            config_name: 'services',\n            config_value: [Em.Object.create({service_name: 's1', service_components: [{}]})]\n          }\n        ]\n      });\n      installerStep8Controller.loadServices();\n      expect(installerStep8Controller.get('services.length')).to.eql(1);\n    });\n\n  });\n\n  describe('#createCoreSiteObj', function() {\n    Em.A([\n        {\n          configs: [\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.o.hosts'},\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.o.groups'}\n          ],\n          globals: [\n            {name: 'oozie_user', value: 'o'}\n          ],\n          selectedServices: [\n            {serviceName: ''}\n          ],\n          m: 'no OOZIE',\n          e: {\n            excludedConfigs: ['hadoop.proxyuser.o.hosts', 'hadoop.proxyuser.o.groups'],\n            includedConfigs: []\n          }\n        },\n        {\n          configs: [\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.o.hosts'},\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.o.groups'}\n          ],\n          globals: [\n            {name: 'oozie_user', value: 'o'}\n          ],\n          selectedServices: [\n            {serviceName: 'OOZIE'}\n          ],\n          m: 'OOZIE exists',\n          e: {\n            excludedConfigs: [],\n            includedConfigs: ['hadoop.proxyuser.o.hosts', 'hadoop.proxyuser.o.groups']\n          }\n        },\n        {\n          configs: [\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.h.hosts'},\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.h.groups'}\n          ],\n          globals: [\n            {name: 'hive_user', value: 'h'}\n          ],\n          selectedServices: [\n            {serviceName: ''}\n          ],\n          m: 'no HIVE',\n          e: {\n            excludedConfigs: ['hadoop.proxyuser.h.hosts', 'hadoop.proxyuser.h.groups'],\n            includedConfigs: []\n          }\n        },\n        {\n          configs: [\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.h.hosts'},\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.h.groups'}\n          ],\n          globals: [\n            {name: 'hive_user', value: 'h'}\n          ],\n          selectedServices: [\n            {serviceName: 'HIVE'}\n          ],\n          m: 'HIVE exists',\n          e: {\n            excludedConfigs: [],\n            includedConfigs: ['hadoop.proxyuser.h.hosts', 'hadoop.proxyuser.h.groups']\n          }\n        },\n        {\n          configs: [\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.hc.hosts'},\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.hc.groups'}\n          ],\n          globals: [\n            {name: 'hcat_user', value: 'hc'}\n          ],\n          selectedServices: [\n            {serviceName: ''}\n          ],\n          m: 'no WEBHCAT',\n          e: {\n            excludedConfigs: ['hadoop.proxyuser.hc.hosts', 'hadoop.proxyuser.hc.groups'],\n            includedConfigs: []\n          }\n        },\n        {\n          configs: [\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.hc.hosts'},\n            {filename: 'core-site.xml', name: 'hadoop.proxyuser.hc.groups'}\n          ],\n          globals: [\n            {name: 'hcat_user', value: 'hc'}\n          ],\n          selectedServices: [\n            {serviceName: 'WEBHCAT'}\n          ],\n          m: 'WEBHCAT exists',\n          e: {\n            excludedConfigs: [],\n            includedConfigs: ['hadoop.proxyuser.hc.hosts', 'hadoop.proxyuser.hc.groups']\n          }\n        },\n        {\n          configs: [\n            {filename: 'core-site.xml', name: 'fs.glusterfs.c1'},\n            {filename: 'core-site.xml', name: 'fs.glusterfs.c2'}\n          ],\n          globals: [],\n          selectedServices: [\n            {serviceName: ''}\n          ],\n          m: 'no GLUSTERFS',\n          e: {\n            excludedConfigs: ['fs.glusterfs.c1', 'fs.glusterfs.c2', 'fs.default.name', 'fs.defaultFS'],\n            includedConfigs: []\n          }\n        },\n        {\n          configs: [\n            {filename: 'core-site.xml', name: 'fs.default.name'},\n            {filename: 'core-site.xml', name: 'fs.defaultFS'}\n          ],\n          globals: [\n            {name: 'fs_glusterfs_default_name', value: 'v1'},\n            {name: 'glusterfs_defaultFS_name', value: 'v2'}\n          ],\n          selectedServices: [\n            {serviceName: 'GLUSTERFS'}\n          ],\n          m: 'GLUSTERFS exists',\n          e: {\n            excludedConfigs: [],\n            includedConfigs: ['fs.default.name', 'fs.defaultFS']\n          }\n        },\n        {\n          configs: [],\n          globals: [\n            {name: 'fs_glusterfs_default_name', value: 'v1'},\n            {name: 'glusterfs_defaultFS_name', value: 'v2'}\n          ],\n          selectedServices: [\n            {serviceName: 'GLUSTERFS'}\n          ],\n          m: 'GLUSTERFS exists 2',\n          e: {\n            excludedConfigs: ['fs_glusterfs_default_name', 'glusterfs_defaultFS_name'],\n            includedConfigs: []\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          installerStep8Controller.reopen({\n            globals: test.globals,\n            configs: test.configs,\n            selectedServices: test.selectedServices\n          });\n          var coreSiteObj = installerStep8Controller.createCoreSiteObj();\n          expect(coreSiteObj.type).to.equal('core-site');\n          expect(coreSiteObj.tag).to.equal('version1');\n          var properties = Em.keys(coreSiteObj.properties);\n          test.e.excludedConfigs.forEach(function (configName) {\n            expect(properties.contains(configName)).to.be.false;\n          });\n          test.e.includedConfigs.forEach(function (configName) {\n            expect(properties.contains(configName)).to.be.true;\n          });\n        });\n      });\n  });\n\n  describe('#createGlobalSiteObj', function() {\n\n    it('required by agent configs should be skipped', function() {\n      var globals = [{isRequiredByAgent: false, name: ''}, {isRequiredByAgent: false, name: ''}];\n      installerStep8Controller.reopen({globals: globals, selectedServices: []});\n      var globalSiteObj = installerStep8Controller.createGlobalSiteObj();\n      expect(globalSiteObj.type).to.equal('global');\n      expect(globalSiteObj.tag).to.equal('version1');\n      expect(Em.keys(globalSiteObj.properties)).to.eql(['gmond_user']);\n    });\n\n    it('gluster configs should be skipped', function() {\n      var globals = [{isRequiredByAgent: true, name: 'fs_glusterfs.c1'}, {isRequiredByAgent: true, name: 'fs_glusterfs.c2'}];\n      installerStep8Controller.reopen({globals: globals, selectedServices: [{serviceName: ''}]});\n      var globalSiteObj = installerStep8Controller.createGlobalSiteObj();\n      expect(globalSiteObj.type).to.equal('global');\n      expect(globalSiteObj.tag).to.equal('version1');\n      expect(Em.keys(globalSiteObj.properties)).to.eql(['gmond_user']);\n    });\n\n    it('_heapsize|_newsize|_maxnewsize should add m to end', function() {\n      var globals = [\n        {isRequiredByAgent: true, name: 'c1_heapsize', value: '1'},\n        {isRequiredByAgent: true, name: 'c1_newsize', value: '2'},\n        {isRequiredByAgent: true, name: 'c1_maxnewsize', value: '3'}\n      ];\n      installerStep8Controller.reopen({globals: globals, selectedServices: [{serviceName: ''}]});\n      var globalSiteObj = installerStep8Controller.createGlobalSiteObj();\n      expect(globalSiteObj.type).to.equal('global');\n      expect(globalSiteObj.tag).to.equal('version1');\n      globals.forEach(function(global) {\n        expect(globalSiteObj.properties[global.name]).to.equal(global.value + 'm');\n      });\n    });\n\n    it('for some configs should not add  m to end', function() {\n      var globals = [\n        {isRequiredByAgent: true, name: 'hadoop_heapsize', value: '1'},\n        {isRequiredByAgent: true, name: 'yarn_heapsize', value: '2'},\n        {isRequiredByAgent: true, name: 'nodemanager_heapsize', value: '3'},\n        {isRequiredByAgent: true, name: 'resourcemanager_heapsize', value: '4'},\n        {isRequiredByAgent: true, name: 'apptimelineserver_heapsize', value: '5'},\n        {isRequiredByAgent: true, name: 'jobhistory_heapsize', value: '6'}\n      ];\n      installerStep8Controller.reopen({globals: globals, selectedServices: [{serviceName: ''}]});\n      var globalSiteObj = installerStep8Controller.createGlobalSiteObj();\n      expect(globalSiteObj.type).to.equal('global');\n      expect(globalSiteObj.tag).to.equal('version1');\n      globals.forEach(function(global) {\n        expect(globalSiteObj.properties[global.name]).to.equal(global.value);\n      });\n    });\n\n  });\n\n  describe('#applyInstalledServicesConfigurationGroup', function() {\n    beforeEach(function() {\n      sinon.stub($, 'ajax', Em.K);\n      sinon.stub(App.router, 'get', function() {\n        return configurationController;\n      });\n    });\n    afterEach(function() {\n      $.ajax.restore();\n      App.router.get.restore();\n    });\n    it('should do ajax request for each config group', function() {\n      var configGroups = [{ConfigGroup: {id:''}}, {ConfigGroup: {id:''}}];\n      installerStep8Controller.applyInstalledServicesConfigurationGroup(configGroups);\n      expect($.ajax.callCount).to.equal(configGroups.length);\n    });\n  });\n\n  describe('#getExistingClusterNames', function() {\n    beforeEach(function() {\n      sinon.stub(App.ajax, 'send', Em.K);\n    });\n    afterEach(function() {\n      App.ajax.send.restore();\n    });\n    it('should do ajax request', function() {\n      installerStep8Controller.getExistingClusterNames();\n      expect(App.ajax.send.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#loadConfigs', function() {\n    beforeEach(function() {\n      sinon.stub(installerStep8Controller, 'loadUiSideConfigs', function(k) {return k});\n      sinon.stub(App.config, 'excludeUnsupportedConfigs', function(k) {return k;});\n    });\n    afterEach(function() {\n      installerStep8Controller.loadUiSideConfigs.restore();\n      App.config.excludeUnsupportedConfigs.restore();\n    });\n    it('should save configs', function() {\n      var serviceConfigProperties = [\n        {id: 'site property', value: true, isCanBeEmpty: true},\n        {id: 'site property', value: 1, isCanBeEmpty: true},\n        {id: 'site property', value: '1', isCanBeEmpty: true},\n        {id: 'site property', value: null, isCanBeEmpty: false}\n      ];\n      installerStep8Controller.reopen({content: {services: [], serviceConfigProperties: serviceConfigProperties}, configMapping: []});\n      installerStep8Controller.loadConfigs();\n      var configs = installerStep8Controller.get('configs');\n      expect(configs.mapProperty('value')).to.eql(['true', 1, '1']);\n    });\n  });\n\n  describe('#loadUiSideConfigs', function() {\n    beforeEach(function() {\n      sinon.stub(installerStep8Controller, 'addDynamicProperties', Em.K);\n      sinon.stub(installerStep8Controller, 'getGlobConfigValueWithOverrides', function(t, v, n) {\n        return {\n          value: v,\n          overrides: []\n        }\n      });\n      sinon.stub(App.config, 'setConfigValue', Em.K);\n    });\n    afterEach(function() {\n      installerStep8Controller.addDynamicProperties.restore();\n      installerStep8Controller.getGlobConfigValueWithOverrides.restore();\n      App.config.setConfigValue.restore();\n    });\n\n    it('all configs witohut foreignKey', function() {\n      var configMapping = [\n        {foreignKey: null, templateName: 't1', value: 'v1', name: 'c1', filename: 'f1'},\n        {foreignKey: null, templateName: 't2', value: 'v2', name: 'c2', filename: 'f2'},\n        {foreignKey: null, templateName: 't3', value: 'v3', name: 'c3', filename: 'f2'},\n        {foreignKey: null, templateName: 't4', value: 'v4', name: 'c4', filename: 'f1'}\n      ];\n      var uiConfigs = installerStep8Controller.loadUiSideConfigs(configMapping);\n      expect(uiConfigs.length).to.equal(configMapping.length);\n      expect(uiConfigs.everyProperty('id', 'site property')).to.be.true;\n      uiConfigs.forEach(function(c, index) {\n        expect(c.overrides).to.be.an.array;\n        expect(c.value).to.equal(configMapping[index].value);\n        expect(c.name).to.equal(configMapping[index].name);\n        expect(c.filename).to.equal(configMapping[index].filename);\n      });\n    });\n\n    it('some configs witohut foreignKey', function() {\n      var configMapping = [\n        {foreignKey: null, templateName: 't1', value: 'v1', name: 'c1', filename: 'f1'},\n        {foreignKey: null, templateName: 't2', value: 'v2', name: 'c2', filename: 'f2'},\n        {foreignKey: null, templateName: 't3', value: 'v3', name: 'c3', filename: 'f2'},\n        {foreignKey: null, templateName: 't4', value: 'v4', name: 'c4', filename: 'f1'},\n        {foreignKey: 'fk1', templateName: 't5', value: 'v5', name: 'c5', filename: 'f1'},\n        {foreignKey: 'fk2', templateName: 't6', value: 'v6', name: 'c6', filename: 'f1'},\n        {foreignKey: 'fk3', templateName: 't7', value: 'v7', name: 'c7', filename: 'f2'},\n        {foreignKey: 'fk4', templateName: 't8', value: 'v8', name: 'c8', filename: 'f2'}\n      ];\n      var uiConfigs = installerStep8Controller.loadUiSideConfigs(configMapping);\n      expect(uiConfigs.length).to.equal(configMapping.length);\n      expect(uiConfigs.everyProperty('id', 'site property')).to.be.true;\n      uiConfigs.forEach(function(c, index) {\n        if (Em.isNone(configMapping[index].foreignKey))\n          expect(c.overrides).to.be.an.array;\n        expect(c.value).to.equal(configMapping[index].value);\n        expect(c.name).to.equal(configMapping[index].name);\n        expect(c.filename).to.equal(configMapping[index].filename);\n      });\n    });\n  });\n\n  describe('#getGlobConfigValueWithOverrides', function() {\n\n    it('shouldn\\t do nothing', function() {\n      var r = installerStep8Controller.getGlobConfigValueWithOverrides('', 'without tags', '');\n      expect(r).to.eql({value: 'without tags', overrides: []});\n    });\n\n    it('should return value with empty overrides', function() {\n      installerStep8Controller.set('globals', [\n        {name: 'c1', value: 'v1', overrides: []}\n      ]);\n      var r = installerStep8Controller.getGlobConfigValueWithOverrides(['c1'], '<templateName[0]>', '');\n      expect(r).to.eql({value: 'v1', overrides: []});\n    });\n\n    it('should return value with not empty overrides', function() {\n      installerStep8Controller.set('globals', [\n        {name: 'c1', value: 'v1', overrides: [{value: 'v2', hosts: ['h2']}]}\n      ]);\n      var r = installerStep8Controller.getGlobConfigValueWithOverrides(['c1'], '<templateName[0]>', '');\n      expect(r).to.eql({value: 'v1', overrides: [{value: 'v2', hosts: ['h2']}]});\n    });\n\n  });\n\n  describe('Queued requests', function() {\n\n    beforeEach(function() {\n      sinon.stub(installerStep8Controller, 'addRequestToAjaxQueue', Em.K);\n    });\n\n    afterEach(function() {\n      installerStep8Controller.addRequestToAjaxQueue.restore();\n    });\n\n    describe('#createCluster', function() {\n      it('shouldn\\'t add request to queue if not installerController used', function() {\n        installerStep8Controller.reopen({content: {controllerName: 'addServiceController'}});\n        installerStep8Controller.createCluster();\n        expect(installerStep8Controller.addRequestToAjaxQueue.called).to.equal(false);\n      });\n      it('App.currentStackVersion should be changed if localRepo selected', function() {\n        App.set('currentStackVersion', 'HDP-1.1.1');\n        installerStep8Controller.reopen({content: {controllerName: 'installerController', installOptions: {localRepo: true}}});\n        var data = {\n          data: JSON.stringify({ \"Clusters\": {\"version\": 'HDPLocal-1.1.1' }})\n        };\n        installerStep8Controller.createCluster();\n        expect(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data).to.eql(data);\n      });\n      it('App.currentStackVersion shouldn\\'t be changed if localRepo ins\\'t selected', function() {\n        App.set('currentStackVersion', 'HDP-1.1.1');\n        installerStep8Controller.reopen({content: {controllerName: 'installerController', installOptions: {localRepo: false}}});\n        var data = {\n          data: JSON.stringify({ \"Clusters\": {\"version\": 'HDP-1.1.1' }})\n        };\n        installerStep8Controller.createCluster();\n        expect(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data).to.eql(data);\n      });\n    });\n\n    describe('#createSelectedServices', function() {\n      it('shouldn\\'t do nothing if no data', function() {\n        sinon.stub(installerStep8Controller, 'createSelectedServicesData', function() {return [];});\n        installerStep8Controller.createSelectedServices();\n        expect(installerStep8Controller.addRequestToAjaxQueue.called).to.equal(false);\n        installerStep8Controller.createSelectedServicesData.restore();\n      });\n      it('should call addRequestToAjaxQueue with computed data', function() {\n        var data = [\n          {\"ServiceInfo\": { \"service_name\": 's1' }},\n          {\"ServiceInfo\": { \"service_name\": 's2' }},\n          {\"ServiceInfo\": { \"service_name\": 's3' }}\n        ];\n        sinon.stub(installerStep8Controller, 'createSelectedServicesData', function() {return data;});\n        installerStep8Controller.createSelectedServices();\n        expect(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data).to.eql({data: JSON.stringify(data)});\n        installerStep8Controller.createSelectedServicesData.restore();\n      });\n    });\n\n    describe('#registerHostsToCluster', function() {\n      it('shouldn\\'t do nothing if no data', function() {\n        sinon.stub(installerStep8Controller, 'createRegisterHostData', function() {return [];});\n        installerStep8Controller.registerHostsToCluster();\n        expect(installerStep8Controller.addRequestToAjaxQueue.called).to.equal(false);\n        installerStep8Controller.createRegisterHostData.restore();\n      });\n      it('should call addRequestToAjaxQueue with computed data', function() {\n        var data = [\n          {\"Hosts\": { \"host_name\": 'h1'}},\n          {\"Hosts\": { \"host_name\": 'h3'}}\n        ];\n        sinon.stub(installerStep8Controller, 'createRegisterHostData', function() {return data;});\n        installerStep8Controller.registerHostsToCluster();\n        expect(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data).to.eql({data: JSON.stringify(data)});\n        installerStep8Controller.createRegisterHostData.restore();\n      });\n    });\n\n    describe('#registerHostsToComponent', function() {\n\n      it('shouldn\\'t do request if no hosts provided', function() {\n        installerStep8Controller.registerHostsToComponent([]);\n        expect(installerStep8Controller.addRequestToAjaxQueue.called).to.equal(false);\n      });\n\n      it('should do request if hostNames are provided', function() {\n        var hostNames = ['h1', 'h2'],\n          componentName = 'c1';\n        installerStep8Controller.registerHostsToComponent(hostNames, componentName);\n        var data = JSON.parse(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data.data);\n        expect(data.RequestInfo.query).to.equal('Hosts/host_name=h1|Hosts/host_name=h2');\n        expect(data.Body.host_components[0].HostRoles.component_name).to.equal('c1');\n      });\n\n    });\n\n    describe('#applyConfigurationsToCluster', function() {\n      it('should call addRequestToAjaxQueue', function() {\n        var serviceConfigTags = [\n            {\n              type: 'type1',\n              tag: 'tag1',\n              properties: [\n                {},\n                {}\n              ]\n            }\n          ],\n          data = '['+JSON.stringify({\n            Clusters: {\n              desired_config: {\n                type: serviceConfigTags[0].type,\n                tag: serviceConfigTags[0].tag,\n                properties: serviceConfigTags[0].properties\n              }\n            }\n          })+']';\n        installerStep8Controller.reopen({serviceConfigTags: serviceConfigTags});\n        installerStep8Controller.applyConfigurationsToCluster();\n        expect(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data).to.eql({data: data});\n      });\n    });\n\n    describe('#applyConfigurationGroups', function() {\n      it('should call addRequestToAjaxQueue', function() {\n        var data = [{}, {}];\n        installerStep8Controller.applyConfigurationGroups(data);\n        expect(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data).to.eql({data: JSON.stringify(data)});\n      });\n    });\n\n    describe('#newServiceComponentErrorCallback', function() {\n\n      it('should add request for new component', function() {\n        var serviceName = 's1',\n          componentName = 'c1';\n        installerStep8Controller.newServiceComponentErrorCallback({}, {}, '', {}, {serviceName: serviceName, componentName: componentName});\n        var data = JSON.parse(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data.data);\n        expect(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data.serviceName).to.equal(serviceName);\n        expect(data.components[0].ServiceComponentInfo.component_name).to.equal(componentName);\n      });\n\n    });\n\n    describe('#createComponents', function() {\n      beforeEach(function() {\n        installerStep8Controller.reopen({\n          selectedServices: [\n            Em.Object.create({serviceName: 's1'}),\n            Em.Object.create({serviceName: 's2'})\n          ]\n        });\n        sinon.stub(App.StackServiceComponent, 'find', function() {\n          return Em.A([\n            Em.Object.create({serviceName: 's1', componentName: 'c1'}),\n            Em.Object.create({serviceName: 's1', componentName: 'c2'}),\n            Em.Object.create({serviceName: 's2', componentName: 'c3'}),\n            Em.Object.create({serviceName: 's2', componentName: 'c4'})\n          ]);\n        });\n      });\n      afterEach(function() {\n        App.StackServiceComponent.find.restore();\n      });\n\n      it('should do two requests', function() {\n        installerStep8Controller.createComponents();\n        expect(installerStep8Controller.addRequestToAjaxQueue.calledTwice).to.be.true;\n        var firstRequestData = JSON.parse(installerStep8Controller.addRequestToAjaxQueue.args[0][0].data.data);\n        expect(firstRequestData.components.mapProperty('ServiceComponentInfo.component_name')).to.eql(['c1', 'c2']);\n        var secondRequestData = JSON.parse(installerStep8Controller.addRequestToAjaxQueue.args[1][0].data.data);\n        expect(secondRequestData.components.mapProperty('ServiceComponentInfo.component_name')).to.eql(['c3', 'c4']);\n      });\n\n      it('should check App_TIMELINE_SERVER', function() {\n        sinon.stub(App, 'get', function(k) {\n          if ('isHadoop21Stack' === k) return true;\n          if ('testMode' === k) return false;\n          return Em.get(App, k);\n        });\n        sinon.stub(App.YARNService, 'find', function() {return [{}]});\n        sinon.stub(App.ajax, 'send', Em.K);\n        installerStep8Controller.set('content', {controllerName: 'addServiceController'});\n\n        installerStep8Controller.createComponents();\n        expect(App.ajax.send.calledOnce).to.equal(true);\n        expect(App.ajax.send.args[0][0].data.serviceName).to.equal('YARN');\n        expect(App.ajax.send.args[0][0].data.componentName).to.equal('APP_TIMELINE_SERVER');\n\n        App.ajax.send.restore();\n        App.get.restore();\n        App.YARNService.find.restore();\n      });\n\n    });\n\n    describe('#setLocalRepositories', function() {\n\n      it('shouldn\\'t do nothing', function () {\n        installerStep8Controller.set('content', {controllerName: 'addServiceController'});\n        sinon.stub(App, 'get', function (k) {\n          if ('supports.localRepositories' === k) return false;\n          return Em.get(App, k);\n        });\n        expect(installerStep8Controller.setLocalRepositories()).to.equal(false);\n        App.get.restore();\n      });\n\n      it('shouldn\\'t do requests', function() {\n        installerStep8Controller.set('content', {\n          controllerName: 'installerController',\n          stacks: [\n            {\n              isSelected: true,\n              operatingSystems: [\n                {baseUrl: 'u1', originalBaseUrl: 'u1'},\n                {baseUrl: 'u2', originalBaseUrl: 'u2'}\n              ]\n            }\n          ]\n        });\n        installerStep8Controller.setLocalRepositories();\n        expect(installerStep8Controller.addRequestToAjaxQueue.called).to.equal(false);\n      });\n\n      it('should do 2 requests', function() {\n        installerStep8Controller.set('content', {\n          controllerName: 'installerController',\n          stacks: [\n            {\n              isSelected: true,\n              operatingSystems: [\n                {baseUrl: 'new_u1', originalBaseUrl: 'u1', osType: 'o1', repoId: 'r1'},\n                {baseUrl: 'new_u2', originalBaseUrl: 'u2', osType: 'o2', repoId: 'r2'}\n              ]\n            }\n          ]\n        });\n        installerStep8Controller.setLocalRepositories();\n        expect(installerStep8Controller.addRequestToAjaxQueue.calledTwice).to.equal(true);\n        var firstRequestData = installerStep8Controller.addRequestToAjaxQueue.args[0][0].data;\n        expect(firstRequestData.osType).to.equal('o1');\n        expect(firstRequestData.repoId).to.equal('r1');\n        expect(JSON.parse(firstRequestData.data).Repositories.base_url).to.equal('new_u1');\n\n        var secondRequestData = installerStep8Controller.addRequestToAjaxQueue.args[1][0].data;\n        expect(secondRequestData.osType).to.equal('o2');\n        expect(secondRequestData.repoId).to.equal('r2');\n        expect(JSON.parse(secondRequestData.data).Repositories.base_url).to.equal('new_u2');\n      });\n\n    });\n\n    describe('#createMasterHostComponents', function() {\n      beforeEach(function() {\n        sinon.stub(installerStep8Controller, 'registerHostsToComponent', Em.K);\n      });\n      afterEach(function() {\n        installerStep8Controller.registerHostsToComponent.restore();\n      });\n      it('should create components', function() {\n        var masterComponentHosts = [\n          {component: 'c1', isInstalled: false, hostName: 'h1'},\n          {component: 'c1', isInstalled: true, hostName: 'h2'},\n          {component: 'c2', isInstalled: false, hostName: 'h1'},\n          {component: 'c2', isInstalled: false, hostName: 'h2'}\n        ];\n        installerStep8Controller.set('content', {masterComponentHosts: masterComponentHosts});\n        installerStep8Controller.createMasterHostComponents();\n        expect(installerStep8Controller.registerHostsToComponent.calledTwice).to.equal(true);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][0]).to.eql(['h1']);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][1]).to.equal('c1');\n        expect(installerStep8Controller.registerHostsToComponent.args[1][0]).to.eql(['h1', 'h2']);\n        expect(installerStep8Controller.registerHostsToComponent.args[1][1]).to.equal('c2');\n      });\n    });\n\n    describe('#createAdditionalHostComponents', function() {\n\n      beforeEach(function() {\n        sinon.stub(installerStep8Controller, 'registerHostsToComponent', Em.K);\n      });\n\n      afterEach(function() {\n        installerStep8Controller.registerHostsToComponent.restore();\n      });\n\n      it('should add GANGLIA MONITOR (1)', function() {\n        installerStep8Controller.reopen({\n          getRegisteredHosts: function() {\n            return [{hostName: 'h1'}, {hostName: 'h2'}];\n          },\n          content: {\n            services: [\n              Em.Object.create({serviceName: 'GANGLIA', isSelected: true, isInstalled: false})\n            ]\n          }\n        });\n        installerStep8Controller.createAdditionalHostComponents();\n        expect(installerStep8Controller.registerHostsToComponent.calledOnce).to.equal(true);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][0]).to.eql(['h1', 'h2']);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][1]).to.equal('GANGLIA_MONITOR');\n      });\n\n      it('should add GANGLIA MONITOR (2)', function() {\n        installerStep8Controller.reopen({\n          getRegisteredHosts: function() {\n            return [{hostName: 'h1', isInstalled: true}, {hostName: 'h2', isInstalled: false}];\n          },\n          content: {\n            services: [\n              Em.Object.create({serviceName: 'GANGLIA', isSelected: true, isInstalled: true})\n            ]\n          }\n        });\n        installerStep8Controller.createAdditionalHostComponents();\n        expect(installerStep8Controller.registerHostsToComponent.calledOnce).to.equal(true);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][0]).to.eql(['h2']);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][1]).to.equal('GANGLIA_MONITOR');\n      });\n\n      it('should add MYSQL_SERVER', function() {\n        installerStep8Controller.reopen({\n          getRegisteredHosts: function() {\n            return [{hostName: 'h1'}, {hostName: 'h2'}];\n          },\n          content: {\n            masterComponentHosts: [\n              {component: 'HIVE_SERVER', hostName: 'h1'},\n              {component: 'HIVE_SERVER', hostName: 'h2'}\n            ],\n            services: [\n              Em.Object.create({serviceName: 'HIVE', isSelected: true, isInstalled: false})\n            ],\n            serviceConfigProperties: [\n              {name: 'hive_database', value: 'New MySQL Database'}\n            ]\n          }\n        });\n        installerStep8Controller.createAdditionalHostComponents();\n        expect(installerStep8Controller.registerHostsToComponent.calledOnce).to.equal(true);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][0]).to.eql(['h1', 'h2']);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][1]).to.equal('MYSQL_SERVER');\n      });\n\n    });\n\n    describe('#createSlaveAndClientsHostComponents', function() {\n\n      beforeEach(function() {\n        sinon.stub(installerStep8Controller, 'registerHostsToComponent', Em.K);\n      });\n\n      afterEach(function() {\n        installerStep8Controller.registerHostsToComponent.restore();\n      });\n\n      it('each slave is not CLIENT', function() {\n        installerStep8Controller.reopen({\n          content: {\n            slaveComponentHosts: [\n              {componentName: 'c1', hosts: [{isInstalled: true, hostName: 'h1'}, {isInstalled: false, hostName: 'h2'}, {isInstalled: false, hostName: 'h3'}]}\n            ]\n          }\n        });\n        installerStep8Controller.createSlaveAndClientsHostComponents();\n        expect(installerStep8Controller.registerHostsToComponent.calledOnce).to.be.true;\n        expect(installerStep8Controller.registerHostsToComponent.args[0][0]).to.eql(['h2', 'h3']);\n        expect(installerStep8Controller.registerHostsToComponent.args[0][1]).to.equal('c1');\n      });\n\n      var clients = Em.A([\n        {\n          component_name: 'HDFS_CLIENT',\n          masterComponentHosts: [\n            {component: 'HBASE_MASTER', isInstalled: false, hostName: 'h1'},\n            {component: 'HBASE_MASTER', isInstalled: true, hostName: 'h2'},\n            {component: 'HBASE_REGIONSERVER', isInstalled: false, hostName: 'h3'},\n            {component: 'WEBHCAT_SERVER', isInstalled: false, hostName: 'h1'},\n            {component: 'HISTORYSERVER', isInstalled: false, hostName: 'h3'},\n            {component: 'OOZIE_SERVER', isInstalled: true, hostName: 'h4'}\n          ],\n          e: ['h1', 'h3']\n        },\n        {\n          component_name: 'MAPREDUCE_CLIENT',\n          masterComponentHosts: [\n            {component: 'HIVE_SERVER', isInstalled: false, hostName: 'h1'},\n            {component: 'WEBHCAT_SERVER', isInstalled: false, hostName: 'h1'},\n            {component: 'NAGIOS_SERVER', isInstalled: false, hostName: 'h2'},\n            {component: 'OOZIE_SERVER', isInstalled: true, hostName: 'h3'}\n          ],\n          e: ['h1', 'h2']\n        },\n        {\n          component_name: 'OOZIE_CLIENT',\n          masterComponentHosts: [\n            {component: 'NAGIOS_SERVER', isInstalled: false, hostName: 'h2'}\n          ],\n          e: ['h2']\n        },\n        {\n          component_name: 'ZOOKEEPER_CLIENT',\n          masterComponentHosts: [\n            {component: 'WEBHCAT_SERVER', isInstalled: false, hostName: 'h1'}\n          ],\n          e: ['h1']\n        },\n        {\n          component_name: 'HIVE_CLIENT',\n          masterComponentHosts: [\n            {component: 'WEBHCAT_SERVER', isInstalled: false, hostName: 'h1'},\n            {component: 'HIVE_SERVER', isInstalled: false, hostName: 'h1'}\n          ],\n          e: ['h1']\n        },\n        {\n          component_name: 'HCAT',\n          masterComponentHosts: [\n            {component: 'NAGIOS_SERVER', isInstalled: false, hostName: 'h1'}\n          ],\n          e: ['h1']\n        },\n        {\n          component_name: 'YARN_CLIENT',\n          masterComponentHosts: [\n            {component: 'NAGIOS_SERVER', isInstalled: false, hostName: 'h1'},\n            {component: 'HIVE_SERVER', isInstalled: false, hostName: 'h2'},\n            {component: 'OOZIE_SERVER', isInstalled: false, hostName: 'h3'},\n            {component: 'WEBHCAT_SERVER', isInstalled: true, hostName: 'h1'}\n          ],\n          e: ['h1', 'h2', 'h3']\n        },\n        {\n          component_name: 'TEZ_CLIENT',\n          masterComponentHosts: [\n            {component: 'NAGIOS_SERVER', isInstalled: false, hostName: 'h1'},\n            {component: 'HIVE_SERVER', isInstalled: false, hostName: 'h2'}\n          ],\n          e: ['h1', 'h2']\n        }\n      ]);\n\n      clients.forEach(function(test) {\n        it('slave is CLIENT (isInstalled false) ' + test.component_name, function() {\n          installerStep8Controller.reopen({\n            content: {\n              clients: [\n                {isInstalled: false, component_name: test.component_name}\n              ],\n              slaveComponentHosts: [\n                {componentName: 'CLIENT', hosts: []}\n              ],\n              masterComponentHosts: test.masterComponentHosts\n            }\n          });\n          installerStep8Controller.createSlaveAndClientsHostComponents();\n          expect(installerStep8Controller.registerHostsToComponent.calledOnce).to.be.true;\n          expect(installerStep8Controller.registerHostsToComponent.args[0][0]).to.eql(test.e);\n          expect(installerStep8Controller.registerHostsToComponent.args[0][1]).to.equal(test.component_name);\n        });\n      });\n\n      clients.forEach(function(test) {\n        it('slave is CLIENT (isInstalled true, h1 - host to be excluded) ' + test.component_name, function() {\n          sinon.stub(App.HostComponent, 'find', function() {\n            return [\n              {componentName: test.component_name, workStatus: 'INSTALLED', host: {hostName: 'h1'}}\n            ];\n          });\n          installerStep8Controller.reopen({\n            content: {\n              clients: [\n                {isInstalled: true, component_name: test.component_name}\n              ],\n              slaveComponentHosts: [\n                {componentName: 'CLIENT', hosts: []}\n              ],\n              masterComponentHosts: test.masterComponentHosts\n            }\n          });\n          installerStep8Controller.createSlaveAndClientsHostComponents();\n\n          App.HostComponent.find.restore();\n          expect(installerStep8Controller.registerHostsToComponent.calledOnce).to.be.true;\n          // Don't know why, but\n          // expect(installerStep8Controller.registerHostsToComponent.args[0][0]).to.eql(test.e.without('h1'));\n          // doesn't work\n          expect(JSON.stringify(installerStep8Controller.registerHostsToComponent.args[0][0])).to.equal(JSON.stringify(test.e.without('h1')));\n          expect(installerStep8Controller.registerHostsToComponent.args[0][1]).to.equal(test.component_name);\n        });\n      });\n\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Ember = require('ember');\nvar App = require('app');\nrequire('models/stack_service_component');\nrequire('models/hosts');\nrequire('controllers/wizard/step9_controller');\nrequire('utils/helper');\nvar modelSetup = require('test/init_model_test');\nvar c, obj;\ndescribe('App.InstallerStep9Controller', function () {\n  beforeEach(function () {\n    modelSetup.setupStackServiceComponent();\n    c = App.WizardStep9Controller.create();\n    obj = App.InstallerController.create();\n  });\n  afterEach(function () {\n    modelSetup.cleanStackServiceComponent();\n  });\n\n  describe('#isSubmitDisabled', function () {\n    var tests = Em.A([\n      {controllerName: 'addHostController', state: 'STARTED', e: false},\n      {controllerName: 'addHostController', state: 'START FAILED', e: false},\n      {controllerName: 'addHostController', state: 'INSTALL FAILED', e: false},\n      {controllerName: 'addHostController', state: 'PENDING', e: true},\n      {controllerName: 'addHostController', state: 'INSTALLED', e: true},\n      {controllerName: 'addServiceController', state: 'STARTED', e: false},\n      {controllerName: 'addServiceController', state: 'START FAILED', e: false},\n      {controllerName: 'addServiceController', state: 'INSTALL FAILED', e: false},\n      {controllerName: 'addServiceController', state: 'PENDING', e: true},\n      {controllerName: 'addServiceController', state: 'INSTALLED', e: true},\n      {controllerName: 'installerController', state: 'STARTED', e: false},\n      {controllerName: 'installerController', state: 'START FAILED', e: false},\n      {controllerName: 'installerController', state: 'INSTALL FAILED', e: true},\n      {controllerName: 'installerController', state: 'INSTALLED', e: true},\n      {controllerName: 'installerController', state: 'PENDING', e: true}\n    ]);\n    tests.forEach(function (test) {\n      var controller = App.WizardStep9Controller.create({\n        content: {\n          controllerName: test.controllerName,\n          cluster: {\n            status: test.state\n          }\n        }\n      });\n      it('controllerName is ' + test.controllerName + '; cluster status is ' + test.state + '; isSubmitDisabled should be ' + test.e, function () {\n        expect(controller.get('isSubmitDisabled')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#status', function () {\n    var tests = Em.A([\n      {\n        hosts: [\n          {status: 'failed'},\n          {status: 'success'}\n        ],\n        isStepFailed: false,\n        progress: '100',\n        m: 'One host is failed',\n        e: 'failed'\n      },\n      {\n        hosts: [\n          {status: 'warning'},\n          {status: 'success'}\n        ],\n        m: 'One host is failed and step is not failed',\n        isStepFailed: false,\n        progress: '100',\n        e: 'warning'\n      },\n      {\n        hosts: [\n          {status: 'warning'},\n          {status: 'success'}\n        ],\n        m: 'One host is failed and step is failed',\n        isStepFailed: true,\n        progress: '100',\n        e: 'failed'\n      },\n      {\n        hosts: [\n          {status: 'success'},\n          {status: 'success'}\n        ],\n        m: 'All hosts are success and progress is 100',\n        isStepFailed: false,\n        progress: '100',\n        e: 'success'\n      },\n      {\n        hosts: [\n          {status: 'success'},\n          {status: 'success'}\n        ],\n        m: 'All hosts are success and progress is 50',\n        isStepFailed: false,\n        progress: '50',\n        e: 'info'\n      }\n    ]);\n    tests.forEach(function (test) {\n      var controller = App.WizardStep9Controller.create({hosts: test.hosts, isStepFailed: function () {\n        return test.isStepFailed\n      }, progress: test.progress});\n      controller.updateStatus();\n      it(test.m, function () {\n        expect(controller.get('status')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#showRetry', function () {\n    it('cluster status is not INSTALL FAILED', function () {\n      var controller = App.WizardStep9Controller.create({content: {cluster: {status: 'INSTALLED'}}});\n      expect(controller.get('showRetry')).to.equal(false);\n    });\n    it('cluster status is INSTALL FAILED', function () {\n      var controller = App.WizardStep9Controller.create({content: {cluster: {status: 'INSTALL FAILED'}}});\n      expect(controller.get('showRetry')).to.equal(true);\n    });\n  });\n\n  describe('#resetHostsForRetry', function () {\n    var hosts = {'host1': Em.Object.create({status: 'failed', message: 'Failed'}), 'host2': Em.Object.create({status: 'success', message: 'Success'})};\n    var controller = App.WizardStep9Controller.create({content: {hosts: hosts}});\n    it('All should have status \"pending\" and message \"Waiting\"', function () {\n      controller.resetHostsForRetry();\n      for (var name in hosts) {\n        if (hosts.hasOwnProperty(name)) {\n          expect(controller.get('content.hosts')[name].get('status', 'pending')).to.equal('pending');\n          expect(controller.get('content.hosts')[name].get('message', 'Waiting')).to.equal('Waiting');\n        }\n      }\n    });\n  });\n\n  var hosts_for_load_and_render = {\n    'host1': {\n      message: 'message1',\n      status: 'unknown',\n      progress: '1',\n      logTasks: [\n        {},\n        {}\n      ],\n      bootStatus: 'REGISTERED'\n    },\n    'host2': {\n      message: '',\n      status: 'failed',\n      progress: '1',\n      logTasks: [\n        {},\n        {}\n      ],\n      bootStatus: ''\n    },\n    'host3': {\n      message: '',\n      status: 'waiting',\n      progress: null,\n      logTasks: [\n        {},\n        {}\n      ],\n      bootStatus: ''\n    },\n    'host4': {\n      message: 'message4',\n      status: null,\n      progress: '10',\n      logTasks: [\n        {}\n      ],\n      bootStatus: 'REGISTERED'\n    }\n  };\n\n  describe('#loadHosts', function () {\n    var controller = App.WizardStep9Controller.create({content: {hosts: hosts_for_load_and_render}});\n    controller.loadHosts();\n    var loaded_hosts = controller.get('hosts');\n    it('Only REGISTERED hosts', function () {\n      expect(loaded_hosts.length).to.equal(2);\n    });\n    it('All hosts have progress 0', function () {\n      expect(loaded_hosts.everyProperty('progress', 0)).to.equal(true);\n    });\n    it('All hosts have progress 0', function () {\n      expect(loaded_hosts.everyProperty('progress', 0)).to.equal(true);\n    });\n    it('All host don\\'t have logTasks', function () {\n      expect(loaded_hosts.everyProperty('logTasks.length', 0)).to.equal(true);\n    });\n  });\n\n  describe('#hostHasClientsOnly', function () {\n    var tests = Em.A([\n      {\n        hosts: [\n          Em.Object.create({\n            hostName: 'host1',\n            logTasks: [\n              {Tasks: {role: 'HDFS_CLIENT'}},\n              {Tasks: {role: 'DATANODE'}}\n            ],\n            status: 'old_status',\n            progress: '10',\n            e: {status: 'old_status', progress: '10'}\n          }),\n          Em.Object.create({\n            hostName: 'host2',\n            logTasks: [\n              {Tasks: {role: 'HDFS_CLIENT'}}\n            ],\n            status: 'old_status',\n            progress: '10',\n            e: {status: 'success', progress: '100'}\n          })\n        ],\n        jsonError: false\n      },\n      {\n        hosts: [\n          Em.Object.create({\n            hostName: 'host1',\n            logTasks: [\n              {Tasks: {role: 'HDFS_CLIENT'}},\n              {Tasks: {role: 'DATANODE'}}\n            ],\n            status: 'old_status',\n            progress: '10',\n            e: {status: 'success', progress: '100'}\n          }),\n          Em.Object.create({\n            hostName: 'host2',\n            logTasks: [\n              {Tasks: {role: 'HDFS_CLIENT'}}\n            ],\n            status: 'old_status',\n            progress: '10',\n            e: {status: 'success', progress: '100'}\n          })\n        ],\n        jsonError: true\n      }\n    ]);\n    tests.forEach(function (test) {\n      it('', function () {\n        var controller = App.WizardStep9Controller.create({hosts: test.hosts});\n        controller.hostHasClientsOnly(test.jsonError);\n        test.hosts.forEach(function (host) {\n          expect(controller.get('hosts').findProperty('hostName', host.hostName).get('status')).to.equal(host.e.status);\n          expect(controller.get('hosts').findProperty('hostName', host.hostName).get('progress')).to.equal(host.e.progress);\n        });\n      });\n    });\n  });\n\n  describe('#onSuccessPerHost', function () {\n    var tests = Em.A([\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({status: 'pending'}),\n        actions: [],\n        e: {status: 'success'},\n        m: 'No tasks for host'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'success'},\n        m: 'All Tasks COMPLETED and cluster status INSTALLED'\n      },\n      {\n        cluster: {status: 'FAILED'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'info'},\n        m: 'All Tasks COMPLETED and cluster status FAILED'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'FAILED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'info'},\n        m: 'Not all Tasks COMPLETED and cluster status INSTALLED'\n      },\n      {\n        cluster: {status: 'FAILED'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'FAILED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'info'},\n        m: 'Not all Tasks COMPLETED and cluster status FAILED'\n      }\n    ]);\n    tests.forEach(function (test) {\n      var controller = App.WizardStep9Controller.create({content: {cluster: {status: test.cluster.status}}});\n      controller.onSuccessPerHost(test.actions, test.host);\n      it(test.m, function () {\n        expect(test.host.status).to.equal(test.e.status);\n      });\n    });\n  });\n\n  describe('#onErrorPerHost', function () {\n    var tests = Em.A([\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({status: 'pending'}),\n        actions: [],\n        e: {status: 'pending'},\n        isMasterFailed: false,\n        m: 'No tasks for host'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'FAILED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'warning'},\n        isMasterFailed: false,\n        m: 'One Task FAILED and cluster status INSTALLED'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'ABORTED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'warning'},\n        isMasterFailed: false,\n        m: 'One Task ABORTED and cluster status INSTALLED'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'TIMEDOUT'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'warning'},\n        isMasterFailed: false,\n        m: 'One Task TIMEDOUT and cluster status INSTALLED'\n      },\n      {\n        cluster: {status: 'PENDING'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'FAILED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'failed'},\n        isMasterFailed: true,\n        m: 'One Task FAILED and cluster status PENDING isMasterFailed true'\n      },\n      {\n        cluster: {status: 'PENDING'},\n        host: Em.Object.create({status: 'info'}),\n        actions: [\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {status: 'info'},\n        isMasterFailed: false,\n        m: 'One Task FAILED and cluster status PENDING isMasterFailed false'\n      }\n    ]);\n    tests.forEach(function (test) {\n      var controller = App.WizardStep9Controller.create({content: {cluster: {status: test.cluster.status}}, isMasterFailed: function () {\n        return test.isMasterFailed;\n      }});\n      controller.onErrorPerHost(test.actions, test.host);\n      it(test.m, function () {\n        expect(test.host.status).to.equal(test.e.status);\n      });\n    });\n  });\n\n  describe('#isMasterFailed', function () {\n    var tests = Em.A([\n      {\n        actions: [\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'DATANODE'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'TASKTRACKER'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'HBASE_REGIONSERVER'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'GANGLIA_MONITOR'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'SUPERVISOR'}}\n        ],\n        e: false,\n        m: 'No one Master is failed'\n      },\n      {\n        actions: [\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'NAMENODE'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'TASKTRACKER'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'HBASE_REGIONSERVER'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'GANGLIA_MONITOR'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'SUPERVISOR'}}\n        ],\n        e: true,\n        m: 'One Master is failed'\n      },\n      {\n        actions: [\n          {Tasks: {command: 'PENDING', status: 'FAILED', role: 'NAMENODE'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'TASKTRACKER'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'HBASE_REGIONSERVER'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'GANGLIA_MONITOR'}},\n          {Tasks: {command: 'INSTALL', status: 'FAILED', role: 'SUPERVISOR'}}\n        ],\n        e: false,\n        m: 'one Master is failed but command is not install'\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var controller = App.WizardStep9Controller.create();\n        expect(controller.isMasterFailed(test.actions)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#onInProgressPerHost', function () {\n    var tests = Em.A([\n      {\n        host: Em.Object.create({message: 'default_message'}),\n        actions: [\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {message: 'default_message', b: true},\n        m: 'All Tasks COMPLETED'\n      },\n      {\n        host: Em.Object.create({message: 'default_message'}),\n        actions: [\n          {Tasks: {status: 'IN_PROGRESS'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {message: 'default_message', b: false},\n        m: 'One Task IN_PROGRESS'\n      },\n      {\n        host: Em.Object.create({message: 'default_message'}),\n        actions: [\n          {Tasks: {status: 'QUEUED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {message: 'default_message', b: false},\n        m: 'One Task QUEUED'\n      },\n      {\n        host: Em.Object.create({message: 'default_message'}),\n        actions: [\n          {Tasks: {status: 'PENDING'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: {message: 'default_message', b: false},\n        m: 'One Task PENDING'\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var controller = App.WizardStep9Controller.create();\n        controller.onInProgressPerHost(test.actions, test.host);\n        expect(test.host.message == test.e.message).to.equal(test.e.b);\n      });\n    });\n  });\n\n  describe('#progressPerHost', function () {\n    var tests = Em.A([\n      {\n        cluster: {status: 'PENDING'},\n        host: Em.Object.create({progress: 0}),\n        actions: [\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'QUEUED'}},\n          {Tasks: {status: 'QUEUED'}},\n          {Tasks: {status: 'IN_PROGRESS'}}\n        ],\n        e: {ret: 17, host: '17'},\n        m: 'All types of status available. cluster status PENDING'\n      },\n      {\n        cluster: {status: 'PENDING'},\n        host: Em.Object.create({progress: 0}),\n        actions: [],\n        e: {ret: 33, host: '33'},\n        m: 'No tasks available. cluster status PENDING'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({progress: 0}),\n        actions: [],\n        e: {ret: 100, host: '100'},\n        m: 'No tasks available. cluster status INSTALLED'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        host: Em.Object.create({progress: 0}),\n        actions: [\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'QUEUED'}},\n          {Tasks: {status: 'QUEUED'}},\n          {Tasks: {status: 'IN_PROGRESS'}}\n        ],\n        e: {ret: 68, host: '68'},\n        m: 'All types of status available. cluster status INSTALLED'\n      },\n      {\n        cluster: {status: 'FAILED'},\n        host: Em.Object.create({progress: 0}),\n        actions: [],\n        e: {ret: 100, host: '100'},\n        m: 'Cluster status is not PENDING or INSTALLED'\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var controller = App.WizardStep9Controller.create({content: {cluster: {status: test.cluster.status}}});\n        var progress = controller.progressPerHost(test.actions, test.host);\n        expect(progress).to.equal(test.e.ret);\n        expect(test.host.progress).to.equal(test.e.host);\n      });\n    });\n  });\n\n  describe('#clearStep', function () {\n    var controller = App.WizardStep9Controller.create({hosts: [\n      {},\n      {},\n      {}\n    ]});\n    it('All to default values', function () {\n      controller.clearStep();\n      expect(controller.get('hosts.length')).to.equal(0);\n      expect(controller.get('status')).to.equal('info');\n      expect(controller.get('progress')).to.equal('0');\n      expect(controller.get('numPolls')).to.equal(1);\n    });\n  });\n\n  describe('#replacePolledData', function () {\n    var controller = App.WizardStep9Controller.create({polledData: [\n      {},\n      {},\n      {}\n    ]});\n    var newPolledData = [\n      {}\n    ];\n    controller.replacePolledData(newPolledData);\n    it('replacing polled data', function () {\n      expect(controller.get('polledData.length')).to.equal(newPolledData.length);\n    });\n  });\n\n  describe('#isSuccess', function () {\n    var tests = Em.A([\n      {\n        polledData: [\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'COMPLETED'}}\n        ],\n        e: true,\n        m: 'All tasks are COMPLETED'\n      },\n      {\n        polledData: [\n          {Tasks: {status: 'COMPLETED'}},\n          {Tasks: {status: 'FAILED'}}\n        ],\n        e: false,\n        m: 'Not all tasks are COMPLETED'\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var controller = App.WizardStep9Controller.create();\n        expect(controller.isSuccess(test.polledData)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#isStepFailed', function () {\n    var tests = Em.A([\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'GANGLIA_MONITOR', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'GANGLIA_MONITOR', status: 'FAILED'}},\n          {Tasks: {command: 'INSTALL', role: 'GANGLIA_MONITOR', status: 'PENDING'}}\n        ],\n        e: true,\n        m: 'GANGLIA_MONITOR 2/3 failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'GANGLIA_MONITOR', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'GANGLIA_MONITOR', status: 'PENDING'}},\n          {Tasks: {command: 'INSTALL', role: 'GANGLIA_MONITOR', status: 'PENDING'}}\n        ],\n        e: false,\n        m: 'GANGLIA_MONITOR 1/3 failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'HBASE_REGIONSERVER', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'HBASE_REGIONSERVER', status: 'FAILED'}},\n          {Tasks: {command: 'INSTALL', role: 'HBASE_REGIONSERVER', status: 'PENDING'}}\n        ],\n        e: true,\n        m: 'HBASE_REGIONSERVER 2/3 failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'HBASE_REGIONSERVER', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'HBASE_REGIONSERVER', status: 'PENDING'}},\n          {Tasks: {command: 'INSTALL', role: 'HBASE_REGIONSERVER', status: 'PENDING'}}\n        ],\n        e: false,\n        m: 'HBASE_REGIONSERVER 1/3 failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'TASKTRACKER', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'TASKTRACKER', status: 'FAILED'}},\n          {Tasks: {command: 'INSTALL', role: 'TASKTRACKER', status: 'PENDING'}}\n        ],\n        e: true,\n        m: 'TASKTRACKER 2/3 failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'TASKTRACKER', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'TASKTRACKER', status: 'PENDING'}},\n          {Tasks: {command: 'INSTALL', role: 'TASKTRACKER', status: 'PENDING'}}\n        ],\n        e: false,\n        m: 'TASKTRACKER 1/3 failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'FAILED'}},\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'PENDING'}}\n        ],\n        e: true,\n        m: 'DATANODE 2/3 failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'PENDING'}},\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'PENDING'}}\n        ],\n        e: false,\n        m: 'DATANODE 1/3 failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'NAMENODE', status: 'TIMEDOUT'}},\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'PENDING'}},\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'PENDING'}}\n        ],\n        e: true,\n        m: 'NAMENODE failed'\n      },\n      {\n        polledData: [\n          {Tasks: {command: 'INSTALL', role: 'NAMENODE', status: 'PENDING'}},\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'PENDING'}},\n          {Tasks: {command: 'INSTALL', role: 'DATANODE', status: 'PENDING'}}\n        ],\n        e: false,\n        m: 'Nothing failed failed'\n      }\n    ]);\n    tests.forEach(function (test) {\n      var controller = App.WizardStep9Controller.create({polledData: test.polledData});\n      it(test.m, function () {\n        expect(controller.isStepFailed()).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#finishState', function () {\n    var statuses = Em.A(['INSTALL FAILED', 'START FAILED', 'STARTED']);\n    it('Installer is finished', function () {\n      statuses.forEach(function (status) {\n        var controller = App.WizardStep9Controller.create({content: {cluster: {status: status}}});\n        var result = controller.finishState();\n        expect(result).to.equal(true);\n      });\n    });\n    it('Unknown cluster status ', function () {\n      var controller = App.WizardStep9Controller.create({content: {cluster: {status: 'FAKE_STATUS'}}});\n      var result = controller.finishState();\n      expect(result).to.equal(false);\n    });\n    it('for INSTALLED status should call isServicesStarted', function () {\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n      c.set('content', {cluster: {status: 'INSTALLED'}});\n      var polledData = {'{}': {}};\n      sinon.stub(c, 'isServicesStarted', Em.K);\n      c.finishState(polledData);\n      expect(c.isServicesStarted.calledWith(polledData)).to.equal(true);\n      c.isServicesStarted.restore();\n      c.togglePreviousSteps.restore();\n    });\n    it('for PENDING status should call isServicesInstalled', function () {\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n      c.set('content', {cluster: {status: 'PENDING'}});\n      var polledData = {'{}': {}};\n      sinon.stub(c, 'isServicesInstalled', Em.K);\n      c.finishState(polledData);\n      expect(c.isServicesInstalled.calledWith(polledData)).to.equal(true);\n      c.isServicesInstalled.restore();\n      c.togglePreviousSteps.restore();\n    });\n  });\n\n  describe('#setLogTasksStatePerHost', function () {\n    var tests = Em.A([\n      {\n        tasksPerHost: [\n          {Tasks: {id: 1, status: 'COMPLETED'}},\n          {Tasks: {id: 2, status: 'COMPLETED'}}\n        ],\n        tasks: [],\n        e: {m: 'COMPLETED', l: 2},\n        m: 'host didn\\'t have tasks and got 2 new'\n      },\n      {\n        tasksPerHost: [\n          {Tasks: {id: 1, status: 'COMPLETED'}},\n          {Tasks: {id: 2, status: 'COMPLETED'}}\n        ],\n        tasks: [\n          {Tasks: {id: 1, status: 'IN_PROGRESS'}},\n          {Tasks: {id: 2, status: 'IN_PROGRESS'}}\n        ],\n        e: {m: 'COMPLETED', l: 2},\n        m: 'host had 2 tasks and got both updated'\n      },\n      {\n        tasksPerHost: [],\n        tasks: [\n          {Tasks: {id: 1, status: 'IN_PROGRESS'}},\n          {Tasks: {id: 2, status: 'IN_PROGRESS'}}\n        ],\n        e: {m: 'IN_PROGRESS', l: 2},\n        m: 'host had 2 tasks and didn\\'t get updates'\n      },\n      {\n        tasksPerHost: [\n          {Tasks: {id: 1, status: 'COMPLETED'}},\n          {Tasks: {id: 2, status: 'COMPLETED'}},\n          {Tasks: {id: 3, status: 'COMPLETED'}}\n        ],\n        tasks: [\n          {Tasks: {id: 1, status: 'IN_PROGRESS'}},\n          {Tasks: {id: 2, status: 'IN_PROGRESS'}}\n        ],\n        e: {m: 'COMPLETED', l: 3},\n        m: 'host had 2 tasks and got both updated and 1 new'\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var controller = App.WizardStep9Controller.create({hosts: [Em.Object.create({logTasks: test.tasks})]});\n        controller.setLogTasksStatePerHost(test.tasksPerHost, controller.get('hosts')[0]);\n        expect(controller.get('hosts')[0].get('logTasks').everyProperty('Tasks.status', test.e.m)).to.equal(true);\n        expect(controller.get('hosts')[0].get('logTasks.length')).to.equal(test.e.l);\n      });\n    });\n  });\n\n  describe('#parseHostInfo', function () {\n\n    var tests = Em.A([\n      {\n        cluster: {status: 'PENDING'},\n        hosts: Em.A([\n          Em.Object.create({name: 'host1', status: '', message: '', progress: '', logTasks: []}),\n          Em.Object.create({name: 'host2', status: '', message: '', progress: '', logTasks: []})\n        ]),\n        polledData: {\n          tasks: [\n            {Tasks: {host_name: 'host2', status: 'COMPLETED'}},\n            {Tasks: {host_name: 'host2', status: 'COMPLETED'}}\n          ]\n        },\n        e: {\n          hosts: {\n            host1: {progress: '33'},\n            host2: {progress: '33'}\n          },\n          progress: '33'\n        },\n        m: 'Two hosts. One host without tasks. Second host has all tasks COMPLETED. Cluster status is PENDING'\n      },\n      {\n        cluster: {status: 'PENDING'},\n        hosts: Em.A([\n          Em.Object.create({name: 'host1', status: '', message: '', progress: '', logTasks: []}),\n          Em.Object.create({name: 'host2', status: '', message: '', progress: '', logTasks: []})\n        ]),\n        polledData: {\n          tasks: [\n            {Tasks: {host_name: 'host1', status: 'IN_PROGRESS'}},\n            {Tasks: {host_name: 'host2', status: 'IN_PROGRESS'}}\n          ]\n        },\n        e: {hosts: {host1: {progress: '12'}, host2: {progress: '12'}}, progress: '12'},\n        m: 'Two hosts. Each host has one task IN_PROGRESS. Cluster status is PENDING'\n      },\n      {\n        cluster: {status: 'PENDING'},\n        hosts: Em.A([\n          Em.Object.create({name: 'host1', status: '', message: '', progress: '', logTasks: []}),\n          Em.Object.create({name: 'host2', status: '', message: '', progress: '', logTasks: []})\n        ]),\n        polledData: {\n          tasks: [\n            {Tasks: {host_name: 'host1', status: 'QUEUED'}},\n            {Tasks: {host_name: 'host2', status: 'QUEUED'}}\n          ]\n        },\n        e: {\n          hosts: {\n            host1: {progress: '3'},\n            host2: {progress: '3'}\n          },\n          progress: '3'\n        },\n        m: 'Two hosts. Each host has one task QUEUED. Cluster status is PENDING'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        hosts: Em.A([\n          Em.Object.create({name: 'host1', status: '', message: '', progress: '', logTasks: []}),\n          Em.Object.create({name: 'host2', status: '', message: '', progress: '', logTasks: []})\n        ]),\n        polledData: {\n          tasks: [\n            {Tasks: {host_name: 'host2', status: 'COMPLETED'}},\n            {Tasks: {host_name: 'host2', status: 'COMPLETED'}}\n          ]\n        },\n        e: {\n          hosts: {\n            host1: {progress: '100'},\n            host2: {progress: '100'}\n          },\n          progress: '100'\n        },\n        m: 'Two hosts. One host without tasks. Second host has all tasks COMPLETED. Cluster status is INSTALLED'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        hosts: Em.A([\n          Em.Object.create({name: 'host1', status: '', message: '', progress: '', logTasks: []}),\n          Em.Object.create({name: 'host2', status: '', message: '', progress: '', logTasks: []})\n        ]),\n        polledData: {\n          tasks: [\n            {Tasks: {host_name: 'host1', status: 'IN_PROGRESS'}},\n            {Tasks: {host_name: 'host2', status: 'IN_PROGRESS'}}\n          ]\n        },\n        e: {\n          hosts: {\n            host1: {progress: '58'},\n            host2: {progress: '58'}\n          },\n          progress: '58'\n        },\n        m: 'Two hosts. Each host has one task IN_PROGRESS. Cluster status is INSTALLED'\n      },\n      {\n        cluster: {status: 'INSTALLED'},\n        hosts: Em.A([\n          Em.Object.create({name: 'host1', status: '', message: '', progress: '', logTasks: []}),\n          Em.Object.create({name: 'host2', status: '', message: '', progress: '', logTasks: []})\n        ]),\n        polledData: {\n          tasks: [\n            {Tasks: {host_name: 'host1', status: 'QUEUED'}},\n            {Tasks: {host_name: 'host2', status: 'QUEUED'}}\n          ]\n        },\n        e: {\n          hosts: {\n            host1: {progress: '40'},\n            host2: {progress: '40'}\n          },\n          progress: '40'\n        },\n        m: 'Two hosts. Each host has one task QUEUED. Cluster status is INSTALLED'\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var controller = App.WizardStep9Controller.create({hosts: test.hosts, content: {cluster: {status: test.cluster.status}}, finishState: function () {\n          return false;\n        }});\n        var logTasksChangesCounter = controller.get('logTasksChangesCounter');\n        controller.parseHostInfo(test.polledData);\n        expect(controller.get('logTasksChangesCounter')).to.equal(logTasksChangesCounter + 1);\n        for (var name in test.e.hosts) {\n          if (test.e.hosts.hasOwnProperty(name)) {\n            expect(controller.get('hosts').findProperty('name', name).get('progress')).to.equal(test.e.hosts[name].progress);\n          }\n        }\n        expect(controller.get('progress')).to.equal(test.e.progress);\n      });\n    });\n    it('shouldn\\'t do nothing if polledData.Requests.id != requestId', function () {\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n      c.set('content', {cluster: {requestId: 1}});\n      var polledData = {Requests: {id: 2}, tasks: []};\n      sinon.spy(c, 'finishState');\n      expect(c.parseHostInfo(polledData)).to.equal(false);\n      expect(c.finishState.called).to.equal(false);\n      c.finishState.restore();\n      c.togglePreviousSteps.restore();\n    });\n  });\n\n  describe('#isAllComponentsInstalledSuccessCallback', function () {\n\n    describe('', function () {\n      var hosts = Em.A([\n        Em.Object.create({name: 'host1', status: 'failed', expectedStatus: 'heartbeat_lost'}),\n        Em.Object.create({name: 'host2', status: 'info', expectedStatus: 'heartbeat_lost'}),\n        Em.Object.create({name: 'host3', status: 'warning', expectedStatus: 'warning'}),\n        Em.Object.create({name: 'host4', status: 'info', expectedStatus: 'info'})\n      ]);\n      var heartbeatLostData = {\n        \"items\": [\n          {\n            \"Hosts\": {\n              \"cluster_name\": \"c1\",\n              \"host_name\": \"host1\",\n              \"host_state\": \"HEARTBEAT_LOST\"\n            },\n            \"host_components\": [\n              {\n                \"HostRoles\": {\n                  \"cluster_name\": \"c1\",\n                  \"component_name\": \"NAMENODE\",\n                  \"host_name\": \"host1\",\n                  \"state\": \"INSTALL_FAILED\"\n                }\n              }\n            ]\n          },\n          {\n            \"Hosts\": {\n              \"cluster_name\": \"c1\",\n              \"host_name\": \"host2\",\n              \"host_state\": \"HEARTBEAT_LOST\"\n            },\n            \"host_components\": [\n              {\n                \"HostRoles\": {\n                  \"cluster_name\": \"c1\",\n                  \"component_name\": \"ZOOKEEPER_SERVER\",\n                  \"host_name\": \"host2\",\n                  \"state\": \"UNKNOWN\"\n                }\n              }\n            ]\n          },\n          {\n            \"Hosts\": {\n              \"cluster_name\": \"c1\",\n              \"host_name\": \"host3\",\n              \"host_state\": \"HEALTHY\"\n            },\n            \"host_components\": [\n              {\n                \"HostRoles\": {\n                  \"cluster_name\": \"c1\",\n                  \"component_name\": \"DATANODE\",\n                  \"host_name\": \"host3\",\n                  \"state\": \"INSTALL_FAILED\"\n                }\n              }\n            ]\n          },\n          {\n            \"Hosts\": {\n              \"cluster_name\": \"c1\",\n              \"host_name\": \"host4\",\n              \"host_state\": \"HEALTHY\"\n            },\n            \"host_components\": [\n              {\n                \"HostRoles\": {\n                  \"cluster_name\": \"c1\",\n                  \"component_name\": \"PIG\",\n                  \"host_name\": \"host4\",\n                  \"state\": \"INSTALLED\"\n                }\n              },\n              {\n                \"HostRoles\": {\n                  \"cluster_name\": \"c1\",\n                  \"component_name\": \"DATANODE\",\n                  \"host_name\": \"host3\",\n                  \"state\": \"INSTALLED\"\n                }\n              }\n            ]\n          }\n        ]\n      };\n\n      var controller = App.WizardStep9Controller.create({hosts: hosts, content: {controllerName: 'installerController'}});\n\n      App.testMode = true;\n      // Action\n      controller.isAllComponentsInstalledSuccessCallback(heartbeatLostData);\n\n\n      // Validation  for the status of all hosts.\n      controller.get('hosts').forEach(function (test) {\n        var status = heartbeatLostData.items.findProperty('Hosts.host_name', test.get('name')).Hosts.host_state;\n        it('Host \"' + test.get('name') + '\"' + ' with status \"' + status + '\" ', function () {\n          expect(test.get('status')).to.equal(test.get('expectedStatus'));\n        });\n      });\n\n    });\n\n    describe('', function () {\n      var noHeartbeatLostData = {\n        \"items\": [\n          {\n            \"Hosts\": {\n              \"cluster_name\": \"c1\",\n              \"host_name\": \"host1\",\n              \"host_state\": \"HEALTHY\"\n            },\n            \"host_components\": [\n              {\n                \"HostRoles\": {\n                  \"cluster_name\": \"c1\",\n                  \"component_name\": \"NAMENODE\",\n                  \"host_name\": \"host1\",\n                  \"state\": \"INSTALL_FAILED\"\n                }\n              }\n            ]\n          }\n        ]\n      };\n\n      var hosts = Em.A([Em.Object.create({name: 'host1', status: 'failed'})]);\n      // When there is no heartbeat lost for any host and cluster failed install task, Refreshing the page should not launch start all services request.\n      // Below transitions are possibilities in this function\n      // PENDING -> INSTALL or PENDING. This transition happens when install all services request is completed successfully.\n      // INSTALL FAILED -> INSTALL FAILED. No transition should happen when install all services request fails and then user hits refresh\n      // Cluster is not expected to enter this function in other states: INSTALLED, START FAILED, STARTED\n\n      var statuses = Em.A(['INSTALL FAILED', 'INSTALLED', 'START FAILED', 'STARTED']);  // Cluster in any of this states should have no effect on the state from this function\n      statuses.forEach(function (priorStatus) {\n        var controller = App.WizardStep9Controller.create({hosts: hosts, content: {controllerName: 'installerController', cluster: {status: priorStatus}}, togglePreviousSteps: function () {\n        }});\n        // Action\n        controller.isAllComponentsInstalledSuccessCallback(noHeartbeatLostData);\n        // Validation for the cluster state.\n        var actualStatus = controller.get('content.cluster.status');\n        it('Cluster state before entering the function \"' + priorStatus + '\"', function () {\n          expect(actualStatus).to.equal(priorStatus);\n        });\n      });\n    });\n  });\n\n  // isServicesInstalled is called after every poll for \"Install All Services\" request.\n  // This function should result into a call to \"Start All Services\" request only if install request completed successfully.\n  describe('#isServicesInstalled', function () {\n\n    var hostStateJsonData = {\n      \"items\": [\n        {\n          \"Hosts\": {\n            \"cluster_name\": \"c1\",\n            \"host_name\": \"ambari-1.c.apache.internal\",\n            \"host_state\": \"HEALTHY\"\n          },\n          \"host_components\": [\n            {\n              \"HostRoles\": {\n                \"cluster_name\": \"c1\",\n                \"component_name\": \"GANGLIA_MONITOR\",\n                \"host_name\": \"ambari-1.c.apache.internal\",\n                \"state\": \"STARTED\"\n              }\n            }\n          ]\n        }\n      ]\n    };\n    var hosts = Em.A([Em.Object.create({name: 'host1', progress: '33', status: 'info'}),\n      Em.Object.create({name: 'host2', progress: '33', status: 'info'})]);\n    // polledData has all hosts with status completed to trigger transition from install->start request.\n    var polledData = Em.A([Em.Object.create({Tasks: {name: 'host1', status: 'COMPLETED'}}),\n      Em.Object.create({Tasks: {name: 'host2', status: 'COMPLETED'}})]);\n    var controller = App.WizardStep9Controller.create({hosts: hosts, content: {controllerName: 'installerController',\n      cluster: {status: 'PENDING', name: 'c1'}}, launchStartServices: function () {\n      return true;\n    }});\n    var tests = Em.A([\n      // controller has \"status\" value as \"info\" initially. If no errors are encountered then wizard stages\n      // transition info->success, on error info->error, on warning info->warning\n      {status: 'info', e: {startServicesCalled: true}, m: 'If no failed tasks then start services request should be called'},\n      {status: 'failed', e: {startServicesCalled: false}, m: 'If install request has failed tasks then start services call should not be called'}\n    ]);\n\n    beforeEach(function () {\n      App.testMode = true;\n      sinon.spy(controller, 'launchStartServices');\n      sinon.stub($, 'ajax').yieldsTo('success', hostStateJsonData);\n    });\n\n    afterEach(function () {\n      App.testMode = false;\n      controller.launchStartServices.restore();\n      $.ajax.restore();\n    });\n\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        controller.set('status', test.status);\n        //Action\n        controller.isServicesInstalled(polledData);\n        //Validation\n        expect(controller.launchStartServices.called).to.equal(test.e.startServicesCalled);\n      });\n    });\n  });\n\n  // On completion of Start all services error callback function,\n  // Cluster Status should be INSTALL FAILED\n  // All progress bar on the screen should be finished (100%) with blue color.\n  // Retry button should be enabled, next button should be disabled\n\n  describe('#launchStartServicesErrorCallback', function () {\n    App.testMode = true;\n    // override the actual function\n    App.popup = {\n      setErrorPopup: function () {\n        return true;\n      }\n    };\n    var hosts = Em.A([Em.Object.create({name: 'host1', progress: '33', status: 'info'}), Em.Object.create({name: 'host2', progress: '33', status: 'info'})]);\n    var controller = App.WizardStep9Controller.create({hosts: hosts, content: {controllerName: 'installerController', cluster: {status: 'PENDING', name: 'c1'}}, togglePreviousSteps: function () {\n    }});\n\n    //Action\n    controller.launchStartServicesErrorCallback({status: 500, statusTesxt: 'Server Error'}, {}, '', {});\n    it('Cluster Status should be INSTALL FAILED', function () {\n      expect(controller.get('content.cluster.status')).to.equal('INSTALL FAILED');\n    });\n\n    it('Main progress bar on the screen should be finished (100%) with red color', function () {\n      expect(controller.get('progress')).to.equal('100');\n      expect(controller.get('status')).to.equal('failed');\n    });\n\n    it('All Host progress bars on the screen should be finished (100%) with blue color', function () {\n      controller.get('hosts').forEach(function (host) {\n        expect(host.get('progress')).to.equal('100');\n        expect(host.get('status')).to.equal('info');\n      });\n    });\n\n    it('Next button should be disabled', function () {\n      expect(controller.get('isSubmitDisabled')).to.equal(true);\n    });\n\n    it('Retry button should be visible', function () {\n      expect(controller.get('showRetry')).to.equal(true);\n    })\n\n  });\n\n  describe('#submit', function () {\n    it('should call App.router.send', function () {\n      sinon.stub(App.router, 'send', Em.K);\n      c.submit();\n      expect(App.router.send.calledWith('next')).to.equal(true);\n      App.router.send.restore();\n    });\n  });\n\n  describe('#back', function () {\n    beforeEach(function () {\n      sinon.stub(App.router, 'send', Em.K);\n    });\n    afterEach(function () {\n      App.router.send.restore();\n    });\n    it('should call App.router.send', function () {\n      c.reopen({isSubmitDisabled: false});\n      c.back();\n      expect(App.router.send.calledWith('back')).to.equal(true);\n    });\n    it('shouldn\\'t call App.router.send', function () {\n      c.reopen({isSubmitDisabled: true});\n      c.back();\n      expect(App.router.send.called).to.equal(false);\n    });\n  });\n\n  describe('#loadStep', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'clearStep', Em.K);\n      sinon.stub(c, 'loadHosts', Em.K);\n    });\n    afterEach(function () {\n      c.clearStep.restore();\n      c.loadHosts.restore();\n    });\n    it('should call clearStep', function () {\n      c.loadStep();\n      expect(c.clearStep.calledOnce).to.equal(true);\n    });\n    it('should call loadHosts', function () {\n      c.loadStep();\n      expect(c.loadHosts.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#startPolling', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'getLogsByRequestErrorCallback', Em.K);\n    });\n    afterEach(function () {\n      c.getLogsByRequestErrorCallback.restore();\n    });\n    it('should set isSubmitDisabled to true', function () {\n      c.set('isSubmitDisabled', false);\n      c.startPolling();\n      expect(c.get('isSubmitDisabled')).to.equal(true);\n    });\n    it('should call doPolling', function () {\n      sinon.stub(c, 'doPolling', Em.K);\n      c.startPolling();\n      expect(c.doPolling.calledOnce).to.equal(true);\n      c.doPolling.restore();\n    });\n  });\n\n  describe('#loadLogData', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'getLogsByRequest', Em.K);\n      c.set('wizardController', Em.Object.create({\n        cluster: {oldRequestsId: []},\n        getDBProperty: function (name) {\n          return this.get(name);\n        }\n      }));\n    });\n    afterEach(function () {\n      c.getLogsByRequest.restore();\n    });\n    it('shouldn\\'t call getLogsByRequest if no requestIds', function () {\n      c.set('wizardController.cluster.oldRequestsId', []);\n      c.loadLogData();\n      expect(c.getLogsByRequest.called).to.equal(false);\n    });\n    it('should call getLogsByRequest 3 times', function () {\n      c.set('wizardController.cluster.oldRequestsId', [1, 2, 3]);\n      c.loadLogData();\n      expect(c.getLogsByRequest.calledThrice).to.equal(true);\n    });\n    it('should set POLL_INTERVAL to 1 if testMode enabled', function () {\n      App.set('testMode', true);\n      c.set('wizardController.cluster.oldRequestsId', [1, 2, 3]);\n      c.loadLogData();\n      expect(c.get('POLL_INTERVAL')).to.equal(1);\n      App.set('testMode', false);\n    });\n  });\n\n  describe('#loadCurrentTaskLog', function () {\n    beforeEach(function () {\n      sinon.spy(App.ajax, 'send');\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n    });\n    it('shouldn\\'t call App.ajax.send if no currentOpenTaskId', function () {\n      c.set('currentOpenTaskId', null);\n      c.loadCurrentTaskLog();\n      expect(App.ajax.send.called).to.equal(false);\n    });\n    it('should call App.ajax.send with provided data', function () {\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n      c.set('currentOpenTaskId', 1);\n      c.set('currentOpenTaskRequestId', 2);\n      c.set('content', {cluster: {name: 3}});\n      c.loadCurrentTaskLog();\n      expect(App.ajax.send.args[0][0].data).to.eql({taskId: 1, requestId: 2, clusterName: 3, sync: true});\n      c.togglePreviousSteps.restore();\n    });\n  });\n\n  describe('#loadCurrentTaskLogSuccessCallback', function () {\n    it('should increment logTasksChangesCounter', function () {\n      c.set('logTasksChangesCounter', 0);\n      c.loadCurrentTaskLogSuccessCallback();\n      expect(c.get('logTasksChangesCounter')).to.equal(1);\n    });\n    it('should update stdout, stderr', function () {\n      c.set('currentOpenTaskId', 1);\n      c.reopen({\n        hosts: [\n          Em.Object.create({\n            name: 'h1',\n            logTasks: [\n              {Tasks: {id: 1, stdout: '', stderr: ''}}\n            ]\n          })\n        ]\n      });\n      var data = {Tasks: {host_name: 'h1', id: 1, stderr: 'stderr', stdout: 'stdout'}};\n      c.loadCurrentTaskLogSuccessCallback(data);\n      var t = c.get('hosts')[0].logTasks[0].Tasks;\n      expect(t.stdout).to.equal('stdout');\n      expect(t.stderr).to.equal('stderr');\n    });\n    it('shouldn\\'t update stdout, stderr', function () {\n      c.set('currentOpenTaskId', 1);\n      c.reopen({\n        hosts: [\n          Em.Object.create({\n            name: 'h1',\n            logTasks: [\n              {Tasks: {id: 2, stdout: '', stderr: ''}}\n            ]\n          })\n        ]\n      });\n      var data = {Tasks: {host_name: 'h1', id: 1, stderr: 'stderr', stdout: 'stdout'}};\n      c.loadCurrentTaskLogSuccessCallback(data);\n      var t = c.get('hosts')[0].logTasks[0].Tasks;\n      expect(t.stdout).to.equal('');\n      expect(t.stderr).to.equal('');\n    });\n    it('shouldn\\'t update stdout, stderr (2)', function () {\n      c.set('currentOpenTaskId', 1);\n      c.reopen({\n        hosts: [\n          Em.Object.create({\n            name: 'h2',\n            logTasks: [\n              {Tasks: {id: 1, stdout: '', stderr: ''}}\n            ]\n          })\n        ]\n      });\n      var data = {Tasks: {host_name: 'h1', id: 1, stderr: 'stderr', stdout: 'stdout'}};\n      c.loadCurrentTaskLogSuccessCallback(data);\n      var t = c.get('hosts')[0].logTasks[0].Tasks;\n      expect(t.stdout).to.equal('');\n      expect(t.stderr).to.equal('');\n    });\n  });\n\n  describe('#loadCurrentTaskLogErrorCallback', function () {\n    it('should set currentOpenTaskId to 0', function () {\n      c.set('currentOpenTaskId', 123);\n      c.loadCurrentTaskLogErrorCallback();\n      expect(c.get('currentOpenTaskId')).to.equal(0);\n    });\n  });\n\n  describe('#getLogsByRequest', function () {\n    beforeEach(function () {\n      sinon.spy(App.ajax, 'send');\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n      c.togglePreviousSteps.restore();\n    });\n    it('should call App.ajax.send with provided data', function () {\n      var polling = 1;\n      var requestId = 2;\n      c.set('content', {cluster: {name: 3}});\n      c.set('numPolls', 4);\n      c.getLogsByRequest(polling, requestId);\n      expect(App.ajax.send.args[0][0].data).to.eql({polling: polling, requestId: requestId, cluster: 3, numPolls: 4});\n    });\n  });\n\n  describe('#doPolling', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'getLogsByRequest', Em.K);\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n    });\n    afterEach(function () {\n      c.getLogsByRequest.restore();\n      c.togglePreviousSteps.restore();\n    });\n    it('should increment numPolls if testMode', function () {\n      App.set('testMode', true);\n      c.set('numPolls', 0);\n      c.doPolling();\n      expect(c.get('numPolls')).to.equal(1);\n      App.set('testMode', false);\n    });\n    it('should call getLogsByRequest', function () {\n      c.set('content', {cluster: {requestId: 1}});\n      c.doPolling();\n      expect(c.getLogsByRequest.calledWith(true, 1)).to.equal(true);\n    });\n  });\n\n  describe('#isAllComponentsInstalled', function () {\n    beforeEach(function () {\n      sinon.spy(App.ajax, 'send');\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n      sinon.stub(c, 'saveClusterStatus', Em.K);\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n      c.togglePreviousSteps.restore();\n      c.saveClusterStatus.restore();\n    });\n    it('shouldn\\'t call App.ajax.send', function () {\n      c.set('content', {controllerName: 'addServiceController'});\n      c.isAllComponentsInstalled();\n      expect(App.ajax.send.called).to.equal(false);\n    });\n    it('shouldn\\'t call App.ajax.send (2)', function () {\n      c.set('content', {controllerName: 'addHostController'});\n      c.isAllComponentsInstalled();\n      expect(App.ajax.send.called).to.equal(false);\n    });\n    it('should call App.ajax.send', function () {\n      c.set('content', {cluster: {name: 'n'}, controllerName: 'installerController'});\n      c.isAllComponentsInstalled();\n      expect(App.ajax.send.args[0][0].data).to.eql({cluster: 'n'});\n    });\n  });\n\n  describe('#isAllComponentsInstalledErrorCallback', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'saveClusterStatus', Em.K);\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n    });\n    afterEach(function () {\n      c.saveClusterStatus.restore();\n      c.togglePreviousSteps.restore();\n    });\n    it('should call saveClusterStatus', function () {\n      c.isAllComponentsInstalledErrorCallback({});\n      expect(c.saveClusterStatus.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#saveClusterStatus', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n    });\n    afterEach(function () {\n      c.togglePreviousSteps.restore();\n    });\n    it('in testMode should set content.cluster', function () {\n      var d = {n: 'n'};\n      c.set('content', {cluster: ''});\n      App.set('testMode', true);\n      c.saveClusterStatus(d);\n      expect(c.get('content.cluster')).to.eql(d);\n      App.set('testMode', false);\n    });\n    it('if testMode is false should use content.controller', function () {\n      var d = {n: 'n'},\n        obj = Em.Object.create({\n          saveClusterStatus: Em.K\n        });\n      sinon.stub(App.router, 'get', function () {\n        return obj;\n      });\n      sinon.spy(obj, 'saveClusterStatus');\n      c.set('content', {cluster: ''});\n      App.set('testMode', false);\n      c.saveClusterStatus(d);\n      expect(obj.saveClusterStatus.calledWith(d)).to.eql(true);\n      App.set('testMode', true);\n      obj.saveClusterStatus.restore();\n      App.router.get.restore();\n    });\n  });\n\n  describe('#saveInstalledHosts', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n    });\n    afterEach(function () {\n      c.togglePreviousSteps.restore();\n    });\n    it('if testMode is false should use content.controller', function () {\n      var d = {n: 'n'},\n        obj = Em.Object.create({\n          saveInstalledHosts: Em.K\n        });\n      sinon.stub(App.router, 'get', function () {\n        return obj;\n      });\n      sinon.spy(obj, 'saveInstalledHosts');\n      c.set('content', {cluster: ''});\n      App.set('testMode', false);\n      c.saveInstalledHosts(d);\n      expect(obj.saveInstalledHosts.calledWith(d)).to.eql(true);\n      App.set('testMode', true);\n      obj.saveInstalledHosts.restore();\n      App.router.get.restore();\n    });\n  });\n\n  describe('#getComponentMessage', function () {\n    var tests = Em.A([\n      {\n        clients: ['c1'],\n        m: 'One client',\n        e: 'c1'\n      },\n      {\n        clients: ['c1', 'c2'],\n        m: 'Two clients',\n        e: 'c1 and c2'\n      },\n      {\n        clients: ['c1', 'c2', 'c3'],\n        m: 'Three clients',\n        e: 'c1, c2 and c3'\n      },\n      {\n        clients: ['c1', 'c2', 'c3', 'c4'],\n        m: 'Four clients',\n        e: 'c1, c2, c3 and c4'\n      },\n      {\n        clients: ['c1', 'c2', 'c3', 'c4', 'c5'],\n        m: 'Five clients',\n        e: 'c1, c2, c3, c4 and c5'\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        var label = c.getComponentMessage(test.clients);\n        expect(label).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#togglePreviousSteps', function () {\n    beforeEach(function () {\n      sinon.stub(obj, 'setStepsEnable', Em.K);\n      sinon.stub(obj, 'setLowerStepsDisable', Em.K);\n      sinon.stub(App.router, 'get', function () {\n        return obj;\n      });\n    });\n    afterEach(function () {\n      App.router.get.restore();\n      obj.setStepsEnable.restore();\n      obj.setLowerStepsDisable.restore();\n    });\n    it('shouldn\\'t do nothing on testMode', function () {\n      App.set('testMode', true);\n      c.togglePreviousSteps();\n      expect(App.router.get.called).to.equal(false);\n      App.set('testMode', false);\n    });\n    Em.A([\n        {\n          status: 'INSTALL FAILED',\n          controllerName: 'installerController',\n          e: {\n            setStepsEnable: true,\n            setLowerStepsDisable: false\n          }\n        },\n        {\n          status: 'STARTED',\n          controllerName: 'installerController',\n          e: {\n            setStepsEnable: false,\n            setLowerStepsDisable: true\n          }\n        },\n        {\n          status: 'INSTALL FAILED',\n          controllerName: 'addServiceController',\n          e: {\n            setStepsEnable: false,\n            setLowerStepsDisable: true\n          }\n        },\n        {\n          status: 'STARTED',\n          controllerName: 'addServiceController',\n          e: {\n            setStepsEnable: false,\n            setLowerStepsDisable: true\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.status + ' ' + test.controllerName, function () {\n          App.set('testMode', false);\n          c.reopen({content: {cluster: {status: test.status}, controllerName: test.controllerName}});\n          c.togglePreviousSteps();\n          expect(App.router.get.calledWith('installerController')).to.equal(true);\n          if (test.e.setStepsEnable) {\n            expect(obj.setStepsEnable.calledOnce).to.equal(true);\n          }\n          else {\n            expect(obj.setStepsEnable.called).to.equal(false);\n          }\n          if (test.e.setLowerStepsDisable) {\n            expect(obj.setLowerStepsDisable.calledWith(9)).to.equal(true);\n          }\n          else {\n            expect(obj.setLowerStepsDisable.called).to.equal(false);\n          }\n        });\n      });\n  });\n\n  describe('#navigateStep', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n      sinon.stub(c, 'loadStep', Em.K);\n      sinon.stub(c, 'loadLogData', Em.K);\n      sinon.stub(c, 'startPolling', Em.K);\n    });\n    afterEach(function () {\n      c.togglePreviousSteps.restore();\n      c.loadStep.restore();\n      c.loadLogData.restore();\n      c.startPolling.restore();\n    });\n    it('should set custom data in testMode', function () {\n      App.set('testMode', true);\n      c.reopen({content: {cluster: {status: 'st', isCompleted: true, requestId: 0}}});\n      c.navigateStep();\n      expect(c.get('content.cluster.status')).to.equal('PENDING');\n      expect(c.get('content.cluster.isCompleted')).to.equal(false);\n      expect(c.get('content.cluster.requestId')).to.equal(1);\n      App.set('testMode', false);\n    });\n    it('isCompleted = true, requestId = 1', function () {\n      App.set('testMode', false);\n      c.reopen({content: {cluster: {isCompleted: true, requestId: 1}}});\n      c.navigateStep();\n      expect(c.loadStep.calledOnce).to.equal(true);\n      expect(c.loadLogData.calledWith(1)).to.equal(true);\n      expect(c.get('progress')).to.equal('100');\n    });\n    it('isCompleted = false, requestId = 1, status = INSTALL FAILED', function () {\n      App.set('testMode', false);\n      c.reopen({content: {cluster: {status: 'INSTALL FAILED', isCompleted: false, requestId: 1}}});\n      c.navigateStep();\n      expect(c.loadStep.calledOnce).to.equal(true);\n      expect(c.loadLogData.calledWith(1)).to.equal(true);\n    });\n    it('isCompleted = false, requestId = 1, status = START FAILED', function () {\n      App.set('testMode', false);\n      c.reopen({content: {cluster: {status: 'START FAILED', isCompleted: false, requestId: 1}}});\n      c.navigateStep();\n      expect(c.loadStep.calledOnce).to.equal(true);\n      expect(c.loadLogData.calledWith(1)).to.equal(true);\n    });\n    it('isCompleted = false, requestId = 1, status = OTHER', function () {\n      App.set('testMode', false);\n      c.reopen({content: {cluster: {status: 'STARTED', isCompleted: false, requestId: 1}}});\n      c.navigateStep();\n      expect(c.loadStep.calledOnce).to.equal(true);\n      expect(c.loadLogData.calledWith(1)).to.equal(true);\n      expect(c.startPolling.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#launchStartServices', function () {\n    beforeEach(function () {\n      sinon.spy(App.ajax, 'send');\n      sinon.stub(c, 'togglePreviousSteps', Em.K);\n      sinon.stub(c, 'saveClusterStatus', Em.K);\n      c.reopen({content: {}});\n    });\n    afterEach(function () {\n      App.ajax.send.restore();\n      c.togglePreviousSteps.restore();\n      c.saveClusterStatus.restore();\n    });\n    it('should set numPolls to 6 in testMode', function () {\n      App.set('testMode', true);\n      c.set('numPolls', 0);\n      c.launchStartServices();\n      expect(c.get('numPolls')).to.equal(6);\n      App.set('testMode', false);\n    });\n    Em.A([\n        {\n          controllerName: 'installerController',\n          clusterName: 'c1',\n          e: {\n            name: 'wizard.step9.installer.launch_start_services'\n          }\n        },\n        {\n          controllerName: 'addHostController',\n          clusterName: 'c1',\n          wizardController: Em.Object.create({\n            getDBProperty: function () {\n              return {h1: '', h2: ''};\n            }\n          }),\n          e: {\n            name: 'wizard.step9.add_host.launch_start_services',\n            data: 'host_name.in(h1,h2)'\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.controllerName, function () {\n          c.reopen({content: {controllerName: test.controllerName, cluster: {name: test.clusterName}}});\n          if (test.wizardController) {\n            c.reopen({wizardController: test.wizardController});\n          }\n          c.launchStartServices();\n          var r = App.ajax.send.args[0][0];\n          expect(r.data.cluster).to.equal(test.clusterName);\n          expect(r.name).to.equal(test.e.name);\n          if (test.e.data) {\n            expect(r.data.data.contains(test.e.data)).to.equal(true);\n          }\n        });\n      });\n  });\n\n  describe('#isServicesStarted', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'saveClusterStatus', Em.K);\n      sinon.stub(c, 'saveInstalledHosts', Em.K);\n    });\n    afterEach(function () {\n      c.saveClusterStatus.restore();\n      c.saveInstalledHosts.restore();\n    });\n    Em.A([\n        {\n          polledData: [\n            {Tasks: {status: 'PENDING'}}\n          ],\n          m: 'PENDING',\n          e: false\n        },\n        {\n          polledData: [\n            {Tasks: {status: 'QUEUED'}}\n          ],\n          m: 'QUEUED',\n          e: false\n        },\n        {\n          polledData: [\n            {Tasks: {status: 'IN_PROGRESS'}}\n          ],\n          m: 'IN_PROGRESS',\n          e: false\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          var r = c.isServicesStarted(test.polledData);\n          expect(r).to.equal(test.e);\n        });\n      });\n    Em.A([\n        {\n          polledData: [\n            {Tasks: {status: 'SUCCESS'}}\n          ],\n          m: 'tasks ok, isSuccess true',\n          isSuccess: true,\n          e: {\n            status: 'STARTED',\n            hasInstallTime: true\n          }\n        },\n        {\n          polledData: [\n            {Tasks: {status: 'SUCCESS'}}\n          ],\n          m: 'tasks ok, isSuccess false',\n          isSuccess: false,\n          e: {\n            status: 'START FAILED',\n            hasInstallTime: false\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          sinon.stub(c, 'isSuccess', function () {\n            return test.isSuccess;\n          });\n          c.reopen({content: {cluster: {requestId: 2}}});\n          var r = c.isServicesStarted(test.polledData);\n          var args = c.saveClusterStatus.args[0][0];\n          expect(r).to.equal(true);\n          expect(c.get('progress')).to.equal('100');\n          expect(args.status).to.equal(test.e.status);\n          expect(args.requestId).to.equal(2);\n          expect(args.hasOwnProperty('installTime')).to.equal(test.e.hasInstallTime);\n          expect(args.isCompleted).to.equal(true);\n          expect(c.saveInstalledHosts.calledOnce).to.equal(true);\n          c.isSuccess.restore();\n        });\n      });\n  });\n\n  describe('#launchStartServicesSuccessCallback', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'saveClusterStatus', Em.K);\n      sinon.stub(c, 'doPolling', Em.K);\n      sinon.stub(c, 'hostHasClientsOnly', Em.K);\n    });\n    afterEach(function () {\n      c.saveClusterStatus.restore();\n      c.doPolling.restore();\n      c.hostHasClientsOnly.restore();\n    });\n    it('should call doPolling if some data were received', function () {\n      c.launchStartServicesSuccessCallback({Requests: {id: 2}});\n      expect(c.doPolling.calledOnce).to.equal(true);\n    });\n    Em.A([\n        {\n          jsonData: {Requests: {id: 2}},\n          e: {\n            hostHasClientsOnly: false,\n            clusterStatus: {\n              status: 'INSTALLED',\n              requestId: 2,\n              isStartError: false,\n              isCompleted: false\n            }\n          }\n        },\n        {\n          jsonData: null,\n          e: {\n            hostHasClientsOnly: true,\n            clusterStatus: {\n              status: 'STARTED',\n              isStartError: false,\n              isCompleted: true\n            },\n            status: 'success',\n            progress: '100'\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          c.launchStartServicesSuccessCallback(test.jsonData);\n          expect(c.hostHasClientsOnly.calledWith(test.e.hostHasClientsOnly)).to.equal(true);\n          expect(c.saveClusterStatus.calledWith(test.e.clusterStatus)).to.equal(true);\n          if (test.e.status) {\n            expect(c.get('status')).to.equal(test.e.status);\n          }\n          if (test.e.progress) {\n            expect(c.get('progress')).to.equal(test.e.progress);\n          }\n        });\n      });\n  });\n\n  describe('#getLogsByRequestSuccessCallback', function () {\n    beforeEach(function () {\n      sinon.stub(c, 'isAllComponentsInstalled', Em.K);\n      sinon.stub(window, 'setTimeout', Em.K);\n    });\n    afterEach(function () {\n      c.isAllComponentsInstalled.restore();\n      window.setTimeout.restore();\n    });\n    Em.A([\n        {\n          polling: false,\n          status: 'INSTALL FAILED',\n          m: 'should call isAllComponentsInstalled',\n          e: true\n        },\n        {\n          polling: false,\n          status: 'INSTALLED',\n          m: 'shouldn\\'t call isAllComponentsInstalled',\n          e: false\n        },\n        {\n          polling: true,\n          status: 'INSTALL FAILED',\n          m: 'shouldn\\'t call isAllComponentsInstalled (2)',\n          e: false\n        },\n        {\n          polling: true,\n          status: 'INSTALLED',\n          m: 'shouldn\\'t call isAllComponentsInstalled (3)',\n          e: false\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          sinon.stub(c, 'parseHostInfo', Em.K);\n          c.reopen({content: {cluster: {status: test.status}}});\n          c.getLogsByRequestSuccessCallback({}, {}, {polling: test.polling});\n          if (test.e) {\n            expect(c.isAllComponentsInstalled.calledOnce).to.equal(true);\n          }\n          else {\n            expect(c.isAllComponentsInstalled.called).to.equal(false);\n          }\n          c.parseHostInfo.restore();\n        });\n      });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/cluster');\nrequire('controllers/wizard');\n\ndescribe('App.WizardController', function () {\n\n  var wizardController = App.WizardController.create({});\n\n  var totalSteps = 11;\n  var ruller = [];\n  for(var i = 0; i < totalSteps; i++) {\n    ruller.push(i);\n  }\n\n  describe('#setLowerStepsDisable', function() {\n    for(var i = 1; i < totalSteps; i++) {\n      var indx = i;\n      var steps = [];\n      for(var j = 1; j <= indx; j++) {\n        steps.push(Em.Object.create({step:j,value:false}));\n      }\n      wizardController.set('isStepDisabled', steps);\n      for(j = 1; j <= indx; j++) {\n        it('Steps: ' + i + ' | Disabled: ' + (j-1), function() {\n          wizardController.setLowerStepsDisable(j);\n          expect(wizardController.get('isStepDisabled').filterProperty('value', true).length).to.equal(j-1);\n        });\n      }\n    }\n  });\n\n  // isStep0 ... isStep10 tests\n  App.WizardController1 = App.WizardController.extend({currentStep:''});\n  var tests = [];\n  for(var i = 0; i < totalSteps; i++) {\n    var n = ruller.slice(0);\n    n.splice(i,1);\n    tests.push({i:i,n:n});\n  }\n  tests.forEach(function(test) {\n    describe('isStep'+test.i, function() {\n      var w = App.WizardController1.create();\n      w.set('currentStep', test.i);\n      it('Current Step is ' + test.i + ', so isStep' + test.i + ' is TRUE', function() {\n        expect(w.get('isStep'+ test.i)).to.equal(true);\n      });\n      test.n.forEach(function(indx) {\n        it('Current Step is ' + test.i + ', so isStep' + indx + ' is FALSE', function() {\n          expect(w.get('isStep'+ indx)).to.equal(false);\n        });\n      });\n    });\n  });\n  // isStep0 ... isStep10 tests end\n\n  describe('#gotoStep', function() {\n    var w = App.WizardController1.create();\n    var steps = [];\n    for(var j = 0; j < totalSteps; j++) {\n      steps.push(Em.Object.create({step:j,value:false}));\n    }\n    steps.forEach(function(step, index) {\n      step.set('value', true);\n      w.set('isStepDisabled', steps);\n      it('step ' + index + ' is disabled, so gotoStep('+index+') is not possible', function() {\n        expect(w.gotoStep(index)).to.equal(false);\n      });\n    });\n  });\n\n  describe('#launchBootstrapSuccessCallback', function() {\n    it('Save bootstrapRequestId', function() {\n      var data = {requestId: 123};\n      var params = {popup: {finishLoading: function(){}}};\n      sinon.spy(params.popup, \"finishLoading\");\n      wizardController.launchBootstrapSuccessCallback(data, {}, params);\n      expect(params.popup.finishLoading.calledWith(123)).to.be.true;\n      params.popup.finishLoading.restore();\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('utils/helper');\nvar mappedProperties = require('data/HDP2/secure_mapping');\n\ndescribe('hdp2SiteMapping', function () {\n\n  // All mapped properties should have value of string type\n  mappedProperties.forEach(function(mappedProperty){\n    it('Value of \"' + mappedProperty.name  + '\"' + ' should be string', function () {\n      expect(mappedProperty.value).to.be.a('string');\n    });\n  });\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('utils/helper');\nvar siteProperties = require('data/HDP2/site_properties').configProperties;\n\ndescribe('hdp2SiteProperties', function () {\n\n\n  //@TODO: log4j propeties should not be a part of site properties file. A separate file  should address this logic. site_properties.js should be used only to provide ui attributes to existing stack properties\n  //Exclude log4j properties from unit tests for now\n  siteProperties = siteProperties.filter(function(item, index){\n    return !(item.filename && item.filename.endsWith('log4j.xml'));\n  });\n  // No site properties should be made invisible\n  siteProperties.forEach(function(siteProperty){\n    it('Check invisible attribute of \"' + siteProperty.name  + '\"' + '. It should not be defined ', function () {\n      expect(siteProperty.isVisible).to.equal(undefined);\n    });\n  });\n\n  // No site properties should have value and defaultValue defined on client side.\n  // These should be always retrieved from server.\n\n    siteProperties.forEach(function(siteProperty){\n      it('Check value and defaultValue attribute of \"' + siteProperty.name + '\"' + '. It should not be defined ', function () {\n        expect(siteProperty.value).to.equal(undefined);\n        expect(siteProperty.defaultValue).to.equal(undefined);\n    });\n  });\n\n  // No site properties should have description field duplicated on client side.\n  // These should be always retrieved from server.\n  siteProperties.forEach(function(siteProperty){\n    it('Check description attribute of \"' + siteProperty.name + '\"' + '. It should not be defined ', function () {\n      expect(siteProperty.description).to.equal(undefined);\n    });\n  });\n\n  // All the site properties should be persisted in the configuration tag\n  // So isRequiredByAgent should be never defined over here\n  // These should be always retrieved from server and saved in the correct configuration resource via API.\n  siteProperties.forEach(function(siteProperty){\n    it('Check isRequiredByAgent attribute of \"' + siteProperty.name + '\"' + '. It should not be defined ', function () {\n      expect(siteProperty.isRequiredByAgent).to.equal(undefined);\n    });\n  });\n\n  // All Falcon site properties should be mapped to site file. There is a property with same name (*.domain)\n  // in different site files of Falcon service\n\n    var falconSiteProperties = siteProperties.filterProperty('serviceName','FALCON');\n    falconSiteProperties.forEach(function(siteProperty){\n      it('Check filename attribute for \"' + siteProperty.name + '\"' + ' property of Falcon service. It should be defined ', function () {\n        expect(siteProperty).to.have.property('filename');\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/stack_service_component');\nrequire('mappers/server_data_mapper');\nrequire('mappers/stack_service_component_mapper');\n\nmodule.exports = {\n  setupStackServiceComponent: function() {\n    /**\n     * initialization of App.StackServiceComponent model\n     * @type {*}\n     */\n    var data = {items: Em.A([])};\n    require('test/service_components').items.forEach(function(i) {\n      i.serviceComponents.forEach(function(sc) {\n        data.items.pushObject(sc.StackServiceComponents);\n      });\n    });\n    App.stackServiceComponentMapper.map(data);\n  },\n  cleanStackServiceComponent: function(){\n    App.StackServiceComponent.find().set('content',[]);\n  },\n  setupStackVersion: function(context, version) {\n    context.prevStackVersion = App.get('currentStackVersion');\n    App.set('currentStackVersion', version);\n  },\n  restoreStackVersion: function(context) {\n    App.set('currentStackVersion', context.prevStackVersion);\n  },\n  configs: require('test/mock_data_setup/configs_mock_data'),\n  /**\n   * Delete record from DS.Store and set its stateManager to proper state\n   * @param {DS.Model} record\n   * @method deleteRecord\n   */\n  deleteRecord: function (record) {\n    record.deleteRecord();\n    record.get('stateManager').transitionTo('loading');\n  }\n};","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('controllers/login_controller');\n\ndescribe('App.LoginController', function () {\n\n  var loginController = App.LoginController.create();\n\n  describe('#validateCredentials()', function () {\n    /*\n    it('should return undefined if no username is present', function () {\n      loginController.set('loginName', '');\n      expect(loginController.validateCredentials()).to.equal(undefined);\n    })\n    it('should return undefined if no password is present', function () {\n      loginController.set('password', '');\n      expect(loginController.validateCredentials()).to.equal(undefined);\n    })\n    it('should return the user object with the specified username and password (dummy until actual integration)', function () {\n      loginController.set('loginName', 'admin');\n      loginController.set('password', 'admin');\n      expect(loginController.validateCredentials().get('loginName'), 'admin');\n    })\n    */\n  })\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nrequire('models/host');\nrequire('models/host_component');\nrequire('mappers/server_data_mapper');\nrequire('mappers/hosts_mapper');\n\ndescribe('App.hostsMapper', function () {\n\n\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nrequire('views/main/apps/item/dag_view');\nrequire('mappers/server_data_mapper');\nrequire('mappers/jobs_mapper');\n\ndescribe('App.jobTimeLineMapper', function () {\n\n  var test_input = {\n    \"map\": [\n      {\n        \"x\": 1369394950,\n        \"y\": 0\n      },\n      {\n        \"x\": 1369394951,\n        \"y\": 1\n      },\n      {\n        \"x\": 1369394952,\n        \"y\": 1\n      },\n      {\n        \"x\": 1369394953,\n        \"y\": 0\n      }\n    ],\n    \"shuffle\": [\n      {\n        \"x\": 1369394950,\n        \"y\": 0\n      },\n      {\n        \"x\": 1369394951,\n        \"y\": 0\n      },\n      {\n        \"x\": 1369394952,\n        \"y\": 1\n      },\n      {\n        \"x\": 1369394953,\n        \"y\": 1\n      }\n    ],\n    \"reduce\": [\n      {\n        \"x\": 1369394950,\n        \"y\": 0\n      },\n      {\n        \"x\": 1369394951,\n        \"y\": 0\n      },\n      {\n        \"x\": 1369394952,\n        \"y\": 0\n      },\n      {\n        \"x\": 1369394953,\n        \"y\": 0\n      }\n    ]\n  };\n\n  describe('#coordinatesModify()', function () {\n    it('map', function() {\n      var new_map = App.jobTimeLineMapper.coordinatesModify(test_input.map);\n      expect(new_map.length).to.equal(6);\n\n      expect(new_map[1].y).to.equal(new_map[0].y);\n      expect(new_map[2].x).to.equal(new_map[1].x);\n\n      expect(new_map[4].y).to.equal(new_map[5].y);\n      expect(new_map[3].x).to.equal(new_map[4].x);\n    });\n    it('shuffle', function() {\n      var new_shuffle = App.jobTimeLineMapper.coordinatesModify(test_input.shuffle);\n      expect(new_shuffle.length).to.equal(6);\n\n      expect(new_shuffle[2].y).to.equal(new_shuffle[1].y);\n      expect(new_shuffle[3].x).to.equal(new_shuffle[2].x);\n\n      expect(new_shuffle[3].y).to.equal(new_shuffle[4].y);\n      expect(new_shuffle[4].x).to.equal(new_shuffle[5].x);\n    });\n    it('reduce', function() {\n      var new_reduce = App.jobTimeLineMapper.coordinatesModify(test_input.reduce);\n      expect(new_reduce.length).to.equal(4);\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nrequire('mappers/server_data_mapper');\nrequire('mappers/runs_mapper');\n\ndescribe('App.runsMapper', function () {\n\n  var tests = [\n    {\n      i: {\n        \"workflowContext\": {\n          \"workflowDag\": {\n            \"entries\": [\n              {\n                \"source\": \"scope-5\",\n                \"targets\": []\n              }\n            ]\n          }\n        }\n      },\n      index: 0,\n      e: '{dag: {\"scope-5\": []}}',\n      m: 'One entry. Without targets'\n    },\n    {\n      i: {\n        \"workflowContext\": {\n          \"workflowDag\": {\n            \"entries\": [\n              {\n                \"source\": \"scope-5\",\n                \"targets\": ['t1']\n              }\n            ]\n          }\n        }\n      },\n      index: 0,\n      e: '{dag: {\"scope-5\": [\"t1\"]}}',\n      m: 'One entry. With one target'\n    },\n    {\n      i: {\n        \"workflowContext\": {\n          \"workflowDag\": {\n            \"entries\": [\n              {\n                \"source\": \"scope-5\",\n                \"targets\": ['t1,t2,t3']\n              }\n            ]\n          }\n        }\n      },\n      index: 0,\n      e: '{dag: {\"scope-5\": [\"t1,t2,t3\"]}}',\n      m: 'One entry. With multiple targets'\n    },\n    {\n      i: {\n        \"workflowContext\": {\n          \"workflowDag\": {\n            \"entries\": [\n              {\n                \"source\": \"scope-5\",\n                \"targets\": []\n              },\n              {\n                \"source\": \"scope-4\",\n                \"targets\": []\n              }\n            ]\n          }\n        }\n      },\n      index: 0,\n      e: '{dag: {\"scope-5\": [],\"scope-4\": []}}',\n      m: 'Two entries. Without targets'\n    },\n    {\n      i: {\n        \"workflowContext\": {\n          \"workflowDag\": {\n            \"entries\": [\n              {\n                \"source\": \"scope-5\",\n                \"targets\": ['t1,t2,t3']\n              },\n              {\n                \"source\": \"scope-4\",\n                \"targets\": ['t1']\n              }\n            ]\n          }\n        }\n      },\n      index: 0,\n      e: '{dag: {\"scope-5\": [\"t1,t2,t3\"],\"scope-4\": [\"t1\"]}}',\n      m: 'Two entries. With multiple targets'\n    },\n    {\n      i: {\n        \"workflowContext\": {\n          \"workflowDag\": {\n            \"entries\": [\n              {\n                \"source\": \"scope-5\",\n                \"targets\": ['t1,t2,t3']\n              },\n              {\n                \"source\": \"scope-4\",\n                \"targets\": ['t1,t2,t3']\n              }\n            ]\n          }\n        }\n      },\n      index: 0,\n      e: '{dag: {\"scope-5\": [\"t1,t2,t3\"],\"scope-4\": [\"t1,t2,t3\"]}}',\n      m: 'Two entries. With multiple targets'\n    }\n  ];\n\n  describe('#generateWorkflow', function() {\n    tests.forEach(function(test) {\n      it (test.m, function() {\n        var result = App.runsMapper.generateWorkflow(test.i, test.index);\n        expect(result.workflowContext).to.equal(test.e);\n        expect(result.index).to.equal(test.index + 1);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nrequire('mappers/server_data_mapper');\n\ndescribe('App.QuickDataMapper', function () {\n\n  var test_json = {\n    a1: {\n      b1: {\n        c1: 'val1'\n      },\n      b2: 'val2',\n      b3: [\n        {\n          c2: 'val4'\n        },\n        {\n          c2: 'val5'\n        },\n        {\n          c2: 'val1'\n        }\n      ]\n    },\n    a2: 'val3',\n    item: {\n      'key.dotted': 'val6'\n    }\n  };\n\n  describe('#getJsonProperty', function() {\n    var tests = [\n      {i:'a1.b1.c1',e:'val1'},\n      {i:'a1.b2',e:'val2'},\n      {i:'a2',e:'val3'},\n      {i:'a1.b3[0].c2',e:'val4'},\n      {i:'a1.b3[1].c2',e:'val5'}\n    ];\n    tests.forEach(function(test) {\n      it(test.i, function() {\n        var mapper = App.QuickDataMapper.create();\n        expect(mapper.getJsonProperty(test_json, test.i)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#parseIt', function() {\n    var config = {\n      $a2: 'a2',\n      f1: 'a1.b1.c1',\n      f2: 'a1.b3[0].c2',\n      f3: 'a1.b3',\n      f4_key: 'a1.b3',\n      f4_type: 'array',\n      f4: {\n        item: 'c2'\n      },\n      f5: 'item.[\"key.dotted\"]'\n    };\n    var mapper = App.QuickDataMapper.create();\n    var result = mapper.parseIt(test_json, config);\n    it('Property starts with $', function() {\n      expect(result.a2).to.equal('a2');\n    });\n    it('Multi-components path', function() {\n      expect(result.f1).to.equal('val1');\n    });\n    it('Path with array index', function() {\n      expect(result.f2).to.equal('val4');\n    });\n    it('Path returns array', function() {\n      expect(result.f3.length).to.equal(3);\n    });\n    it('Generate array of json fields', function() {\n      expect(result.f4).to.eql(['val1','val4','val5']);\n    });\n    it('Check value with dotted key', function() {\n      expect(result.f5).to.eql('val6');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nrequire('utils/helper');\nrequire('mappers/server_data_mapper');\nrequire('mappers/service_metrics_mapper');\n\ndescribe('App.serviceMetricsMapper', function () {\n\n  describe('#hbaseMapper', function() {\n\n    it ('Round Average Load', function() {\n      var tests = [\n        {\n          components: [\n            {\n                ServiceComponentInfo: {\n                  AverageLoad: 1.23456789,\n                  component_name: \"HBASE_MASTER\",\n                  RegionsInTransition : [ ]\n                }\n              }\n          ],\n          e: '1.23'\n        },\n        {\n          components: [\n            {\n                ServiceComponentInfo: {\n                  AverageLoad: 1.00,\n                  component_name: \"HBASE_MASTER\",\n                  RegionsInTransition : [ ]\n                }\n              }\n          ],\n          e: '1.00'\n        },\n        {\n          components: [\n            {\n                ServiceComponentInfo: {\n                  AverageLoad: 1,\n                  component_name: \"HBASE_MASTER\",\n                  RegionsInTransition : [ ]\n                }\n              }\n          ],\n          e: '1.00'\n        },\n        {\n          components: [\n            {\n                ServiceComponentInfo: {\n                  AverageLoad: 1.2,\n                  component_name: \"HBASE_MASTER\",\n                  RegionsInTransition : [ ]\n                }\n              }\n          ],\n          e: '1.20'\n        }\n      ];\n      tests.forEach(function(test) {\n        var result = App.serviceMetricsMapper.hbaseMapper(test);\n        expect(result.average_load).to.equal(test.e);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nrequire('mappers/server_data_mapper');\n\ndescribe('App.statusMapper', function () {\n\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nrequire('mappers/server_data_mapper');\nrequire('mappers/users_mapper');\n\ndescribe('App.usersMapper', function () {\n\n  describe('#isAdmin', function() {\n    var tests = [\n      {i:'user,admin',e:true,m:'has admin role'},\n      {i:'admin,user',e:true,m:'has admin role'},\n      {i:'user',e:false,m:'doesn\\'t have admin role'}\n    ];\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        expect(App.usersMapper.isAdmin(test.i)).to.equal(test.e);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('mixins/common/chart/storm_linear_time');\n\nvar slt,\n  template,\n  series,\n  jsonDataFalse = {\n    metrics: {\n      id: 'metrics'\n    }\n  },\n  jsonDataTrue = {\n    metrics: {\n      storm: {\n        nimbus: {\n          name: 'nimbus'\n        }\n      }\n    }\n  };\n\ndescribe('App.StormLinearTimeChartMixin', function () {\n\n  beforeEach(function () {\n    slt = Em.Object.create(App.StormLinearTimeChartMixin, {\n      stormChartDefinition: [\n        {\n          field: 'name',\n          name: 'nimbus'\n        }\n      ]\n    });\n  });\n\n  describe('#getDataForAjaxRequest', function () {\n    it('should take data from stormChartDefinition', function () {\n      template = slt.getDataForAjaxRequest().metricsTemplate;\n      expect(template).to.contain('metrics');\n      expect(template).to.contain('storm');\n      expect(template).to.contain('nimbus');\n    });\n  });\n\n  describe('#transformToSeries', function () {\n    it('should be empty', function () {\n      expect(slt.transformToSeries(jsonDataFalse)).to.be.empty;\n    });\n    it('should take one element from data', function () {\n      slt.set('transformData', function (data, name) {\n        return name + ': ' + JSON.stringify(data);\n      });\n      series = slt.transformToSeries(jsonDataTrue);\n      expect(series).to.have.length(1);\n      expect(series[0]).to.equal('nimbus: \"nimbus\"');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('mixins/common/localStorage');\n\nvar localStorage,\n  nameCases = [\n    {\n      toSet: {\n        name: 'name'\n      },\n      toExpect: 'Name'\n    },\n    {\n      toSet: {\n        name: null,\n        controller: {\n          name: 'samplecontroller'\n        }\n      },\n      toExpect: 'Samplecontroller'\n    },\n    {\n      toSet: {\n        controller: {\n          name: 'sampleController'\n        }\n      },\n      toExpect: 'Sample'\n    }\n  ];\n\ndescribe('App.LocalStorage', function () {\n\n  beforeEach(function () {\n    localStorage = Em.Object.create(App.LocalStorage);\n  });\n\n  after(function () {\n    App.db.cleanUp();\n  });\n\n  describe('#dbNamespace', function () {\n    nameCases.forEach(function (item) {\n      it('should be ' + item.toExpect, function () {\n        localStorage.setProperties(item.toSet);\n        expect(localStorage.get('dbNamespace')).to.equal(item.toExpect)\n      });\n    });\n  });\n\n  describe('#getDBProperty', function () {\n    it('should take value from DB', function () {\n      localStorage.set('name', 'name');\n      localStorage.setDBProperty('key', 'value');\n      expect(localStorage.getDBProperty('key')).to.equal('value');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('mixins/main/host/details/host_components/decommissionable');\n\nvar decommissionable,\n  view,\n  statusCases = [\n    {\n      status: App.HostComponentStatus.started,\n      expected: false\n    },\n    {\n      status: 'status',\n      expected: true\n    }\n  ],\n  responseCases = [\n    {\n      HostRoles: {\n        desired_admin_state: 'state'\n      },\n      ServiceComponentInfo: 'info'\n    },\n    {\n      HostRoles: {\n        desired_admin_state: null\n      },\n      ServiceComponentInfo: null\n    }\n  ],\n  textCases = [\n    {\n      available: true,\n      text: Em.I18n.t('common.decommission')\n    },\n    {\n      available: false,\n      text: Em.I18n.t('common.recommission')\n    }\n  ];\n\ndescribe('App.Decommissionable', function () {\n\n  beforeEach(function () {\n    decommissionable = Em.Object.create(App.Decommissionable);\n  });\n\n  describe('#isComponentDecommissionDisable', function () {\n    statusCases.forEach(function (item) {\n      it('should be ' + item.expected, function () {\n        decommissionable.set('content', {\n          service: {\n            workStatus: item.status\n          }\n        });\n        expect(decommissionable.get('isComponentDecommissionDisable')).to.equal(item.expected);\n      });\n    });\n  });\n\n  describe('#getDesiredAdminStateSuccessCallback', function () {\n    responseCases.forEach(function (item) {\n      var state = item.HostRoles.desired_admin_state;\n      it('should return ' + state, function () {\n        decommissionable.getDesiredAdminStateSuccessCallback(item);\n        expect(decommissionable.get('desiredAdminState')).to.equal(state);\n      });\n    });\n  });\n\n  describe('#getDesiredAdminStateErrorCallback', function () {\n    it('should return null', function () {\n      decommissionable.getDesiredAdminStateErrorCallback();\n      expect(decommissionable.get('desiredAdminState')).to.be.a('null');\n    });\n  });\n\n  describe('#getDecommissionStatusSuccessCallback', function () {\n    responseCases.forEach(function (item) {\n      var state = item.ServiceComponentInfo;\n      it('should return ' + state, function () {\n        decommissionable.getDecommissionStatusSuccessCallback(item);\n        expect(decommissionable.get('decommissionedStatusObject')).to.equal(state);\n      });\n    });\n  });\n\n  describe('#getDecommissionStatusErrorCallback', function () {\n    it('should return null', function () {\n      decommissionable.getDecommissionStatusErrorCallback();\n      expect(decommissionable.get('decommissionedStatusObject')).to.be.a('null');\n    });\n  });\n\n  describe('#decommissionView.text', function () {\n\n    beforeEach(function () {\n      view = decommissionable.decommissionView.create();\n      view.reopen({\n        parentView: decommissionable\n      });\n    });\n\n    textCases.forEach(function (item) {\n      it('should be ' + item.text, function () {\n        view.set('parentView.isComponentDecommissionAvailable', item.available);\n        expect(view.get('text')).to.equal(item.text);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  setupConfigGroupsObject: function(serviceName) {\n    var serviceGroups = this.setupServiceConfigTagsObject(serviceName).mapProperty('siteName');\n    var configGroups = [\n      {\n        \"tag\":\"version1\",\n        \"type\":\"core-site\",\n        \"properties\": {\n          \"fs.defaultFS\" : \"hdfs://c6401.ambari.apache.org:8020\",\n          \"fs.trash.interval\" : \"360\"\n        }\n      },\n      {\n        \"tag\":\"version1\",\n        \"type\":\"global\",\n        \"properties\":{\n          \"hadoop_heapsize\":\"1024\",\n          \"storm_log_dir\": \"/var/log/storm\",\n          \"stormuiserver_host\": \"c6401.ambari.apache.org\",\n          \"nonexistent_property\": \"some value\"\n        }\n      },\n      {\n        \"tag\":\"version1\",\n        \"type\":\"hdfs-site\",\n        \"properties\": {\n          \"dfs.datanode.data.dir\": \"/b,/a\",\n          \"dfs.namenode.name.dir\": \"/b,/a,/c\",\n          \"dfs.namenode.checkpoint.dir\": \"/b,/d,/a,/c\",\n          \"dfs.datanode.failed.volumes.tolerated\": \"2\",\n          \"content\": \"custom mock property\"\n        }\n      },\n      {\n        \"tag\":\"version1\",\n        \"type\":\"hdfs-log4j\",\n        \"properties\": {\n          \"content\": \"hdfs log4j content\"\n        }\n      },\n      {\n        \"tag\":\"version1\",\n        \"type\":\"zoo.cfg\",\n        \"properties\": {\n          \"custom.zoo.cfg\": \"zoo cfg content\"\n        }\n      },\n      {\n        \"tag\":\"version1\",\n        \"type\":\"storm-site\",\n        \"properties\": {\n          \"storm.zookeeper.servers\": \"['c6401.ambari.apache.org','c6402.ambari.apache.org']\",\n          \"single_line_property\": \"value\",\n          \"multi_line_property\": \"value \\n value\"\n        }\n      },\n      {\n        \"tag\":\"version1\",\n        \"type\":\"zoo.cfg\",\n        \"properties\": {\n          \"custom.zoo.cfg\": \"value\"\n        }\n      }\n    ];\n    return configGroups.filter(function(configGroup) {\n      return serviceGroups.contains(configGroup.type);\n    });\n  },\n  setupServiceConfigTagsObject: function(serviceName) {\n    var configTags = {\n      STORM: ['global','storm-site'],\n      HDFS: ['global','hdfs-site','core-site','hdfs-log4j'],\n      ZOOKEEPER: ['global', 'zoo.cfg']\n    };\n    var configTagsObject = [];\n    if (serviceName) {\n      configTags[serviceName].forEach(function(tag) {\n        configTagsObject.push({\n          siteName: tag,\n          tagName: \"version1\",\n          newTagName: null\n        });\n      });\n    } else {\n      for (var serviceName in configTags) {\n        configTags[serviceName].forEach(function(tag) {\n          configTagsObject.push({\n            siteName: tag,\n            tagName: \"version1\",\n            newTagName: null\n          });\n        });\n      }\n    }\n    return configTagsObject.uniq();\n  },\n  setupAdvancedConfigsObject: function() {\n    return [\n      {\n        \"serviceName\": \"HDFS\",\n        \"name\": \"fs.defaultFS\",\n        \"value\": \"hdfs://c6401.ambari.apache.org:8020\",\n        \"description\": \"fs.defaultFS\",\n        \"filename\": \"core-site.xml\"\n      },\n      {\n        \"serviceName\": \"STORM\",\n        \"name\": \"storm.zookeeper.servers\",\n        \"value\": \"['localhost']\",\n        \"description\": \"desc\",\n        \"filename\": \"storm-site.xml\"\n      },\n      {\n        \"serviceName\": \"HDFS\",\n        \"name\": \"dfs.datanode.data.dir\",\n        \"value\": \"/hadoop/hdfs/data\",\n        \"description\": \"desc\",\n        \"filename\": \"hdfs-site.xml\"\n      },\n      {\n        \"serviceName\": \"HDFS\",\n        \"name\": \"dfs.namenode.name.dir\",\n        \"value\": \"/hadoop/hdfs/namenode\",\n        \"description\": \"desc\",\n        \"filename\": \"hdfs-site.xml\"\n      },\n      {\n        \"serviceName\": \"HDFS\",\n        \"name\": \"dfs.namenode.checkpoint.dir\",\n        \"value\": \"/hadoop/hdfs/namesecondary\",\n        \"description\": \"desc\",\n        \"filename\": \"hdfs-site.xml\"\n      },\n      {\n        \"serviceName\": \"HDFS\",\n        \"name\": \"dfs.datanode.failed.volumes.tolerated\",\n        \"value\": \"2\",\n        \"description\": \"desc\",\n        \"filename\": \"hdfs-site.xml\"\n      },\n      {\n        \"serviceName\": \"HDFS\",\n        \"name\": \"content\",\n        \"value\": \"custom mock property\",\n        \"description\": \"desc\",\n        \"filename\": \"hdfs-site.xml\"\n      },\n      {\n        \"serviceName\": \"HDFS\",\n        \"name\": \"content\",\n        \"value\": \"hdfs log4j content\",\n        \"description\": \"desc\",\n        \"filename\": \"hdfs-log4j.xml\"\n      },\n      {\n        \"serviceName\": \"HDFS\",\n        \"name\": \"content\",\n        \"value\": \"custom hdfs log4j content\",\n        \"description\": \"desc\",\n        \"filename\": \"custom-hdfs-log4j.xml\"\n      },\n      {\n        \"serviceName\": \"ZOOKEEPER\",\n        \"name\": \"content\",\n        \"value\": \"zookeeper log4j.xml content\",\n        \"description\": \"desc\",\n        \"filename\": \"zookeeper-log4j.xml\"\n      },\n      {\n        \"serviceName\": \"ZOOKEEPER\",\n        \"name\": \"custom.zoo.cfg\",\n        \"value\": \"zoo cfg content\",\n        \"description\": \"zoo.cfg config\",\n        \"filename\": \"zoo.cfg\"\n      },\n      {\n        \"serviceName\": \"YARN\",\n        \"name\": \"content\",\n        \"value\": \" value \\n value\",\n        \"filename\": \"capacity-scheduler.xml\"\n      },\n      {\n        \"serviceName\": \"YARN\",\n        \"name\": \"yarn.scheduler.capacity.root.default.capacity\",\n        \"value\": \"100\",\n        \"filename\": \"capacity-scheduler.xml\"\n      }\n    ];\n  },\n  setupStoredConfigsObject: function() {\n    return [\n      {\n        \"name\":\"storm.zookeeper.servers\",\n        \"value\":[\n          \"c6401.ambari.apache.org\",\n          \"c6402.ambari.apache.org\"\n        ],\n        \"defaultValue\":\"['c6401.ambari.apache.org','c6402.ambari.apache.org']\",\n        \"filename\":\"storm-site.xml\",\n        \"isUserProperty\":false,\n        \"isOverridable\":false,\n        \"showLabel\":true,\n        \"serviceName\":\"STORM\",\n        \"displayType\":\"masterHosts\",\n        \"isVisible\":true,\n        \"description\":\"desc\",\n        \"isSecureConfig\":false,\n        \"category\":\"General\",\n        \"id\":\"site property\",\n        \"displayName\":\"storm.zookeeper.servers\"\n      },\n      {\n        \"name\":\"single_line_property\",\n        \"value\":\"value\",\n        \"defaultValue\":\"value\",\n        \"filename\":\"storm-site.xml\",\n        \"isUserProperty\":true,\n        \"isOverridable\":true,\n        \"showLabel\":true,\n        \"serviceName\":\"STORM\",\n        \"id\":\"site property\",\n        \"displayType\":\"advanced\",\n        \"displayName\":\"single_line_property\",\n        \"category\":\"AdvancedStormSite\"\n      },\n      {\n        \"name\":\"multi_line_property\",\n        \"value\":\"value \\n value\",\n        \"defaultValue\":\"value \\n value\",\n        \"filename\":\"storm-site.xml\",\n        \"isUserProperty\":true,\n        \"isOverridable\":true,\n        \"showLabel\":true,\n        \"serviceName\":\"STORM\",\n        \"id\":\"site property\",\n        \"displayType\":\"multiLine\",\n        \"displayName\":\"multi_line_property\",\n        \"category\":\"AdvancedStormSite\"\n      },\n      {\n        \"name\":\"nonexistent_property\",\n        \"value\":\"some value\",\n        \"defaultValue\":\"some value\",\n        \"filename\":\"global.xml\",\n        \"isUserProperty\":false,\n        \"isOverridable\":true,\n        \"showLabel\":true,\n        \"serviceName\":\"STORM\",\n        \"isVisible\":false,\n        \"id\":\"puppet var\",\n        \"displayName\":null,\n        \"options\":null\n      },\n      {\n        \"name\":\"dfs.datanode.data.dir\",\n        \"value\":\"/a,/b\",\n        \"defaultValue\":\"/a,/b\",\n        \"filename\":\"hdfs-site.xml\",\n        \"isUserProperty\":false,\n        \"isOverridable\":true,\n        \"showLabel\":true,\n        \"serviceName\":\"HDFS\",\n        \"displayType\":\"directories\",\n        \"isRequired\":true,\n        \"isReconfigurable\":true,\n        \"isVisible\":true,\n        \"description\":\"desc\",\n        \"index\":1,\n        \"isSecureConfig\":false,\n        \"category\":\"DataNode\",\n        \"id\":\"site property\",\n        \"displayName\":\"DataNode directories\"\n      },\n      {\n        \"name\":\"content\",\n        \"value\":\"custom mock property\",\n        \"defaultValue\":\"custom mock property\",\n        \"filename\":\"hdfs-site.xml\",\n        \"isUserProperty\":false,\n        \"isOverridable\":true,\n        \"showLabel\":false,\n        \"serviceName\":\"HDFS\",\n        \"displayType\":\"content\",\n        \"isRequired\":true,\n        \"isRequiredByAgent\":true,\n        \"isReconfigurable\":true,\n        \"isVisible\":true,\n        \"description\":\"desc\",\n        \"isSecureConfig\":false,\n        \"category\":\"AdvancedHDFSLog4j\",\n        \"id\":\"site property\",\n        \"displayName\":\"content\"\n      },\n      {\n        \"name\":\"content\",\n        \"value\":\"hdfs log4j content\",\n        \"defaultValue\":\"hdfs log4j content\",\n        \"filename\":\"hdfs-log4j.xml\",\n        \"isUserProperty\":false,\n        \"isOverridable\":true,\n        \"showLabel\":false,\n        \"serviceName\":\"HDFS\",\n        \"displayType\":\"content\",\n        \"isRequired\":true,\n        \"isRequiredByAgent\":true,\n        \"isReconfigurable\":true,\n        \"isVisible\":true,\n        \"description\":\"desc\",\n        \"isSecureConfig\":false,\n        \"category\":\"AdvancedHDFSLog4j\",\n        \"id\":\"site property\",\n        \"displayName\":\"content\"\n      },\n      {\n        \"name\":\"storm_log_dir\",\n        \"value\":\"/var/log/storm\",\n        \"defaultValue\":\"/var/log/storm\",\n        \"filename\":\"global.xml\",\n        \"isUserProperty\":false,\n        \"isOverridable\":true,\n        \"showLabel\":true,\n        \"serviceName\":\"STORM\",\n        \"displayType\":\"directory\",\n        \"isRequired\":true,\n        \"isRequiredByAgent\":true,\n        \"isReconfigurable\":true,\n        \"isVisible\":true,\n        \"description\":\"Storm log directory\",\n        \"isSecureConfig\":false,\n        \"category\":\"General\",\n        \"id\":\"puppet var\",\n        \"displayName\":\"storm_log_dir\"\n      }\n    ];\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/alert');\n\nvar alert,\n  sampleTime = 1399312800,\n  statusCases = [\n    {\n      status: 0,\n      property: 'isOk',\n      format: 'OK'\n    },\n    {\n      status: 1,\n      property: 'isWarning',\n      format: 'WARN'\n    },\n    {\n      status: 2,\n      property: 'isCritical',\n      format: 'CRIT'\n    },\n    {\n      status: 3,\n      property: 'isPassive',\n      format: 'MAINT'\n    },\n    {\n      status: 4,\n      property: '',\n      format: 'UNKNOWN'\n    }\n  ],\n  ignoredCases = [\n    {\n      title: 'title',\n      result: false\n    },\n    {\n      title: 'Percent',\n      result: true\n    }\n  ],\n  serviceTypeCases = [\n    {\n      type: 'MAPREDUCE',\n      name: 'MapReduce',\n      link: '#/main/services/MAPREDUCE/summary'\n    },\n    {\n      type: 'HDFS',\n      name: 'HDFS',\n      link: '#/main/services/HDFS/summary'\n    },\n    {\n      type: 'HBASE',\n      name: 'HBase',\n      link: '#/main/services/HBASE/summary'\n    },\n    {\n      type: 'ZOOKEEPER',\n      name: 'Zookeeper',\n      link: '#/main/services/ZOOKEEPER/summary'\n    },\n    {\n      type: 'OOZIE',\n      name: 'Oozie',\n      link: '#/main/services/OOZIE/summary'\n    },\n    {\n      type: 'HIVE',\n      name: 'Hive',\n      link: '#/main/services/HIVE/summary'\n    },\n    {\n      type: 'service',\n      name: null,\n      link: null\n    },\n    {\n      type: null,\n      name: null,\n      link: null\n    }\n  ],\n  titles = ['NodeManager health', 'NodeManager process', 'TaskTracker process', 'RegionServer process', 'DataNode process', 'DataNode space', 'ZooKeeper Server process', 'Supervisors process'];\n\ndescribe('App.Alert', function () {\n\n  beforeEach(function() {\n    alert = App.Alert.create();\n  });\n\n  describe('#date', function () {\n    it('is Mon May 05 2014', function () {\n      alert.set('lastTime', sampleTime);\n      expect(alert.get('date').toDateString()).to.equal('Mon May 05 2014');\n    });\n  });\n\n  statusCases.forEach(function (item) {\n    var status = item.status,\n      property = item.property;\n    if (property) {\n      describe('#' + property, function () {\n        it('status ' + status + ' is for ' + property, function () {\n          alert.set('status', status);\n          expect(alert.get(property)).to.be.true;\n          var falseStates = statusCases.mapProperty('property').without(property).without('');\n          var falseStatuses = [];\n          falseStates.forEach(function (state) {\n            falseStatuses.push(alert.get(state));\n          });\n          expect(falseStatuses).to.eql([false, false, false]);\n        });\n      });\n    }\n  });\n\n  describe('#ignoredForServices', function () {\n    titles.forEach(function (item) {\n      it('should be true for ' + item, function () {\n        alert.set('title', item);\n        expect(alert.get('ignoredForServices')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      alert.set('title', 'title');\n      expect(alert.get('ignoredForServices')).to.be.false;\n    });\n  });\n\n  describe('#ignoredForHosts', function () {\n    ignoredCases.forEach(function (item) {\n      it('should be ' + item.result, function () {\n        alert.set('title', item.title);\n        expect(alert.get('ignoredForHosts')).to.equal(item.result);\n      });\n    });\n  });\n\n  describe('#timeSinceAlert', function () {\n    statusCases.forEach(function (item) {\n      var format = item.format;\n      it('should indicate ' + format + ' status duration', function () {\n        alert.setProperties({\n          lastTime: sampleTime,\n          status: item.status.toString()\n        });\n        expect(alert.get('timeSinceAlert')).to.have.string(format);\n        expect(alert.get('timeSinceAlert.length')).to.be.above(format.length);\n        alert.set('lastTime', 0);\n        expect(alert.get('timeSinceAlert')).to.equal(format);\n      });\n    });\n    it('should be empty', function () {\n      alert.set('lastTime', undefined);\n      expect(alert.get('timeSinceAlert')).to.be.empty;\n    });\n  });\n\n  describe('#makeTimeAtleastMinuteAgo', function () {\n    it('should set the minute-ago time', function () {\n      var time = App.dateTime() - 50000,\n        date = new Date(time - 10000);\n      alert.set('lastTime', time);\n      expect(alert.makeTimeAtleastMinuteAgo(alert.get('date'))).to.be.at.least(date);\n    });\n    it('should return the actual time', function () {\n      var time = App.dateTime() - 70000;\n      alert.set('lastTime', time);\n      expect(alert.makeTimeAtleastMinuteAgo(alert.get('date'))).to.eql(alert.get('date'));\n    });\n  });\n\n  describe('#timeSinceAlertDetails', function () {\n    it ('should return the appropriate string', function () {\n      alert.set('lastTime', sampleTime);\n      var occurred = Em.I18n.t('services.alerts.occurredOn').format('May 05 2014', alert.get('date').toLocaleTimeString());\n      var brChecked = Em.I18n.t('services.alerts.brLastCheck').format($.timeago(sampleTime));\n      var checked = Em.I18n.t('services.alerts.lastCheck').format($.timeago(sampleTime));\n      expect(alert.get('timeSinceAlertDetails')).to.equal(occurred);\n      alert.set('lastCheck', sampleTime / 1000);\n      expect(alert.get('timeSinceAlertDetails')).to.equal(occurred + brChecked);\n      alert.set('lastTime', undefined);\n      expect(alert.get('timeSinceAlertDetails')).to.equal(checked);\n    });\n    it ('should be empty', function () {\n      alert.set('lastCheck', undefined);\n      expect(alert.get('timeSinceAlertDetails')).to.be.empty;\n    });\n  });\n\n  describe('#serviceName', function () {\n    serviceTypeCases.forEach(function (item) {\n      it('should be ' + item.name, function () {\n        alert.set('serviceType', item.type);\n        expect(alert.get('serviceName')).to.equal(item.name);\n      });\n    });\n  });\n\n  describe('#serviceLink', function () {\n    serviceTypeCases.forEach(function (item) {\n      it('should be ' + item.link, function () {\n        alert.set('serviceType', item.type);\n        expect(alert.get('serviceLink')).to.equal(item.link);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/authentication');\n\nvar form,\n  methods = [\n    {\n      name: 'method',\n      fields: ['primaryServer', 'searchBaseDn', 'usernameAttribute']\n    },\n    {\n      name: 'bindMethod',\n      fields: ['bindUser', 'password', 'passwordRetype']\n    }\n  ],\n  classCases = [\n    {\n      result: 0,\n      message: 'fail',\n      className: 'error'\n    },\n    {\n      result: 1,\n      message: 'success',\n      className: 'success'\n    }\n  ];\n\ndescribe('App.AuthenticationForm', function () {\n\n  beforeEach(function() {\n    form = App.AuthenticationForm.create();\n  });\n\n  methods.forEach(function (method) {\n    method.fields.forEach(function (field) {\n      describe('#' + field + '.isRequired', function () {\n        for (var i = 2; i--; ) {\n          it('should be ' + i + ' dependent on ' + method.name + ' value', function () {\n            form.getField(method.name).set('value', i);\n            expect(form.getField(field).get('isRequired')).to.equal(i);\n          });\n        }\n      });\n    });\n  });\n\n  describe('#testResult', function () {\n    it('should be 0 or 1', function () {\n      form.testConfiguration();\n      expect([0, 1]).to.include(Number(form.get('testResult')));\n    });\n  });\n\n  describe('#testConfigurationMessage', function () {\n    classCases.forEach(function (item) {\n      it('should indicate ' + item.message, function () {\n        form.set('testResult', item.result);\n        expect(form.get('testConfigurationMessage')).to.equal(Em.I18n.t('admin.authentication.form.test.' + item.message));\n      });\n    });\n  });\n\n  describe('#testConfigurationClass', function () {\n    classCases.forEach(function (item) {\n      it('should indicate ' + item.className, function () {\n        form.set('testResult', item.result);\n        expect(form.get('testConfigurationClass')).to.equal('text-' + item.className);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/cluster_states');\n\nvar status = App.clusterStatus,\n  notInstalledStates = ['CLUSTER_NOT_CREATED_1', 'CLUSTER_DEPLOY_PREP_2', 'CLUSTER_INSTALLING_3', 'SERVICE_STARTING_3'],\n  values = {\n    clusterName: 'name',\n    clusterState: 'STACK_UPGRADING',\n    wizardControllerName: 'wizardStep0Controller',\n    localdb: {}\n  },\n  response = {\n    clusterState: 'DEFAULT',\n    clusterName: 'cluster'\n  },\n  newValue = {\n    clusterName: 'name',\n    clusterState: 'STACK_UPGRADING',\n    wizardControllerName: 'wizardStep0Controller'\n  };\n\ndescribe('App.clusterStatus', function () {\n\n  describe('#isInstalled', function () {\n    notInstalledStates.forEach(function (item) {\n      it('should be false', function () {\n        status.set('clusterState', item);\n        expect(status.get('isInstalled')).to.be.false;\n      });\n    });\n    it('should be true', function () {\n      status.set('clusterState', 'DEFAULT');\n      expect(status.get('isInstalled')).to.be.true;\n    });\n  });\n\n  describe('#value', function () {\n    it('should be set from properties', function () {\n      Em.keys(values).forEach(function (key) {\n        status.set(key, values[key]);\n      });\n      expect(status.get('value')).to.eql(values);\n    });\n  });\n\n  describe('#getUserPrefSuccessCallback', function () {\n    it('should set the cluster parameters', function () {\n      status.getUserPrefSuccessCallback(response);\n      Em.keys(response).forEach(function (key) {\n        expect(status.get(key)).to.equal(response[key]);\n      });\n    });\n  });\n\n  describe('#setClusterStatus', function () {\n\n    afterEach(function () {\n      App.get.restore();\n    });\n\n    it('should return false in test mode', function () {\n      sinon.stub(App, 'get', function(k) {\n        if (k === 'testMode') return true;\n        return Em.get(App, k);\n      });\n      expect(status.setClusterStatus()).to.be.false;\n    });\n\n    it('should set cluster status in non-test mode', function () {\n      sinon.stub(App, 'get', function(k) {\n        if (k === 'testMode') return false;\n        return Em.get(App, k);\n      });\n      var clusterStatus = status.setClusterStatus(newValue);\n      expect(clusterStatus).to.eql(newValue);\n    });\n\n  });\n\n  describe('#makeRequestAsync', function () {\n    it('should be false after synchronous updateFromServer', function () {\n      status.updateFromServer();\n      expect(status.get('makeRequestAsync')).to.be.false;\n    });\n    it('should be true after asynchronous updateFromServer', function () {\n      status.updateFromServer(true);\n      expect(status.get('makeRequestAsync')).to.be.true;\n    });\n    it('should be false after synchronous setClusterStatus with no opt specified', function () {\n      status.setClusterStatus({clusterName: 'name'});\n      expect(status.get('makeRequestAsync')).to.be.false;\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/config_group');\nrequire('models/host');\n\nvar configGroup,\n  hostRecord,\n  hosts = [\n    Em.Object.create({\n      id: 'host0',\n      hostName: 'host0'\n    }),\n    Em.Object.create({\n      id: 'host1',\n      hostName: 'host1'\n    })\n  ],\n  host = {\n    id: 'host0',\n    host_name: 'host0'\n  },\n  properties = [\n    {\n      name: 'n0',\n      value: 'v0'\n    },\n    {\n      name: 'n1',\n      value: 'v1'\n    }\n  ],\n  setParentConfigGroup = function (configGroup, hosts) {\n    configGroup.set('parentConfigGroup', App.ConfigGroup.create());\n    configGroup.set('parentConfigGroup.hosts', hosts.mapProperty('hostName'));\n  };\n\ndescribe('App.ConfigGroup', function () {\n\n  beforeEach(function () {\n    configGroup = App.ConfigGroup.create();\n  });\n\n  describe('#displayName', function () {\n    it('should equal name if maximum length is not exceeded', function () {\n      configGroup.set('name', 'n');\n      expect(configGroup.get('displayName')).to.equal(configGroup.get('name'));\n    });\n    it('should be shortened if maximum length is exceeded', function () {\n      var maxLength = App.config.CONFIG_GROUP_NAME_MAX_LENGTH;\n      for (var i = maxLength + 1, name = ''; i--; ) {\n        name += 'n';\n      }\n      configGroup.set('name', name);\n      expect(configGroup.get('displayName')).to.contain('...');\n      expect(configGroup.get('displayName')).to.have.length(2 * Math.floor(maxLength / 2) + 3);\n    });\n  });\n\n  describe('#displayNameHosts', function () {\n    it('should indicate the number of hosts', function () {\n      var displayName = configGroup.get('displayName');\n      configGroup.set('hosts', []);\n      expect(configGroup.get('displayNameHosts')).to.equal(displayName + ' (0)');\n      configGroup.set('hosts', hosts);\n      expect(configGroup.get('displayNameHosts')).to.equal(displayName + ' (2)');\n    });\n  });\n\n  describe('#availableHosts', function () {\n\n    beforeEach(function () {\n      App.clusterStatus.set('clusterState', 'DEFAULT');\n      App.store.load(App.Host, host);\n      hostRecord = App.Host.find().findProperty('hostName', 'host0');\n      setParentConfigGroup(configGroup, hosts);\n    });\n\n    afterEach(function () {\n      modelSetup.deleteRecord(hostRecord);\n    });\n\n    it('should return an empty array as default', function () {\n      configGroup.set('isDefault', true);\n      expect(configGroup.get('availableHosts')).to.eql([]);\n    });\n\n    it('should return an empty array if there are no unused hosts', function () {\n      configGroup.set('parentConfigGroup', App.ConfigGroup.create());\n      expect(configGroup.get('availableHosts')).to.eql([]);\n    });\n\n    it('should take hosts from parentConfigGroup', function () {\n      setParentConfigGroup(configGroup, hosts);\n      expect(configGroup.get('availableHosts')).to.have.length(2);\n    });\n  });\n\n  describe('#isAddHostsDisabled', function () {\n\n    beforeEach(function () {\n      hostRecord = App.Host.createRecord(host);\n      setParentConfigGroup(configGroup, hosts);\n      configGroup.set('isDefault', false);\n      configGroup.set('availableHosts', []);\n    });\n\n    afterEach(function () {\n      modelSetup.deleteRecord(hostRecord);\n    });\n\n    it('should be false', function () {\n      expect(configGroup.get('isAddHostsDisabled')).to.be.false;\n    });\n    it('should be true', function () {\n      App.clusterStatus.set('clusterState', 'DEFAULT');\n      configGroup.set('isDefault', true);\n      expect(configGroup.get('isAddHostsDisabled')).to.be.true;\n      configGroup.set('availableHosts', hosts);\n      expect(configGroup.get('isAddHostsDisabled')).to.be.true;\n    });\n  });\n\n  describe('#propertiesList', function () {\n    it('should be formed from properties', function () {\n      configGroup.set('properties', properties);\n      properties.forEach(function (item) {\n        Em.keys(item).forEach(function (prop) {\n          expect(configGroup.get('propertiesList')).to.contain(item[prop]);\n        });\n      });\n      expect(configGroup.get('propertiesList')).to.have.length(24);\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/dataset_job');\n\nvar dataSetJob,\n  dataSetJobData = {\n    id: 'job',\n    name: 'job'\n  },\n  timeCases = [\n    {\n      property: 'startFormatted',\n      dateProperty: 'startDate'\n    },\n    {\n      property: 'endFormatted',\n      dateProperty: 'endDate'\n    }\n  ],\n  timeTestData = [\n    {\n      title: 'should calculate time period',\n      time: function () {\n        return App.dateTime();\n      },\n      result: 'less than a minute ago'\n    },\n    {\n      title: 'should be empty',\n      time: function () {\n        return 0;\n      },\n      result: ''\n    }\n  ],\n  healthCases = [\n    {\n      status: 'SUCCEEDED',\n      className: 'icon-ok'\n    },\n    {\n      status: 'SUSPENDED',\n      className: 'icon-cog'\n    },\n    {\n      status: 'WAITING',\n      className: 'icon-time'\n    },\n    {\n      status: 'RUNNING',\n      className: 'icon-play'\n    },\n    {\n      status: 'KILLED',\n      className: 'icon-exclamation-sign'\n    },\n    {\n      status: 'FAILED',\n      className: 'icon-warning-sign'\n    },\n    {\n      status: 'ERROR',\n      className: 'icon-remove'\n    },\n    {\n      status: '',\n      className: 'icon-question-sign'\n    }\n  ];\n\ndescribe('App.DataSetJob', function () {\n\n  beforeEach(function () {\n    dataSetJob = App.DataSetJob.createRecord(dataSetJobData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(dataSetJob);\n  });\n\n  describe('#statusFormatted', function () {\n    it('should be in lower case and capitalized', function () {\n      dataSetJob.set('status', 'RUNNING');\n      expect(dataSetJob.get('statusFormatted')).to.equal('Running');\n    });\n  });\n\n  describe('#isSuspended', function () {\n    it('should be false', function () {\n      dataSetJob.set('status', 'RUNNING');\n      expect(dataSetJob.get('isSuspended')).to.be.false;\n    });\n    it('should be true', function () {\n      dataSetJob.set('status', 'SUSPENDED');\n      expect(dataSetJob.get('isSuspended')).to.be.true;\n    });\n  });\n\n  timeCases.forEach(function (item) {\n    describe('#' + item.property, function () {\n      timeTestData.forEach(function (test) {\n        it(test.title, function () {\n          dataSetJob.set(item.dateProperty, test.time());\n          expect(dataSetJob.get(item.property)).to.equal(test.result);\n        });\n      });\n    });\n  });\n\n  describe('#healthClass', function () {\n    healthCases.forEach(function (item) {\n      it('should be ' + item.className, function () {\n        dataSetJob.set('status', item.status);\n        expect(dataSetJob.get('healthClass')).to.equal(item.className);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/dataset');\n\nvar dataset,\n  datasetData = {\n    id: 'dataset',\n    name: 'dataset'\n  },\n  statusCases = [\n    {\n      status: 'RUNNING',\n      property: 'isRunning'\n    },\n    {\n      status: 'SUSPENDED',\n      property: 'isSuspended'\n    },\n    {\n      status: 'SUBMITTED',\n      property: 'isSubmitted'\n    }\n  ],\n  healthCases = [\n    {\n      title: 'should be live',\n      data: {\n        datasetJobs: [\n          Em.Object.create({\n            status: 'SUCCESSFUL'\n          })\n        ]\n      },\n      className: 'health-status-LIVE',\n      icon: App.healthIconClassGreen\n    },\n    {\n      title: 'should be dead for failed first job',\n      data: {\n        datasetJobs: [\n          Em.Object.create({\n            status: 'SUSPENDED',\n            endDate: 1\n          }),\n          Em.Object.create({\n            status: 'FAILED',\n            endDate: 0\n          })\n        ]\n      },\n      className: 'health-status-DEAD-RED',\n      icon: App.healthIconClassRed\n    },\n    {\n      title: 'should be for no jobs',\n      data: {\n        datasetJobs: []\n      },\n      className: 'health-status-LIVE',\n      icon: App.healthIconClassGreen\n    }\n  ];\n\ndescribe('App.Dataset', function () {\n\n  beforeEach(function () {\n    dataset = App.Dataset.createRecord(datasetData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(dataset);\n  });\n\n  describe('#prefixedName', function () {\n    it('should add mirroring prefix before the name', function () {\n      dataset.set('name', 'name');\n      expect(dataset.get('prefixedName')).to.equal(App.mirroringDatasetNamePrefix + 'name');\n    });\n  });\n\n  describe('#statusFormatted', function () {\n    it('should be in lower case and capitalized', function () {\n      dataset.set('status', 'RUNNING');\n      expect(dataset.get('statusFormatted')).to.equal('Running');\n    });\n  });\n\n  statusCases.forEach(function (item) {\n    describe(item.property, function () {\n\n      beforeEach(function () {\n        dataset.set('status', item.status);\n      });\n\n      it('should be true', function () {\n        expect(dataset.get(item.property)).to.be.true;\n      });\n\n      it('others should be false', function () {\n        var falseProperties = statusCases.mapProperty('property').without(item.property);\n        var falseStates = [];\n        falseProperties.forEach(function (prop) {\n          falseStates.push(dataset.get(prop));\n        });\n        expect(falseStates).to.eql([false, false]);\n      });\n\n    });\n  });\n\n  describe('#healthClass', function () {\n    healthCases.forEach(function (item) {\n      it(item.title, function () {\n        dataset.reopen(item.data);\n        expect(dataset.get('healthClass')).to.equal(item.className);\n      });\n    });\n  });\n\n  describe('#healthIconClass', function () {\n    healthCases.forEach(function (item) {\n      it(item.title, function () {\n        dataset.reopen(item.data);\n        expect(dataset.get('healthIconClass')).to.equal(item.icon);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/form');\n\nvar form,\n  field,\n  formField,\n  resultCases = [\n    {\n      text: Em.I18n.t('form.saveError'),\n      result: -1\n    },\n    {\n      text: Em.I18n.t('form.saveSuccess'),\n      result: 1\n    },\n    {\n      text: '',\n      result: 0\n    }\n  ],\n  displayTypeCases = [\n    {\n      type: 'checkbox',\n      classString: 'Checkbox'\n    },\n    {\n      type: 'select',\n      classString: 'Select'\n    },\n    {\n      type: 'textarea',\n      classString: 'TextArea'\n    },\n    {\n      type: 'password',\n      classString: 'TextField'\n    },\n    {\n      type: 'hidden',\n      classString: 'TextField'\n    }\n  ],\n  hiddenCases = [\n    {\n      displayType: 'password',\n      type: 'hidden',\n      value: false\n    },\n    {\n      displayType: 'hidden',\n      type: 'hidden',\n      value: true\n    }\n  ],\n  expectError = function (message) {\n    formField.validate();\n    expect(formField.get('errorMessage')).to.equal(message);\n  };\n\ndescribe('App.Form', function () {\n\n  beforeEach(function () {\n    form = App.Form.create({\n      fieldsOptions: [\n        {\n          name: 'field0',\n          value: 'value0',\n          isRequired: false\n        }\n      ]\n    });\n    field = form.get('fields').objectAt(0);\n  });\n\n  describe('#fields', function () {\n    it('should get data from formFields', function () {\n      var fields = form.get('fields');\n      expect(fields).to.have.length(1);\n      expect(field.get('name')).to.equal('field0');\n    });\n  });\n\n  describe('#field', function () {\n    it('should get data from formFields', function () {\n      var field0 = form.get('field.field0');\n      expect(form.get('field')).to.not.be.empty;\n      expect(field0.get('name')).to.equal('field0');\n      expect(field0.get('form')).to.eql(form);\n    });\n  });\n\n  describe('#getField', function () {\n    it('should get field0', function () {\n      expect(form.getField('field0')).to.eql(form.get('field.field0'));\n    });\n    it('should be empty', function () {\n      form.set('fields', []);\n      expect(form.getField()).to.be.empty;\n    });\n  });\n\n  describe('#isValid', function () {\n    it('should be true', function () {\n      field.set('isRequired', false);\n      expect(form.isValid()).to.be.true;\n    });\n    it('should be false', function () {\n      field.setProperties({\n        isRequired: true,\n        value: ''\n      });\n      expect(form.isValid()).to.be.false;\n    });\n  });\n\n  describe('#updateValues', function () {\n    it('should update field0 value', function () {\n      form.set('object', Em.Object.create({field0: 'value0upd'}));\n      expect(field.get('value')).to.equal('value0upd');\n    });\n    it('should empty password value', function () {\n      field.set('displayType', 'password');\n      form.set('object', Em.Object.create());\n      expect(field.get('value')).to.be.empty;\n    });\n    it('should clear values', function () {\n      form.set('object', []);\n      expect(field.get('value')).to.be.empty;\n    });\n  });\n\n  describe('#clearValues', function () {\n    it('should clear values', function () {\n      var field0 = form.get('fields').objectAt(0);\n      field0.set('value', 'value0');\n      form.clearValues();\n      expect(field0.get('value')).to.be.empty;\n    });\n  });\n\n  describe('#resultText', function () {\n    resultCases.forEach(function (item) {\n      it('should be ' + item.text, function () {\n        form.set('result', item.result);\n        expect(form.get('resultText')).to.equal(item.text);\n      });\n    });\n  });\n\n});\n\ndescribe('App.FormField', function () {\n\n  beforeEach(function () {\n    formField = App.FormField.create();\n  });\n\n  describe('#isValid', function () {\n    it('should be true', function () {\n      expect(formField.get('isValid')).to.be.true;\n    });\n    it('should be false', function () {\n      formField.set('errorMessage', 'error');\n      expect(formField.get('isValid')).to.be.false;\n    });\n  });\n\n  describe('#viewClass', function () {\n    displayTypeCases.forEach(function (item) {\n      it('should be ' + item.classString, function () {\n        formField.set('displayType', item.type);\n        expect(formField.get('viewClass').toString()).to.contain(item.classString);\n      });\n    });\n  });\n\n  describe('#validate', function () {\n    it('should return error message', function () {\n      formField.set('isRequired', true);\n      expectError('This is required');\n    });\n    it('should return empty error message', function () {\n      formField.set('isRequired', false);\n      expectError('');\n      formField.set('value', 'value');\n      expectError('');\n    });\n  });\n\n  describe('#isHiddenField', function () {\n    hiddenCases.forEach(function (item) {\n      it('should be ' + item.value, function () {\n        formField.setProperties(item);\n        expect(formField.get('isHiddenField')).to.equal(item.value);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/host_component');\n\ndescribe('App.HostComponentStatus', function() {\n\n  describe('#getStatusesList', function() {\n\n    it('allowed statuses', function() {\n      var statuses = [\"STARTED\",\"STARTING\",\"INSTALLED\",\"STOPPING\",\"INSTALL_FAILED\",\"INSTALLING\",\"UPGRADE_FAILED\",\"UNKNOWN\",\"DISABLED\",\"INIT\"];\n      expect(App.HostComponentStatus.getStatusesList()).to.include.members(statuses);\n      expect(statuses).to.include.members(App.HostComponentStatus.getStatusesList());\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/host');\n\ndescribe('App.Host', function () {\n\n  var data = [\n    {\n      id: 'host1',\n      host_name: 'host1',\n      memory: 200000,\n      disk_total: 100.555,\n      disk_free: 90.555,\n      health_status: 'HEALTHY',\n      last_heart_beat_time: (new Date()).getTime() - 18100000\n    },\n    {\n      id: 'host2',\n      host_name: 'host2',\n      memory: 99999,\n      disk_total: 90,\n      disk_free: 90,\n      health_status: 'HEALTHY',\n      last_heart_beat_time: (new Date()).getTime() - 170000\n    },\n    {\n      id: 'host3',\n      host_name: 'host3',\n      memory: 99999,\n      disk_total: 99.999,\n      disk_free: 0,\n      health_status: 'UNKNOWN',\n      last_heart_beat_time: (new Date()).getTime()\n    }\n  ];\n  before(function() {\n    App.set('testMode', false);\n  });\n  App.store.loadMany(App.Host, data);\n\n  describe('#diskUsedFormatted', function () {\n\n    it('host1 - 10GB ', function () {\n      var host = App.Host.find().findProperty('hostName', 'host1');\n      expect(host.get('diskUsedFormatted')).to.equal('10GB');\n    });\n    it('host2 - 0GB', function () {\n      var host = App.Host.find().findProperty('hostName', 'host2');\n      expect(host.get('diskUsedFormatted')).to.equal('0GB');\n    });\n    it('host3 - 100GB', function () {\n      var host = App.Host.find().findProperty('hostName', 'host3');\n      expect(host.get('diskUsedFormatted')).to.equal('100GB');\n    });\n  });\n\n  describe('#diskTotalFormatted', function () {\n\n    it('host1 - 100.56GB ', function () {\n      var host = App.Host.find().findProperty('hostName', 'host1');\n      expect(host.get('diskTotalFormatted')).to.equal('100.56GB');\n    });\n    it('host2 - 90GB', function () {\n      var host = App.Host.find().findProperty('hostName', 'host2');\n      expect(host.get('diskTotalFormatted')).to.equal('90GB');\n    });\n    it('host3 - 100GB', function () {\n      var host = App.Host.find().findProperty('hostName', 'host3');\n      expect(host.get('diskTotalFormatted')).to.equal('100GB');\n    });\n  });\n\n  describe('#diskUsageFormatted', function () {\n\n    it('host1 - 9.94% ', function () {\n      var host = App.Host.find().findProperty('hostName', 'host1');\n      expect(host.get('diskUsageFormatted')).to.equal('9.94%');\n    });\n    it('host2 - 0%', function () {\n      var host = App.Host.find().findProperty('hostName', 'host2');\n      expect(host.get('diskUsageFormatted')).to.equal('0%');\n    });\n    it('host3 - 100%', function () {\n      var host = App.Host.find().findProperty('hostName', 'host3');\n      expect(host.get('diskUsageFormatted')).to.equal('100%');\n    });\n  });\n\n  describe('#isNotHeartBeating', function () {\n    it('host2 - false', function () {\n      var host = App.Host.find().findProperty('hostName', 'host2');\n      expect(host.get('isNotHeartBeating')).to.equal(false);\n    });\n    it('host3 - false', function () {\n      var host = App.Host.find().findProperty('hostName', 'host3');\n      expect(host.get('isNotHeartBeating')).to.equal(true);\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/hosts');\n\nvar hostInfo,\n  statusCases = [\n    {\n      status: 'REGISTERED',\n      bootStatusForDisplay: 'Success',\n      bootBarColor: 'progress-success',\n      bootStatusColor: 'text-success',\n      isBootDone: true\n    },\n    {\n      status: 'FAILED',\n      bootStatusForDisplay: 'Failed',\n      bootBarColor: 'progress-danger',\n      bootStatusColor: 'text-error',\n      isBootDone: true\n    },\n    {\n      status: 'PENDING',\n      bootStatusForDisplay: 'Preparing',\n      bootBarColor: 'progress-info',\n      bootStatusColor: 'text-info',\n      isBootDone: false\n    },\n    {\n      status: 'RUNNING',\n      bootStatusForDisplay: 'Installing',\n      bootBarColor: 'progress-info',\n      bootStatusColor: 'text-info',\n      isBootDone: false\n    },\n    {\n      status: 'DONE',\n      bootStatusForDisplay: 'Registering',\n      bootBarColor: 'progress-info',\n      bootStatusColor: 'text-info',\n      isBootDone: false\n    },\n    {\n      status: 'REGISTERING',\n      bootStatusForDisplay: 'Registering',\n      bootBarColor: 'progress-info',\n      bootStatusColor: 'text-info',\n      isBootDone: false\n    }\n  ],\n  tests = ['bootStatusForDisplay', 'bootBarColor', 'bootStatusColor', 'isBootDone'];\n\ndescribe('App.HostInfo', function () {\n\n  beforeEach(function () {\n    hostInfo = App.HostInfo.create();\n  });\n\n  tests.forEach(function (property) {\n    describe('#' + property, function () {\n      statusCases.forEach(function (testCase) {\n        it('should be ' + testCase[property], function () {\n          hostInfo.set('bootStatus', testCase.status);\n          expect(hostInfo.get(property)).to.equal(testCase[property]);\n        });\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/job');\n\nvar job,\n  jobData = {\n   id: 'job'\n  };\n\ndescribe('App.Job', function () {\n\n  beforeEach(function () {\n    job = App.Job.createRecord(jobData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(job);\n  });\n\n  describe('#duration', function () {\n    it('should convert elapsedTime into time format', function () {\n      job.set('elapsedTime', 1000);\n      expect(job.get('duration')).to.equal('1.00 secs');\n    });\n  });\n\n  describe('#inputFormatted', function () {\n    it('should convert input into bandwidth format', function () {\n      job.set('input', 1024);\n      expect(job.get('inputFormatted')).to.equal('1.0KB');\n    });\n  });\n\n  describe('#outputFormatted', function () {\n    it('should convert output into bandwidth format', function () {\n      job.set('output', 1024);\n      expect(job.get('outputFormatted')).to.equal('1.0KB');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/jobs/job');\n\nvar job,\n  jobData = {\n    id: 'job'\n  },\n  timeCases = [\n    {\n      toSet: 'startTime',\n      toExpect: 'startTimeDisplay'\n    },\n    {\n      toSet: 'endTime',\n      toExpect: 'endTimeDisplay'\n    }\n  ],\n  timeDataCorrect = {\n    startTime: 1000,\n    endTime: 2000\n  },\n  timeDataRunning = {\n    startTime: App.dateTime() - 1000,\n    endTime: undefined\n  },\n  timeDataIncorrect = {\n    startTime: App.dateTime() - 1000,\n    endTime: 1\n  };\n\ndescribe('App.AbstractJob', function () {\n\n  beforeEach(function () {\n    job = App.AbstractJob.createRecord(jobData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(job);\n  });\n\n  timeCases.forEach(function (item) {\n    var toSet = item.toSet,\n      toExpect = item.toExpect;\n    describe('#' + toExpect, function () {\n      it('should be empty', function () {\n        job.set(toSet, 0);\n        expect(job.get(toExpect)).to.be.empty;\n      });\n      it('should return formatted time', function () {\n        job.set(toSet, 1000000);\n        expect(job.get(toExpect)).to.equal('Thu, Jan 01, 1970 00:16');\n      });\n    });\n  });\n\n  describe('#duration', function () {\n    it('should calculate the difference between endTime and startTime', function () {\n      job.setProperties(timeDataCorrect);\n      expect(job.get('duration')).to.equal(1000);\n    });\n    it('should calculate the difference between current time and startTime if the job is running', function () {\n      job.setProperties(timeDataRunning);\n      expect(job.get('duration')).to.be.at.least(1000);\n    });\n    it('should calculate the difference between current time and startTime if endTime is incorrect', function () {\n      job.setProperties(timeDataIncorrect);\n      expect(job.get('duration')).to.be.at.least(1000);\n    });\n  });\n\n  describe('#durationDisplay', function () {\n    it('should return formatted string', function () {\n      job.setProperties(timeDataCorrect);\n      expect(job.get('durationDisplay')).to.equal('1.00 secs');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/jobs/tez_dag');\n\nvar vertex,\n  vertexData = {\n    id: 'vertex'\n  },\n  timeData = {\n    startTime: 1000,\n    endTime: 2000\n  },\n  tasksCases = [\n    {\n      count: 5,\n      number: 5,\n      title: 'should return tasks count'\n    },\n    {\n      count: null,\n      number: 0,\n      title: 'should return 0'\n    }\n  ],\n  dataSizeCases = [\n    {\n      file: 'fileReadBytes',\n      hdfs: 'hdfsReadBytes',\n      total: 'totalReadBytes',\n      totalDisplay: 'totalReadBytesDisplay'\n    },\n    {\n      file: 'fileWriteBytes',\n      hdfs: 'hdfsWriteBytes',\n      total: 'totalWriteBytes',\n      totalDisplay: 'totalWriteBytesDisplay'\n    }\n  ],\n  setDataSize = function (vertex, fileProp, fileVal, hdfsProp, hdfsVal) {\n    vertex.set(fileProp, fileVal);\n    vertex.set(hdfsProp, hdfsVal);\n  };\n\ndescribe('App.TezDagVertex', function () {\n\n  beforeEach(function () {\n    vertex = App.TezDagVertex.createRecord(vertexData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(vertex);\n  });\n\n  describe('#duration', function () {\n    it('should calculate the difference between endTime and startTime', function () {\n      vertex.setProperties(timeData);\n      expect(vertex.get('duration')).to.equal(1000);\n    });\n  });\n\n  tasksCases.forEach(function(item) {\n    describe('#tasksNumber', function () {\n      it(item.title, function () {\n        vertex.set('tasksCount', item.count);\n        expect(vertex.get('tasksNumber')).to.equal(item.number);\n      });\n    });\n  });\n\n  dataSizeCases.forEach(function (item) {\n    describe('#' + item.total, function () {\n      it('should sum ' + item.file + ' and ' + item.hdfs, function () {\n        setDataSize(vertex, item.file, 1024, item.hdfs, 2048);\n        expect(vertex.get(item.total)).to.equal(3072);\n      });\n    });\n    describe('#' + item.totalDisplay, function () {\n      it('should return formatted ' + item.total, function () {\n        setDataSize(vertex, item.file, 1024, item.hdfs, 2048);\n        expect(vertex.get(item.totalDisplay)).to.equal('3 KB');\n      });\n    });\n  });\n\n  describe('#durationDisplay', function () {\n    it('should return formatted string', function () {\n      vertex.setProperties(timeData);\n      expect(vertex.get('durationDisplay')).to.equal('1.00 secs');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/host');\nrequire('models/rack');\n\ndescribe('App.Rack', function () {\n\n  var data = {\n    id: 'rack1',\n    name: 'rack1'\n  };\n\n  App.store.load(App.Rack, data);\n\n  describe('#liveHostsCount', function () {\n\n    it('rack1 has two live hosts', function () {\n      var rack = App.Rack.find().findProperty('name', 'rack1');\n      expect(rack.get('liveHostsCount')).to.equal(2);\n    });\n\n    it('rack1 has three live hosts', function () {\n      App.store.load(App.Host, {\n        id: 'host3',\n        host_name: 'host3',\n        health_status: 'HEALTHY'\n      });\n      var rack = App.Rack.find().findProperty('name', 'rack1');\n      rack.set('name', 'rack1');\n      expect(rack.get('liveHostsCount')).to.equal(3);\n    });\n  });\n\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/run');\n\nvar run,\n  job,\n  runData = {\n    id: 'run'\n  },\n  jobData = {\n    id: 'job'\n  },\n  cases = [\n    {\n      id: 'pig_run',\n      type: 'Pig'\n    },\n    {\n      id: 'hive_run',\n      type: 'Hive'\n    },\n    {\n      id: 'mr_run',\n      type: 'MapReduce'\n    },\n    {\n      id: 'run_pig_hive_mr_id',\n      type: ''\n    }\n  ];\n\ndescribe('App.Run', function () {\n\n  beforeEach(function () {\n    run = App.Run.createRecord(runData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(run);\n  });\n\n  describe('#idFormatted', function () {\n    it('should shorten id to 20 characters', function () {\n      for (var i = 21, name = ''; i--; ) {\n        name += 'n';\n      }\n      run.set('id', name);\n      expect(run.get('idFormatted')).to.have.length(20);\n    });\n  });\n\n  describe('#jobs', function () {\n\n    beforeEach(function () {\n      job = App.Job.createRecord(jobData);\n      job.reopen({\n        run: runData\n      });\n    });\n\n    afterEach(function () {\n      modelSetup.deleteRecord(job);\n    });\n\n    it('should load corresponding jobs from the store', function () {\n      run.set('loadAllJobs', true);\n      expect(run.get('jobs')).to.have.length(1);\n      expect(run.get('jobs').objectAt(0).get('run.id')).to.equal('run');\n    });\n\n  });\n\n  describe('#duration', function () {\n    it('should convert elapsedTime into time format', function () {\n      run.set('elapsedTime', 1000);\n      expect(run.get('duration')).to.equal('1.00 secs');\n    });\n  });\n\n  describe('#isRunning', function () {\n    it('should be true', function () {\n      run.setProperties({\n        numJobsTotal: 5,\n        numJobsCompleted: 0\n      });\n      expect(run.get('isRunning')).to.be.true;\n    });\n    it('should be false', function () {\n      run.setProperties({\n        numJobsTotal: 5,\n        numJobsCompleted: 5\n      });\n      expect(run.get('isRunning')).to.be.false;\n    });\n  });\n\n  describe('#inputFormatted', function () {\n    it('should convert input into bandwidth format', function () {\n      run.set('input', 1024);\n      expect(run.get('inputFormatted')).to.equal('1.0KB');\n    });\n  });\n\n  describe('#outputFormatted', function () {\n    it('should convert output into bandwidth format', function () {\n      run.set('output', 1024);\n      expect(run.get('outputFormatted')).to.equal('1.0KB');\n    });\n  });\n\n  describe('#lastUpdateTime', function () {\n    it('should sum elapsedTime and startTime', function () {\n      run.setProperties({\n        elapsedTime: 1000,\n        startTime: 2000\n      });\n      expect(run.get('lastUpdateTime')).to.equal(3000);\n    });\n  });\n\n  describe('#lastUpdateTimeFormatted', function () {\n    it('should form date from lastUpdateTime', function () {\n      run.setProperties({\n        elapsedTime: 1000,\n        startTime: 100000000000\n      });\n      expect(run.get('lastUpdateTimeFormatted')).to.equal('Sat, Mar 03, 1973 09:46');\n    });\n  });\n\n  describe('#lastUpdateTimeFormattedShort', function () {\n    it('should form date and time from lastUpdateTime', function () {\n      run.setProperties({\n        elapsedTime: 1000,\n        startTime: 100000000000\n      });\n      expect(run.get('lastUpdateTimeFormattedShort')).to.equal('Sat Mar 03 1973');\n    });\n  });\n\n  describe('#type', function () {\n    cases.forEach(function (item) {\n      it('should be ' + (item.type ? item.type : 'empty'), function () {\n        run.set('id', item.id);\n        expect(run.get('type')).to.equal(item.type);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/service/flume');\n\nvar flumeAgent,\n  flumeAgentData = {\n    id: 'agent',\n    name: 'agent'\n  },\n  cases = [\n    {\n      status: 'RUNNING',\n      healthClass: App.healthIconClassGreen\n    },\n    {\n      status: 'NOT_RUNNING',\n      healthClass: App.healthIconClassRed\n    },\n    {\n      status: 'UNKNOWN',\n      healthClass: App.healthIconClassYellow\n    },\n    {\n      status: 'ANOTHER_STATUS',\n      healthClass: App.healthIconClassYellow\n    }\n  ];\n\ndescribe('App.FlumeAgent', function () {\n\n  beforeEach(function () {\n    flumeAgent = App.FlumeAgent.createRecord(flumeAgentData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(flumeAgent);\n  });\n\n  describe('#healthClass', function () {\n    cases.forEach(function (item) {\n      var healthClass = item.healthClass;\n      it('should be ' + healthClass, function () {\n        flumeAgent.set('status', item.status);\n        expect(flumeAgent.get('healthClass')).to.equal(healthClass);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * License); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/service/hdfs');\n\nvar hdfsService,\n  hdfsServiceData = {\n    id: 'hdfs'\n  },\n  hostComponentsData = [\n    {\n      id: 'journalnode',\n      componentName: 'JOURNALNODE'\n    }\n  ],\n  cases = [\n    {\n      propertyName: 'journalNodes',\n      componentId: 'journalnode'\n    }\n  ];\n\ndescribe('App.HDFSService', function () {\n\n  beforeEach(function () {\n    hdfsService = App.HDFSService.createRecord(hdfsServiceData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(hdfsService);\n  });\n\n  cases.forEach(function (item) {\n    var propertyName = item.propertyName;\n    describe('#' + propertyName, function () {\n      it('should take one component from hostComponents', function () {\n        hdfsService.reopen({\n          hostComponents: hostComponentsData\n        });\n        expect(hdfsService.get(propertyName)).to.have.length(1);\n        expect(hdfsService.get(propertyName)[0].id).to.equal(item.componentId);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * License); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/service/yarn');\n\nvar yarnService,\n  yarnServiceData = {\n    id: 'yarn'\n  },\n  hostComponentsData = [\n    {\n      id: 'ats',\n      componentName: 'APP_TIMELINE_SERVER',\n      host: {\n        id: 'host'\n      }\n    },\n    {\n      id: 'nodemanager',\n      componentName: 'NODEMANAGER',\n      host: {\n        id: 'host'\n      }\n    },\n    {\n      id: 'yarnclient',\n      componentName: 'YARN_CLIENT',\n      host: {\n        id: 'host'\n      }\n    }\n  ],\n  configs = [\n    {\n      properties: {\n        'yarn.timeline-service.webapp.address': '0.0.0.0:0000'\n      },\n      tag: 'version2',\n      type: 'yarn-site'\n    }\n  ],\n  nodeCountCases = [\n    {\n      assets: {\n        nodeManagersStarted: 0,\n        nodeManagersInstalled: 1,\n        nodeManagersTotal: 1,\n        nodeManagersCountActive: 0,\n        nodeManagersCountRebooted: 0,\n        nodeManagersCountUnhealthy: 0,\n        nodeManagersCountDecommissioned: 0\n      },\n      nodeManagersCountLost: 1\n    },\n    {\n      assets: {\n        nodeManagersStarted: 1,\n        nodeManagersInstalled: 1,\n        nodeManagersTotal: 1,\n        nodeManagersCountActive: 1,\n        nodeManagersCountRebooted: 1,\n        nodeManagersCountUnhealthy: 0,\n        nodeManagersCountDecommissioned: 0\n      },\n      nodeManagersCountLost: 0\n    }\n  ],\n  setHostComponents = function () {\n    yarnService.reopen({\n      hostComponents: hostComponentsData\n    });\n  };\n\ndescribe('App.YARNService', function () {\n\n  beforeEach(function () {\n    yarnService = App.YARNService.createRecord(yarnServiceData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(yarnService);\n  });\n\n  describe('#appTimelineServerNode', function () {\n    it('should take one component from hostComponents', function () {\n      yarnService.reopen({\n        hostComponents: hostComponentsData\n      });\n      expect(yarnService.get('appTimelineServerNode.id')).to.equal('host');\n    });\n  });\n\n  describe('#ahsWebPort', function () {\n\n    afterEach(function () {\n      App.db.setConfigs([]);\n    });\n\n    it('should be 8188 as default', function () {\n      App.db.setConfigs([]);\n      expect(yarnService.get('ahsWebPort')).to.equal('8188');\n    });\n\n    it('should get value from configs', function () {\n      App.db.setConfigs(configs);\n      expect(yarnService.get('ahsWebPort')).to.equal('0000');\n    });\n\n  });\n\n  describe('#queueFormatted', function () {\n    it('should return formatted string', function () {\n      yarnService.set('queue', '{\"root\":{\"default\":{}}}');\n      expect(yarnService.get('queueFormatted')).to.equal('default (/root)<br/>');\n    });\n  });\n\n  describe('#queuesCount', function () {\n    it('should be 1', function () {\n      yarnService.set('queue', '{\"root\":{\"default\":{}}}');\n      expect(yarnService.get('queuesCount')).to.equal(1);\n    });\n  });\n\n  describe('#maxMemory', function () {\n    it('should add availableMemory to allocatedMemory', function () {\n      yarnService.set('allocatedMemory', 1024);\n      yarnService.set('availableMemory', 2048);\n      expect(yarnService.get('maxMemory')).to.equal(3072);\n    });\n  });\n\n  describe('#allQueueNames', function () {\n    it('should list all queue names as array', function () {\n      yarnService.set('queue', '{\"root\":{\"default\":{}}}');\n      expect(yarnService.get('allQueueNames')).to.eql(['root', 'root/default']);\n    });\n  });\n\n  describe('#childQueueNames', function () {\n    it('should list child queue names as array', function () {\n      yarnService.set('queue', '{\"root\":{\"default\":{}}}');\n      expect(yarnService.get('childQueueNames')).to.eql(['root/default']);\n    });\n  });\n\n  describe('#nodeManagersCountLost', function () {\n    nodeCountCases.forEach(function (item) {\n      it('should be ' + item.nodeManagersCountLost, function () {\n        setHostComponents();\n        for (var prop in item.assets) {\n          yarnService.set(prop, item.assets[prop]);\n        };\n        expect(yarnService.get('nodeManagersCountLost')).to.equal(item.nodeManagersCountLost);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/service_config');\n\nvar serviceConfig,\n  serviceConfigCategory,\n  group,\n  serviceConfigProperty,\n  serviceConfigPropertyInit,\n  configsData = [\n    {\n      overrides: [\n        {\n          error: true,\n          errorMessage: 'error'\n        },\n        {\n          error: true\n        },\n        {}\n      ]\n    },\n    {\n      isValid: false,\n      isVisible: true\n    },\n    {\n      isValid: true,\n      isVisible: true\n    },    {\n      isValid: false,\n      isVisible: false\n    }\n  ],\n  configCategoriesData = [\n    Em.Object.create({\n      slaveErrorCount: 1\n    }),\n    Em.Object.create({\n      slaveErrorCount: 2\n    })\n  ],\n  nameCases = [\n    {\n      name: 'DataNode',\n      primary: 'DATANODE'\n    },\n    {\n      name: 'TaskTracker',\n      primary: 'TASKTRACKER'\n    },\n    {\n      name: 'RegionServer',\n      primary: 'HBASE_REGIONSERVER'\n    },\n    {\n      name: 'name',\n      primary: null\n    }\n  ],\n  components = [\n    {\n      name: 'NameNode',\n      master: true\n    },\n    {\n      name: 'SNameNode',\n      master: true\n    },\n    {\n      name: 'JobTracker',\n      master: true\n    },\n    {\n      name: 'HBase Master',\n      master: true\n    },\n    {\n      name: 'Oozie Master',\n      master: true\n    },\n    {\n      name: 'Hive Metastore',\n      master: true\n    },\n    {\n      name: 'WebHCat Server',\n      master: true\n    },\n    {\n      name: 'ZooKeeper Server',\n      master: true\n    },\n    {\n      name: 'Nagios',\n      master: true\n    },\n    {\n      name: 'Ganglia',\n      master: true\n    },\n    {\n      name: 'DataNode',\n      slave: true\n    },\n    {\n      name: 'TaskTracker',\n      slave: true\n    },\n    {\n      name: 'RegionServer',\n      slave: true\n    }\n  ],\n  masters = components.filterProperty('master'),\n  slaves = components.filterProperty('slave'),\n  groupsData = {\n    groups: [\n      Em.Object.create({\n        errorCount: 1\n      }),\n      Em.Object.create({\n        errorCount: 2\n      })\n    ]\n  },\n  groupNoErrorsData = [].concat(configsData.slice(2)),\n  groupErrorsData = [configsData[1]],\n  overridableFalseData = [\n    {\n      isOverridable: false\n    },\n    {\n      isEditable: false,\n      overrides: configsData[0].overrides\n    },\n    {\n      displayType: 'masterHost'\n    }\n  ],\n  overridableTrueData = [\n    {\n      isOverridable: true,\n      isEditable: true\n    },    {\n      isOverridable: true,\n      overrides: []\n    },\n    {\n      isOverridable: true\n    }\n  ],\n  overriddenFalseData = [\n    {\n      overrides: null,\n      isOriginalSCP: true\n    },\n    {\n      overrides: [],\n      isOriginalSCP: true\n    }\n  ],\n  overriddenTrueData = [\n    {\n      overrides: configsData[0].overrides\n    },\n    {\n      isOriginalSCP: false\n    }\n  ],\n  removableFalseData = [\n    {\n      isEditable: false\n    },\n    {\n      hasOverrides: true\n    },\n    {\n      isUserProperty: false,\n      isOriginalSCP: true\n    }\n  ],\n  removableTrueData = [\n    {\n      isEditable: true,\n      hasOverrides: false,\n      isUserProperty: true\n    },\n    {\n      isEditable: true,\n      hasOverrides: false,\n      isOriginalSCP: false\n    }\n  ],\n  initPropertyData = [\n    {\n      initial: {\n        displayType: 'password',\n        value: 'value'\n      },\n      result: {\n        retypedPassword: 'value'\n      }\n    },\n    {\n      initial: {\n        id: 'puppet var',\n        value: '',\n        defaultValue: 'default'\n      },\n      result: {\n        value: 'default'\n      }\n    }\n  ],\n  notDefaultFalseData = [\n    {\n      isEditable: false\n    },\n    {\n      defaultValue: null\n    },\n    {\n      value: 'value',\n      defaultValue: 'value'\n    }\n  ],\n  notDefaultTrueData = {\n    isEditable: true,\n    value: 'value',\n    defaultValue: 'default'\n  },\n  types = ['masterHost', 'slaveHosts', 'masterHosts', 'slaveHost', 'radio button'],\n  classCases = [\n    {\n      initial: {\n        displayType: 'checkbox'\n      },\n      viewClass: App.ServiceConfigCheckbox\n    },\n    {\n      initial: {\n        displayType: 'password'\n      },\n      viewClass: App.ServiceConfigPasswordField\n    },\n    {\n      initial: {\n        displayType: 'combobox'\n      },\n      viewClass: App.ServiceConfigComboBox\n    },\n    {\n      initial: {\n        displayType: 'radio button'\n      },\n      viewClass: App.ServiceConfigRadioButtons\n    },\n    {\n      initial: {\n        displayType: 'directories'\n      },\n      viewClass: App.ServiceConfigTextArea\n    },\n    {\n      initial: {\n        displayType: 'content'\n      },\n      viewClass: App.ServiceConfigTextAreaContent\n\n    },\n    {\n      initial: {\n        displayType: 'multiLine'\n      },\n      viewClass: App.ServiceConfigTextArea\n    },\n    {\n      initial: {\n        displayType: 'custom'\n      },\n      viewClass: App.ServiceConfigBigTextArea\n    },\n    {\n      initial: {\n        displayType: 'masterHost'\n      },\n      viewClass: App.ServiceConfigMasterHostView\n    },\n    {\n      initial: {\n        displayType: 'masterHosts'\n      },\n      viewClass: App.ServiceConfigMasterHostsView\n    },\n    {\n      initial: {\n        displayType: 'slaveHosts'\n      },\n      viewClass: App.ServiceConfigSlaveHostsView\n    },\n    {\n      initial: {\n        unit: true,\n        displayType: 'type'\n      },\n      viewClass: App.ServiceConfigTextFieldWithUnit\n    },\n    {\n      initial: {\n        unit: false,\n        displayType: 'type'\n      },\n      viewClass: App.ServiceConfigTextField\n    }\n  ];\n\n\ndescribe('App.ServiceConfig', function () {\n\n  beforeEach(function () {\n    serviceConfig = App.ServiceConfig.create();\n  });\n\n  describe('#errorCount', function () {\n    it('should be 0', function () {\n      serviceConfig.setProperties({\n        configs: [],\n        configCategories: []\n      });\n      expect(serviceConfig.get('errorCount')).to.equal(0);\n    });\n    it('should sum counts of all errors', function () {\n      serviceConfig.setProperties({\n        configs: configsData,\n        configCategories: configCategoriesData\n      });\n      expect(serviceConfig.get('errorCount')).to.equal(6);\n    });\n  });\n\n});\n\ndescribe('App.ServiceConfigCategory', function () {\n\n  beforeEach(function () {\n    serviceConfigCategory = App.ServiceConfigCategory.create();\n  });\n\n  describe('#primaryName', function () {\n    nameCases.forEach(function (item) {\n      it('should return ' + item.primary, function () {\n        serviceConfigCategory.set('name', item.name);\n        expect(serviceConfigCategory.get('primaryName')).to.equal(item.primary);\n      })\n    });\n  });\n\n  describe('#isForMasterComponent', function () {\n    masters.forEach(function (item) {\n      it('should be true for ' + item.name, function () {\n        serviceConfigCategory.set('name', item.name);\n        expect(serviceConfigCategory.get('isForMasterComponent')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      serviceConfigCategory.set('name', 'name');\n      expect(serviceConfigCategory.get('isForMasterComponent')).to.be.false;\n    });\n  });\n\n  describe('#isForSlaveComponent', function () {\n    slaves.forEach(function (item) {\n      it('should be true for ' + item.name, function () {\n        serviceConfigCategory.set('name', item.name);\n        expect(serviceConfigCategory.get('isForSlaveComponent')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      serviceConfigCategory.set('name', 'name');\n      expect(serviceConfigCategory.get('isForSlaveComponent')).to.be.false;\n    });\n  });\n\n  describe('#slaveErrorCount', function () {\n    it('should be 0', function () {\n      serviceConfigCategory.set('slaveConfigs', []);\n      expect(serviceConfigCategory.get('slaveErrorCount')).to.equal(0);\n    });\n    it('should sum all errorCount values', function () {\n      serviceConfigCategory.set('slaveConfigs', groupsData);\n      expect(serviceConfigCategory.get('slaveErrorCount')).to.equal(3);\n    });\n  });\n\n  describe('#isAdvanced', function () {\n    it('should be true', function () {\n      serviceConfigCategory.set('name', 'Advanced');\n      expect(serviceConfigCategory.get('isAdvanced')).to.be.true;\n    });\n    it('should be false', function () {\n      serviceConfigCategory.set('name', 'name');\n      expect(serviceConfigCategory.get('isAdvanced')).to.be.false;\n    });\n  });\n\n});\n\ndescribe('App.Group', function () {\n\n  beforeEach(function () {\n    group = App.Group.create();\n  });\n\n  describe('#errorCount', function () {\n    it('should be 0', function () {\n      group.set('properties', groupNoErrorsData);\n      expect(group.get('errorCount')).to.equal(0);\n    });\n    it('should be 1', function () {\n      group.set('properties', groupErrorsData);\n      expect(group.get('errorCount')).to.equal(1);\n    });\n  });\n\n});\n\ndescribe('App.ServiceConfigProperty', function () {\n\n  beforeEach(function () {\n    serviceConfigProperty = App.ServiceConfigProperty.create();\n  });\n\n  describe('#overrideErrorTrigger', function () {\n    it('should be an increment', function () {\n      serviceConfigProperty.set('overrides', configsData[0].overrides);\n      expect(serviceConfigProperty.get('overrideErrorTrigger')).to.equal(1);\n      serviceConfigProperty.set('overrides', []);\n      expect(serviceConfigProperty.get('overrideErrorTrigger')).to.equal(2);\n    });\n  });\n\n  describe('#isPropertyOverridable', function () {\n    overridableFalseData.forEach(function (item) {\n      it('should be false', function () {\n        Em.keys(item).forEach(function (prop) {\n          serviceConfigProperty.set(prop, item[prop]);\n        });\n        expect(serviceConfigProperty.get('isPropertyOverridable')).to.be.false;\n      });\n    });\n    overridableTrueData.forEach(function (item) {\n      it('should be true', function () {\n        Em.keys(item).forEach(function (prop) {\n          serviceConfigProperty.set(prop, item[prop]);\n        });\n        expect(serviceConfigProperty.get('isPropertyOverridable')).to.be.true;\n      });\n    });\n  });\n\n  describe('#isOverridden', function () {\n    overriddenFalseData.forEach(function (item) {\n      it('should be false', function () {\n        Em.keys(item).forEach(function (prop) {\n          serviceConfigProperty.set(prop, item[prop]);\n        });\n        expect(serviceConfigProperty.get('isOverridden')).to.be.false;\n      });\n    });\n    overriddenTrueData.forEach(function (item) {\n      it('should be true', function () {\n        Em.keys(item).forEach(function (prop) {\n          serviceConfigProperty.set(prop, item[prop]);\n        });\n        expect(serviceConfigProperty.get('isOverridden')).to.be.true;\n      });\n    });\n  });\n\n  describe('#isRemovable', function () {\n    removableFalseData.forEach(function (item) {\n      it('should be false', function () {\n        Em.keys(item).forEach(function (prop) {\n          serviceConfigProperty.set(prop, item[prop]);\n        });\n        expect(serviceConfigProperty.get('isRemovable')).to.be.false;\n      });\n    });\n    removableTrueData.forEach(function (item) {\n      it('should be true', function () {\n        Em.keys(item).forEach(function (prop) {\n          serviceConfigProperty.set(prop, item[prop]);\n        });\n        expect(serviceConfigProperty.get('isRemovable')).to.be.true;\n      });\n    });\n  });\n\n  describe('#init', function () {\n    initPropertyData.forEach(function (item) {\n      it('should set initial data', function () {\n        serviceConfigPropertyInit = App.ServiceConfigProperty.create(item.initial);\n        Em.keys(item.result).forEach(function (prop) {\n          expect(serviceConfigPropertyInit.get(prop)).to.equal(item.result[prop]);\n        });\n      });\n    });\n  });\n\n  describe('#isNotDefaultValue', function () {\n    notDefaultFalseData.forEach(function (item) {\n      it('should be false', function () {\n        Em.keys(item).forEach(function (prop) {\n          serviceConfigProperty.set(prop, item[prop]);\n        });\n        expect(serviceConfigProperty.get('isNotDefaultValue')).to.be.false;\n      });\n    });\n    it('should be true', function () {\n      Em.keys(notDefaultTrueData).forEach(function (prop) {\n        serviceConfigProperty.set(prop, notDefaultTrueData[prop]);\n      });\n      expect(serviceConfigProperty.get('isNotDefaultValue')).to.be.true;\n    });\n  });\n\n  describe('#cantBeUndone', function () {\n    types.forEach(function (item) {\n      it('should be true', function () {\n        serviceConfigProperty.set('displayType', item);\n        expect(serviceConfigProperty.get('cantBeUndone')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      serviceConfigProperty.set('displayType', 'type');\n      expect(serviceConfigProperty.get('cantBeUndone')).to.be.false;\n    });\n  });\n\n  describe('#setDefaultValue', function () {\n    it('should change the default value', function () {\n      serviceConfigProperty.set('defaultValue', 'value0');\n      serviceConfigProperty.setDefaultValue(/\\d/, '1');\n      expect(serviceConfigProperty.get('defaultValue')).to.equal('value1');\n    });\n  });\n\n  describe('#isValid', function () {\n    it('should be true', function () {\n      serviceConfigProperty.set('errorMessage', '');\n      expect(serviceConfigProperty.get('isValid')).to.be.true;\n    });\n    it('should be false', function () {\n      serviceConfigProperty.set('errorMessage', 'message');\n      expect(serviceConfigProperty.get('isValid')).to.be.false;\n    });\n  });\n\n  describe('#viewClass', function () {\n    classCases.forEach(function (item) {\n      it ('should be ' + item.viewClass, function () {\n        Em.keys(item.initial).forEach(function (prop) {\n          serviceConfigProperty.set(prop, item.initial[prop]);\n        });\n        expect(serviceConfigProperty.get('viewClass')).to.eql(item.viewClass);\n      });\n    });\n  });\n\n  describe('#validate', function () {\n    it('not required', function () {\n      serviceConfigProperty.setProperties({\n        isRequired: false,\n        value: ''\n      });\n      expect(serviceConfigProperty.get('errorMessage')).to.be.empty;\n      expect(serviceConfigProperty.get('error')).to.be.false;\n    });\n    it('should validate', function () {\n      serviceConfigProperty.setProperties({\n        isRequired: true,\n        value: 'value'\n      });\n      expect(serviceConfigProperty.get('errorMessage')).to.be.empty;\n      expect(serviceConfigProperty.get('error')).to.be.false;\n    });\n    it('should fail', function () {\n      serviceConfigProperty.setProperties({\n        isRequired: true,\n        value: 'value'\n      });\n      serviceConfigProperty.set('value', '');\n      expect(serviceConfigProperty.get('errorMessage')).to.equal('This is required');\n      expect(serviceConfigProperty.get('error')).to.be.true;\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/service');\n\nvar service,\n  serviceData = {\n    id: 'service'\n  },\n  healthCases = [\n    {\n      status: 'STARTED',\n      health: 'green'\n    },\n    {\n      status: 'STARTING',\n      health: 'green-blinking'\n    },\n    {\n      status: 'INSTALLED',\n      health: 'red'\n    },\n    {\n      status: 'STOPPING',\n      health: 'red-blinking'\n    },\n    {\n      status: 'UNKNOWN',\n      health: 'yellow'\n    },\n    {\n      status: 'ANOTHER',\n      health: 'yellow'\n    }\n  ],\n  statusPropertiesCases = [\n    {\n      status: 'INSTALLED',\n      property: 'isStopped'\n    },\n    {\n      status: 'STARTED',\n      property: 'isStarted'\n    }\n  ],\n  services = [\n    {\n      name: 'HDFS',\n      configurable: true\n    },\n    {\n      name: 'YARN',\n      configurable: true\n    },\n    {\n      name: 'MAPREDUCE',\n      configurable: true\n    },\n    {\n      name: 'MAPREDUCE2',\n      configurable: true\n    },\n    {\n      name:'TEZ',\n      clientOnly: true,\n      configurable: true\n    },\n    {\n      name: 'HBASE',\n      configurable: true\n    },\n    {\n      name: 'HIVE',\n      configurable: true\n    },\n    {\n      name: 'HCATALOG',\n      clientOnly: true\n    },\n    {\n      name: 'WEBHCAT',\n      configurable: true\n    },\n    {\n      name: 'FLUME',\n      configurable: true\n    },\n    {\n      name: 'FALCON',\n      configurable: true\n    },\n    {\n      name: 'STORM',\n      configurable: true\n    },\n    {\n      name: 'OOZIE',\n      configurable: true\n    },\n    {\n      name: 'GANGLIA',\n      configurable: true\n    },\n    {\n      name: 'NAGIOS',\n      configurable: true\n    },\n    {\n      name: 'ZOOKEEPER',\n      configurable: true\n    },\n    {\n      name: 'PIG',\n      configurable: true,\n      clientOnly: true\n    },\n    {\n      name: 'SQOOP',\n      clientOnly: true\n    },\n    {\n      name: 'HUE',\n      configurable: true\n    }\n  ],\n  clientsOnly = services.filterProperty('clientOnly').mapProperty('name'),\n  configurable = services.filterProperty('configurable').mapProperty('name'),\n  hostComponentsDataFalse = [\n    [],\n    [\n      {\n        staleConfigs: false\n      }\n    ],\n    [\n      {\n        serviceName: 'HIVE',\n        staleConfigs: false\n      }\n    ]\n  ],\n  hostComponentsDataTrue = [\n    [\n      Em.Object.create({\n        staleConfigs: true,\n        displayName: 'service0'\n      })\n    ],\n    [\n      Em.Object.create({\n        host: {\n          publicHostName: 'host0'\n        },\n        staleConfigs: true,\n        displayName: 'service1'\n      })\n    ]\n  ],\n  restartData = {\n    host0: ['service0', 'service1']\n};\n\ndescribe('App.Service', function () {\n\n  beforeEach(function () {\n    service = App.Service.createRecord(serviceData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(service);\n  });\n\n  describe('#isInPassive', function () {\n    it('should be true', function () {\n      service.set('passiveState', 'ON');\n      expect(service.get('isInPassive')).to.be.true;\n    });\n    it('should be false', function () {\n      service.set('passiveState', 'OFF');\n      expect(service.get('isInPassive')).to.be.false;\n    });\n  });\n\n  describe('#healthStatus', function () {\n    healthCases.forEach(function (item) {\n      it('should be ' + item.health, function () {\n        service.set('workStatus', item.status);\n        expect(service.get('healthStatus')).to.equal(item.health);\n      });\n    });\n  });\n\n  statusPropertiesCases.forEach(function (item) {\n    var status = item.status,\n      property = item.property;\n    describe('#' + property, function () {\n      it('status ' + status + ' is for ' + property, function () {\n        service.set('workStatus', status);\n        expect(service.get(property)).to.be.true;\n        var falseStates = statusPropertiesCases.mapProperty('property').without(property);\n        var falseStatuses = [];\n        falseStates.forEach(function (state) {\n          falseStatuses.push(service.get(state));\n        });\n        expect(falseStatuses).to.eql([false]);\n      });\n    });\n  });\n\n  describe('#isClientsOnly', function () {\n    clientsOnly.forEach(function (item) {\n      it('should be true', function () {\n        service.set('serviceName', item);\n        expect(service.get('isClientsOnly')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      service.set('serviceName', 'HDFS');\n      expect(service.get('isClientsOnly')).to.be.false;\n    });\n  });\n\n  describe('#isConfigurable', function () {\n    configurable.forEach(function (item) {\n      it('should be true', function () {\n        service.set('serviceName', item);\n        expect(service.get('isConfigurable')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      service.set('serviceName', 'SQOOP');\n      expect(service.get('isConfigurable')).to.be.false;\n    });\n  });\n\n  describe('#displayName', function () {\n    services.forEach(function (item) {\n      var displayName = App.Service.DisplayNames[item.name];\n      it('should return ' + displayName, function () {\n        service.set('serviceName', item.name);\n        expect(service.get('displayName')).to.equal(displayName);\n      });\n    });\n  });\n\n  describe('#isRestartRequired', function () {\n    hostComponentsDataFalse.forEach(function (item) {\n      it('should be false', function () {\n        service.reopen({\n          hostComponents: item\n        });\n        expect(service.get('isRestartRequired')).to.be.false;\n      });\n    });\n    hostComponentsDataTrue.forEach(function (item) {\n      it('should be true', function () {\n        service.reopen({\n          hostComponents: item\n        });\n        expect(service.get('isRestartRequired')).to.be.true;\n      });\n    });\n  });\n\n  describe('#restartRequiredMessage', function () {\n    it('should form message for 2 services on 1 host', function () {\n      service.set('restartRequiredHostsAndComponents', restartData);\n      expect(service.get('restartRequiredMessage')).to.contain('host0');\n      expect(service.get('restartRequiredMessage')).to.contain('service0');\n      expect(service.get('restartRequiredMessage')).to.contain('service1');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/stack_service_component');\n\nvar stackServiceComponent,\n  stackServiceComponentData = {\n    id: 'ssc'\n  },\n  components = [\n    {\n      name: 'NAMENODE',\n      isReassignable: true\n    },\n    {\n      name: 'SECONDARY_NAMENODE',\n      isReassignable: true\n    },\n    {\n      name: 'JOBTRACKER',\n      isReassignable: true\n    },\n    {\n      name: 'RESOURCEMANAGER',\n      isReassignable: true\n    },\n    {\n      name: 'SUPERVISOR',\n      isDeletable: true,\n      isRollinRestartAllowed: true,\n      isAddableToHost: true\n    },\n    {\n      name: 'HBASE_MASTER',\n      isDeletable: true,\n      isAddableToHost: true\n    },\n    {\n      name: 'DATANODE',\n      isDeletable: true,\n      isRollinRestartAllowed: true,\n      isDecommissionAllowed: true,\n      isAddableToHost: true\n    },\n    {\n      name: 'TASKTRACKER',\n      isDeletable: true,\n      isRollinRestartAllowed: true,\n      isDecommissionAllowed: true,\n      isAddableToHost: true\n    },\n    {\n      name: 'NODEMANAGER',\n      isDeletable: true,\n      isRollinRestartAllowed: true,\n      isDecommissionAllowed: true,\n      isAddableToHost: true\n    },\n    {\n      name: 'HBASE_REGIONSERVER',\n      isDeletable: true,\n      isRollinRestartAllowed: true,\n      isDecommissionAllowed: true,\n      isAddableToHost: true\n    },\n    {\n      name: 'GANGLIA_MONITOR',\n      isDeletable: true,\n      isAddableToHost: true\n    },\n    {\n      name: 'FLUME_HANDLER',\n      isRefreshConfigsAllowed: true\n    },\n    {\n      name: 'ZOOKEEPER_SERVER',\n      isAddableToHost: true\n    },\n    {\n      name: 'MYSQL_SERVER',\n      mastersNotShown: true\n    },\n    {\n      name: 'JOURNALNODE',\n      mastersNotShown: true\n    }\n  ],\n  reassignable = components.filterProperty('isReassignable').mapProperty('name'),\n  deletable = components.filterProperty('isDeletable').mapProperty('name'),\n  rollingRestartable = components.filterProperty('isRollinRestartAllowed').mapProperty('name'),\n  decommissionable = components.filterProperty('isDecommissionAllowed').mapProperty('name'),\n  refreshable = components.filterProperty('isRefreshConfigsAllowed').mapProperty('name'),\n  addable = components.filterProperty('isAddableToHost').mapProperty('name'),\n  mastersNotShown = components.filterProperty('mastersNotShown').mapProperty('name');\n\ndescribe('App.StackServiceComponent', function () {\n\n  beforeEach(function () {\n    stackServiceComponent = App.StackServiceComponent.createRecord(stackServiceComponentData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(stackServiceComponent);\n  });\n\n  describe('#displayName', function () {\n    components.forEach(function (item) {\n      var displayName = App.format.components[item.name];\n      it('should be ' + displayName, function () {\n        stackServiceComponent.set('componentName', item.name);\n        expect(stackServiceComponent.get('displayName')).to.equal(displayName);\n      });\n    });\n  });\n\n  describe('#isSlave', function () {\n    it('should be true', function () {\n      stackServiceComponent.set('componentCategory', 'SLAVE');\n      expect(stackServiceComponent.get('isSlave')).to.be.true;\n    });\n    it('should be false', function () {\n      stackServiceComponent.set('componentCategory', 'cc');\n      expect(stackServiceComponent.get('isSlave')).to.be.false;\n    });\n  });\n\n  describe('#isRestartable', function () {\n    it('should be true', function () {\n      stackServiceComponent.set('isClient', false);\n      expect(stackServiceComponent.get('isRestartable')).to.be.true;\n    });\n    it('should be false', function () {\n      stackServiceComponent.set('isClient', true);\n      expect(stackServiceComponent.get('isRestartable')).to.be.false;\n    });\n  });\n\n  describe('#isReassignable', function () {\n    reassignable.forEach(function (item) {\n      it('should be true', function () {\n        stackServiceComponent.set('componentName', item);\n        expect(stackServiceComponent.get('isReassignable')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      stackServiceComponent.set('componentName', 'name');\n      expect(stackServiceComponent.get('isReassignable')).to.be.false;\n    });\n  });\n\n  describe('#isDeletable', function () {\n    deletable.forEach(function (item) {\n      it('should be true', function () {\n        stackServiceComponent.set('componentName', item);\n        expect(stackServiceComponent.get('isDeletable')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      stackServiceComponent.set('componentName', 'name');\n      expect(stackServiceComponent.get('isDeletable')).to.be.false;\n    });\n  });\n\n  describe('#isRollinRestartAllowed', function () {\n    rollingRestartable.forEach(function (item) {\n      it('should be true', function () {\n        stackServiceComponent.set('componentName', item);\n        expect(stackServiceComponent.get('isRollinRestartAllowed')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      stackServiceComponent.set('componentName', 'name');\n      expect(stackServiceComponent.get('isRollinRestartAllowed')).to.be.false;\n    });\n  });\n\n  describe('#isDecommissionAllowed', function () {\n    decommissionable.forEach(function (item) {\n      it('should be true', function () {\n        stackServiceComponent.set('componentName', item);\n        expect(stackServiceComponent.get('isDecommissionAllowed')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      stackServiceComponent.set('componentName', 'name');\n      expect(stackServiceComponent.get('isDecommissionAllowed')).to.be.false;\n    });\n  });\n\n  describe('#isRefreshConfigsAllowed', function () {\n    refreshable.forEach(function (item) {\n      it('should be true', function () {\n        stackServiceComponent.set('componentName', item);\n        expect(stackServiceComponent.get('isRefreshConfigsAllowed')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      stackServiceComponent.set('componentName', 'name');\n      expect(stackServiceComponent.get('isRefreshConfigsAllowed')).to.be.false;\n    });\n  });\n\n  describe('#isAddableToHost', function () {\n    addable.forEach(function (item) {\n      it('should be true', function () {\n        stackServiceComponent.set('componentName', item);\n        expect(stackServiceComponent.get('isAddableToHost')).to.be.true;\n      });\n    });\n    it('should be false', function () {\n      stackServiceComponent.set('componentName', 'name');\n      expect(stackServiceComponent.get('isAddableToHost')).to.be.false;\n    });\n  });\n\n  describe('#isShownOnInstallerAssignMasterPage', function () {\n    mastersNotShown.forEach(function (item) {\n      it('should be false', function () {\n        stackServiceComponent.set('componentName', item);\n        expect(stackServiceComponent.get('isShownOnInstallerAssignMasterPage')).to.be.false;\n      });\n    });\n    it('should be true', function () {\n      stackServiceComponent.set('componentName', 'APP_TIMELINE_SERVER');\n      expect(stackServiceComponent.get('isShownOnInstallerAssignMasterPage')).to.be.true;\n    });\n    it('should be true', function () {\n      stackServiceComponent.setProperties({\n        componentName: 'name',\n        isMaster: true\n      });\n      expect(stackServiceComponent.get('isShownOnInstallerAssignMasterPage')).to.be.true;\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar modelSetup = require('test/init_model_test');\nrequire('models/user');\n\nvar user,\n  form,\n  userNameField,\n  userData = {\n    id: 'user'\n  },\n  objectData = Em.Object.create({\n    userName: 'name',\n    isLdap: true\n  });\n\ndescribe('App.User', function () {\n\n  beforeEach(function () {\n    user = App.User.createRecord(userData);\n  });\n\n  afterEach(function () {\n    modelSetup.deleteRecord(user);\n  });\n\n  describe('#id', function () {\n    it('should take value from userName', function () {\n      user.set('userName', 'name');\n      expect(user.get('id')).to.equal('name');\n    });\n  });\n\n  describe('#type', function () {\n    it('should be LDAP', function () {\n      user.set('isLdap', true);\n      expect(user.get('type')).to.equal('LDAP');\n    });\n    it('should be Local', function () {\n      user.set('isLdap', false);\n      expect(user.get('type')).to.equal('Local');\n    });\n  });\n\n});\n\ndescribe('App.EditUserForm', function () {\n\n  beforeEach(function () {\n    form = App.EditUserForm.create();\n  });\n\n  describe('#object', function () {\n\n    before(function () {\n      sinon.stub(App.router, 'get', function (k) {\n        if (k === 'mainAdminUserEditController.content') return userData;\n        return Em.get(App.router, k);\n      });\n    });\n\n    after(function () {\n      App.router.get.restore();\n    });\n\n    it('should take data from controller', function () {\n      expect(form.get('object')).to.eql(userData);\n    });\n\n  });\n\n  describe('#disableUsername', function () {\n    it('should update userName field', function () {\n      form.set('object', userData);\n      expect(form.get('field.userName.disabled')).to.equal('disabled');\n    });\n  });\n\n  describe('#disableAdminCheckbox', function () {\n\n    before(function () {\n      sinon.stub(App, 'get', function(k) {\n        switch (k) {\n          case 'router':\n            return {\n              getLoginName: Em.K\n            };\n          case 'supports.ldapGroupMapping':\n            return true;\n          default:\n            return Em.get(App, k);\n        }\n      });\n      sinon.stub(App.router, 'get', function (k) {\n        if (k === 'mainAdminUserEditController.content') return objectData;\n        return Em.get(App.router, k);\n      });\n    });\n\n    after(function () {\n      App.get.restore();\n      App.router.get.restore();\n    });\n\n    it('should not disable', function () {\n      expect(form.get('field.admin.disabled')).to.be.false;\n    });\n\n    it('should disable', function () {\n      form.set('object', objectData);\n      expect(form.get('field.admin.disabled')).to.be.true;\n    });\n\n  });\n\n  describe('#isValid', function () {\n    it('should be true as default', function () {\n      expect(form.isValid()).to.be.true;\n    });\n    it('should be false', function () {\n      form.set('field.new_password.isRequired', true);\n      expect(form.isValid()).to.be.false;\n    });\n  });\n\n  describe('#save', function () {\n\n    before(function () {\n      sinon.stub(App.router, 'get', function (k) {\n        if (k === 'mainAdminUserEditController.content') return objectData;\n        return Em.get(App.router, k);\n      });\n    });\n\n    after(function () {\n      App.router.get.restore();\n    });\n\n    it('should record form values to object', function () {\n      form.set('field.userName.value', 'name');\n      form.save();\n      expect(form.get('object.userName')).to.equal('name');\n    });\n  });\n\n});\n\ndescribe('App.CreateUserForm', function () {\n\n  beforeEach(function () {\n    form = App.CreateUserForm.create();\n  });\n\n  describe('#object', function () {\n\n    before(function () {\n      sinon.stub(App.router, 'get', function (k) {\n        if (k === 'mainAdminUserCreateController.content') return userData;\n        return Em.get(App, k);\n      });\n    });\n\n    after(function () {\n      App.router.get.restore();\n    });\n\n    it('should take data from controller', function () {\n      expect(form.get('object')).to.eql(userData);\n    });\n\n  });\n\n  describe('#field.userName.toLowerCase', function () {\n    it('should convert userName into lower case', function () {\n      userNameField = form.getField('userName');\n      userNameField.set('value', 'NAME');\n      expect(userNameField.get('value')).to.equal('name');\n    });\n  });\n\n  describe('#isValid', function () {\n    it('should be false as default', function () {\n      expect(form.isValid()).to.be.false;\n    });\n    it('should be true', function () {\n      form.get('fields').forEach(function (item) {\n        if (item.get('isRequired')) {\n          item.set('value', 'value');\n        }\n      });\n      expect(form.isValid()).to.be.true;\n    });\n  });\n\n  describe('#isWarn', function () {\n    it('should be false as default', function () {\n      expect(form.isWarn()).to.be.false;\n    });\n    it('should be true', function () {\n      form.getField('userName').set('value', '1');\n      expect(form.isWarn()).to.be.true;\n    });\n    it('should be false', function () {\n      form.getField('userName').set('value', 'name');\n      expect(form.isWarn()).to.be.false;\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = {\n  \"items\" : [\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Apache Hadoop Distributed Processing Framework\",\n        \"service_name\" : \"MAPREDUCE\",\n        \"service_version\" : \"1.2.0.1.3.3.0\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"1.3.2\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"HISTORYSERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"MAPREDUCE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"1.3.2\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"JOBTRACKER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"MAPREDUCE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"1.3.2\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"MAPREDUCE_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"MAPREDUCE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"1.3.2\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"SLAVE\",\n            \"component_name\" : \"TASKTRACKER\",\n            \"is_client\" : false,\n            \"is_master\" : false,\n            \"service_name\" : \"MAPREDUCE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"1.3.2\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Data management and processing platform\",\n        \"service_name\" : \"FALCON\",\n        \"service_version\" : \"0.4.0.2.1.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"FALCON_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"FALCON\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"FALCON_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"FALCON\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Ganglia Metrics Collection system\",\n        \"service_name\" : \"GANGLIA\",\n        \"service_version\" : \"3.5.0\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"SLAVE\",\n            \"component_name\" : \"GANGLIA_MONITOR\",\n            \"is_client\" : false,\n            \"is_master\" : false,\n            \"service_name\" : \"GANGLIA\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"GANGLIA_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"GANGLIA\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Non-relational distributed database and centralized service for configuration management &\\n        synchronization\\n      \",\n        \"service_name\" : \"HBASE\",\n        \"service_version\" : \"0.96.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"HBASE_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"HBASE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"HBASE_MASTER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"HBASE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"SLAVE\",\n            \"component_name\" : \"HBASE_REGIONSERVER\",\n            \"is_client\" : false,\n            \"is_master\" : false,\n            \"service_name\" : \"HBASE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"This is comment for HCATALOG service\",\n        \"service_name\" : \"HCATALOG\",\n        \"service_version\" : \"0.12.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"HCAT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"HCATALOG\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Apache Hadoop Distributed File System\",\n        \"service_name\" : \"HDFS\",\n        \"service_version\" : \"2.1.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"SLAVE\",\n            \"component_name\" : \"DATANODE\",\n            \"is_client\" : false,\n            \"is_master\" : false,\n            \"service_name\" : \"HDFS\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"HDFS_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"HDFS\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"JOURNALNODE\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"HDFS\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"NAMENODE\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"HDFS\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"SECONDARY_NAMENODE\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"HDFS\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"SLAVE\",\n            \"component_name\" : \"ZKFC\",\n            \"is_client\" : false,\n            \"is_master\" : false,\n            \"service_name\" : \"HDFS\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Data warehouse system for ad-hoc queries & analysis of large datasets and table & storage management service\",\n        \"service_name\" : \"HIVE\",\n        \"service_version\" : \"0.12.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"HIVE_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"HIVE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"HIVE_METASTORE\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"HIVE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"HIVE_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"HIVE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"MYSQL_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"HIVE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Apache Hadoop NextGen MapReduce (YARN)\",\n        \"service_name\" : \"MAPREDUCE2\",\n        \"service_version\" : \"2.1.0.2.0.6.0\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"HISTORYSERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"MAPREDUCE2\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"MAPREDUCE2_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"MAPREDUCE2\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Nagios Monitoring and Alerting system\",\n        \"service_name\" : \"NAGIOS\",\n        \"service_version\" : \"3.5.0\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"NAGIOS_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"NAGIOS\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"System for workflow coordination and execution of Apache Hadoop jobs.  This also includes the installation of the optional Oozie Web Console which relies on and will install the <a target=\\\"_blank\\\" href=\\\"http://www.sencha.com/products/extjs/license/\\\">ExtJS</a> Library.\\n      \",\n        \"service_name\" : \"OOZIE\",\n        \"service_version\" : \"4.0.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"OOZIE_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"OOZIE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"OOZIE_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"OOZIE\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Scripting platform for analyzing large datasets\",\n        \"service_name\" : \"PIG\",\n        \"service_version\" : \"0.12.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"PIG\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"PIG\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Tool for transferring bulk data between Apache Hadoop and\\n        structured data stores such as relational databases\\n      \",\n        \"service_name\" : \"SQOOP\",\n        \"service_version\" : \"1.4.4.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"SQOOP\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"SQOOP\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Apache Hadoop Stream processing framework\",\n        \"service_name\" : \"STORM\",\n        \"service_version\" : \"0.9.0.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"DRPC_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"STORM\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"LOGVIEWER_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"STORM\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"NIMBUS\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"STORM\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"STORM_REST_API\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"STORM\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"STORM_UI_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"STORM\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"SLAVE\",\n            \"component_name\" : \"SUPERVISOR\",\n            \"is_client\" : false,\n            \"is_master\" : false,\n            \"service_name\" : \"STORM\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Tez is the next generation Hadoop Query Processing framework written on top of YARN.\",\n        \"service_name\" : \"TEZ\",\n        \"service_version\" : \"0.4.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"TEZ_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"TEZ\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"This is comment for WEBHCAT service\",\n        \"service_name\" : \"WEBHCAT\",\n        \"service_version\" : \"0.12.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"WEBHCAT_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"WEBHCAT\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Apache Hadoop NextGen MapReduce (YARN)\",\n        \"service_name\" : \"YARN\",\n        \"service_version\" : \"2.1.0.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"APP_TIMELINE_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"YARN\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"SLAVE\",\n            \"component_name\" : \"NODEMANAGER\",\n            \"is_client\" : false,\n            \"is_master\" : false,\n            \"service_name\" : \"YARN\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"RESOURCEMANAGER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"YARN\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"YARN_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"YARN\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    },\n    {\n      \"StackServices\" : {\n        \"comments\" : \"Centralized service which provides highly reliable distributed\\n        coordination.\",\n        \"service_name\" : \"ZOOKEEPER\",\n        \"service_version\" : \"3.4.5.2.1\",\n        \"stack_name\" : \"HDP\",\n        \"stack_version\" : \"2.1\"\n      },\n      \"serviceComponents\" : [\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"CLIENT\",\n            \"component_name\" : \"ZOOKEEPER_CLIENT\",\n            \"is_client\" : true,\n            \"is_master\" : false,\n            \"service_name\" : \"ZOOKEEPER\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        },\n        {\n          \"StackServiceComponents\" : {\n            \"component_category\" : \"MASTER\",\n            \"component_name\" : \"ZOOKEEPER_SERVER\",\n            \"is_client\" : false,\n            \"is_master\" : true,\n            \"service_name\" : \"ZOOKEEPER\",\n            \"stack_name\" : \"HDP\",\n            \"stack_version\" : \"2.1\"\n          }\n        }\n      ]\n    }\n  ]\n};","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nvar ajaxQueue;\n\ndescribe('App.ajaxQueue', function () {\n\n  beforeEach(function() {\n    ajaxQueue = App.ajaxQueue.create();\n    sinon.spy(ajaxQueue, 'runNextRequest');\n    sinon.spy(ajaxQueue, 'finishedCallback');\n    sinon.spy(App.ajax, 'send');\n  });\n\n  afterEach(function() {\n    ajaxQueue.clear();\n    ajaxQueue.runNextRequest.restore();\n    ajaxQueue.finishedCallback.restore();\n    App.ajax.send.restore();\n  });\n\n  describe('#clear', function() {\n    it('should clear queue', function() {\n      ajaxQueue.addRequest({name:'some', sender: Em.Object.create()});\n      ajaxQueue.clear();\n      expect(ajaxQueue.get('queue.length')).to.equal(0);\n    });\n  });\n\n  describe('#addRequest', function() {\n    it('should add request', function() {\n      ajaxQueue.addRequest({name:'some', sender: Em.Object.create()});\n      expect(ajaxQueue.get('queue.length')).to.equal(1);\n    });\n    it('should throw `name` error', function() {\n      expect(function() {ajaxQueue.addRequest({name:'', sender: Em.Object.create()})}).to.throw(Error);\n    });\n    it('should throw `sender` error', function() {\n      expect(function() {ajaxQueue.addRequest({name:'some', sender: {}})}).to.throw(Error);\n    });\n  });\n\n  describe('#addRequests', function() {\n    it('should add requests', function() {\n      ajaxQueue.addRequests(Em.A([\n        {name:'some', sender: Em.Object.create()},\n        {name:'some2', sender: Em.Object.create()}\n      ]));\n      expect(ajaxQueue.get('queue.length')).to.equal(2);\n    });\n\n    it('should throw `name` error', function() {\n      expect(function() {ajaxQueue.addRequests(Em.A([\n        {name:'some', sender: Em.Object.create()},\n        {name:'', sender: Em.Object.create()}\n      ]));}).to.throw(Error);\n    });\n\n    it('should throw `sender` error', function() {\n      expect(function() {ajaxQueue.addRequests(Em.A([\n        {name:'some', sender: Em.Object.create()},\n        {name:'some2', sender: {}}\n      ]));}).to.throw(Error);\n    });\n\n  });\n\n  describe('#start', function() {\n    it('should call runNextRequest', function() {\n      ajaxQueue.start();\n      expect(ajaxQueue.runNextRequest.called).to.equal(true);\n    });\n  });\n\n  describe('#runNextRequest', function() {\n    it('for empty queue App.ajax.send shouldn\\'t be called', function() {\n      ajaxQueue.clear();\n      ajaxQueue.runNextRequest();\n      expect(App.ajax.send.called).to.equal(false);\n    });\n    it('when queue is empty finishedCallback should be called', function() {\n      ajaxQueue.clear();\n      ajaxQueue.runNextRequest();\n      expect(ajaxQueue.finishedCallback.called).to.equal(true);\n    });\n    it('if abortOnError is false queue shouldn\\'t be interrupted', function() {\n      ajaxQueue.clear();\n      ajaxQueue.set('abortOnError', false);\n      ajaxQueue.addRequest({name:'some_fake', sender: Em.Object.create()}).addRequest({name: 'some_fake2', sender: Em.Object.create()}).start();\n      expect(ajaxQueue.runNextRequest.callCount).to.equal(3); // One for empty-queue\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('utils/ajax/ajax');\n\ndescribe('App.ajax', function() {\n\n  beforeEach(function() {\n    App.set('apiPrefix', '/api/v1');\n    App.set('clusterName', 'tdk');\n    sinon.spy($, 'ajax');\n  });\n\n  afterEach(function() {\n    $.ajax.restore();\n  });\n\n  describe('#send', function() {\n\n    it('Without sender', function() {\n      expect(App.ajax.send({})).to.equal(null);\n      expect($.ajax.called).to.equal(false);\n    });\n\n    it('Invalid config.name', function() {\n      expect(App.ajax.send({name:'fake_name', sender: this})).to.equal(null);\n      expect($.ajax.called).to.equal(false);\n    });\n\n    it('With proper data', function() {\n      App.ajax.send({name: 'router.logoff', sender: this});\n      expect($.ajax.calledOnce).to.equal(true);\n    });\n\n  });\n\n  describe('#formatUrl', function() {\n\n    var tests = [\n      {\n        url: null,\n        data: {},\n        e: null,\n        m: 'url is null'\n      },\n      {\n        url: 'site/{param}',\n        data: null,\n        e: 'site/',\n        m: 'url with one param, but data is null'\n      },\n      {\n        url: 'clean_url',\n        data: {},\n        e: 'clean_url',\n        m: 'url without placeholders'\n      },\n      {\n        url: 'site/{param}',\n        data: {},\n        e: 'site/',\n        m: 'url with param, but there is no such param in the data'\n      },\n      {\n        url: 'site/{param}/{param}',\n        data: {param: 123},\n        e: 'site/123/123',\n        m: 'url with param which appears two times'\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var r = App.ajax.fakeFormatUrl(test.url, test.data);\n        expect(r).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('Check \"real\" and \"mock\" properties for each url object', function() {\n    var names = App.ajax.fakeGetUrlNames();\n    names.forEach(function(name) {\n      it(name, function() {\n        var url = App.ajax.fakeGetUrl(name);\n        expect(url.real).to.be.a('string');\n        expect(url.real.length > 0).to.equal(true);\n        expect(url.mock).to.be.a('string');\n      });\n    });\n  });\n\n  describe('#formatRequest', function() {\n\n    beforeEach(function() {\n      App.testMode = false;\n    });\n    afterEach(function() {\n      App.testMode = true;\n    });\n\n    it('App.testMode = true', function() {\n      App.testMode = true;\n      var r = App.ajax.fakeFormatRequest({real:'/', mock: '/some_url'}, {});\n      expect(r.type).to.equal('GET');\n      expect(r.url).to.equal('/some_url');\n      expect(r.dataType).to.equal('json');\n    });\n    var tests = [\n      {\n        urlObj: {\n          real: '/real_url',\n          format: function() {\n            return {\n              type: 'PUT'\n            }\n          }\n        },\n        data: {},\n        m: '',\n        e: {type: 'PUT', url: '/api/v1/real_url'}\n      }\n    ];\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var r = App.ajax.fakeFormatRequest(test.urlObj, test.data);\n        expect(r.type).to.equal(test.e.type);\n        expect(r.url).to.equal(test.e.url);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('utils/helper');\nrequire('views/common/rolling_restart_view');\nvar batchUtils = require('utils/batch_scheduled_requests');\nvar modelSetup = require('test/init_model_test');\ndescribe('batch_scheduled_requests', function() {\n\n  beforeEach(function(){\n    modelSetup.setupStackServiceComponent();\n  });\n  afterEach(function(){\n    modelSetup.cleanStackServiceComponent();\n  });\n\n  describe('#getRollingRestartComponentName', function() {\n    var tests = [\n      {serviceName: 'HDFS', componentName: 'DATANODE'},\n      {serviceName: 'YARN', componentName: 'NODEMANAGER'},\n      {serviceName: 'MAPREDUCE', componentName: 'TASKTRACKER'},\n      {serviceName: 'HBASE', componentName: 'HBASE_REGIONSERVER'},\n      {serviceName: 'STORM', componentName: 'SUPERVISOR'},\n      {serviceName: 'SOME_INVALID_SERVICE', componentName: null}\n    ];\n\n    tests.forEach(function(test) {\n      it(test.serviceName + ' - ' + test.componentName, function() {\n        expect(batchUtils.getRollingRestartComponentName(test.serviceName)).to.equal(test.componentName);\n      });\n    });\n\n  });\n\n  describe('#getBatchesForRollingRestartRequest', function() {\n    var tests = [\n      {\n        hostComponents: Em.A([\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host1'}}),\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host2'}}),\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host3'}})\n        ]),\n        batchSize: 2,\n        m: 'DATANODES on three hosts, batchSize = 2',\n        e: {\n          batchCount: 2\n        }\n      },\n      {\n        hostComponents: Em.A([\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host1'}}),\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host2'}}),\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host3'}})\n        ]),\n        batchSize: 3,\n        m: 'DATANODES on 3 hosts, batchSize = 3',\n        e: {\n          batchCount: 1\n        }\n      },\n      {\n        hostComponents: Em.A([\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host1'}}),\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host2'}}),\n          Em.Object.create({componentName:'DATANODE', service:{serviceName:'HDFS'}, host:{hostName:'host3'}})\n        ]),\n        batchSize: 1,\n        m: 'DATANODES on 3 hosts, batchSize = 1',\n        e: {\n          batchCount: 3\n        }\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        expect(batchUtils.getBatchesForRollingRestartRequest(test.hostComponents, test.batchSize).length).to.equal(test.e.batchCount);\n      });\n    });\n  });\n\n  describe('#launchHostComponentRollingRestart', function() {\n\n    beforeEach(function() {\n      sinon.spy(batchUtils, 'showRollingRestartPopup');\n      sinon.spy(batchUtils, 'showWarningRollingRestartPopup');\n    });\n\n    afterEach(function() {\n      batchUtils.showRollingRestartPopup.restore();\n      batchUtils.showWarningRollingRestartPopup.restore();\n    });\n\n    var tests = Em.A([\n      {componentName: 'DATANODE', e:{showRollingRestartPopup:true, showWarningRollingRestartPopup:false}},\n      {componentName: 'TASKTRACKER', e:{showRollingRestartPopup:true, showWarningRollingRestartPopup:false}},\n      {componentName: 'NODEMANAGER', e:{showRollingRestartPopup:true, showWarningRollingRestartPopup:false}},\n      {componentName: 'HBASE_REGIONSERVER', e:{showRollingRestartPopup:true, showWarningRollingRestartPopup:false}},\n      {componentName: 'SUPERVISOR', e:{showRollingRestartPopup:true, showWarningRollingRestartPopup:false}},\n      {componentName: 'SOME_OTHER_COMPONENT', e:{showRollingRestartPopup:false, showWarningRollingRestartPopup:true}}\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.componentName, function() {\n        batchUtils.launchHostComponentRollingRestart(test.componentName);\n        expect(batchUtils.showRollingRestartPopup.calledOnce).to.equal(test.e.showRollingRestartPopup);\n        expect(batchUtils.showWarningRollingRestartPopup.calledOnce).to.equal(test.e.showWarningRollingRestartPopup);\n      });\n    });\n\n  });\n\n  describe('#restartHostComponents', function() {\n\n    beforeEach(function() {\n      sinon.spy($, 'ajax');\n      App.testMode = true;\n    });\n\n    afterEach(function() {\n      $.ajax.restore();\n      App.testMode = false;\n    });\n\n    var tests = Em.A([\n      {\n        hostComponentList: Em.A([\n          Em.Object.create({\n            componentName: 'n1',\n            host: Em.Object.create({\n              hostName: 'h1'\n            })\n          }),\n          Em.Object.create({\n            componentName: 'n1',\n            host: Em.Object.create({\n              hostName: 'h2'\n            })\n          })\n        ]),\n        e: {\n          ajaxCalledOnce: true,\n          resource_filters: [{\"component_name\":\"n1\",\"hosts\":\"h1,h2\"}]\n        },\n        m: '1 component on 2 hosts'\n      },\n      {\n        hostComponentList: Em.A([\n          Em.Object.create({\n            componentName: 'n1',\n            host: Em.Object.create({\n              hostName: 'h1'\n            })\n          }),\n          Em.Object.create({\n            componentName: 'n1',\n            host: Em.Object.create({\n              hostName: 'h2'\n            })\n          }),\n          Em.Object.create({\n            componentName: 'n2',\n            host: Em.Object.create({\n              hostName: 'h2'\n            })\n          })\n        ]),\n        e: {\n          ajaxCalledOnce: true,\n          resource_filters: [{\"component_name\":\"n1\",\"hosts\":\"h1,h2\"},{\"component_name\":\"n2\",\"hosts\":\"h2\"}]\n        },\n        m: '1 component on 2 hosts, 1 on 1 host'\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        batchUtils.restartHostComponents(test.hostComponentList);\n        expect($.ajax.calledOnce).to.equal(test.e.ajaxCalledOnce);\n        expect( JSON.parse($.ajax.args[0][0].data)['Requests/resource_filters']).to.eql(test.e.resource_filters);\n      });\n    });\n\n    it('Empty data', function() {\n      batchUtils.restartHostComponents([]);\n      expect($.ajax.called).to.equal(false);\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nvar component = require('utils/component');\nrequire('models/host_component');\nrequire('models/stack_service_component');\n\ndescribe('utils/component', function(){\n  describe('#loadStackServiceComponentModel()', function(){\n    var data = {\n      \"items\": [\n        {\n          \"serviceComponents\": [\n            {\n              \"StackServiceComponents\": {\n                \"component_category\": \"CLIENT\",\n                \"component_name\": \"FALCON_CLIENT\",\n                \"is_client\": true,\n                \"is_master\": false,\n                \"service_name\": \"FALCON\",\n                \"stack_name\": \"HDP\",\n                \"stack_version\": \"2.1\"\n              }\n            },\n            {\n              \"StackServiceComponents\": {\n                \"component_category\": \"MASTER\",\n                \"component_name\": \"FALCON_SERVER\",\n                \"is_client\": false,\n                \"is_master\": true,\n                \"service_name\": \"FALCON\",\n                \"stack_name\": \"HDP\",\n                \"stack_version\": \"2.1\"\n              }\n            }\n          ]\n        },\n        {\n          \"serviceComponents\": [\n            {\n              \"StackServiceComponents\": {\n                \"component_category\": \"SLAVE\",\n                \"component_name\": \"GANGLIA_MONITOR\",\n                \"is_client\": false,\n                \"is_master\": false,\n                \"service_name\": \"GANGLIA\",\n                \"stack_name\": \"HDP\",\n                \"stack_version\": \"2.1\"\n              }\n            },\n            {\n              \"StackServiceComponents\": {\n                \"component_category\": \"MASTER\",\n                \"component_name\": \"GANGLIA_SERVER\",\n                \"is_client\": false,\n                \"is_master\": true,\n                \"service_name\": \"GANGLIA\",\n                \"stack_name\": \"HDP\",\n                \"stack_version\": \"2.1\"\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    afterEach(function(){\n      App.StackServiceComponent.find().set('content', []);\n    });\n\n    it('should return 4 components', function(){\n      expect(component.loadStackServiceComponentModel(data).items.length).to.eql(4);\n    });\n\n    it('should load data to StackServiceComponent model', function(){\n      component.loadStackServiceComponentModel(data);\n      expect(App.StackServiceComponent.find().get('content')).have.length(4);\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('config');\nrequire('utils/config');\nrequire('models/service/hdfs');\nvar setups = require('test/init_model_test');\nvar modelSetup = setups.configs;\n\ndescribe('App.config', function () {\n\n  App.supports.capacitySchedulerUi = true;\n\n  var loadServiceSpecificConfigs = function(context, serviceName) {\n    context.configGroups = modelSetup.setupConfigGroupsObject(serviceName);\n    context.advancedConfigs = modelSetup.setupAdvancedConfigsObject();\n    context.tags = modelSetup.setupServiceConfigTagsObject(serviceName);\n    context.result = App.config.mergePreDefinedWithLoaded(context.configGroups, context.advancedConfigs, context.tags, App.Service.find().findProperty('id', serviceName).get('serviceName'));\n  };\n\n  var loadAllServicesConfigs = function(context, serviceNames) {\n    context.configGroups = modelSetup.setupConfigGroupsObject();\n  }\n\n  var loadServiceModelsData = function(serviceNames) {\n    serviceNames.forEach(function(serviceName) {\n      App.store.load(App.Service, {\n        id: serviceName,\n        service_name: serviceName\n      });\n    });\n  };\n\n  var setupContentForMergeWithStored = function(context) {\n    loadServiceModelsData(context.installedServiceNames);\n    loadAllServicesConfigs(context);\n    setups.setupStackVersion(this, 'HDP-2.1');\n    context.result = App.config.mergePreDefinedWithStored(context.storedConfigs, modelSetup.setupAdvancedConfigsObject(), context.installedServiceNames);\n  };\n\n  var removeServiceModelData = function(serviceIds) {\n    serviceIds.forEach(function(serviceId) {\n      var record = App.Service.find(serviceId);\n      record.deleteRecord();\n      record.get('stateManager').transitionTo('loading');\n    });\n  };\n\n  describe('#identifyCategory', function () {\n    var data = {};\n    it('should return null if config doesn\\'t have category', function () {\n      expect(App.config.identifyCategory(data)).to.equal(null);\n    });\n    it('should return \"AdvancedCoreSite\" if filename \"core-site.xml\" and serviceName \"HDFS\"', function () {\n      data = {\n        serviceName: 'HDFS',\n        filename: 'core-site.xml'\n      };\n      expect(App.config.identifyCategory(data).name).to.equal('AdvancedCoreSite');\n    });\n    it('should return \"CapacityScheduler\" if filename \"capacity-scheduler.xml\" and serviceName \"YARN\"', function () {\n      data = {\n        serviceName: 'YARN',\n        filename: 'capacity-scheduler.xml'\n      };\n      expect(App.config.identifyCategory(data).name).to.equal('CapacityScheduler');\n    });\n  });\n\n  describe('#handleSpecialProperties', function () {\n    var config = {};\n    it('value should be transformed to \"1024\" from \"1024m\"', function () {\n      config = {\n        displayType: 'int',\n        value: '1024m',\n        defaultValue: '1024m'\n      };\n      App.config.handleSpecialProperties(config);\n      expect(config.value).to.equal('1024');\n      expect(config.defaultValue).to.equal('1024');\n    });\n    it('value should be transformed to true from \"true\"', function () {\n      config = {\n        displayType: 'checkbox',\n        value: 'true',\n        defaultValue: 'true'\n      };\n      App.config.handleSpecialProperties(config);\n      expect(config.value).to.equal(true);\n      expect(config.defaultValue).to.equal(true);\n    });\n    it('value should be transformed to false from \"false\"', function () {\n      config = {\n        displayType: 'checkbox',\n        value: 'false',\n        defaultValue: 'false'\n      };\n      App.config.handleSpecialProperties(config);\n      expect(config.value).to.equal(false);\n      expect(config.defaultValue).to.equal(false);\n    });\n  });\n\n  describe('#calculateConfigProperties', function () {\n    var config = {};\n    var isAdvanced = false;\n    var advancedConfigs = [];\n    it('isUserProperty should be true if config is custom(site.xml) and not advanced', function () {\n      config = {\n        serviceName: 'HDFS',\n        filename: 'core-site.xml'\n      };\n      App.config.calculateConfigProperties(config, isAdvanced, advancedConfigs);\n      expect(config.isUserProperty).to.equal(true);\n    });\n\n    it('isUserProperty should be false if config from \"capacity-scheduler.xml\" or \"mapred-queue-acls.xml\" ', function () {\n      config = {\n        name: 'test',\n        serviceName: 'MAPREDUCE',\n        filename: 'capacity-scheduler.xml',\n        isUserProperty: false\n      };\n      isAdvanced = true;\n      App.config.calculateConfigProperties(config, isAdvanced, advancedConfigs);\n      expect(config.isUserProperty).to.equal(false);\n    });\n\n    it('isRequired should be false if config is advanced\"', function () {\n      config = {\n        name: 'test',\n        serviceName: 'HDFS',\n        filename: 'core-site.xml'\n      };\n      isAdvanced = true;\n      advancedConfigs = [{name:'test', filename: 'core-site.xml'}];\n      App.config.calculateConfigProperties(config, isAdvanced, advancedConfigs);\n      expect(config.category).to.equal('Advanced');\n      expect(config.isRequired).to.equal(true);\n      expect(config.filename).to.equal('core-site.xml');\n    });\n  });\n\n  describe('#capacitySchedulerFilter', function() {\n    var testMessage = 'filter should {0} detect `{1}` property';\n    describe('Stack version >= 2.0', function() {\n      before(function() {\n        setups.setupStackVersion(this, 'HDP-2.1');\n      });\n      var tests = [\n        {\n          config: {\n            name: 'yarn.scheduler.capacity.maximum-am-resource-percent'\n          },\n          e: false\n        },\n        {\n          config: {\n            name: 'yarn.scheduler.capacity.root.capacity'\n          },\n          e: false\n        },\n        {\n          config: {\n            name: 'yarn.scheduler.capacity.root.default.capacity'\n          },\n          e: true\n        }\n      ];\n\n      tests.forEach(function(test){\n        it(testMessage.format( !!test.e ? '' : 'not', test.config.name), function() {\n          expect(App.config.get('capacitySchedulerFilter')(test.config)).to.eql(test.e);\n        });\n      });\n      after(function() {\n        setups.restoreStackVersion(this);\n      })\n    });\n\n    describe('Stack version < 2.0', function() {\n      before(function() {\n        setups.setupStackVersion(this, 'HDP-1.3');\n      });\n      var tests = [\n        {\n          config: {\n            name: 'mapred.capacity-scheduler.maximum-system-jobs'\n          },\n          e: false\n        },\n        {\n          config: {\n            name: 'yarn.scheduler.capacity.root.capacity'\n          },\n          e: false\n        },\n        {\n          config: {\n            name: 'mapred.capacity-scheduler.queue.default.capacity'\n          },\n          e: true\n        },\n        {\n          config: {\n            name: 'mapred.queue.default.acl-administer-jobs'\n          },\n          e: true\n        }\n      ];\n\n      tests.forEach(function(test){\n        it(testMessage.format( !!test.e ? '' : 'not', test.config.name), function() {\n          expect(App.config.get('capacitySchedulerFilter')(test.config)).to.eql(test.e);\n        });\n      });\n\n      after(function() {\n        setups.restoreStackVersion(this);\n      });\n    });\n  });\n\n  describe('#fileConfigsIntoTextarea', function () {\n    var filename = 'capacity-scheduler.xml';\n    var configs = [\n      {\n        name: 'config1',\n        value: 'value1',\n        defaultValue: 'value1',\n        filename: 'capacity-scheduler.xml'\n      },\n      {\n        name: 'config2',\n        value: 'value2',\n        defaultValue: 'value2',\n        filename: 'capacity-scheduler.xml'\n      }\n    ];\n    it('two configs into textarea', function () {\n      var result = App.config.fileConfigsIntoTextarea.call(App.config, configs, filename);\n      expect(result.length).to.equal(1);\n      expect(result[0].value).to.equal('config1=value1\\nconfig2=value2\\n');\n      expect(result[0].defaultValue).to.equal('config1=value1\\nconfig2=value2\\n');\n    });\n    it('three config into textarea', function () {\n      configs.push({\n        name: 'config3',\n        value: 'value3',\n        defaultValue: 'value3',\n        filename: 'capacity-scheduler.xml'\n      });\n      var result = App.config.fileConfigsIntoTextarea.call(App.config, configs, filename);\n      expect(result.length).to.equal(1);\n      expect(result[0].value).to.equal('config1=value1\\nconfig2=value2\\nconfig3=value3\\n');\n      expect(result[0].defaultValue).to.equal('config1=value1\\nconfig2=value2\\nconfig3=value3\\n');\n    });\n    it('one of three configs has different filename', function () {\n      configs[1].filename = 'another filename';\n      var result = App.config.fileConfigsIntoTextarea.call(App.config, configs, filename);\n      //result contains two configs: one with different filename and one textarea config\n      expect(result.length).to.equal(2);\n      expect(result[1].value).to.equal('config1=value1\\nconfig3=value3\\n');\n      expect(result[1].defaultValue).to.equal('config1=value1\\nconfig3=value3\\n');\n    });\n    it('none configs into empty textarea', function () {\n      filename = 'capacity-scheduler.xml';\n      configs.clear();\n      var result = App.config.fileConfigsIntoTextarea.call(App.config, configs, filename);\n      expect(result.length).to.equal(1);\n      expect(result[0].value).to.equal('');\n      expect(result[0].defaultValue).to.equal('');\n    });\n\n  });\n\n  describe('#textareaIntoFileConfigs', function () {\n    var filename = 'capacity-scheduler.xml';\n    var testData = [\n      {\n        configs: [Em.Object.create({\n          \"name\": \"capacity-scheduler\",\n          \"value\": \"config1=value1\",\n          \"filename\": \"capacity-scheduler.xml\"\n        })]\n      },\n      {\n        configs: [Em.Object.create({\n          \"name\": \"capacity-scheduler\",\n          \"value\": \"config1=value1\\nconfig2=value2\\n\",\n          \"filename\": \"capacity-scheduler.xml\"\n        })]\n      },\n      {\n        configs: [Em.Object.create({\n          \"name\": \"capacity-scheduler\",\n          \"value\": \"config1=value1,value2\\n\",\n          \"filename\": \"capacity-scheduler.xml\"\n        })]\n      },\n      {\n        configs: [Em.Object.create({\n          \"name\": \"capacity-scheduler\",\n          \"value\": \"config1=value1 config2=value2\\n\",\n          \"filename\": \"capacity-scheduler.xml\"\n        })]\n      }\n    ];\n\n    it('config1=value1 to one config', function () {\n      var result = App.config.textareaIntoFileConfigs.call(App.config, testData[0].configs, filename);\n      expect(result.length).to.equal(1);\n      expect(result[0].value).to.equal('value1');\n      expect(result[0].name).to.equal('config1');\n    });\n    it('config1=value1\\\\nconfig2=value2\\\\n to two configs', function () {\n      var result = App.config.textareaIntoFileConfigs.call(App.config, testData[1].configs, filename);\n      expect(result.length).to.equal(2);\n      expect(result[0].value).to.equal('value1');\n      expect(result[0].name).to.equal('config1');\n      expect(result[1].value).to.equal('value2');\n      expect(result[1].name).to.equal('config2');\n    });\n    it('config1=value1,value2\\n to one config', function () {\n      var result = App.config.textareaIntoFileConfigs.call(App.config, testData[2].configs, filename);\n      expect(result.length).to.equal(1);\n      expect(result[0].value).to.equal('value1,value2');\n      expect(result[0].name).to.equal('config1');\n    });\n    it('config1=value1 config2=value2 to two configs', function () {\n      var result = App.config.textareaIntoFileConfigs.call(App.config, testData[3].configs, filename);\n      expect(result.length).to.equal(1);\n    });\n  });\n\n  describe('#escapeXMLCharacters', function () {\n\n    var testConfigs = [\n      {\n        html: '&>\"',\n        json: '&>\"'\n      },\n      {\n        html: '&amp;&gt;&quot;&apos;',\n        json: '&>\"\\''\n      },\n      {\n        html: '&&gt;',\n        json: '&>'\n      },\n      {\n        html: '&&&amp;',\n        json: '&&&'\n      },\n      {\n        html: 'LD_LIBRARY_PATH=/usr/lib/hadoop/lib/native:/usr/lib/hadoop/lib/native/`$JAVA_HOME/bin/java -d32 -version &amp;&gt; /dev/null;if [ $? -eq 0 ]; then echo Linux-i386-32; else echo Linux-amd64-64;fi`',\n        json: 'LD_LIBRARY_PATH=/usr/lib/hadoop/lib/native:/usr/lib/hadoop/lib/native/`$JAVA_HOME/bin/java -d32 -version &> /dev/null;if [ $? -eq 0 ]; then echo Linux-i386-32; else echo Linux-amd64-64;fi`'\n      },\n      {\n        html: '&&&amp;',\n        json: '&amp;&amp;&amp;',\n        toXml: true\n      }\n    ];\n    testConfigs.forEach(function(t){\n      it('parsing html ' + t.html + ' `toXml` param passed ' + !!t.toXml, function () {\n        expect(t.json).to.equal(App.config.escapeXMLCharacters(t.html, t.toXml));\n      });\n    });\n  });\n\n  describe('#mergePreDefinedWithLoaded()', function() {\n    before(function() {\n      loadServiceModelsData(['HDFS','STORM','ZOOKEEPER']);\n      setups.setupStackVersion(this, 'HDP-2.1');\n    });\n\n    describe('Load STORM configs: global, storm-site', function() {\n      before(function() {\n        loadServiceSpecificConfigs(this, \"STORM\");\n      });\n\n      it('site property with `masterHosts` display type should pass value validation', function() {\n        var property = this.result.configs.findProperty('name', 'storm.zookeeper.servers');\n        expect(property).to.be.ok;\n        expect(property.displayType).to.eql('masterHosts');\n        expect(property.value).to.eql([\"c6401.ambari.apache.org\", \"c6402.ambari.apache.org\"]);\n        expect(property.category).to.eql('General')\n      });\n      it('non-predefined global properties should not be displayed on UI', function() {\n        var property = this.result.globalConfigs.findProperty('name', 'nonexistent_property');\n        expect(property).to.be.a('object');\n        expect(property.isVisible).to.be.false;\n      });\n      it('non-predefined site properties should have displayType advanced/multiLine', function() {\n        var tests = [\n          {\n            property: 'single_line_property',\n            e: 'advanced'\n          },\n          {\n            property: 'multi_line_property',\n            e: 'multiLine'\n          }\n        ];\n        tests.forEach(function(test) {\n          var property = this.result.configs.findProperty('name', test.property);\n          expect(property).to.be.ok;\n          expect(property.displayType).to.eql(test.e);\n        }, this);\n\n      });\n    });\n\n    describe('Load HDFS configs: global, hdfs-site, core-site', function() {\n      before(function() {\n        loadServiceSpecificConfigs(this, \"HDFS\");\n      });\n\n      it('Data Node, Name Node, SName Node directory properties should have sorted values', function() {\n        var tests = [\n          {\n            property: \"dfs.datanode.data.dir\",\n            e: '/a,/b'\n          },\n          {\n            property: \"dfs.namenode.name.dir\",\n            e: '/a,/b,/c'\n          },\n          {\n            property: \"dfs.namenode.checkpoint.dir\",\n            e: '/a'\n          }\n        ];\n        tests.forEach(function(test) {\n          var property = this.result.configs.findProperty('name', test.property);\n          expect(property).to.be.ok;\n          expect(property.value).to.eql(test.e);\n        }, this);\n      });\n    });\n\n    describe('Load ZOOKEEPER configs: global, zoo.cfg', function() {\n      before(function() {\n        loadServiceSpecificConfigs(this, \"ZOOKEEPER\");\n      });\n\n      it('zoo.cfg configs should have non xml filename', function() {\n        expect(this.result.configs.findProperty('name', 'custom.zoo.cfg').filename).to.eql('zoo.cfg');\n      });\n    });\n\n    after(function() {\n      removeServiceModelData(['HDFS','STORM','ZOOKEEPER']);\n      setups.restoreStackVersion(this);\n    });\n  });\n\n  describe('#syncOrderWithPredefined()', function() {\n    before(function() {\n      setups.setupStackVersion(this, 'HDP-2.1');\n      loadServiceModelsData(['HDFS','STORM','ZOOKEEPER']);\n      loadServiceSpecificConfigs(this, 'HDFS');\n    });\n    it('properties should be ordered according to position in predefined data', function() {\n      var result = App.config.syncOrderWithPredefined(this.result);\n      expect(result).to.be.a('object');\n      expect(result.configs.filterProperty('category','DataNode').mapProperty('name')).to.eql(['dfs.datanode.failed.volumes.tolerated', 'dfs.datanode.data.dir']);\n    });\n    after(function() {\n      removeServiceModelData(['HDFS','STORM','ZOOKEEPER']);\n    });\n  });\n\n  describe('#mergePreDefinedWithStored()', function() {\n    describe('without `storedConfigs` parameter', function() {\n      before(function() {\n        this.installedServiceNames = ['HDFS','STORM', 'ZOOKEEPER'];\n        setupContentForMergeWithStored(this);\n      });\n\n      var tests = [\n        {\n          property: 'dfs.datanode.data.dir',\n          e: '/hadoop/hdfs/data'\n        },\n        {\n          property: 'dfs.datanode.failed.volumes.tolerated',\n          e: '2'\n        }\n      ];\n\n      tests.forEach(function(test) {\n        it('should set value and defaultValue to ' + test.e + ' for `' + test.property + '`', function() {\n          expect(this.result.findProperty('name', test.property).value).to.eql(test.e);\n          expect(this.result.findProperty('name', test.property).defaultValue).to.eql(test.e);\n        });\n      });\n\n      after(function() {\n        removeServiceModelData(this.installedServiceNames);\n        setups.restoreStackVersion(this);\n      });\n    });\n\n    describe('with `storedConfigs` parameter', function() {\n      before(function() {\n        this.installedServiceNames = ['HDFS','STORM','ZOOKEEPER'];\n        this.storedConfigs = modelSetup.setupStoredConfigsObject();\n        setupContentForMergeWithStored(this);\n      });\n\n      var tests = [\n        {\n          property: 'nonexistent_property',\n          stored: true,\n          e: {\n            value: 'some value',\n            isVisible: false,\n            category: 'Advanced',\n            displayType: 'advanced',\n            isRequired: true,\n            isOverridable: true\n          }\n        },\n        {\n          property: 'content',\n          filename: 'hdfs-log4j.xml',\n          stored: true,\n          predefined: true,\n          e: {\n            value: 'hdfs log4j content',\n            defaultValue: 'hdfs log4j content',\n            displayType: 'content'\n          }\n        },\n        {\n          property: 'content',\n          filename: 'zookeeper-log4j.xml',\n          stored: false,\n          predefined: true,\n          e: {\n            value: 'zookeeper log4j.xml content',\n            defaultValue: 'zookeeper log4j.xml content',\n            displayType: 'content'\n          }\n        }\n      ];\n\n      tests.forEach(function(test) {\n        it('`{0}` should pass validation. stored/predefined: {1}/{2}'.format(test.property, !!test.stored, !!test.predefined), function() {\n          var property = test.property == 'content' ? this.result.filterProperty('name', 'content').findProperty('filename', test.filename) : this.result.findProperty('name', test.property);\n          for (var key in test.e) {\n            expect(property[key]).to.be.eql(test.e[key]);\n          }\n        });\n      });\n\n      after(function(){\n        removeServiceModelData(this.installedServiceNames);\n        setups.restoreStackVersion(this);\n      });\n    });\n  });\n\n  describe('#addAvancedConfigs()', function() {\n    before(function() {\n      this.storedConfigs = modelSetup.setupStoredConfigsObject();\n    });\n\n    it('`custom.zoo.cfg` absent in stored configs', function() {\n      expect(this.storedConfigs.findProperty('name', 'custom.zoo.cfg')).to.be.undefined;\n    });\n\n    it('`custom.zoo.cfg.` from advanced configs should be added to stored configs', function() {\n      App.config.addAdvancedConfigs(this.storedConfigs, modelSetup.setupAdvancedConfigsObject(), 'ZOOKEEPER');\n      var property = this.storedConfigs.findProperty('name', 'custom.zoo.cfg');\n      expect(property).to.be.ok;\n      expect(property.category).to.eql('Advanced');\n    });\n\n    it('`capacity-scheduler.xml` configs related to `YARN` service should have category `CapacityScheduler`', function() {\n      App.config.addAdvancedConfigs(this.storedConfigs, modelSetup.setupAdvancedConfigsObject(), 'YARN');\n      expect(this.storedConfigs.filterProperty('filename', 'capacity-scheduler.xml').mapProperty('category').uniq()).to.eql(['CapacityScheduler']);\n    });\n    it('`capacity-scheduler.xml` property with name `content` should have `displayType` `multiLine`', function() {\n      expect(this.storedConfigs.filterProperty('filename', 'capacity-scheduler.xml').findProperty('name','content').displayType).to.eql('multiLine');\n    });\n  });\n\n  describe('#addCustomConfigs()', function() {\n    before(function() {\n      setups.setupStackVersion(this, 'HDP-2.1');\n      this.storedConfigs = modelSetup.setupStoredConfigsObject();\n      App.config.addAdvancedConfigs(this.storedConfigs, modelSetup.setupAdvancedConfigsObject(), 'ZOOKEEPER');\n      App.config.addAdvancedConfigs(this.storedConfigs, modelSetup.setupAdvancedConfigsObject(), 'YARN');\n    });\n\n    it('`yarn.scheduler.capacity.root.default.capacity` should have `isQueue` flag on', function() {\n      App.config.addCustomConfigs(this.storedConfigs);\n      expect(this.storedConfigs.findProperty('name','yarn.scheduler.capacity.root.default.capacity').isQueue).to.be.ok;\n    });\n\n    after(function() {\n      setups.restoreStackVersion(this);\n    });\n  });\n\n  describe('#createServiceConfig()', function() {\n    it('should create valid object for `HDFS`', function() {\n      var ServiceConfig = App.config.createServiceConfig('HDFS');\n      expect(ServiceConfig.configCategories.mapProperty('name')).to.include.members([\"NameNode\",\"SNameNode\",\"DataNode\"]);\n    });\n    it('should create valid object for `YARN` with capacity scheduler flag `on`', function() {\n      var ServiceConfig = App.config.createServiceConfig('YARN');\n      expect(ServiceConfig.configCategories.mapProperty('name')).to.include.members([\"ResourceManager\",\"NodeManager\"]);\n      expect(ServiceConfig.configCategories.findProperty('name', 'CapacityScheduler').customView).to.be.a('Function');\n      expect(ServiceConfig.configCategories.findProperty('name', 'CapacityScheduler').isCustomView).to.true;\n    });\n    it('should create valid object for `YARN` with capacity scheduler flag `off`', function() {\n      App.supports.capacitySchedulerUi = false;\n      var ServiceConfig = App.config.createServiceConfig('YARN');\n      expect(ServiceConfig.configCategories.mapProperty('name')).to.include.members([\"ResourceManager\",\"NodeManager\"]);\n      expect(ServiceConfig.configCategories.findProperty('name', 'CapacityScheduler').isCustomView).to.false;\n      App.supports.capacitySchedulerUi = true;\n    });\n  });\n\n  describe('#trimProperty',function() {\n    var testMessage = 'displayType `{0}`, value `{1}`{3} should return `{2}`';\n    var tests = [\n      {\n        config: {\n          displayType: 'directory',\n          value: ' /a /b /c'\n        },\n        e: '/a,/b,/c'\n      },\n      {\n        config: {\n          displayType: 'directories',\n          value: ' /a /b '\n        },\n        e: '/a,/b'\n      },\n      {\n        config: {\n          displayType: 'host',\n          value: ' localhost '\n        },\n        e: 'localhost'\n      },\n      {\n        config: {\n          displayType: 'password',\n          value: ' passw ord '\n        },\n        e: ' passw ord '\n      },\n      {\n        config: {\n          displayType: 'advanced',\n          value: ' value'\n        },\n        e: ' value'\n      },\n      {\n        config: {\n          displayType: 'advanced',\n          value: ' value'\n        },\n        e: ' value'\n      },\n      {\n        config: {\n          displayType: 'advanced',\n          value: 'http://localhost ',\n          name: 'javax.jdo.option.ConnectionURL'\n        },\n        e: 'http://localhost'\n      },\n      {\n        config: {\n          displayType: 'advanced',\n          value: 'http://localhost    ',\n          name: 'oozie.service.JPAService.jdbc.url'\n        },\n        e: 'http://localhost'\n      },\n      {\n        config: {\n          displayType: 'custom',\n          value: ' custom value '\n        },\n        e: ' custom value'\n      },\n      {\n        config: {\n          displayType: 'masterHosts',\n          value: ['host1.com', 'host2.com']\n        },\n        e: ['host1.com', 'host2.com']\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(testMessage.format(test.config.displayType, test.config.value, test.e, !!test.config.name ? ', name `' + test.config.name + '`' : ''), function() {\n        expect(App.config.trimProperty(test.config)).to.eql(test.e);\n        expect(App.config.trimProperty(Em.Object.create(test.config), true)).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#OnNnHAHideSnn()', function() {\n    it('`SNameNode` category present in `ServiceConfig`. It should be removed.', function() {\n      App.store.load(App.HDFSService, {\n        'id': 'HDFS'\n      });\n      var ServiceConfig = Em.Object.create({\n        configCategories: [ { name: 'SNameNode' } ]\n      });\n      expect(ServiceConfig.get('configCategories').findProperty('name','SNameNode')).to.ok;\n      App.config.OnNnHAHideSnn(ServiceConfig);\n      expect(ServiceConfig.get('configCategories').findProperty('name','SNameNode')).to.undefined;\n      var record = App.HDFSService.find('HDFS');\n      record.deleteRecord();\n      record.get('stateManager').transitionTo('loading');\n    });\n    it('`SNameNode` category absent in `ServiceConfig`. Nothing to do.', function() {\n      App.store.load(App.HDFSService, {\n        'id': 'HDFS'\n      });\n      var ServiceConfig = Em.Object.create({\n        configCategories: [ { name: 'DataNode' } ]\n      });\n      App.config.OnNnHAHideSnn(ServiceConfig);\n      expect(ServiceConfig.get('configCategories').findProperty('name','DataNode')).to.ok;\n      expect(ServiceConfig.get('configCategories.length')).to.eql(1);\n    });\n  });\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('utils/configs/defaults_providers/defaultsProvider');\nrequire('utils/configs/defaults_providers/yarn_defaults_provider');\n\ndescribe('HiveDefaultsProvider', function() {\n\n  describe('#getDefaults', function() {\n    var tests = Em.A([\n      {\n        localDB: {},\n        m: 'Empty localDB',\n        e: null\n      },\n      {\n        localDB: {\n          \"masterComponentHosts\": []\n        },\n        m: 'localDB without hosts',\n        e: null\n      },\n      {\n        localDB: {\n          \"hosts\": {}\n        },\n        m: 'localDB without masterComponentHosts amd slaveComponentHosts',\n        e: null\n      },\n      {\n        localDB: {\n          \"hosts\": {\n            \"host1\": {\"name\": \"host1\",\"cpu\": 8,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]},\n            \"host2\": {\"name\": \"host2\",\"cpu\": 4,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]}\n          },\n          \"masterComponentHosts\": [],\n          \"slaveComponentHosts\": [\n            {\n              \"componentName\": \"NODEMANAGER\",\n              \"hosts\": [{\"hostName\": \"host2\"}]\n            }\n          ]\n        },\n        m: 'Without HBase',\n        e: {\n          'mapreduce.map.java.opts': '-Xmx2048m',\n          'mapreduce.map.memory.mb': 2560,\n          'mapreduce.reduce.java.opts': '-Xmx2048m',\n          'mapreduce.reduce.memory.mb': 2560,\n          'yarn.app.mapreduce.am.command-opts': '-Xmx2048m',\n          'yarn.app.mapreduce.am.resource.mb': 2560,\n          'yarn.nodemanager.resource.memory-mb': 20480,\n          'yarn.scheduler.maximum-allocation-mb': 20480,\n          'yarn.scheduler.minimum-allocation-mb': 2560,\n          'mapreduce.task.io.sort.mb': 1024,\n          'hive.tez.container.size': 2560,\n          'hive.auto.convert.join.noconditionaltask.size': 894435328,\n          'hive.tez.java.opts': '-server -Xmx2048m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC'\n        }\n      },\n      {\n        localDB: {\n          \"hosts\": {\n            \"host1\": {\"name\": \"host1\",\"cpu\": 8,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]},\n            \"host2\": {\"name\": \"host2\",\"cpu\": 4,\"memory\": \"12582912.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]}\n          },\n          \"masterComponentHosts\": [\n            {\"component\": \"HBASE_MASTER\",\"hostName\": \"host1\",\"serviceId\": \"HDFS\"}\n          ],\n          \"slaveComponentHosts\": [\n            {\n              \"componentName\": \"NODEMANAGER\",\n              \"hosts\": [{\"hostName\": \"host2\"}]\n            }\n          ]\n        },\n        m: 'With HBase (low memory - pick mapreduce.reduce.memory.mb)',\n        e: {\n          'mapreduce.map.java.opts': '-Xmx819m',\n          'mapreduce.map.memory.mb': 1024,\n          'mapreduce.reduce.java.opts': '-Xmx819m',\n          'mapreduce.reduce.memory.mb': 1024,\n          'yarn.app.mapreduce.am.command-opts': '-Xmx819m',\n          'yarn.app.mapreduce.am.resource.mb': 1024,\n          'yarn.nodemanager.resource.memory-mb': 8192,\n          'yarn.scheduler.maximum-allocation-mb': 8192,\n          'yarn.scheduler.minimum-allocation-mb': 1024,\n          'mapreduce.task.io.sort.mb': 410,\n          'hive.tez.container.size': 1024,\n          'hive.auto.convert.join.noconditionaltask.size': 357564416,\n          'hive.tez.java.opts': '-server -Xmx819m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC'\n        }\n      },\n      {\n        localDB: {\n          \"hosts\": {\n            \"host1\": {\"name\": \"host1\",\"cpu\": 8,\"memory\": \"100165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]},\n            \"host2\": {\"name\": \"host2\",\"cpu\": 4,\"memory\": \"100165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]}\n          },\n          \"masterComponentHosts\": [\n            {\"component\": \"HBASE_MASTER\",\"hostName\": \"host1\",\"serviceId\": \"HDFS\"}\n          ],\n          \"slaveComponentHosts\": [\n            {\n              \"componentName\": \"NODEMANAGER\",\n              \"hosts\": [{\"hostName\": \"host2\"}]\n            }\n          ]\n        },\n        m: 'With HBase (high memory - pick mapreduce.map.memory.mb)',\n        e: {\n          'mapreduce.map.java.opts': '-Xmx6963m',\n          'mapreduce.map.memory.mb': 8704,\n          'mapreduce.reduce.java.opts': '-Xmx6963m',\n          'mapreduce.reduce.memory.mb': 8704,\n          'yarn.app.mapreduce.am.command-opts': '-Xmx6963m',\n          'yarn.app.mapreduce.am.resource.mb': 8704,\n          'yarn.nodemanager.resource.memory-mb': 69632,\n          'yarn.scheduler.maximum-allocation-mb': 69632,\n          'yarn.scheduler.minimum-allocation-mb': 8704,\n          'mapreduce.task.io.sort.mb': 1024,\n          'hive.tez.container.size': 8704,\n          'hive.auto.convert.join.noconditionaltask.size': 3041918976,\n          'hive.tez.java.opts': '-server -Xmx6963m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC'\n        }\n      }\n    ]);\n    tests.forEach(function(test) {\n      describe(test.m, function() {\n        var defaultsProvider = App.HiveDefaultsProvider.create();\n        defaultsProvider.set('clusterData', null);\n        var configs = defaultsProvider.getDefaults(test.localDB);\n        Em.keys(configs).forEach(function(config) {\n          it(config, function() {\n            if (test.e) {\n              expect(configs[config]).to.equal(test.e[config]);\n            }\n            else {\n              expect(configs[config] == 0 || configs[config] == null).to.equal(true);\n            }\n          })\n        });\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('utils/configs/defaults_providers/defaultsProvider');\nrequire('utils/configs/defaults_providers/yarn_defaults_provider');\n\ndescribe('TezDefaultsProvider', function() {\n\n  describe('#getDefaults', function() {\n    var tests = [\n      {\n        localDB: {},\n        m: 'Empty localDB',\n        e: null\n      },\n      {\n        localDB: {\n          \"masterComponentHosts\": []\n        },\n        m: 'localDB without hosts',\n        e: null\n      },\n      {\n        localDB: {\n          \"hosts\": {}\n        },\n        m: 'localDB without masterComponentHosts amd slaveComponentHosts',\n        e: null\n      },\n      {\n        localDB: {\n          \"hosts\": {\n            \"host1\": {\"name\": \"host1\",\"cpu\": 8,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]},\n            \"host2\": {\"name\": \"host2\",\"cpu\": 4,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]}\n          },\n          \"masterComponentHosts\": [],\n          \"slaveComponentHosts\": [\n            {\n              \"componentName\": \"NODEMANAGER\",\n              \"hosts\": [{\"hostName\": \"host2\"}]\n            }\n          ]\n        },\n        m: 'Without HBase',\n        e: {\n          'mapreduce.map.java.opts': '-Xmx2048m',\n          'mapreduce.map.memory.mb': 2560,\n          'mapreduce.reduce.java.opts': '-Xmx2048m',\n          'mapreduce.reduce.memory.mb': 2560,\n          'yarn.app.mapreduce.am.command-opts': '-Xmx2048m',\n          'yarn.app.mapreduce.am.resource.mb': 2560,\n          'yarn.nodemanager.resource.memory-mb': 20480,\n          'yarn.scheduler.maximum-allocation-mb': 20480,\n          'yarn.scheduler.minimum-allocation-mb': 2560,\n          'mapreduce.task.io.sort.mb': 1024,\n          'tez.am.resource.memory.mb': 2560,\n          'tez.am.java.opts': '-server -Xmx2048m -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC'\n        }\n      },\n      {\n        localDB: {\n          \"hosts\": {\n            \"host1\": {\"name\": \"host1\",\"cpu\": 8,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]},\n            \"host2\": {\"name\": \"host2\",\"cpu\": 4,\"memory\": \"12582912.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]}\n          },\n          \"masterComponentHosts\": [\n            {\"component\": \"HBASE_MASTER\",\"hostName\": \"host1\",\"serviceId\": \"HDFS\"}\n          ],\n          \"slaveComponentHosts\": [\n            {\n              \"componentName\": \"NODEMANAGER\",\n              \"hosts\": [{\"hostName\": \"host2\"}]\n            }\n          ]\n        },\n        m: 'With HBase',\n        e: {\n          'mapreduce.map.java.opts': '-Xmx819m',\n          'mapreduce.map.memory.mb': 1024,\n          'mapreduce.reduce.java.opts': '-Xmx819m',\n          'mapreduce.reduce.memory.mb': 1024,\n          'yarn.app.mapreduce.am.command-opts': '-Xmx819m',\n          'yarn.app.mapreduce.am.resource.mb': 1024,\n          'yarn.nodemanager.resource.memory-mb': 8192,\n          'yarn.scheduler.maximum-allocation-mb': 8192,\n          'yarn.scheduler.minimum-allocation-mb': 1024,\n          'mapreduce.task.io.sort.mb': 410,\n          'tez.am.resource.memory.mb': 1024,\n          'tez.am.java.opts': '-server -Xmx819m -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC'\n        }\n      }\n    ];\n    tests.forEach(function(test) {\n      describe(test.m, function() {\n        var defaultsProvider = App.TezDefaultsProvider.create();\n        defaultsProvider.set('clusterData', null);\n        var configs = defaultsProvider.getDefaults(test.localDB);\n        Em.keys(configs).forEach(function(config) {\n          it(config, function() {\n            if (test.e) {\n              expect(configs[config]).to.equal(test.e[config]);\n            } else {\n              expect(configs[config] == 0 || configs[config] == null).to.equal(true);\n            }\n          });\n        });\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('utils/configs/defaults_providers/defaultsProvider');\nrequire('utils/configs/defaults_providers/yarn_defaults_provider');\n\nvar yarnDefaultProvider;\n\ndescribe('YARNDefaultsProvider', function() {\n\n  beforeEach(function() {\n    yarnDefaultProvider = App.YARNDefaultsProvider.create();\n  });\n\n  afterEach(function() {\n    yarnDefaultProvider.set('clusterData', null);\n    yarnDefaultProvider.set('reservedRam', null);\n    yarnDefaultProvider.set('hBaseRam', null);\n    yarnDefaultProvider.set('containers', null);\n    yarnDefaultProvider.set('recommendedMinimumContainerSize', null);\n    yarnDefaultProvider.set('ramPerContainer', null);\n    yarnDefaultProvider.set('mapMemory', null);\n    yarnDefaultProvider.set('reduceMemory', null);\n    yarnDefaultProvider.set('amMemory', null);\n  });\n\n  describe('#clusterDataIsValid', function() {\n    var tests = Em.A([\n      {clusterData: {disk: 12,ram: 48,cpu: 12,hBaseInstalled: false},e: true},\n      {clusterData: {disk: null,ram: 48,cpu: 12,hBaseInstalled: false},e: false},\n      {clusterData: {disk: 12,ram: null,cpu: 12,hBaseInstalled: false},e: false},\n      {clusterData: {disk: 12,ram: 48,cpu: null,hBaseInstalled: false},e: false},\n      {clusterData: {disk: 12,ram: 48,cpu: 12,hBaseInstalled: null},e: false},\n      {clusterData: {disk: 12,ram: 48,cpu: 12},e: false},\n      {clusterData: {disk: 12,ram: 48,hBaseInstalled: true},e: false},\n      {clusterData: {disk: 12,cpu: 12,hBaseInstalled: true},e: false},\n      {clusterData: {ram: 48,cpu: 12,hBaseInstalled: false},e: false}\n    ]);\n    tests.forEach(function(test) {\n      it((test.e?'valid':'invalid') + ' clusterData', function() {\n        yarnDefaultProvider.set('clusterData', test.clusterData);\n        expect(yarnDefaultProvider.clusterDataIsValid()).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#reservedMemoryRecommendations', function() {\n    var tests = Em.A([\n      {ram: null, e: {os: 1, hbase: 1}},\n      {ram: 2, e: {os: 1, hbase: 1}},\n      {ram: 4, e: {os: 1, hbase: 1}},\n      {ram: 6, e: {os: 2, hbase: 1}},\n      {ram: 8, e: {os: 2, hbase: 1}},\n      {ram: 12, e: {os: 2, hbase: 2}},\n      {ram: 16, e: {os: 2, hbase: 2}},\n      {ram: 20, e: {os: 4, hbase: 4}},\n      {ram: 24, e: {os: 4, hbase: 4}},\n      {ram: 36, e: {os: 6, hbase: 8}},\n      {ram: 48, e: {os: 6, hbase: 8}},\n      {ram: 56, e: {os: 8, hbase: 8}},\n      {ram: 64, e: {os: 8, hbase: 8}},\n      {ram: 68, e: {os: 8, hbase: 8}},\n      {ram: 72, e: {os: 8, hbase: 8}},\n      {ram: 84, e: {os: 12, hbase: 16}},\n      {ram: 96, e: {os: 12, hbase: 16}},\n      {ram: 112, e: {os: 24, hbase: 24}},\n      {ram: 128, e: {os: 24, hbase: 24}},\n      {ram: 196, e: {os: 32, hbase: 32}},\n      {ram: 256, e: {os: 32, hbase: 32}},\n      {ram: 384, e: {os: 64, hbase: 64}},\n      {ram: 512, e: {os: 64, hbase: 64}},\n      {ram: 756, e: {os: 64, hbase: 64}}\n    ]);\n    tests.forEach(function(test) {\n      it('ram: ' + test.ram + ' GB', function() {\n        sinon.spy(yarnDefaultProvider, 'reservedMemoryRecommendations');\n        yarnDefaultProvider.set('clusterData', {\n          disk: 12,\n          ram: test.ram,\n          cpu: 12,\n          hBaseInstalled: false\n        });\n        expect(yarnDefaultProvider.get('reservedRam')).to.equal(test.e.os);\n        expect(yarnDefaultProvider.get('hBaseRam')).to.equal(test.e.hbase);\n        expect(yarnDefaultProvider.reservedMemoryRecommendations.calledOnce).to.equal(true);\n        yarnDefaultProvider.reservedMemoryRecommendations.restore();\n      });\n    });\n  });\n\n  describe('#recommendedMinimumContainerSize', function() {\n    it('No clusterData', function() {\n      yarnDefaultProvider.set('clusterData', null);\n      expect(yarnDefaultProvider.get('recommendedMinimumContainerSize')).to.equal(null);\n    });\n    it('No clusterData.ram', function() {\n      yarnDefaultProvider.set('clusterData', {});\n      expect(yarnDefaultProvider.get('recommendedMinimumContainerSize')).to.equal(null);\n    });\n\n    var tests = Em.A([\n      {ram: 3, e: 256},\n      {ram: 4, e: 256},\n      {ram: 6, e: 512},\n      {ram: 8, e: 512},\n      {ram: 12, e: 1024},\n      {ram: 24, e: 1024}\n    ]);\n\n    tests.forEach(function(test) {\n      it('ram: ' + test.ram + ' GB', function() {\n       yarnDefaultProvider.set('clusterData', {\n          disk: 12,\n          ram: test.ram,\n          cpu: 12,\n          hBaseInstalled: false\n        });\n        expect(yarnDefaultProvider.get('recommendedMinimumContainerSize')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#containers', function() {\n    it('No clusterData', function() {\n      yarnDefaultProvider.set('clusterData', null);\n      expect(yarnDefaultProvider.get('containers')).to.equal(null);\n    });\n    it('Some clusterData metric is null', function() {\n      yarnDefaultProvider.set('clusterData', {disk: null, cpu: 1, ram: 1});\n      expect(yarnDefaultProvider.get('containers')).to.equal(null);\n      yarnDefaultProvider.set('clusterData', {disk: 1, cpu: null, ram: 1});\n      expect(yarnDefaultProvider.get('containers')).to.equal(null);\n      yarnDefaultProvider.set('clusterData', {disk:1, cpu: 1, ram: null});\n      expect(yarnDefaultProvider.get('containers')).to.equal(null);\n    });\n\n    var tests = Em.A([\n      {\n        clusterData: {\n          disk: 12,\n          ram: 48,\n          cpu: 12,\n          hBaseInstalled: false\n        },\n        e: 21\n      },\n      {\n        clusterData: {\n          disk: 6,\n          ram: 48,\n          cpu: 6,\n          hBaseInstalled: true\n        },\n        e: 11\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it((test.hBaseInstalled?'With':'Without') + ' hBase', function() {\n        yarnDefaultProvider.set('clusterData', test.clusterData);\n        expect(yarnDefaultProvider.get('containers')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#ramPerContainer', function() {\n    it('No clusterData', function() {\n      yarnDefaultProvider.set('clusterData', null);\n      expect(yarnDefaultProvider.get('ramPerContainer')).to.equal(null);\n    });\n    var tests = Em.A([\n      {\n        clusterData: {\n          disk: 12,\n          ram: 48,\n          cpu: 12,\n          hBaseInstalled: false\n        },\n        e: 2048\n      },\n      {\n        clusterData: {\n          disk: 12,\n          ram: 16,\n          cpu: 12,\n          hBaseInstalled: true\n        },\n        e: 1024\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it((test.hBaseInstalled?'With':'Without') + ' hBase', function() {\n        yarnDefaultProvider.set('clusterData', test.clusterData);\n        expect(yarnDefaultProvider.get('ramPerContainer')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#getDefaults', function() {\n    var tests = Em.A([\n      {\n        localDB: {},\n        m: 'Empty localDB',\n        e: null\n      },\n      {\n        localDB: {\n          \"masterComponentHosts\": []\n        },\n        m: 'localDB without hosts',\n        e: null\n      },\n      {\n        localDB: {\n          \"hosts\": {}\n        },\n        m: 'localDB without masterComponentHosts amd slaveComponentHosts',\n        e: null\n      },\n      {\n        localDB: {\n          \"hosts\": {\n            \"host1\": {\"name\": \"host1\",\"cpu\": 8,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]},\n            \"host2\": {\"name\": \"host2\",\"cpu\": 4,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]}\n          },\n          \"masterComponentHosts\": [],\n          \"slaveComponentHosts\": [\n            {\n              \"componentName\": \"NODEMANAGER\",\n              \"hosts\": [{\"hostName\": \"host2\"}]\n            }\n          ]\n        },\n        m: 'Without HBase',\n        e: {\n          'mapreduce.map.java.opts': '-Xmx2048m',\n          'mapreduce.map.memory.mb': 2560,\n          'mapreduce.reduce.java.opts': '-Xmx2048m',\n          'mapreduce.reduce.memory.mb': 2560,\n          'yarn.app.mapreduce.am.command-opts': '-Xmx2048m',\n          'yarn.app.mapreduce.am.resource.mb': 2560,\n          'yarn.nodemanager.resource.memory-mb': 20480,\n          'yarn.scheduler.maximum-allocation-mb': 20480,\n          'yarn.scheduler.minimum-allocation-mb': 2560,\n          'mapreduce.task.io.sort.mb': 1024\n        }\n      },\n      {\n        localDB: {\n          \"hosts\": {\n            \"host1\": {\"name\": \"host1\",\"cpu\": 8,\"memory\": \"25165824.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]},\n            \"host2\": {\"name\": \"host2\",\"cpu\": 4,\"memory\": \"12582912.00\",\"disk_info\": [{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'},{mountpoint:'/'}]}\n          },\n          \"masterComponentHosts\": [\n            {\"component\": \"HBASE_MASTER\",\"hostName\": \"host1\",\"serviceId\": \"HDFS\"}\n          ],\n          \"slaveComponentHosts\": [\n            {\n              \"componentName\": \"NODEMANAGER\",\n              \"hosts\": [{\"hostName\": \"host2\"}]\n            }\n          ]\n        },\n        m: 'With HBase',\n        e: {\n          'mapreduce.map.java.opts': '-Xmx819m',\n          'mapreduce.map.memory.mb': 1024,\n          'mapreduce.reduce.java.opts': '-Xmx819m',\n          'mapreduce.reduce.memory.mb': 1024,\n          'yarn.app.mapreduce.am.command-opts': '-Xmx819m',\n          'yarn.app.mapreduce.am.resource.mb': 1024,\n          'yarn.nodemanager.resource.memory-mb': 8192,\n          'yarn.scheduler.maximum-allocation-mb': 8192,\n          'yarn.scheduler.minimum-allocation-mb': 1024,\n          'mapreduce.task.io.sort.mb': 410\n        }\n      }\n    ]);\n    tests.forEach(function(test) {\n      yarnDefaultProvider = App.YARNDefaultsProvider.create();\n      describe(test.m, function() {\n        yarnDefaultProvider.set('clusterData', null);\n        var configs = yarnDefaultProvider.getDefaults(test.localDB);\n\n        Em.keys(configs).forEach(function(config) {\n          it(config, function() {\n            if (test.e) {\n              expect(configs[config]).to.equal(test.e[config]);\n            }\n            else {\n              expect(configs[config] == 0 || configs[config] == null).to.equal(true);\n            }\n          });\n        });\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nrequire('utils/configs/validators/service_configs_validator');\n\ndescribe('App.ServiceConfigsValidator', function() {\n\n  describe('#validateConfig', function() {\n    it('No config validator', function() {\n      var v = App.ServiceConfigsValidator.create({});\n      expect(v.validateConfig(Em.Object.create({name:'name'}))).to.equal(null);\n    });\n  });\n\n  describe('#validatorLessThenDefaultValue', function() {\n    var tests = Em.A([\n      {\n        recommendedDefaults: {\n          'property1': 100500\n        },\n        config: Em.Object.create({\n          value: 100000,\n          name: 'property1'\n        }),\n        m: 'Numeric value',\n        e: 'string'\n      },\n      {\n        recommendedDefaults: {\n          'property1': 'xx100500x'\n        },\n        config: Em.Object.create({\n          value: 'xx100000x',\n          name: 'property1'\n        }),\n        m: 'String value',\n        e: 'string'\n      },\n      {\n        recommendedDefaults: {\n          'property1': null\n        },\n        config: Em.Object.create({\n          value: 100000,\n          name: 'property1'\n        }),\n        m: 'No default value for property',\n        e: null\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var v = App.ServiceConfigsValidator.create({});\n        v.set('recommendedDefaults', test.recommendedDefaults);\n        var r = v.validatorLessThenDefaultValue(test.config);\n        if (test.e) {\n          expect(r).to.be.a(test.e);\n        }\n        else {\n          expect(r).to.equal(null)\n        }\n      });\n    });\n  });\n\n  describe('#_checkXmxValueFormat', function() {\n    var tests = Em.A([\n      {value: '',e: false},\n      {value: '-',e: false},\n      {value: '100',e: false},\n      {value: '-Xmx',e: false},\n      {value: '-XMX1',e: false},\n      {value: '-Xmxb',e: false},\n      {value: '-Xmxk',e: false},\n      {value: '-Xmxm',e: false},\n      {value: '-Xmxg',e: false},\n      {value: '-Xmxp',e: false},\n      {value: '-Xmxt',e: false},\n      {value: '-XmxB',e: false},\n      {value: '-XmxK',e: false},\n      {value: '-XmxM',e: false},\n      {value: '-XmxG',e: false},\n      {value: '-XmxP',e: false},\n      {value: '-XmxT',e: false},\n      {value: '-Xmx1',e: true},\n      {value: '-Xmx1b',e: true},\n      {value: '-Xmx1k',e: true},\n      {value: '-Xmx1m',e: true},\n      {value: '-Xmx1g',e: true},\n      {value: '-Xmx1t',e: true},\n      {value: '-Xmx1p',e: true},\n      {value: '-Xmx1B',e: true},\n      {value: '-Xmx1K',e: true},\n      {value: '-Xmx1M',e: true},\n      {value: '-Xmx1G',e: true},\n      {value: '-Xmx1T',e: true},\n      {value: '-Xmx1P',e: true},\n      {value: '-Xmx100',e: true},\n      {value: '-Xmx100b',e: true},\n      {value: '-Xmx100k',e: true},\n      {value: '-Xmx100m',e: true},\n      {value: '-Xmx100g',e: true},\n      {value: '-Xmx100t',e: true},\n      {value: '-Xmx100p',e: true},\n      {value: '-Xmx100B',e: true},\n      {value: '-Xmx100K',e: true},\n      {value: '-Xmx100M',e: true},\n      {value: '-Xmx100G',e: true},\n      {value: '-Xmx100T',e: true},\n      {value: '-Xmx100P',e: true},\n      {value: '-Xmx100Psome',e: false},\n      {value: '-Xmx100P-Xmx',e: false},\n      {value: '-Xmx100P -Xmx',e: false},\n      {value: '-Xmx100P -XMX',e: false},\n      {value: '-server -Xmx1024m -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: true},\n      {value: '-server -Xmx1024 -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: true},\n      {value: '-server -Xmx1024', e: true},\n      {value: '-Xmx1024 -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: true},\n      {value: '-server -Xmx1024m-Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: false},\n      {value: '-server -Xmx1024-Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: false},\n      {value: '-server-Xmx1024m -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: false},\n      {value: '-server-Xmx1024 -Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: false},\n      {value: '-server-Xmx1024m-Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: false},\n      {value: '-server-Xmx1024-Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: false},\n      {value: '-Xmx1024-Djava.net.preferIPv4Stack=true -XX:+UseNUMA -XX:+UseParallelGC', e: false},\n      {value: '-server-Xmx1024', e: false},\n      {value: '-server    -Xmx1024m   -Da=b',e: true},\n      {value: '-server -Xmx1024m -Da=b',e: true},\n      {value: '-server -XMx1024m -Da=b',e: false},\n      {value: '-server -Xmx1024M -Da=b',e: true},\n      {value: '-server -Xmx1 -Da=b',e: true},\n      {value: '-server -Xmx1100MBPS -Da=b',e: false},\n      {value: '-server -Xmx1100M -Xmx200 -Da=b',e: false},\n      {value: '-server --Xmx1100M -Da=b',e: false},\n      {value: '-Xmx1024m -server -Da=b',e: true},\n      {value: ' -server -Da=b -Xmx1024m',e: true}\n    ]);\n    tests.forEach(function(test) {\n      it(test.value, function() {\n        var v = App.ServiceConfigsValidator.create({});\n        expect(v._checkXmxValueFormat(test.value)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#_getXmxSize', function() {\n    var tests = Em.A([\n      {value: '-Xmx1', e: '1'},\n      {value: '-Xmx1b', e: '1b'},\n      {value: '-Xmx1k', e: '1k'},\n      {value: '-Xmx1m', e: '1m'},\n      {value: '-Xmx1g', e: '1g'},\n      {value: '-Xmx1t', e: '1t'},\n      {value: '-Xmx1p', e: '1p'},\n      {value: '-Xmx1B', e: '1b'},\n      {value: '-Xmx1K', e: '1k'},\n      {value: '-Xmx1M', e: '1m'},\n      {value: '-Xmx1G', e: '1g'},\n      {value: '-Xmx1T', e: '1t'},\n      {value: '-Xmx1P', e: '1p'},\n      {value: '-Xmx100b', e: '100b'},\n      {value: '-Xmx100k', e: '100k'},\n      {value: '-Xmx100m', e: '100m'},\n      {value: '-Xmx100g', e: '100g'},\n      {value: '-Xmx100t', e: '100t'},\n      {value: '-Xmx100p', e: '100p'},\n      {value: '-Xmx100B', e: '100b'},\n      {value: '-Xmx100K', e: '100k'},\n      {value: '-Xmx100M', e: '100m'},\n      {value: '-Xmx100G', e: '100g'},\n      {value: '-Xmx100T', e: '100t'},\n      {value: '-Xmx100P', e: '100p'}\n    ]);\n    tests.forEach(function(test) {\n      it(test.value, function() {\n        var v = App.ServiceConfigsValidator.create({});\n        expect(v._getXmxSize(test.value)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#_formatXmxSizeToBytes', function() {\n    var tests = Em.A([\n      {value: '1', e: 1},\n      {value: '1 ', e: 1},\n      {value: '100', e: 100},\n      {value: '100 ', e: 100},\n      {value: '100b', e: 100},\n      {value: '100B', e: 100},\n      {value: '100k', e: 100 * 1024},\n      {value: '100K', e: 100 * 1024},\n      {value: '100m', e: 100 * 1024 * 1024},\n      {value: '100M', e: 100 * 1024 * 1024},\n      {value: '100g', e: 100 * 1024 * 1024 * 1024},\n      {value: '100G', e: 100 * 1024 * 1024 * 1024},\n      {value: '100t', e: 100 * 1024 * 1024 * 1024 * 1024},\n      {value: '100T', e: 100 * 1024 * 1024 * 1024 * 1024},\n      {value: '100p', e: 100 * 1024 * 1024 * 1024 * 1024 * 1024},\n      {value: '100P', e: 100 * 1024 * 1024 * 1024 * 1024 * 1024}\n    ]);\n    tests.forEach(function(test) {\n      it(test.value, function() {\n        var v = App.ServiceConfigsValidator.create({});\n        expect(v._formatXmxSizeToBytes(test.value)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#validateXmxValue', function() {\n    var tests = Em.A([\n      {\n        recommendedDefaults: {\n          'property1': '-Xmx1024m'\n        },\n        config: Em.Object.create({\n          value: '-Xmx2g',\n          name: 'property1'\n        }),\n        e: null\n      },\n      {\n        recommendedDefaults: {\n          'property1': '-Xmx12'\n        },\n        config: Em.Object.create({\n          value: '-Xmx24',\n          name: 'property1'\n        }),\n        e: null\n      },\n      {\n        recommendedDefaults: {\n          'property1': '-Xmx333k'\n        },\n        config: Em.Object.create({\n          value: '-Xmx134k',\n          name: 'property1'\n        }),\n        e: 'string'\n      },\n      {\n        recommendedDefaults: {\n          'property1': '-Xmx333k'\n        },\n        config: Em.Object.create({\n          value: '-Xmx534',\n          name: 'property1'\n        }),\n        e: 'string'\n      },\n      {\n        recommendedDefaults: {},\n        config: Em.Object.create({\n          defaultValue: '-Xmx123',\n          value: '-Xmx123',\n          name: 'name'\n        }),\n        e: null\n      },\n      {\n        recommendedDefaults: {},\n        config: Em.Object.create({\n          defaultValue: '-Xmx124',\n          value: '-Xmx123',\n          name: 'name'\n        }),\n        e: 'string'\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.config.get('value'), function() {\n        var v = App.ServiceConfigsValidator.create({});\n        v.set('recommendedDefaults', test.recommendedDefaults);\n        var r = v.validateXmxValue(test.config);\n        if (test.e) {\n          expect(r).to.be.a(test.e);\n        }\n        else {\n          expect(r).to.equal(null)\n        }\n      });\n    });\n\n    it('Error should be thrown', function() {\n      var v = App.ServiceConfigsValidator.create({});\n      v.set('recommendedDefaults', {});\n      expect(function() {v.validateXmxValue(Em.Object.create({value:''}));}).to.throw(Error);\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nvar validator = require('utils/validator');\nvar date = require('utils/date');\n\ndescribe('date', function () {\n\n  var correct_tests = Em.A([\n    {t: 1349752195000, e: 'Tue, Oct 09, 2012 03:09', e2: 'Tue Oct 09 2012'},\n    {t: 1367752195000, e: 'Sun, May 05, 2013 11:09', e2: 'Sun May 05 2013'},\n    {t: 1369952195000, e: 'Thu, May 30, 2013 22:16', e2: 'Thu May 30 2013'},\n    {t: 1369952195000, e: 'Thu, May 30, 2013 22:16:35', e2: 'Thu May 30 2013', showSeconds: true },\n    {t: 1369952195000, e: 'Thu, May 30, 2013 22:16:35:000', e2: 'Thu May 30 2013', showSeconds: true, showMilliseconds: true }\n  ]);\n\n  var incorrect_tests = Em.A([\n    {t: null},\n    {t: ''},\n    {t: false},\n    {t: []},\n    {t: {}},\n    {t: undefined},\n    {t: function(){}}\n  ]);\n\n  describe('#dateFormatZeroFirst()', function() {\n    var tests = [\n      {\n        t: 2,\n        e: '02',\n        m: 'should convert to `02`'\n      },\n      {\n        t: 10,\n        e: '10',\n        m: 'should convert to `10`'\n      }\n    ];\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        expect(date.dateFormatZeroFirst(test.t)).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#dateFormat', function() {\n    describe('Correct timestamps', function(){\n      correct_tests.forEach(function(test) {\n        var testMessage = test.t + ' `showSeconds` ' + !!test.showSeconds + '`showMilliseconds` ' + !!test.showMilliseconds;\n        it(testMessage, function() {\n          expect(date.dateFormat(test.t, test.showSeconds, test.showMilliseconds)).to.equal(test.e);\n        });\n      });\n    });\n    describe('Incorrect timestamps', function() {\n      incorrect_tests.forEach(function(test) {\n        it(test.t, function() {\n          expect(date.dateFormat(test.t)).to.equal(test.t);\n        });\n      });\n    });\n  });\n\n  describe('#dateFormatShort', function() {\n    describe('Correct timestamps', function() {\n      correct_tests.forEach(function(test) {\n        it(test.t, function() {\n          expect(date.dateFormatShort(test.t)).to.equal(test.e2);\n        });\n      });\n    });\n    it('Today timestamp', function() {\n      var now = new Date();\n      var then = new Date(now.getFullYear(),now.getUTCMonth(),now.getUTCDate(),0,0,0);\n      expect(date.dateFormatShort(then.getTime() + 10*3600*1000)).to.equal('Today 10:00:00');\n    });\n    describe('Incorrect timestamps', function() {\n      incorrect_tests.forEach(function(test) {\n        it(test.t, function() {\n          expect(date.dateFormatShort(test.t)).to.equal(test.t);\n        });\n      });\n    });\n  });\n\n  describe('#startTime()', function() {\n    var today = new Date();\n    var tests = [\n      { t: 1349752195000, e: 'Tue Oct 09 2012 06:09' },\n      { t: -10000000, e: 'Not started' },\n      { t: today.getTime(), e: 'Today {0}:{1}'.format(date.dateFormatZeroFirst(today.getHours()), date.dateFormatZeroFirst(today.getMinutes())) },\n      { t: today, e: ''}\n    ];\n    tests.forEach(function(test) {\n      var testMessage = 'should conver {0} to {1}'.format(test.t, test.e);\n      it(testMessage, function() {\n        expect(date.startTime(test.t)).to.be.eql(test.e);\n      });\n    });\n  });\n\n  describe('#timingFormat', function() {\n    var tests = Em.A([\n      {i: '30', e:'30 ms'},\n      {i: '300', e:'300 ms'},\n      {i: '999', e:'999 ms'},\n      {i: '1000', e:'1.00 secs'},\n      {i: '3000', e:'3.00 secs'},\n      {i: '35000', e:'35.00 secs'},\n      {i: '350000', e:'350.00 secs'},\n      {i: '999999', e:'1000.00 secs'},\n      {i: '1000000', e:'16.67 mins'},\n      {i: '3500000', e:'58.33 mins'},\n      {i: '35000000', e:'9.72 hours'},\n      {i: '350000000', e:'4.05 days'},\n      {i: '3500000000', e:'40.51 days'},\n      {i: '35000000000', e:'405.09 days'}\n    ]);\n\n    describe('Correct data', function(){\n      tests.forEach(function(test) {\n        it(test.t, function() {\n          expect(date.timingFormat(test.i)).to.equal(test.e);\n        });\n      });\n    });\n\n    describe('Incorrect data', function(){\n      incorrect_tests.forEach(function(test) {\n        it(test.t, function() {\n          expect(date.timingFormat(test.t)).to.equal(null);\n        });\n      });\n    });\n\n  });\n\n  describe('#duration', function() {\n    var tests = Em.A([\n      {startTime: 1, endTime: 2, e: 1},\n      {startTime: 0, endTime: 2000, e: 0},\n      {startTime: 200, endTime: 0, e: 19800}\n    ]);\n\n    beforeEach(function() {\n      sinon.stub(App, 'dateTime', function () { return 20000; });\n    });\n\n    tests.forEach(function(test) {\n      it(test.startTime + ' ' + test.endTime, function() {\n        expect(date.duration(test.startTime, test.endTime)).to.equal(test.e);\n      });\n    });\n\n    afterEach(function() {\n      App.dateTime.restore();\n    });\n  });\n\n  describe('#durationSummary()', function() {\n    var tests = [\n      {\n        startTimestamp: 1349752195000,\n        endTimestamp: 1349752199000,\n        e: '4.00 secs'\n      },\n      {\n        startTimestamp: 1349752195000,\n        endTimestamp: 1367752195000,\n        e: '208.33 days'\n      },\n      {\n        startTimestamp: -10000000,\n        endTimestamp: 1367752195000,\n        e: Em.I18n.t('common.na')\n      },\n      {\n        startTimestamp: 1349752195000,\n        endTimestamp: -1,\n        stubbed: true,\n        e: '0 secs'\n      },\n      {\n        startTimestamp: 1000,\n        endTimestamp: -1,\n        stubbed: true,\n        e: '19.00 secs'\n      }\n    ];\n\n    beforeEach(function() {\n      sinon.stub(App, 'dateTime', function () { return 20000; });\n    });\n\n    tests.forEach(function(test) {\n      var testMessage = 'duration between {0} and {1} is {2}'.format(test.startTimestamp, test.endTimestamp, test.e) + (test.stubbed ? \" App.dateTime() is stubbed\" : \"\");\n      it(testMessage, function() {\n        expect(date.durationSummary(test.startTimestamp, test.endTimestamp)).to.be.eql(test.e);\n      });\n    });\n\n    afterEach(function() {\n      App.dateTime.restore();\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/form');\n\n\n/*\n * formField.isValid property doesn't update correctly, so I have to work with errorMessage property\n */\ndescribe('App.FormField', function () {\n\n  describe('#validate()', function () {\n    /*NUMBER TYPE END*/\n    /*REQUIRE*/\n    it('Required field shouldn\\'t be empty', function () {\n      var formField = App.FormField.create();\n      formField.set('displayType', 'string');\n      formField.set('value', '');\n      formField.set('isRequired', true);\n      formField.validate();\n      expect(formField.get('errorMessage') === '').to.equal(false);\n    });\n    /*REQUIRE END*/\n\n  });\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar App = require('app');\nrequire('utils/helper');\n\ndescribe('utils/helper', function() {\n  describe('String helpers', function() {\n    describe('#trim()', function(){\n      it('should replace first space', function() {\n        expect(' as d f'.trim()).to.eql('as d f');\n      });\n    });\n    describe('#endsWith()', function() {\n      it('`abcd` ends with `d`', function(){\n        expect('abcd'.endsWith('d')).to.eql(true);\n      });\n      it('`abcd` doesn\\'t end with `f`', function(){\n        expect('abcd'.endsWith('f')).to.eql(false);\n      });\n    });\n    describe('#contains()', function() {\n      it('`abc` contains b', function(){\n        expect('abc'.contains('b')).to.eql(true);\n      });\n      it('`abc` doesn\\'t contain d', function() {\n        expect('abc'.contains('d')).to.eql(false);\n      });\n    });\n    describe('#capitalize()',function() {\n      it('`abc d` should start with `A`', function() {\n        expect('abc d'.capitalize()).to.eql('Abc d');\n      });\n    });\n    describe('#findIn()', function(){\n      var obj = {\n        a: {\n          a1: 'AVal1'\n        },\n        b: 'BVal',\n        c: {\n          c1: {\n            c2: 'Cval2'\n          },\n          b: 'BVal'\n        }\n      };\n      var testValue = function(key, value) {\n        it('key `' + key + '` should have `' + JSON.stringify(value) + '` value', function() {\n          expect(key.findIn(obj)).to.eql(value);\n        });\n      };\n      it('expect return `null` on non-object input', function(){\n        expect('a'.findIn('b')).to.null;\n      });\n      testValue('a', obj.a);\n      testValue('c2', obj.c.c1.c2);\n      testValue('b', obj.b);\n      testValue('d', null);\n    });\n    describe('#format()', function(){\n      it('should replace string correctly', function(){\n        expect(\"{0} world{1}\".format(\"Hello\",\"!\")).to.eql(\"Hello world!\");\n      });\n    });\n    describe('#highlight()', function() {\n      var str = \"Hello world! I want to highlight this word!\";\n      it('should highlight `word` with default template', function() {\n        var result = str.highlight(['word']);\n        expect(result).to.eql(\"Hello world! I want to highlight this <b>word</b>!\");\n      });\n      it('should highlight `world` and `word` with template `<span class=\"yellow\">{0}</span>`', function() {\n        var result = str.highlight([\"world\", \"word\"], '<span class=\"yellow\">{0}</span>');\n        expect(result).to.eql('Hello <span class=\"yellow\">world</span>! I want to highlight this <span class=\"yellow\">word</span>!')\n      });\n      var str2 = \"First word, second word\";\n      it('should highlight `word` multiply times with default template', function() {\n        var result = str2.highlight([\"word\"]);\n        expect(result).to.eql(\"First <b>word</b>, second <b>word</b>\");\n      });\n    });\n  });\n  describe('Number helpers', function(){\n    describe('#toDaysHoursMinutes()', function(){\n      var time = 1000000000;\n      var minute = 1000*60;\n      var hour = 60*minute;\n      var day = 24*hour;\n      var result = time.toDaysHoursMinutes();\n      var testDays = Math.floor(time/day);\n      it('should correct convert days', function(){\n        expect(testDays).to.eql(result.d);\n      });\n      it('should correct convert hours', function(){\n        expect(Math.floor((time - testDays * day)/hour)).to.eql(result.h);\n      });\n      it('should correct convert minutes', function(){\n        expect(((time - Math.floor((time - testDays*day)/hour)*hour - testDays*day)/minute).toFixed(2)).to.eql(result.m);\n      });\n    });\n  });\n  describe('Array helpers', function(){\n    describe('#sortPropertyLight()', function(){\n      var testable = [\n        { a: 2 },\n        { a: 1 },\n        { a: 6},\n        { a: 64},\n        { a: 3},\n        { a: 3}\n      ];\n      var result = testable.sortPropertyLight('a');\n      it('should return array with same length', function(){\n        expect(testable.length).to.eql(result.length);\n      });\n      it('should sort array', function() {\n        result.forEach(function(resultObj, index, resultArr) {\n          if (index > resultArr.length - 1)\n            expect(resultObj.a < resultArr[index + 1].a).to.eql(false);\n        });\n      });\n      it('should try to sort without throwing exception', function(){\n        expect(testable.sortPropertyLight(['a'])).to.ok;\n      });\n    });\n  });\n  describe('App helpers', function(){\n    var appendDiv = function() {\n      $('body').append('<div id=\"tooltip-test\"></div>');\n    };\n    var removeDiv = function() {\n      $('body').remove('#tooltip-test');\n    };\n    describe('#isEmptyObject', function(){\n      it('should return true on empty object', function() {\n        expect(App.isEmptyObject({})).to.eql(true);\n      });\n      it('should return false on non-empty object', function() {\n        expect(App.isEmptyObject({ a: 1 })).to.eql(false);\n      });\n    });\n    describe('#parseJSON()', function(){\n      var testable = '{\"hello\": \"world\"}';\n      expect(App.parseJSON(testable).hello).to.eql('world');\n    });\n    describe('#tooltip()', function() {\n      beforeEach(appendDiv);\n      afterEach(removeDiv);\n      it('should add tooltip', function() {\n        var tooltip = App.tooltip($('#tooltip-test'));\n        expect($('#tooltip-test').data('tooltip').enabled).to.eql(true);\n      });\n    });\n    describe('#popover()', function() {\n      beforeEach(appendDiv);\n      afterEach(removeDiv);\n      it('should add popover', function() {\n        var tooltip = App.popover($('#tooltip-test'));\n        expect($('#tooltip-test').data('popover').enabled).to.eql(true);\n      });\n    });\n    describe('#App.format', function(){\n      describe('#commandDetail()', function() {\n        var command = \"GANGLIA_MONITOR STOP\";\n        var ignored = \"DECOMMISSION, NAMENODE\";\n        var removeString = \"SERVICE/HDFS STOP\";\n        var nagiosState = \"nagios_update_ignore ACTIONEXECUTE\";\n        it('should convert command to readable info', function() {\n          expect(App.format.commandDetail(command)).to.eql(' Ganglia Monitor Stop');\n        });\n        it('should ignore decommission command', function(){\n          expect(App.format.commandDetail(ignored)).to.eql('  NameNode');\n        });\n        it('should remove SERVICE string from command', function(){\n          expect(App.format.commandDetail(removeString)).to.eql(' HDFS Stop');\n        });\n        it('should return maintenance message', function() {\n          expect(App.format.commandDetail(nagiosState)).to.eql(' Toggle Maintenance Mode');\n        });\n      });\n      describe('#taskStatus()', function(){\n        var testable = [\n          { status: 'PENDING', expectable: 'pending'},\n          { status: 'QUEUED', expectable: 'queued'},\n          { status: 'COMPLETED', expectable: 'completed'}\n        ];\n        testable.forEach(function(testObj){\n          it('should convert `' + testObj.status + '` to `' + testObj.expectable + '`', function(){\n            expect(App.format.taskStatus(testObj.status)).to.eql(testObj.expectable);\n          });\n        });\n      });\n    });\n  });\n  describe('#App.permit()', function() {\n    var obj = {\n      a1: 'v1',\n      a2: 'v2',\n      a3: 'v3'\n    }\n\n    var tests = [\n      {\n        keys: 'a1',\n        e: {\n          a1: 'v1'\n        }\n      },\n      {\n        keys: ['a2','a3','a4'],\n        e: {\n          a2: 'v2',\n          a3: 'v3'\n        }\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it('should return object `{0}` permitted keys `{1}`'.format(JSON.stringify(test.e), JSON.stringify(test.keys)), function() {\n        expect(App.permit(obj, test.keys)).to.deep.eql(test.e);\n      });\n    });\n\n\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar Ember = require('ember');\nvar App = require('app');\n\nrequire('controllers/global/background_operations_controller');\nrequire('views/common/modal_popup');\nrequire('utils/helper');\nrequire('utils/host_progress_popup');\n\ndescribe('App.HostPopup', function () {\n\n  var services = [\n    {\n      displayName: \"Start service WebHCat\",\n      hosts: [\n        {\n          logTasks: [\n            {\n              Tasks: {\n                command: \"START\",\n                host_name: \"ip-10-12-123-90.ec2.internal\",\n                role: \"WEBHCAT_SERVER\",\n                status: \"QUEUED\"\n              },\n              href: \"http://ec2-54-224-233-43.compute-1.amazonaws.com:8080/api/v1/clusters/mycluster/requests/23/tasks/94\"\n            }\n          ],\n          name: \"ip-10-12-123-90.ec2.internal\",\n          publicName: \"ip-10-12-123-90.ec2.internal\",\n          serviceName: \"Start service WebHCat\"\n        }\n      ],\n      isRunning: false\n    },\n    {\n      displayName: \"Start service Hive/HCat\",\n      hosts: [\n        {\n          logTasks: [\n            {\n              Tasks: {\n                command: \"INSTALL\",\n                host_name: \"ip-10-12-123-90.ec2.internal\",\n                status: \"COMPLETED\"\n              },\n              href: \"http://ec2-54-224-233-43.compute-1.amazonaws.com:8080/api/v1/clusters/mycluster/requests/15/tasks/76\"\n            }\n          ],\n          name: \"ip-10-12-123-90.ec2.internal\",\n          publicName: \"ip-10-12-123-90.ec2.internal\",\n          serviceName: \"Start service Hive/HCat\"\n        },\n        {\n          logTasks: [\n            {\n              Tasks: {\n                command: \"START\",\n                host_name: \"ip-10-33-7-23.ec2.internal\",\n                status: \"COMPLETED\"\n              },\n              href: \"http://ec2-54-224-233-43.compute-1.amazonaws.com:8080/api/v1/clusters/mycluster/requests/15/tasks/78\"\n            },\n            {\n              Tasks: {\n                command: \"START\",\n                host_name: \"ip-10-33-7-23.ec2.internal\",\n                status: \"COMPLETED\"\n              },\n              href: \"http://ec2-54-224-233-43.compute-1.amazonaws.com:8080/api/v1/clusters/mycluster/requests/15/tasks/79\"\n            }\n          ],\n          name: \"ip-10-33-7-23.ec2.internal\",\n          publicName: \"ip-10-33-7-23.ec2.internal\",\n          serviceName: \"Start service Hive/HCat\"\n        }\n      ],\n      isRunning: false\n    }\n  ];\n\n  var bgController = App.BackgroundOperationsController.create();\n  bgController.set('services', services);\n\n  describe('#initPopup', function() {\n    App.HostPopup.initPopup(\"\", bgController, true);\n    it('services loaded', function() {\n      expect(App.HostPopup.get('inputData').length).to.equal(services.length);\n    });\n  });\n\n  var test_tasks = [\n    {\n      t: [\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 2\n          }\n        },\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 3\n          }\n        },\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 1\n          }\n        }\n      ],\n      m: 'All COMPLETED',\n      r: 'SUCCESS',\n      p: 100,\n      ids: [1,2,3]\n    },\n    {\n      t: [\n        {\n          Tasks: {\n            status: 'FAILED',\n            id: 2\n          }\n        },\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 1\n          }\n        }\n        ,\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 3\n          }\n        }\n      ],\n      m: 'One FAILED',\n      r: 'FAILED',\n      p: 100,\n      ids: [1,2,3]\n    },\n    {\n      t: [\n        {\n          Tasks: {\n            status: 'ABORTED',\n            id: 1\n          }\n        },\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 2\n          }\n        }\n      ],\n      m: 'One ABORTED',\n      r: 'CANCELLED',\n      p: 100,\n      ids: [1,2]\n    },\n    {\n      t: [\n        {\n          Tasks: {\n            status: 'TIMEDOUT',\n            id: 3\n          }\n        },\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 1\n          }\n        }\n      ],\n      m: 'One TIMEDOUT',\n      r: 'TIMEDOUT',\n      p: 100,\n      ids: [1,3]\n    },\n    {\n      t: [\n        {\n          Tasks: {\n            status: 'IN_PROGRESS',\n            id: 1\n          }\n        },\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 2\n          }\n        }\n      ],\n      m: 'One IN_PROGRESS',\n      r: 'IN_PROGRESS',\n      p: 68,\n      ids: [1,2]\n    },\n    {\n      t: [\n        {\n          Tasks: {\n            status: 'QUEUED',\n            id: 2\n          }\n        },\n        {\n          Tasks: {\n            status: 'COMPLETED',\n            id: 3\n          }\n        }\n      ],\n      m: 'Something else',\n      r: 'PENDING',\n      p: 55,\n      ids: [2,3]\n    }\n  ];\n\n  describe('#setSelectCount', function () {\n    var itemsForStatusTest = [\n      {\n        title: 'Empty',\n        data: [],\n        result: [0, 0, 0, 0, 0, 0, 0]\n      },\n      {\n        title: 'All Pending',\n        data: [\n          {status: 'pending'},\n          {status: 'queued'}\n        ],\n        result: [2, 2, 0, 0, 0, 0, 0]\n      },\n      {\n        title: 'All Completed',\n        data: [\n          {status: 'success'},\n          {status: 'completed'}\n        ],\n        result: [2, 0, 0, 0, 2, 0, 0]\n      },\n      {\n        title: 'All Failed',\n        data: [\n          {status: 'failed'},\n          {status: 'failed'}\n        ],\n        result: [2, 0, 0, 2, 0, 0, 0]\n      },\n      {\n        title: 'All InProgress',\n        data: [\n          {status: 'in_progress'},\n          {status: 'in_progress'}\n        ],\n        result: [2, 0, 2, 0, 0, 0, 0]\n      },\n      {\n        title: 'All Aborted',\n        data: [\n          {status: 'aborted'},\n          {status: 'aborted'}\n        ],\n        result: [2, 0, 0, 0, 0, 2, 0]\n      },\n      {\n        title: 'All Timedout',\n        data: [\n          {status: 'timedout'},\n          {status: 'timedout'}\n        ],\n        result: [2, 0, 0, 0, 0, 0, 2]\n      },\n      {\n        title: 'Every Category',\n        data: [\n          {status: 'pending'},\n          {status: 'queued'},\n          {status: 'success'},\n          {status: 'completed'},\n          {status: 'failed'},\n          {status: 'in_progress'},\n          {status: 'aborted'},\n          {status: 'timedout'}\n        ],\n        result: [8, 2, 1, 1, 2, 1, 1]\n      }\n    ];\n    var categories = [\n      Ember.Object.create({value: 'all'}),\n      Ember.Object.create({value: 'pending'}),\n      Ember.Object.create({value: 'in_progress'}),\n      Ember.Object.create({value: 'failed'}),\n      Ember.Object.create({value: 'completed'}),\n      Ember.Object.create({value: 'aborted'}),\n      Ember.Object.create({value: 'timedout'})\n    ];\n    itemsForStatusTest.forEach(function(statusTest) {\n      it(statusTest.title, function() {\n        App.HostPopup.setSelectCount(statusTest.data, categories);\n        expect(categories.mapProperty('count')).to.deep.equal(statusTest.result);\n      });\n    });\n  });\n\n  describe('#getStatus', function() {\n    test_tasks.forEach(function(test_task) {\n      it(test_task.m, function() {\n        expect(App.HostPopup.getStatus(test_task.t)[0]).to.equal(test_task.r);\n      });\n    });\n  });\n\n  describe('#getProgress', function() {\n    test_tasks.forEach(function(test_task) {\n      it(test_task.m, function() {\n        expect(App.HostPopup.getProgress(test_task.t)).to.equal(test_task.p);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar lazyLoading = require('utils/lazy_loading');\n\ndescribe('lazy_loading', function () {\n\n  describe('#run', function () {\n    var context = Em.Object.create({isLoaded: false});\n    var options = {\n      destination: [],\n      source: [{'test':'test'}],\n      context: context\n    };\n    it('load one item', function () {\n      lazyLoading.run(options);\n      expect(options.destination[0]).to.eql(options.source[0]);\n      expect(context.get('isLoaded')).to.equal(true);\n    });\n\n    var testsInfo = [\n      {\n        title: 'load 11 item with initSize - 11',\n        result: true,\n        initSize: 11,\n        destinationLength: 11,\n        destination: [],\n        source: [{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}],\n        context: Em.Object.create()\n      },\n      {\n        title: 'load 11 item with initSize - 12',\n        result: true,\n        initSize: 12,\n        destinationLength: 11,\n        destination: [],\n        source: [{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}],\n        context: Em.Object.create()\n      },\n      {//items will be completely loaded on next iteration of pushing chunk\n        title: 'load 11 item with initSize - 10',\n        result: false,\n        initSize: 10,\n        destinationLength: 10,\n        destination: [],\n        source: [{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}],\n        context: Em.Object.create({isLoaded: false})\n      }\n    ];\n    testsInfo.forEach(function(test){\n      it(test.title, function () {\n        lazyLoading.run(test);\n        expect(test.destinationLength).to.equal(test.destination.length);\n        expect(test.context.get('isLoaded')).to.equal(test.result);\n      });\n    });\n  });\n\n  describe('#divideIntoChunks', function () {\n    var testsInfo = [\n      {\n        title: 'load 11 item with chunkSize - 3',\n        chunkSize: 3,\n        source: [{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}],\n        chunks: [[{i:1}, {i:2}, {i:3}], [{i:4}, {i:5}, {i:6}], [{i:7}, {i:8}, {i:9}], [{i:10},{i:11}]]\n      },\n      {\n        title: 'load 11 item with chunkSize - 0',\n        chunkSize: 0,\n        source: [{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}],\n        chunks: [[{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}]]\n      },\n      {\n        title: 'load 11 item with chunkSize - 1',\n        chunkSize: 1,\n        source: [{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}],\n        chunks: [[{i:1}], [{i:2}], [{i:3}], [{i:4}], [{i:5}], [{i:6}], [{i:7}], [{i:8}], [{i:9}], [{i:10}], [{i:11}]]\n      },\n      {\n        title: 'load 11 item with chunkSize - 11',\n        chunkSize: 0,\n        source: [{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}],\n        chunks: [[{i:1}, {i:2}, {i:3}, {i:4}, {i:5}, {i:6}, {i:7}, {i:8}, {i:9}, {i:10},{i:11}]]\n      }\n    ];\n    testsInfo.forEach(function(test){\n      it(test.title, function () {\n        var chunks = lazyLoading.divideIntoChunks(test.source, test.chunkSize);\n        expect(chunks).to.eql(test.chunks);\n      });\n    });\n  });\n\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar misc = require('utils/misc');\n\ndescribe('misc', function () {\n\n  describe('#formatBandwidth', function () {\n    var tests = Em.A([\n      {m:'undefined to undefined',i:undefined,e:undefined},\n      {m:'0 to <1KB',i:'0',e:'<1KB'},\n      {m:'1000 to <1KB',i:'1000',e:'<1KB'},\n      {m:'1024 to 1.0KB',i:'1024',e:'1.0KB'},\n      {m:'2048 to 2.0KB',i:'2048',e:'2.0KB'},\n      {m:'1048576 to 1.0MB',i:'1048576',e:'1.0MB'},\n      {m:'1782579 to 1.7MB',i:'1782579',e:'1.7MB'},\n      {m:'1546188226 to 1.44GB',i:'1546188226',e:'1.44GB'}\n    ]);\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(misc.formatBandwidth(test.i)).to.equal(test.e);\n      });\n    });\n    it('NaN to NaN' + ' ', function () {\n      expect(isNaN(misc.formatBandwidth(NaN))).to.equal(true);\n    });\n  });\n\n  describe('#ipToInt', function () {\n    var tests = Em.A([\n      {m:'0.0.0.0 to 0',i:'0.0.0.0',e:0},\n      {m:'255.255.255.255 to 4294967295',i:'255.255.255.255',e:4294967295},\n      {m:'\"\" to false',i:'',e:false},\n      {m:'255.255.255.256 to false',i:'255.255.255.256',e:false},\n      {m:'255.255.255 to false',i:'255.255.255',e:false}\n    ]);\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(misc.ipToInt(test.i)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#sortByOrder', function() {\n    var tests = Em.A([\n      {\n        sortOrder: ['b', 'c', 'a'],\n        array: [{id:'a'}, {id:'b'}, Em.Object.create({id:'c'})],\n        e: [{id:'b'}, Em.Object.create({id:'c'}), {id:'a'}],\n        m: 'Array with Ember and native objects'\n      },\n      {\n        sortOrder: ['b', 'c', 'a'],\n        array: [{id:'a'}, {id:'b'}, {id:'c'}],\n        e: [{id:'b'}, {id:'c'}, {id:'a'}],\n        m: 'Array with native objects'\n      },\n      {\n        sortOrder: ['b', 'c', 'a'],\n        array: [Em.Object.create({id:'a'}), Em.Object.create({id:'b'}), Em.Object.create({id:'c'})],\n        e: [Em.Object.create({id:'b'}), Em.Object.create({id:'c'}), Em.Object.create({id:'a'})],\n        m: 'Array with Ember objects'\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        expect(misc.sortByOrder(test.sortOrder, test.array)).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#xmlToObject()', function(){\n    var xml = '<!-- Edited by XMLSpy -->'+\n      '<stacks name=\"HDP-2.1\">'+\n      '<service>'+\n      '<name>NAGIOS</name>'+\n      '<name>OOZIE</name>'+\n      '<name>HDFS</name>'+\n      '<component>NAGIOS_SERVER</component>'+\n      '</service>'+\n      '</stacks>';\n    xml = new DOMParser().parseFromString(xml,\"text/xml\");\n    var converted = misc.xmlToObject(xml);\n    it('should be an object', function(){\n      expect(converted).to.a('object');\n    });\n    it('`attribute` name should be present', function(){\n      expect(converted.stacks).to.ok;\n    });\n    it('`stacks.service.name` should be an array', function() {\n      expect(converted.stacks.service.name).to.a('array');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar numberUtils = require('utils/number_utils');\n\ndescribe('', function() {\n\n  describe('#bytesToSize', function() {\n\n    describe('check bytes', function() {\n      var tests = Em.A([\n        {\n          bytes: null,\n          precision: null,\n          parseType: null,\n          multiplyBy: null,\n          e: 'n/a',\n          m: '\"n/a\" if bytes is null'\n        },\n        {\n          bytes: undefined,\n          precision: null,\n          parseType: null,\n          multiplyBy: null,\n          e: 'n/a',\n          m: '\"n/a\" if bytes is undefined'\n        },\n        {\n          bytes: 200,\n          precision: null,\n          parseType: undefined,\n          multiplyBy: null,\n          e: '0 Bytes',\n          m: '0 if multiply is `null`'\n        },\n        {\n          bytes: 200,\n          precision: null,\n          parseType: undefined,\n          multiplyBy: undefined,\n          e: '200 Bytes',\n          m: '\"200 Bytes\" if `multiplyBy` and `parseType` are `undefined`'\n        },\n        {\n          bytes: 200,\n          precision: null,\n          parseType: undefined,\n          multiplyBy: 1,\n          e: '200 Bytes',\n          m: '`200 Bytes` if `parsetype` is `undefined`'\n        }\n      ]);\n\n      tests.forEach(function(test) {\n        it(test.m, function() {\n          expect(numberUtils.bytesToSize(test.bytes, test.precision, test.parseType, test.multiplyBy)).to.equal(test.e);\n        });\n      });\n    });\n\n    describe('check sizes', function() {\n      var tests = Em.A([\n        {\n          bytes: 12,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: 'Bytes',\n          m: 'Bytes'\n        },\n        {\n          bytes: 1024 + 12,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: 'KB',\n          m: 'KB'\n        },\n        {\n          bytes: 1024 * 1024 + 12,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: 'MB',\n          m: 'MB'\n        },\n        {\n          bytes: 1024 * 1024 * 1024 + 12,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: 'GB',\n          m: 'GB'\n        },\n        {\n          bytes: 1024 * 1024 * 1024 * 1024 + 12,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: 'TB',\n          m: 'TB'\n        },\n        {\n          bytes: 1024 * 1024 * 1024 * 1024 * 1024 + 12,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: 'PB',\n          m: 'PB'\n        }\n      ]);\n\n      tests.forEach(function(test) {\n        it(test.m, function() {\n          expect(numberUtils.bytesToSize(test.bytes, test.precision, test.parseType, test.multiplyBy).endsWith(test.e)).to.equal(true);\n        });\n      });\n    });\n\n    describe('check calculated result', function() {\n      var tests = Em.A([\n        {\n          bytes: 42,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: '42',\n          m: 'Bytes'\n        },\n        {\n          bytes: 1024 * 12,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: '12',\n          m: 'KB'\n        },\n        {\n          bytes: 1024 * 1024 * 23,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: '23',\n          m: 'MB'\n        },\n        {\n          bytes: 1024 * 1024 * 1024 * 34,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: '34',\n          m: 'GB'\n        },\n        {\n          bytes: 1024 * 1024 * 1024 * 1024 * 45,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: '45',\n          m: 'TB'\n        },\n        {\n          bytes: 1024 * 1024 * 1024 * 1024 * 1024 * 56,\n          precision: null,\n          parseType: 'parseInt',\n          multiplyBy: 1,\n          e: '56',\n          m: 'PB'\n        }\n      ]);\n\n      tests.forEach(function(test) {\n        it(test.m, function() {\n          expect(numberUtils.bytesToSize(test.bytes, test.precision, test.parseType, test.multiplyBy).startsWith(test.e)).to.equal(true);\n        });\n      });\n    });\n\n  });\n  describe('#validateInteger()', function() {\n    var tests = [\n      {\n        str: null,\n        min: null,\n        max: null,\n        m: 'all params null to' + Em.I18n.t('number.validate.empty'),\n        e: Em.I18n.t('number.validate.empty')\n      },\n      {\n        str: \"string\",\n        min: null,\n        max: null,\n        m: 'try to validate `string` should return ' + Em.I18n.t('number.validate.empty'),\n        e: Em.I18n.t('number.validate.notValidNumber')\n      },\n      {\n        str: \"string\",\n        min: null,\n        max: null,\n        m: 'try to validate `string` should return ' + Em.I18n.t('number.validate.notValidNumber'),\n        e: Em.I18n.t('number.validate.notValidNumber')\n      },\n      {\n        str: \"1abc\",\n        min: null,\n        max: null,\n        m: 'try to validate `1abc` should return ' + Em.I18n.t('number.validate.notValidNumber'),\n        e: Em.I18n.t('number.validate.notValidNumber')\n      },\n      {\n        str: \"1\",\n        min: null,\n        max: null,\n        m: 'try to validate `1` should return ' + Em.I18n.t('number.validate.moreThanMaximum').format(null),\n        e: Em.I18n.t('number.validate.moreThanMaximum').format(null)\n      },\n      {\n        str: \"1\",\n        min: 2,\n        max: 0,\n        m: 'try to validate `1` with max = 0 and min = 2 should return ' + Em.I18n.t('number.validate.lessThanMinumum').format(2),\n        e: Em.I18n.t('number.validate.lessThanMinumum').format(2)\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function(){\n        expect(numberUtils.validateInteger(test.str, test.min, test.max)).to.eql(test.e);\n      });\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar objectUtils = require('utils/object_utils');\n\ndescribe('utils/object_utils', function() {\n  describe('#recursiveTree()', function() {\n    var testObj = {\n      a1: {\n        a2: 'v1',\n        a3: {\n          a4: {\n            a5: {\n              a6: 'v2',\n              a7: 'v3'\n            }\n          }\n        }\n      }\n    };\n    it('should return correct tree of childs', function(){\n      var result = objectUtils.recursiveTree(testObj);\n      expect(result).to.eql('a2 (/a1)<br/>a5 (/a1/a3/a4)<br/>');\n    });\n\n    it('should return `null` if type missed', function() {\n      var result = objectUtils.recursiveTree('{ a1: \"v1\"}');\n      expect(result).to.be.null;\n    });\n  });\n  describe('#recursiveKeysCount()', function() {\n    var tests = [\n      {\n        m: 'should return 1 child',\n        e: 3,\n        obj: {\n          a1: {\n            a2: 'v1',\n            a3: 'v2',\n            a4: {\n              a5: 'v3'\n            }\n          }\n        }\n      },\n      {\n        m: 'should return 1 childs',\n        e: 1,\n        obj: {\n          a1: 'c1'\n        }\n      },\n      {\n        m: 'should return `null`',\n        e: null,\n        obj: 'a1'\n      }\n    ];\n    tests.forEach(function(test){\n      it(test.m, function() {\n        expect(objectUtils.recursiveKeysCount(test.obj)).to.be.eql(test.e);\n      });\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar string_utils = require('utils/string_utils');\nrequire('utils/helper');\n\ndescribe('string_utils', function () {\n\n  describe('#underScoreToCamelCase', function () {\n    var tests = [\n      {m:'a_b_c to aBC',i:'a_b_c',e:'aBC'},\n      {m:'a_bc to aBc',i:'a_bc',e:'aBc'},\n      {m:'ab_c to abC',i:'ab_c',e:'abC'},\n      {m:'_b_c to BC',i:'_b_c',e:'BC'}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(string_utils.underScoreToCamelCase(test.i)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#pad', function () {\n    var tests = [\n      {m: '\"name\" to \"    name\"', i: 'name', l: 8, a: 1, f: ' ', e: '    name'},\n      {m: '\"name\" to \"name    \"', i: 'name', l: 8, a: 2, f: ' ', e: 'name    '},\n      {m: '\"name\" to \"  name  \"', i: 'name', l: 8, a: 3, f: ' ', e: '  name  '},\n      {m: '\"name\" to \"name    \"', i: 'name', l: 8, a: 0, f: ' ', e: 'name    '},\n      {m: '\"name\" to \"name    \"', i: 'name', l: 8, a:-1, f: ' ', e: 'name    '},\n      {m: '\"name\" to \"name\"', i: 'name', l: 4, a: 1, f: ' ', e: 'name'},\n      {m: '\"name\" to \"||||||||name\"', i: 'name', l: 8, a:1, f: '||', e: '||||||||name'},\n      {m: '\"name\" to \"||||name||||\"', i: 'name', l: 8, a:3, f: '||', e: '||||name||||'},\n      {m: '\"name\" to \"name||||||||\"', i: 'name', l: 8, a:2, f: '||', e: 'name||||||||'},\n      {m: '\"name\" to \"name\" `str` param passed only', i: 'name', e: 'name'}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(string_utils.pad(test.i, test.l, test.f, test.a)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#compareVersions', function () {\n    var tests = [\n      {m: '1.2 equal to 1.2', v1:'1.2', v2:'1.2', e: 0},\n      {m: '1.2 lower than 1.3', v1:'1.2', v2:'1.3', e: -1},\n      {m: '1.3 higher than 1.2', v1:'1.3', v2:'1.2', e: 1},\n      {m: '1.2.1 higher than 1.2', v1:'1.2.1', v2:'1.2', e: 1},\n      {m: '11.2 higher than 2.2', v1:'11.2', v2:'2.2', e: 1},\n      {m: '0.9 higher than 0.8', v1:'0.9', v2:'0.8', e: 1},\n      {m: 'return false if no string passed', v1: '0.9', e: false}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(string_utils.compareVersions(test.v1, test.v2)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#isSingleLine', function () {\n    var tests = [\n      {m: 'is single line text', t: 'a b', e: true},\n      {m: 'is single line text', t: 'a b\\n', e: true},\n      {m: 'is single line text', t: '\\na b', e: true},\n      {m: 'is not single line text', t: 'a\\nb', e: false}\n    ];\n    tests.forEach(function(test) {\n      it(test.t + ' ' + test.m + ' ', function () {\n        expect(string_utils.isSingleLine(test.t)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#arrayToCSV', function() {\n    var test = [{a: 1, b:2, c:3}, {a: 1, b:2, c:3}, {a: 1, b:2, c:3}];\n    it('array of object to csv-string', function () {\n      expect(string_utils.arrayToCSV(test)).to.equal(\"1,2,3\\n1,2,3\\n1,2,3\\n\");\n    });\n  });\n\n  describe('#getFileFromPath', function() {\n    var tests = [\n      {t: undefined, e: ''},\n      {t: {}, e: ''},\n      {t: [], e: ''},\n      {t: '', e: ''},\n      {t: function(){}, e: ''},\n      {t: '/path/to/file.ext', e: 'file.ext'},\n      {t: 'file.ext', e: 'file.ext'},\n      {t: 'file', e: 'file'},\n      {t: '/path/to/file', e: 'file'}\n    ];\n    tests.forEach(function(test) {\n      it('Check ' + typeof test.t, function () {\n        expect(string_utils.getFileFromPath(test.t)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#getPath', function() {\n      var tests = [\n        {t: undefined, e: ''},\n        {t: {}, e: ''},\n        {t: [], e: ''},\n        {t: '', e: ''},\n        {t: function(){}, e: ''},\n        {t: '/path/to/filename', e: '/path/to'},\n        {t: '/path/to/', e: '/path/to'},\n        {t: '/filename', e: '/'},\n        {t: 'filename', e: ''},\n        {t: '/path/', e: '/path'},\n        {t: 'filename/', e: ''}\n      ];\n      tests.forEach(function(test) {\n          it('Check ' + typeof test.t, function () {\n            expect(string_utils.getPath(test.t)).to.equal(test.e);\n          });\n      });\n  });\n\n  describe('#getCamelCase', function () {\n    var tests = [\n      {i:'a',e:'A'},\n      {i:'aB',e:'Ab'},\n      {i:'a b',e:'A B'},\n      {i:'a.b',e:'A.B'},\n      {i:'a,b',e:'A,B'},\n      {i:'a;b',e:'A;B'},\n      {i:'a. b',e:'A. B'},\n      {i:'a   b',e:'A   B'},\n      {i:'aaa. bbb',e:'Aaa. Bbb'},\n      {i:'aAA. bBB',e:'Aaa. Bbb'},\n      {i:'STARTING',e:'Starting'},\n      {i:'starting',e:'Starting'},\n      {i:'starting,ending',e:'Starting,Ending'},\n      {i: null, e: null},\n      {i: undefined, e: undefined}\n    ];\n    tests.forEach(function(test) {\n      it(test.i + ' to ' + test.e + ' ', function () {\n        expect(string_utils.getCamelCase(test.i)).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#findIn', function () {\n    var tests = [\n      {\n        obj: {\n          a: '1',\n          b: '2'\n        },\n        key: 'a',\n        index: 0,\n        e: '1'\n      }, {\n        obj: {\n          a: '1',\n          b: '2'\n        },\n        key: 'a',\n        index: 1,\n        e: null\n      }, {\n        obj: {\n          a: '1',\n          b: '2',\n          c: {\n            a: '11',\n            aa: '12'\n          }\n        },\n        key: 'a',\n        index: 1,\n        e: '11'\n      }, {\n        obj: {\n          a: '1',\n          b: '2',\n          c: {\n            a: '11',\n            aa: {\n              a: '22'\n            }\n          }\n        },\n        key: 'a',\n        index: 2,\n        e: '22'\n      }, {\n        obj: {\n          a: '1',\n          b: '2',\n          c: {\n            a: '11',\n            aa: {\n              a: '22'\n            }\n          }\n        },\n        key: 'a',\n        index: 0,\n        e: '1'\n      }, {\n        obj: {\n          a: '1',\n          b: '2',\n          c: {\n            a: '11',\n            aa: {\n              a: '22'\n            }\n          }\n        },\n        key: 'g',\n        index: 0,\n        e: null\n      }\n    ];\n    tests.forEach(function(test) {\n      it(test.key + ' @ ' + test.index + ' = ' + test.e, function () {\n        expect(test.key.findIn(test.obj, test.index)).to.equal(test.e);\n      });\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar ui_utils = require('utils/ui_effects');\nvar App = require('app');\n\ndescribe('utils/ui_effects', function(){\n  describe('#pulsate()', function(){\n    beforeEach(function(){\n      $('body').append('<div id=\"pulsate-test-dom\"></div>');\n      this.clock = sinon.useFakeTimers();\n    });\n\n    it('opacity should be 0.2 on 5-th iteration', function() {\n      var domEl = $('#pulsate-test-dom');\n      ui_utils.pulsate(domEl, 1000);\n      this.clock.tick(300);\n      expect(parseFloat(domEl.css('opacity')).toFixed(1)).to.eql('0.2');\n    });\n    it('should call callback at the end', function() {\n      var domEl = $('#pulsate-test-dom');\n      var stub = sinon.stub();\n      ui_utils.pulsate(domEl, 1000, stub);\n      this.clock.tick(2000);\n      expect(stub.calledOnce).to.be.ok;\n    });\n\n    afterEach(function(){\n      $('#pulsate-test-dom').remove();\n      this.clock.restore();\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\ndescribe('utils/updater', function() {\n  describe('#App.updater', function() {\n    beforeEach(function() {\n      this.clock = sinon.useFakeTimers();\n    });\n\n    var tests = {\n      t1: {\n        obj: Em.Object.create({\n          method: sinon.spy(),\n          isWorking: true\n        }),\n        m: 'method called once with default interval in 15 000 ms'\n      },\n      t2: {\n        obj: Em.Object.create({\n          method: function() {}\n        }),\n        m: 'should return false if key name is invalid or absent'\n      },\n      t3: {\n        obj: Em.Object.create({\n          method2: sinon.spy(),\n          isWorking: true\n        }),\n        m: 'method should be called immediately'\n      },\n      t4: {\n        obj: Em.Object.create({\n          method3: sinon.spy(),\n          isWorking: true\n        }),\n        m: 'method call should be ignored if `isWorking` set to false'\n      }\n    };\n\n    it(tests.t1.m, function() {\n      App.updater.run(tests.t1.obj, 'method', 'isWorking');\n      this.clock.tick(15000);\n      expect(tests.t1.obj.method.called).to.be.ok;\n    });\n\n    it(tests.t2.m, function() {\n      var methodCall = App.updater.run(tests.t2.obj, 'method', 'isWorking');\n      expect(methodCall).to.be.false;\n    });\n\n    it(tests.t3.m, function() {\n      App.updater.run(tests.t3.obj, 'method2', 'isWorking');\n      App.updater.immediateRun('method2');\n      expect(tests.t3.obj.method2.called).to.be.ok;\n    });\n\n    it(tests.t4.m, function() {\n      App.updater.run(tests.t4.obj, 'method3', 'isWorking');\n      this.clock.tick(10000);\n      tests.t4.obj.set('isWorking', false);\n      this.clock.tick(5000);\n      expect(tests.t4.obj.method3.called).to.be.false;\n    });\n\n\n    afterEach(function() {\n      this.clock.restore();\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar validator = require('utils/validator');\n\ndescribe('validator', function () {\n\n  describe('#isValidEmail(value)', function () {\n    it('should return false if value is null', function () {\n      expect(validator.isValidEmail(null)).to.equal(false);\n    });\n    it('should return false if value is \"\"', function () {\n      expect(validator.isValidEmail('')).to.equal(false);\n    });\n    it('should return false if value is \"a.com\"', function () {\n      expect(validator.isValidEmail('a.com')).to.equal(false);\n    });\n    it('should return false if value is \"@a.com\"', function () {\n      expect(validator.isValidEmail('@a.com')).to.equal(false);\n    });\n    it('should return false if value is \"a@.com\"', function () {\n      expect(validator.isValidEmail('a@.com')).to.equal(false);\n    });\n    it('should return true if value is \"a@a.com\"', function () {\n      expect(validator.isValidEmail('a@a.com')).to.equal(true);\n    });\n    it('should return true if value is \"user@a.b.com\"', function () {\n      expect(validator.isValidEmail('user@a.b.com')).to.equal(true);\n    })\n  });\n\n  describe('#isValidInt(value)', function () {\n    it('should return false if value is null', function () {\n      expect(validator.isValidInt(null)).to.equal(false);\n    });\n    it('should return false if value is \"\"', function () {\n      expect(validator.isValidInt('')).to.equal(false);\n    });\n    it('should return false if value is \"abc\"', function () {\n      expect(validator.isValidInt('abc')).to.equal(false);\n    });\n    it('should return false if value is \"0xff\"', function () {\n      expect(validator.isValidInt('0xff')).to.equal(false);\n    });\n    it('should return false if value is \" 1\"\"', function () {\n      expect(validator.isValidInt(' 1')).to.equal(false);\n    });\n    it('should return false if value is \"1 \"', function () {\n      expect(validator.isValidInt('1 ')).to.equal(false);\n    });\n    it('should return true if value is \"10\"', function () {\n      expect(validator.isValidInt('10')).to.equal(true);\n    });\n    it('should return true if value is \"-123\"', function () {\n      expect(validator.isValidInt('-123')).to.equal(true);\n    });\n    it('should return true if value is \"0\"', function () {\n      expect(validator.isValidInt('0')).to.equal(true);\n    });\n    it('should return true if value is 10', function () {\n      expect(validator.isValidInt(10)).to.equal(true);\n    });\n    it('should return true if value is -123', function () {\n      expect(validator.isValidInt(10)).to.equal(true);\n    });\n    it('should return true if value is 0', function () {\n      expect(validator.isValidInt(10)).to.equal(true);\n    })\n  });\n\n  describe('#isValidFloat(value)', function () {\n    it('should return false if value is null', function () {\n      expect(validator.isValidFloat(null)).to.equal(false);\n    });\n    it('should return false if value is \"\"', function () {\n      expect(validator.isValidFloat('')).to.equal(false);\n    });\n    it('should return false if value is \"abc\"', function () {\n      expect(validator.isValidFloat('abc')).to.equal(false);\n    });\n    it('should return false if value is \"0xff\"', function () {\n      expect(validator.isValidFloat('0xff')).to.equal(false);\n    });\n    it('should return false if value is \" 1\"\"', function () {\n      expect(validator.isValidFloat(' 1')).to.equal(false);\n    });\n    it('should return false if value is \"1 \"', function () {\n      expect(validator.isValidFloat('1 ')).to.equal(false);\n    });\n    it('should return true if value is \"10\"', function () {\n      expect(validator.isValidFloat('10')).to.equal(true);\n    });\n    it('should return true if value is \"-123\"', function () {\n      expect(validator.isValidFloat('-123')).to.equal(true);\n    });\n    it('should return true if value is \"0\"', function () {\n      expect(validator.isValidFloat('0')).to.equal(true);\n    });\n    it('should return true if value is 10', function () {\n      expect(validator.isValidFloat(10)).to.equal(true);\n    });\n    it('should return true if value is -123', function () {\n      expect(validator.isValidFloat(10)).to.equal(true);\n    });\n    it('should return true if value is 0', function () {\n      expect(validator.isValidFloat(10)).to.equal(true);\n    });\n    it('should return true if value is \"0.0\"', function () {\n      expect(validator.isValidFloat(\"0.0\")).to.equal(true);\n    });\n    it('should return true if value is \"10.123\"', function () {\n      expect(validator.isValidFloat(\"10.123\")).to.equal(true);\n    });\n    it('should return true if value is \"-10.123\"', function () {\n      expect(validator.isValidFloat(\"-10.123\")).to.equal(true);\n    });\n    it('should return true if value is 10.123', function () {\n      expect(validator.isValidFloat(10.123)).to.equal(true);\n    });\n    it('should return true if value is -10.123', function () {\n      expect(validator.isValidFloat(-10.123)).to.equal(true);\n    })\n\n  });\n  describe('#isIpAddress(value)', function () {\n    it('\"127.0.0.1\" - valid IP', function () {\n      expect(validator.isIpAddress('127.0.0.1')).to.equal(true);\n    })\n    it('\"227.3.67.196\" - valid IP', function () {\n      expect(validator.isIpAddress('227.3.67.196')).to.equal(true);\n    })\n    it('\"327.0.0.0\" - invalid IP', function () {\n      expect(validator.isIpAddress('327.0.0.0')).to.equal(false);\n    })\n    it('\"127.0.0.\" - invalid IP', function () {\n      expect(validator.isIpAddress('127.0.0.')).to.equal(false);\n    })\n    it('\"127.0.\" - invalid IP', function () {\n      expect(validator.isIpAddress('127.0.')).to.equal(false);\n    })\n    it('\"127\" - invalid IP', function () {\n      expect(validator.isIpAddress('127')).to.equal(false);\n    })\n    it('\"127.333.0.1\" - invalid IP', function () {\n      expect(validator.isIpAddress('127.333.0.1')).to.equal(false);\n    })\n    it('\"127.0.333.1\" - invalid IP', function () {\n      expect(validator.isIpAddress('127.0.333.1')).to.equal(false);\n    })\n    it('\"127.0.1.333\" - invalid IP', function () {\n      expect(validator.isIpAddress('127.0.1.333')).to.equal(false);\n    })\n    it('\"127.0.0.0:45555\" - valid IP', function () {\n      expect(validator.isIpAddress('127.0.0.0:45555')).to.equal(true);\n    })\n    it('\"327.0.0.0:45555\" - invalid IP', function () {\n      expect(validator.isIpAddress('327.0.0.0:45555')).to.equal(false);\n    })\n  });\n\n  describe('#isDomainName(value)', function () {\n    it('\"google.com\" - valid Domain Name', function () {\n      expect(validator.isDomainName('google.com')).to.equal(true);\n    });\n    it('\"google\" - invalid Domain Name', function () {\n      expect(validator.isDomainName('google')).to.equal(false);\n    });\n    it('\"123.123\" - invalid Domain Name', function () {\n      expect(validator.isDomainName('123.123')).to.equal(false);\n    });\n    it('\"4goog.le\" - valid Domain Name', function () {\n      expect(validator.isDomainName('4goog.le')).to.equal(true);\n    });\n    it('\"55454\" - invalid Domain Name', function () {\n      expect(validator.isDomainName('55454')).to.equal(false);\n    })\n  });\n\n  describe('#hasSpaces()', function(){\n    var testable = [\n      { str: ' hello', detect: true },\n      { str: 'hello world', detect: true },\n      { str: 'hello ', detect: true },\n      { str: 'hello', detect: false }\n    ];\n    testable.forEach(function(value){\n      it('should ' + (value.detect ? '' : 'not') + ' detects spaces in `' + value.str + '`', function(){\n        expect(validator.hasSpaces(value.str)).to.eql(value.detect);\n      });\n    });\n  });\n  describe('#isNotTrimmed', function(){\n    var testable = [\n      { str: ' hello world', detect: true },\n      { str: ' hello world ', detect: true },\n      { str: 'hello world ', detect: true },\n      { str: 'hello world', detect: false },\n      { str: 'hello world !', detect: false }\n    ];\n    testable.forEach(function(value){\n      it('should ' + (value.detect ? '' : 'not') + 'trimmed string', function() {\n        expect(validator.isNotTrimmed(value.str)).to.eql(value.detect);\n      });\n    });\n  });\n  describe('#empty()', function(){\n    var testable = [\n      { obj: \"\", detect: true },\n      { obj: 0, detect: true },\n      { obj: \"0\", detect: true },\n      { obj: null, detect: true },\n      { obj: undefined, detect: true },\n      { obj: 'hello', detect: false },\n      { obj: {}, detect: false },\n      { obj: [], detect: false },\n      { obj: ['a'], detect: false },\n      { obj: 1, detect: false },\n      { obj: true, detect: false }\n    ];\n    testable.forEach(function(value){\n      it('should ' + (value.detect ? '' : 'not') + ' detect empty value in `' + new String(value.obj) + '`', function(){\n        expect(validator.empty(value.obj)).to.eql(value.detect);\n      });\n    });\n  });\n  describe('#isValidUserName(value)', function() {\n    var tests = [\n      {m:'\"\" - invalid',i:'',e:false},\n      {m:'\"abc123\" - valid',i:'abc123',e:true},\n      {m:'\"1abc123\" - invalid',i:'1abc123',e:false},\n      {m:'\"abc123$\" - invalid',i:'abc123$',e:false},\n      {m:'\"~1abc123\" - invalid',i: '~1abc123',e:false},\n      {m:'\"abc12345679abc1234567890abc1234567890$\" - invalid',i:'abc12345679abc1234567890abc1234567890$',e:false},\n      {m:'\"1abc123$$\" - invalid',i:'1abc123$$',e:false},\n      {m:'\"a\" - valid',i:'a',e:true},\n      {m:'\"!\" - invalid',i:'!',e:false},\n      {m:'\"root$\" - invalid',i:'root$',e:false},\n      {m:'\"rootU\" - invalid',i:'rootU',e:false},\n      {m:'\"rUoot\" - invalid',i:'rUoot',e:false}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(validator.isValidUserName(test.i)).to.equal(test.e);\n      })\n    });\n  });\n  describe('#isValidUNIXUser(value)', function() {\n    var tests = [\n      {m:'\"\" - invalid',i:'',e:false},\n      {m:'\"abc123\" - valid',i:'abc123',e:true},\n      {m:'\"1abc123\" - invalid',i:'1abc123',e:false},\n      {m:'\"abc123$\" - invalid',i:'abc123$',e:false},\n      {m:'\"~1abc123\" - invalid',i: '~1abc123',e:false},\n      {m:'\"abc12345679abc1234567890abc1234567890$\" - invalid',i:'abc12345679abc1234567890abc1234567890$',e:false},\n      {m:'\"1abc123$$\" - invalid',i:'1abc123$$',e:false},\n      {m:'\"a\" - valid',i:'a',e:true},\n      {m:'\"!\" - invalid',i:'!',e:false},\n      {m:'\"abc_\" - valid',i:'abc_',e:true},\n      {m:'\"_abc\" - valid',i:'_abc',e:true},\n      {m:'\"abc_abc\" - valid',i:'_abc',e:true}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(validator.isValidUNIXUser(test.i)).to.equal(test.e);\n      })\n    });\n  });\n  describe('#isValidDir(value)', function() {\n    var tests = [\n      {m:'\"dir\" - invalid',i:'dir',e:false},\n      {m:'\"/dir\" - valid',i:'/dir',e:true},\n      {m:'\"/dir1,dir2\" - invalid',i:'/dir1,dir2',e:false},\n      {m:'\"/dir1,/dir2\" - valid',i:'/dir1,/dir2',e:true},\n      {m:'\"/123\" - valid',i:'/111',e:true},\n      {m:'\"/abc\" - valid',i:'/abc',e:true},\n      {m:'\"/1a2b3c\" - valid',i:'/1a2b3c',e:true}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(validator.isValidDir(test.i)).to.equal(test.e);\n      })\n    });\n  });\n  describe('#isAllowedDir(value)', function() {\n    var tests = [\n      {m:'\"/home\" - not allowed',i:'/home',e:false},\n      {m:'\"/homes\" - not allowed',i:'/homes',e:false},\n      {m:'\"/home/\" - not allowed',i:'/home/',e:false},\n      {m:'\"/homes/\" - not allowed',i:'/homes/',e:false},\n      {m:'\"/dir\" - allowed',i:'/dir',e:true},\n      {m:'\"/dir/home\" - allowed',i:'/dir/home',e:true},\n      {m:'\"/dir/homes\" - allowed',i:'/dir/homes',e:true},\n      {m:'\"/dir/home/\" - allowed',i:'/dir/home/',e:true},\n      {m:'\"/dir/homes/\" - allowed',i:'/dir/homes/',e:true}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(validator.isAllowedDir(test.i)).to.equal(test.e);\n      })\n    });\n  });\n  describe('#isValidConfigKey(value)', function() {\n    var tests = [\n      {m:'\"123\" - valid',i:'123',e:true},\n      {m:'\"abc\" - valid',i:'abc',e:true},\n      {m:'\"abc123\" - valid',i:'abc123',e:true},\n      {m:'\".abc.\" - valid',i:'.abc.',e:true},\n      {m:'\"_abc_\" - valid',i:'_abc_',e:true},\n      {m:'\"-abc-\" - valid',i:'-abc-',e:true},\n      {m:'\"abc 123\" - invalid',i:'abc 123',e:false},\n      {m:'\"a\"b\" - invalid',i:'a\"b',e:false},\n      {m:'\"a\\'b\" - invalid',i:'a\\'b',e:false}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(validator.isValidConfigKey(test.i)).to.equal(test.e);\n      })\n    });\n  });\n\n  describe('#isValidMatchesRegexp()', function() {\n    var message = '`{0}` should be {1}',\n        tests = [\n          { value: '.*', expected: true },\n          { value: '..', expected: true },\n          { value: '.a1', expected: true },\n          { value: '.*a1', expected: true },\n          { value: '.*a1.*', expected: true },\n          { value: '.*a1.a2', expected: true },\n          { value: '.*a1.*.a2', expected: true },\n          { value: '.*a1.*.a2.*.a3.a4.*.*', expected: true },\n          { value: '*', expected: false },\n          { value: '1>1', expected: false },\n          { value: '.*a1,*', expected: false },\n          { value: '?a1[1]asd[1]', expected: false },\n          { value: 'a1[1]asd[1]', expected: true },\n          { value: 'a1[1]asd[1][', expected: false },\n          { value: 'a1[1|1]asd[1]', expected: true },\n          { value: 'a1-2!', expected: true },\n          { value: '|a1-2', expected: false },\n          { value: '[a1', expected: false },\n          { value: 'a{1}', expected: true },\n          { value: 'a{1,2}', expected: true },\n          { value: 'a{1,2}{', expected: false }\n        ];\n    tests.forEach(function(test) {\n      it(message.format(test.value, (test.expected) ? 'valid' : 'not valid'), function() {\n        expect(validator.isValidMatchesRegexp(test.value)).to.equal(test.expected);\n      })\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/application');\n\nvar view,\n  modals = [],\n  removed = false,\n  events = [\n    {\n      event: 'keydown',\n      which: 13,\n      key: 'Enter',\n      html: '<div id=\"modal\"><div class=\"modal-footer\"><span class=\"btn-success\"></span></div></div>',\n      particle: '',\n      length: 0\n    },\n    {\n      event: 'keydown',\n      keyCode: 13,\n      key: 'Enter',\n      html: '<div id=\"modal\"><div class=\"modal-footer\"><span class=\"btn-success\"></span></div></div>',\n      particle: '',\n      length: 0\n    },\n    {\n      event: 'keyup',\n      which: 27,\n      key: 'Esc',\n      html: '<div id=\"modal\"><div class=\"modal-header\"><span class=\"close\"></span></div></div>',\n      particle: '',\n      length: 0\n    },\n    {\n      event: 'keyup',\n      keyCode: 27,\n      key: 'Esc',\n      html: '<div id=\"modal\"><div class=\"modal-header\"><span class=\"close\"></span></div></div>',\n      particle: '',\n      length: 0\n    },\n    {\n      event: 'keydown',\n      which: 13,\n      key: 'Enter',\n      html: '<div id=\"modal\"><div class=\"modal-footer\"><span></span></div></div>',\n      particle: 'not ',\n      length: 1\n    },\n    {\n      event: 'keydown',\n      keyCode: 13,\n      key: 'Enter',\n      html: '<div id=\"modal\"><div class=\"modal-footer\"><span></span></div></div>',\n      particle: 'not ',\n      length: 1\n    },\n    {\n      event: 'keyup',\n      which: 27,\n      key: 'Esc',\n      html: '<div id=\"modal\"><div class=\"modal-header\"><span></span></div></div>',\n      particle: 'not ',\n      length: 1\n    },\n    {\n      event: 'keyup',\n      keyCode: 27,\n      key: 'Esc',\n      html: '<div id=\"modal\"><div class=\"modal-header\"><span></span></div></div>',\n      particle: 'not ',\n      length: 1\n    },\n    {\n      event: 'keydown',\n      which: 13,\n      key: 'Enter',\n      html: '<div id=\"modal\"><div class=\"modal-footer\"><span class=\"btn-success\" disabled=\"disabled\"></span></div></div>',\n      particle: 'not ',\n      length: 1\n    },\n    {\n      event: 'keydown',\n      keyCode: 13,\n      key: 'Enter',\n      html: '<div id=\"modal\"><div class=\"modal-footer\"><span class=\"btn-success\" disabled=\"disabled\"></span></div></div>',\n      particle: 'not ',\n      length: 1\n    },\n    {\n      event: 'keydown',\n      key: 'Enter',\n      html: '<div id=\"modal\"><div class=\"modal-footer\"><span class=\"btn-success\"></span></div></div>',\n      particle: 'not ',\n      length: 1\n    },\n    {\n      event: 'keyup',\n      key: 'Esc',\n      html: '<div id=\"modal\"><div class=\"modal-footer\"><span class=\"close\"></span></div></div>',\n      particle: 'not ',\n      length: 1\n    }\n  ];\n\ndescribe('App.ApplicationView', function () {\n\n  before(function () {\n    if($('#modal').length) {\n      removed = true;\n    }\n    while($('#modal').length) {\n      modals.push({\n        modal: $('#modal'),\n        parent: $('modal').parent()\n      });\n      $('#modal').remove();\n    }\n  });\n\n  beforeEach(function () {\n    view = App.ApplicationView.create({\n      template: null\n    });\n  });\n\n  afterEach(function () {\n    $('#modal').remove();\n  });\n\n  after(function () {\n    if (removed) {\n      modals.forEach(function (item) {\n        item.parent.append(item.modal);\n      });\n    }\n  });\n\n  describe('#didInsertElement', function () {\n    events.forEach(function (item) {\n      it('should ' + item.particle + 'close modal window on ' + item.key + ' press', function () {\n        $('body').append(item.html);\n        $('span').click(function () {\n          $('#modal').remove();\n        });\n        view.didInsertElement();\n        var e = $.Event(item.event);\n        e.which = item.which;\n        e.keyCode = item.keyCode;\n        $(document).trigger(e);\n        expect($('#modal')).to.have.length(item.length);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/common/chart/linear_time');\n\ndescribe('App.ChartLinearTimeView', function () {\n\n  var chartLinearTimeView = App.ChartLinearTimeView.create({});\n\n  describe('#transformData ([[1, 2], [2, 3], [3, 4]], \"abc\")', function () {\n\n    var data = [[1, 2], [2, 3], [3, 4]];\n    var name = 'abc';\n    var result = chartLinearTimeView.transformData(data, name);\n    it('\"name\" should be \"abc\" ', function () {\n      expect(result.name).to.equal('abc');\n    });\n    it('data size should be 3 ', function () {\n      expect(result.data.length).to.equal(3);\n    });\n    it('data[0].x should be 2 ', function () {\n      expect(result.data[0].x).to.equal(2);\n    });\n    it('data[0].y should be 1 ', function () {\n      expect(result.data[0].y).to.equal(1);\n    })\n  }),\n  describe('#yAxisFormatter', function() {\n    var tests = [\n      {m:'undefined to 0',i:undefined,e:0},\n      {m:'NaN to 0',i:NaN,e:0},\n      {m:'0 to 0',i:'0',e:'0'},\n      {m:'1000 to 1K',i:'1000',e:'1K'},\n      {m:'1000000 to 1M',i:'1000000',e:'1M'},\n      {m:'1000000000 to 1B',i:'1000000000',e:'1B'},\n      {m:'1000000000000 to 1T',i:'1000000000000',e:'1T'},\n      {m:'1048576 to 1.049M',i:'1048576',e:'1.049M'},\n      {m:'1073741824 to 1.074B',i:'1073741824',e:'1.074B'}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(chartLinearTimeView.yAxisFormatter(test.i)).to.equal(test.e);\n      });\n    });\n  }),\n  describe('#checkSeries', function() {\n    var tests = [\n      {m:'undefined - false',i:undefined,e:false},\n      {m:'NaN - false',i:NaN,e:false},\n      {m:'object without data property - false',i:[{}],e:false},\n      {m:'object with empty data property - false',i:[{data:[]}],e:false},\n      {m:'object with invalid data property - false',i:[{data:[1]}],e:false},\n      {m:'object with valid data property - true',i:[{data:[{x:1,y:1},{x:2,y:2}]}],e:true}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(chartLinearTimeView.checkSeries(test.i)).to.equal(test.e);\n      });\n    });\n  }),\n  describe('#BytesFormatter', function() {\n    var tests = [\n      {m:'undefined to \"0 B\"',i:undefined,e:'0 B'},\n      {m:'NaN to \"0 B\"',i:NaN,e:'0 B'},\n      {m:'0 to \"0 B\"',i:0,e:'0 B'},\n      {m:'124 to \"124 B\"',i:124,e:'124 B'},\n      {m:'1024 to \"1 KB\"',i:1024,e:'1 KB'},\n      {m:'1536 to \"1 KB\"',i:1536,e:'1.5 KB'},\n      {m:'1048576 to \"1 MB\"',i:1048576,e:'1 MB'},\n      {m:'1073741824 to \"1 GB\"',i:1073741824,e:'1 GB'},\n      {m:'1610612736 to \"1.5 GB\"',i:1610612736,e:'1.5 GB'}\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n\n        expect(App.ChartLinearTimeView.BytesFormatter(test.i)).to.equal(test.e);\n      });\n    });\n  }),\n  describe('#PercentageFormatter', function() {\n    var tests = [\n      {m:'undefined to \"0 %\"',i:undefined,e:'0 %'},\n      {m:'NaN to \"0 %\"',i:NaN,e:'0 %'},\n      {m:'0 to \"0 %\"',i:0,e:'0 %'},\n      {m:'1 to \"1%\"',i:1,e:'1%'},\n      {m:'1.12341234 to \"1.123%\"',i:1.12341234,e:'1.123%'},\n      {m:'-11 to \"-11%\"',i:-11,e:'-11%'},\n      {m:'-11.12341234 to \"-11.123%\"',i:-11.12341234,e:'-11.123%'}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(App.ChartLinearTimeView.PercentageFormatter(test.i)).to.equal(test.e);\n      });\n    });\n  });\n  describe('#TimeElapsedFormatter', function() {\n    var tests = [\n      {m:'undefined to \"0 ms\"',i:undefined,e:'0 ms'},\n      {m:'NaN to \"0 ms\"',i:NaN,e:'0 ms'},\n      {m:'0 to \"0 ms\"',i:0,e:'0 ms'},\n      {m:'1000 to \"1000 ms\"',i:1000,e:'1000 ms'},\n      {m:'120000 to \"2 m\"',i:120000,e:'2 m'},\n      {m:'3600000 to \"60 m\"',i:3600000,e:'60 m'},\n      {m:'5000000 to \"1 hr\"',i:5000000,e:'1 hr'},\n      {m:'7200000 to \"2 hr\"',i:7200000,e:'2 hr'},\n      {m:'90000000 to \"1 d\"',i:90000000,e:'1 d'}\n    ];\n    tests.forEach(function(test) {\n      it(test.m + ' ', function () {\n        expect(App.ChartLinearTimeView.TimeElapsedFormatter(test.i)).to.equal(test.e);\n      });\n    });\n  })\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/common/chart/pie');\nrequire('views/common/configs/services_config');\n\n\ndescribe('App.ServiceConfigView', function () {\n  var controller = App.WizardStep7Controller.create({\n    selectedServiceObserver: function(){},\n    switchConfigGroupConfigs: function(){}\n  });\n  var view = App.ServiceConfigView.create({\n    controller: controller\n  });\n  var testCases = [\n    {\n      title: 'selectedConfigGroup is null',\n      result: {\n        'category1': false,\n        'category2': true,\n        'category3': false\n      },\n      selectedConfigGroup: null,\n      selectedService: {\n        serviceName: 'TEST',\n        configCategories: [\n          App.ServiceConfigCategory.create({ name: 'category1', canAddProperty: false}),\n          App.ServiceConfigCategory.create({ name: 'category2', siteFileName: 'xml', canAddProperty: true}),\n          App.ServiceConfigCategory.create({ name: 'category3', siteFileName: 'xml', canAddProperty: false})\n        ]\n      }\n    },\n    {\n      title: 'selectedConfigGroup is default group',\n      result: {\n        'category1': true,\n        'category2': true,\n        'category3': false\n      },\n      selectedConfigGroup: {isDefault: true},\n      selectedService: {\n        serviceName: 'TEST',\n        configCategories: [\n          App.ServiceConfigCategory.create({ name: 'category1', canAddProperty: true}),\n          App.ServiceConfigCategory.create({ name: 'category2', siteFileName: 'xml', canAddProperty: true}),\n          App.ServiceConfigCategory.create({ name: 'category3', siteFileName: 'xml', canAddProperty: false})\n        ]\n      }\n    },\n    {\n      title: 'selectedConfigGroup is not default group',\n      result: {\n        'category1': false,\n        'category2': false\n      },\n      selectedConfigGroup: {},\n      selectedService: {\n        serviceName: 'TEST',\n        configCategories: [\n          App.ServiceConfigCategory.create({ name: 'category1', siteFileName: 'xml', canAddProperty: true}),\n          App.ServiceConfigCategory.create({ name: 'category2', siteFileName: 'xml', canAddProperty: false})\n        ]\n      }\n    }\n  ];\n  describe('#checkCanEdit', function () {\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        controller.set('selectedService', test.selectedService);\n        controller.set('selectedConfigGroup', test.selectedConfigGroup);\n        view.checkCanEdit();\n        controller.get('selectedService.configCategories').forEach(function (category) {\n          expect(category.get('canAddProperty')).to.equal(test.result[category.get('name')]);\n        });\n      });\n    });\n  });\n});\n\ndescribe('App.ServiceConfigsByCategoryView', function () {\n\n  var view = App.ServiceConfigsByCategoryView.create({\n    serviceConfigs: []\n  });\n\n  var result = [1, 2, 3, 4];\n\n  var testData = [\n    {\n      title: 'four configs in correct order',\n      configs: [\n        Em.Object.create({index: 1, resultId: 1}),\n        Em.Object.create({index: 2, resultId: 2}),\n        Em.Object.create({index: 3, resultId: 3}),\n        Em.Object.create({index: 4, resultId: 4})\n      ]\n    },\n    {\n      title: 'four configs in reverse order',\n      configs: [\n        Em.Object.create({index: 4, resultId: 4}),\n        Em.Object.create({index: 3, resultId: 3}),\n        Em.Object.create({index: 2, resultId: 2}),\n        Em.Object.create({index: 1, resultId: 1})\n      ]\n    },\n    {\n      title: 'four configs in random order',\n      configs: [\n        Em.Object.create({index: 3, resultId: 3}),\n        Em.Object.create({index: 4, resultId: 4}),\n        Em.Object.create({index: 1, resultId: 1}),\n        Em.Object.create({index: 2, resultId: 2})\n      ]\n    },\n    {\n      title: 'four configs with no index',\n      configs: [\n        Em.Object.create({resultId: 1}),\n        Em.Object.create({resultId: 2}),\n        Em.Object.create({resultId: 3}),\n        Em.Object.create({resultId: 4})\n      ]\n    },\n    {\n      title: 'four configs but one with index',\n      configs: [\n        Em.Object.create({resultId: 2}),\n        Em.Object.create({resultId: 3}),\n        Em.Object.create({resultId: 4}),\n        Em.Object.create({index: 1, resultId: 1})\n      ]\n    },\n    {\n      title: 'index is null or not number',\n      configs: [\n        Em.Object.create({index: null, resultId: 3}),\n        Em.Object.create({index: 1, resultId: 1}),\n        Em.Object.create({index: 2, resultId: 2}),\n        Em.Object.create({index: 'a', resultId: 4})\n      ]\n    },\n    {\n      title: 'four configs when indexes skipped',\n      configs: [\n        Em.Object.create({index: 88, resultId: 3}),\n        Em.Object.create({index: 67, resultId: 2}),\n        Em.Object.create({index: 111, resultId: 4}),\n        Em.Object.create({index: 3, resultId: 1})\n      ]\n    }\n  ];\n\n  describe('#sortByIndex', function () {\n    testData.forEach(function(_test){\n      it(_test.title, function () {\n        expect(view.sortByIndex(_test.configs).mapProperty('resultId')).to.deep.equal(result);\n      })\n    })\n  });\n\n  describe('#updateReadOnlyFlags', function () {\n    it('if canEdit is true then isEditable flag of configs shouldn\\'t be changed', function () {\n      view.set('canEdit', true);\n      view.set('serviceConfigs', [\n        Em.Object.create({\n          name: 'config1',\n          isEditable: true\n        }),\n        Em.Object.create({\n          name: 'config2',\n          isEditable: false\n        })\n      ]);\n      view.updateReadOnlyFlags();\n      expect(view.get('serviceConfigs').findProperty('name', 'config1').get('isEditable')).to.equal(true);\n      expect(view.get('serviceConfigs').findProperty('name', 'config2').get('isEditable')).to.equal(false);\n    });\n    it('if canEdit is false then configs shouldn\\'t be editable', function () {\n      view.set('canEdit', false);\n      view.set('serviceConfigs', [\n        Em.Object.create({\n          name: 'config1',\n          isEditable: true\n        }),\n        Em.Object.create({\n          name: 'config2',\n          isEditable: false\n        })\n      ]);\n      view.updateReadOnlyFlags();\n      expect(view.get('serviceConfigs').findProperty('name', 'config1').get('isEditable')).to.equal(false);\n      expect(view.get('serviceConfigs').findProperty('name', 'config2').get('isEditable')).to.equal(false);\n    });\n    it('if canEdit is false then config overrides shouldn\\'t be editable', function () {\n      view.set('canEdit', false);\n      view.set('serviceConfigs', [\n        Em.Object.create({\n          name: 'config',\n          isEditable: true,\n          overrides: [\n            Em.Object.create({\n              name: 'override1',\n              isEditable: true\n            }),\n            Em.Object.create({\n              name: 'override2',\n              isEditable: false\n            })\n          ]\n        })\n      ]);\n      view.updateReadOnlyFlags();\n      var overrides = view.get('serviceConfigs').findProperty('name', 'config').get('overrides');\n      expect(overrides.findProperty('name', 'override1').get('isEditable')).to.equal(false);\n      expect(overrides.findProperty('name', 'override2').get('isEditable')).to.equal(false);\n    });\n    it('if canEdit is true then isEditable flag of overrides shouldn\\'t be changed', function () {\n      view.set('canEdit', true);\n      view.set('serviceConfigs', [\n        Em.Object.create({\n          name: 'config',\n          isEditable: true,\n          overrides: [\n            Em.Object.create({\n              name: 'override1',\n              isEditable: true\n            }),\n            Em.Object.create({\n              name: 'override2',\n              isEditable: false\n            })\n          ]\n        })\n      ]);\n      view.updateReadOnlyFlags();\n      var overrides = view.get('serviceConfigs').findProperty('name', 'config').get('overrides');\n      expect(overrides.findProperty('name', 'override1').get('isEditable')).to.equal(true);\n      expect(overrides.findProperty('name', 'override2').get('isEditable')).to.equal(false);\n    })\n  })\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nvar filters = require('views/common/filter_view');\n\ndescribe('filters.getFilterByType', function () {\n\n\n  describe('ambari-bandwidth', function () {\n\n    var filter = filters.getFilterByType('ambari-bandwidth');\n    var testData = [\n      {\n        condition: '<',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '=',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '>',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '1',\n        value: '1GB',\n        result: true\n      },\n      {\n        condition: '1g',\n        value: '1GB',\n        result: true\n      },\n      {\n        condition: '=1g',\n        value: '1GB',\n        result: true\n      },\n      {\n        condition: '<1g',\n        value: '0.9GB',\n        result: true\n      },\n      {\n        condition: '>1g',\n        value: '1.1GB',\n        result: true\n      },\n      {\n        condition: '=1k',\n        value: '1KB',\n        result: true\n      },\n      {\n        condition: '<1k',\n        value: '0.9KB',\n        result: true\n      },\n      {\n        condition: '>1k',\n        value: '1.1KB',\n        result: true\n      },\n      {\n        condition: '=1m',\n        value: '1MB',\n        result: true\n      },\n      {\n        condition: '<1m',\n        value: '0.9MB',\n        result: true\n      },\n      {\n        condition: '>1m',\n        value: '1.1MB',\n        result: true\n      },\n      {\n        condition: '=1024k',\n        value: '1MB',\n        result: true\n      },\n      {\n        condition: '=1024m',\n        value: '1GB',\n        result: true\n      }\n    ];\n\n    testData.forEach(function(item){\n      it('Condition: ' + item.condition + ' - match value: ' + item.value, function () {\n        expect(filter(item.value, item.condition)).to.equal(item.result);\n      })\n    });\n  });\n\n  describe('duration', function () {\n\n    var filter = filters.getFilterByType('duration');\n    var testData = [\n      {\n        condition: '<',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '=',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '>',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '1',\n        value: '1000',\n        result: true\n      },\n      {\n        condition: '1s',\n        value: '1000',\n        result: true\n      },\n      {\n        condition: '=1s',\n        value: '1000',\n        result: true\n      },\n      {\n        condition: '>1s',\n        value: '1001',\n        result: true\n      },\n      {\n        condition: '<1s',\n        value: '999',\n        result: true\n      },\n      {\n        condition: '=1m',\n        value: '60000',\n        result: true\n      },\n      {\n        condition: '>1m',\n        value: '60001',\n        result: true\n      },\n      {\n        condition: '<1m',\n        value: '59999',\n        result: true\n      },\n      {\n        condition: '=1h',\n        value: '3600000',\n        result: true\n      },\n      {\n        condition: '>1h',\n        value: '3600001',\n        result: true\n      },\n      {\n        condition: '<1h',\n        value: '3599999',\n        result: true\n      }\n\n    ];\n\n    testData.forEach(function(item){\n      it('Condition: ' + item.condition + ' - match value: ' + item.value, function () {\n        expect(filter(item.value, item.condition)).to.equal(item.result);\n      })\n    });\n  });\n\n  describe('date', function () {\n\n    var filter = filters.getFilterByType('date');\n    var currentTime = new Date().getTime();\n    var testData = [\n      {\n        condition: 'Past 1 Day',\n        value: currentTime - 86300000,\n        result: true\n      },\n      {\n        condition: 'Past 2 Days',\n        value: currentTime - 172700000,\n        result: true\n      },\n      {\n        condition: 'Past 7 Days',\n        value: currentTime - 604700000,\n        result: true\n      },\n      {\n        condition: 'Past 14 Days',\n        value: currentTime - 1209500000,\n        result: true\n      },\n      {\n        condition: 'Past 30 Days',\n        value: currentTime - 2591900000,\n        result: true\n      },\n      {\n        condition: 'Any',\n        value: 'any value',\n        result: true\n      }\n    ];\n\n    testData.forEach(function(item){\n      it('Condition: ' + item.condition + ' - match value: ' + item.value, function () {\n        expect(filter(item.value, item.condition)).to.equal(item.result);\n      })\n    });\n  });\n\n  describe('number', function () {\n\n    var filter = filters.getFilterByType('number');\n    var testData = [\n      {\n        condition: '<',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '=',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '>',\n        value: 'any value',\n        result: true\n      },\n      {\n        condition: '1',\n        value: '1',\n        result: true\n      },\n      {\n        condition: '=1',\n        value: '1',\n        result: true\n      },\n      {\n        condition: '<1',\n        value: '0',\n        result: true\n      },\n      {\n        condition: '>1',\n        value: '2',\n        result: true\n      }\n    ];\n\n    testData.forEach(function(item){\n      it('Condition: ' + item.condition + ' - match value: ' + item.value, function () {\n        expect(filter(item.value, item.condition)).to.equal(item.result);\n      })\n    });\n  });\n\n  describe('multiple', function () {\n\n    var filter = filters.getFilterByType('multiple');\n    var commonValue = [\n      {componentName: 'DATANODE'},\n      {componentName: 'NAMENODE'},\n      {componentName: 'JOBTRACKER'}\n    ];\n    var testData = [\n      {\n        condition: 'DATANODE',\n        value: commonValue,\n        result: true\n      },\n      {\n        condition: 'DATANODE,NAMENODE',\n        value: commonValue,\n        result: true\n      },\n      {\n        condition: 'DATANODE,NAMENODE,JOBTRACKER',\n        value: commonValue,\n        result: true\n      },\n      {\n        condition: 'JOBTRACKER,TASKTRACKER',\n        value: commonValue,\n        result: true\n      },\n      {\n        condition: 'TASKTRACKER',\n        value: commonValue,\n        result: false\n      }\n    ];\n\n    testData.forEach(function(item){\n      it('Condition: ' + item.condition + ((item.result) ? ' - match ' : ' - doesn\\'t match ' + 'value: ') +\n        item.value.mapProperty('componentName').join(\" \"), function () {\n        expect(filter(item.value, item.condition)).to.equal(item.result);\n      })\n    });\n  });\n\n  describe('string', function () {\n\n    var filter = filters.getFilterByType('string');\n\n    var testData = [\n      {\n        condition: '',\n        value: '',\n        result: true\n      },\n      {\n        condition: '',\n        value: 'hello',\n        result: true\n      },\n      {\n        condition: 'hello',\n        value: 'hello',\n        result: true\n      },\n      {\n        condition: 'HeLLo',\n        value: 'hello',\n        result: true\n      },\n      {\n        condition: 'he',\n        value: 'hello',\n        result: true\n      },\n      {\n        condition: 'lo',\n        value: 'hello',\n        result: true\n      },\n      {\n        condition: 'lol',\n        value: 'hello',\n        result: false\n      },\n      {\n        condition: 'hello',\n        value: '',\n        result: false\n      }\n    ];\n\n    testData.forEach(function(item){\n      it('Condition: ' + item.condition + ((item.result) ? ' - match ' : ' - doesn\\'t match ' + 'value: ') + item.value, function () {\n        expect(filter(item.value, item.condition)).to.equal(item.result);\n      })\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/common/quick_view_link_view');\n\ndescribe('App.QuickViewLinks', function () {\n\n  var quickViewLinks = App.QuickViewLinks.create({});\n\n  describe('#setPort', function () {\n    var testData = [\n      Em.Object.create({\n        'service_id': 'YARN',\n        'protocol': 'http',\n        'result': '8088',\n        'default_http_port': '8088',\n        'default_https_port': '8090',\n        'regex': '\\\\w*:(\\\\d+)'\n      }),\n      Em.Object.create({\n        'service_id': 'YARN',\n        'protocol': 'https',\n        'https_config': 'https_config',\n        'result': '8090',\n        'default_http_port': '8088',\n        'default_https_port': '8090',\n        'regex': '\\\\w*:(\\\\d+)'\n      }),\n      Em.Object.create({\n        'service_id': 'YARN',\n        'protocol': 'https',\n        'https_config': 'https_config',\n        'result': '8090',\n        'default_http_port': '8088',\n        'default_https_port': '8090',\n        'regex': '\\\\w*:(\\\\d+)'\n      })\n    ];\n\n    testData.forEach(function(item) {\n      it(item.service_id + ' ' + item.protocol, function () {\n        expect(quickViewLinks.setPort(item, item.protocol, item.version)).to.equal(item.result);\n      })\n    },this);\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/common/rolling_restart_view');\n\ndescribe('App.RollingRestartView', function () {\n\n  var view = App.RollingRestartView.create({\n    restartHostComponents: []\n  });\n\n  describe('#initialize', function () {\n    var testCases = [\n      {\n        restartHostComponents: [],\n        result: {\n          batchSize: 1,\n          tolerateSize: 1\n        }\n      },\n      {\n        restartHostComponents: new Array(10),\n        result: {\n          batchSize: 1,\n          tolerateSize: 1\n        }\n      },\n      {\n        restartHostComponents: new Array(11),\n        result: {\n          batchSize: 2,\n          tolerateSize: 2\n        }\n      },\n      {\n        restartHostComponents: new Array(20),\n        result: {\n          batchSize: 2,\n          tolerateSize: 2\n        }\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it(test.restartHostComponents.length + ' components to restart', function () {\n        view.set('batchSize', -1);\n        view.set('interBatchWaitTimeSeconds', -1);\n        view.set('tolerateSize', -1);\n        view.set('restartHostComponents', test.restartHostComponents);\n        view.initialize();\n        expect(view.get('batchSize')).to.equal(test.result.batchSize);\n        expect(view.get('tolerateSize')).to.equal(test.result.tolerateSize);\n      })\n    }, this);\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('utils/db');\nrequire('views/common/filter_view');\nrequire('views/common/sort_view');\nrequire('mixins');\nrequire('mixins/common/userPref');\nrequire('views/common/table_view');\n\ndescribe('App.TableView', function () {\n\n  var view;\n\n  beforeEach(function() {\n    App.db.cleanUp();\n  });\n\n  afterEach(function() {\n    App.db.cleanUp();\n  });\n\n  describe('#updatePaging', function() {\n\n    beforeEach(function() {\n      view = App.TableView.create(App.UserPref, {\n        controller: Em.Object.create({}),\n        displayLength: 10,\n        startIndex: 1,\n        content: d3.range(1, 100),\n        filteredContent: d3.range(1, 100),\n        filtersUsedCalc: function() {},\n        filter: function() {}\n      });\n      view.clearFilters();\n      view.updateFilter();\n    });\n\n    it('should set \"startIndex\" to 0 if \"filteredContent\" is empty', function() {\n      view.set('filteredContent', []);\n      expect(view.get('startIndex')).to.equal(0);\n    });\n\n    it('should set \"startIndex\" to 1 if \"filteredContent\" is not empty', function() {\n      view.set('filteredContent', d3.range(1, 10));\n      expect(view.get('startIndex')).to.equal(1);\n    });\n\n  });\n\n  describe('#endIndex', function() {\n\n    beforeEach(function() {\n      view = App.TableView.create(App.UserPref, {\n        controller: Em.Object.create({}),\n        displayLength: 10,\n        startIndex: 1,\n        content: d3.range(1, 100),\n        filteredContent: d3.range(1, 100),\n        filtersUsedCalc: function() {},\n        filter: function() {}\n      });\n      view.clearFilters();\n      view.updateFilter();\n    });\n\n    it('should be recalculated if \"startIndex\" was changed', function() {\n      view.set('startIndex', 2);\n      expect(view.get('endIndex')).to.equal(11);\n    });\n\n    it('should be recalculated if \"displayLength\" was changed', function() {\n      view.set('displayLength', 5);\n      expect(view.get('endIndex')).to.equal(5);\n    });\n\n    it('should be recalculated (but not changed) if \"filteredContent\" was changed (and \"filterContent.length\" is more than \"startIndex + displayLength\")', function() {\n      var endIndexBefore = view.get('endIndex');\n      view.set('filteredContent', d3.range(2,100));\n      expect(view.get('endIndex')).to.equal(endIndexBefore);\n    });\n\n    it('should be recalculated (and changed) if \"filteredContent\" was changed (and \"filterContent.length\" is less than \"startIndex + displayLength\")', function() {\n      var endIndexBefore = view.get('endIndex');\n      var indx = 4;\n      view.set('filteredContent', d3.range(1,indx));\n      expect(view.get('endIndex')).to.not.equal(endIndexBefore);\n      expect(view.get('endIndex')).to.equal(indx - 1);\n    });\n\n  });\n\n  describe('#pageContent', function() {\n\n    beforeEach(function() {\n      view = App.TableView.create(App.UserPref, {\n        controller: Em.Object.create({}),\n        displayLength: 10,\n        startIndex: 1,\n        content: d3.range(1, 100),\n        filteredContent: d3.range(1, 100),\n        endIndex: 10,\n        filtersUsedCalc: function() {},\n        filter: function() {}\n      });\n      view.clearFilters();\n      view.updateFilter();\n    });\n\n    it('should be recalculated if \"startIndex\" was changed', function() {\n      view.set('startIndex', 2);\n      expect(view.get('pageContent').length).to.equal(9);\n    });\n\n    it('should be recalculated if \"endIndex\" was changed', function() {\n      view.set('endIndex', 5);\n      expect(view.get('pageContent').length).to.equal(5);\n    });\n\n    it('should be recalculated if \"filteredContent\" was changed', function() {\n      var pageContentBefore = view.get('pageContent');\n      view.set('filteredContent', d3.range(2,100));\n      expect(view.get('pageContent').length).to.equal(pageContentBefore.length);\n      expect(view.get('pageContent')).to.not.eql(pageContentBefore);\n    });\n\n  });\n\n  describe('#clearFilters', function() {\n\n    it('should set \"filterConditions\" to empty array', function() {\n      view.clearFilters();\n      expect(view.get('filterConditions')).to.eql([]);\n    });\n\n  });\n\n  describe('#filtersUsedCalc', function() {\n\n    beforeEach(function() {\n      view = App.TableView.create(App.UserPref, {\n        controller: Em.Object.create({}),\n        displayLength: 10,\n        startIndex: 1,\n        content: d3.range(1, 100),\n        filteredContent: d3.range(1, 100),\n        endIndex: 10,\n        filter: function() {}\n      });\n    });\n\n    it('should set \"filtersUsed\" to false if \"filterConditions\" is empty array', function() {\n      view.set('filterConditions', []);\n      view.filtersUsedCalc();\n      expect(view.get('filtersUsed')).to.equal(false);\n    });\n\n    it('should set \"filtersUsed\" to false if each value in \"filterConditions\" is empty', function() {\n      view.set('filterConditions', [{value:''}, {value:''}]);\n      view.filtersUsedCalc();\n      expect(view.get('filtersUsed')).to.equal(false);\n    });\n\n    it('should set \"filtersUsed\" to true if one or more values in \"filterConditions\" are not empty', function() {\n      view.set('filterConditions', [{value:''}, {value:'lol'}]);\n      view.filtersUsedCalc();\n      expect(view.get('filtersUsed')).to.equal(true);\n    });\n\n  });\n\n  describe('#nextPage', function() {\n\n    beforeEach(function() {\n      view = App.TableView.create(App.UserPref, {\n        controller: Em.Object.create({}),\n        displayLength: 10,\n        startIndex: 1,\n        content: d3.range(1, 100),\n        filteredContent: d3.range(1, 100),\n        endIndex: 10,\n        filter: function() {}\n      });\n    });\n\n    it('should set \"startIndex\" if \"filteredContent.length is greater than \"startIndex\" + \"displayLength\"', function() {\n      var oldStartIndex = view.get('startIndex');\n      var displayLength = 50;\n      view.set('displayLength', displayLength);\n      view.nextPage();\n      expect(view.get('startIndex')).to.equal(oldStartIndex + displayLength);\n    });\n\n    it('should not set \"startIndex\" if \"filteredContent.length is equal to \"startIndex\" + \"displayLength\"', function() {\n      var oldStartIndex = view.get('startIndex');\n      var displayLength = 99;\n      view.set('displayLength', displayLength);\n      view.nextPage();\n      expect(view.get('startIndex')).to.equal(oldStartIndex);\n    });\n\n    it('should not set \"startIndex\" if \"filteredContent.length is less than \"startIndex\" + \"displayLength\"', function() {\n      var oldStartIndex = view.get('startIndex');\n      var displayLength = 100;\n      view.set('displayLength', displayLength);\n      view.nextPage();\n      expect(view.get('startIndex')).to.equal(oldStartIndex);\n    });\n\n  });\n\n  describe('#previousPage', function() {\n\n    beforeEach(function() {\n      view = App.TableView.create(App.UserPref, {\n        controller: Em.Object.create({}),\n        displayLength: 10,\n        startIndex: 50,\n        content: d3.range(1, 100),\n        filteredContent: d3.range(1, 100),\n        endIndex: 60,\n        filter: function() {}\n      });\n    });\n\n    it('should set \"startIndex\" to 1', function() {\n      var displayLength = 50;\n      view.set('displayLength', displayLength);\n      view.previousPage();\n      expect(view.get('startIndex')).to.equal(1);\n    });\n\n    it('should not set \"startIndex\" to 40', function() {\n      view.set('startIndex', 50);\n      var displayLength = 10;\n      view.set('displayLength', displayLength);\n      view.previousPage();\n      expect(view.get('startIndex')).to.equal(40);\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/experimental');\n\nvar view,\n  transition,\n  supports = {},\n  transitionStubbed = false,\n  viewSupports = [\n    Em.Object.create({\n      name: 'sup0',\n      selected: true\n    }),\n    Em.Object.create({\n      name: 'sup1',\n      selected: false\n    })\n  ],\n  saveObject = {};\n\ndescribe('App.ExperimentalView', function () {\n\n  before(function () {\n    viewSupports.forEach(function(item) {\n      supports[item.get('name')] = item.get('selected');\n    });\n    sinon.stub(App, 'get', function(k) {\n      if (k === 'supports') return supports;\n      return Em.get(App, k);\n    });\n  });\n\n  beforeEach(function () {\n    view = App.ExperimentalView.create();\n  });\n\n  after(function () {\n    App.get.restore();\n  });\n\n  describe('#supports', function () {\n    it('should take data from App.supports', function () {\n      expect(view.get('supports')).to.eql(viewSupports);\n    });\n  });\n\n  describe('#doSave', function () {\n\n    before(function () {\n      sinon.stub(Ember, 'set', function (p, v) {\n        if (p.indexOf('App.supports.' != -1)) {\n          p = p.replace('App.supports.', '');\n          saveObject[p] = v;\n          return;\n        }\n        return Ember.set(p, v);\n      });\n      if (App.router.get('transitionTo') === undefined) {\n        App.router.set('transitionTo', Em.K);\n      } else {\n        sinon.stub(App.router, 'transitionTo', function (k) {\n          if (k === 'root.index') return Em.K;\n          return App.router.transitionTo(k);\n        });\n        transitionStubbed = true;\n      }\n    });\n\n    after(function () {\n      Ember.set.restore();\n      if (transitionStubbed) {\n        App.router.transitionTo.restore();\n      } else {\n        App.router.set('transitionTo', undefined);\n      }\n    });\n\n    it('should pass data to App.supports', function () {\n      view.set('supports', viewSupports);\n      view.doSave();\n      expect(saveObject).to.eql(supports);\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/installer');\n\nvar view,\n  stepsCount = 11,\n  isStepDisabled = [],\n  properties = [];\n\nfor (var i = 0; i < stepsCount; i++ ) {\n  isStepDisabled.push(Em.Object.create({\n    step: i,\n    value: Boolean(Math.floor(Math.random() * 2))\n  }));\n  properties.push('isStep' + i + 'Disabled');\n}\n\ndescribe('App.InstallerView', function () {\n\n  beforeEach(function () {\n    view = App.InstallerView.create({\n      controller: {\n        isStepDisabled: isStepDisabled\n      }\n    });\n  });\n\n  properties.forEach(function (item, index) {\n    describe(item, function () {\n      it('should take value from isStepDisabled', function () {\n        expect(view.get(item)).to.equal(isStepDisabled.findProperty('step', index).get('value'));\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/login');\n\nvar view,\n  controller,\n  pass;\n\ndescribe('App.LoginView', function () {\n\n  before(function () {\n    sinon.stub(App, 'get', function(k) {\n      if (k === 'router') return {\n        login: Em.K\n      };\n      return Em.get(App, k);\n    });\n  });\n\n  beforeEach(function () {\n    view = App.LoginView.create();\n    pass = view.passTextField.create({\n      controller: App.LoginController.create()\n    });\n  });\n\n  after(function () {\n    App.get.restore();\n  });\n\n  describe('#passTextField', function () {\n    it('should change error message', function () {\n      pass.insertNewline();\n      expect(pass.get('controller.errorMessage')).to.be.empty;\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('views/main/admin/user/create');\n\ndescribe('App.MainAdminUserCreateView', function () {\n\n  var view = App.MainAdminUserCreateView.create({\n    userForm: Em.Object.create({\n      isValid: function () {\n        return this.get('mockIsValid');\n      },\n      getField: function () {\n        return Em.Object.create();\n      },\n      isWarn: Em.K,\n      propertyDidChange: Em.K,\n      mockIsValid: false\n    })\n  });\n\n  describe('#create()', function () {\n\n    it('form is invalid', function () {\n      view.set('userForm.mockIsValid', false);\n      expect(view.create()).to.be.false;\n    });\n    it('form is valid', function () {\n      view.set('userForm.mockIsValid', true);\n      sinon.stub(view, 'identifyRoles', Em.K);\n      sinon.stub(App.ajax, 'send', Em.K);\n\n      expect(view.create()).to.be.true;\n      expect(view.identifyRoles.calledOnce).to.be.true;\n      expect(App.ajax.send.calledOnce).to.be.true;\n\n      view.identifyRoles.restore();\n      App.ajax.send.restore();\n    });\n  });\n\n  describe('#identifyRoles()', function () {\n    var mock = Em.Object.create();\n    var form = Em.Object.create({\n      getField: function () {\n        return mock;\n      }\n    });\n\n    it('admin is false', function () {\n      mock.set('value', false);\n\n      expect(view.identifyRoles(form)).to.equal('user');\n      expect(mock.get('value')).to.equal('user');\n    });\n    it('admin is true', function () {\n      mock.set('value', true);\n\n      expect(view.identifyRoles(form)).to.equal('admin,user');\n      expect(mock.get('value')).to.equal('admin,user');\n    });\n  });\n\n  describe('#createUserSuccessCallback()', function () {\n\n    it('', function () {\n      var mock = {\n        persistKey: function () {\n          return 'persists';\n        },\n        postUserPref: Em.K\n      };\n      var params = {\n        form: {\n          getField: function () {\n            return Em.Object.create({\n              value: 'user_name_value'\n            })\n          },\n          save: Em.K\n        }\n      };\n      sinon.stub(App.ModalPopup, 'show', Em.K);\n      sinon.stub(App.router, 'get', function () {\n        return mock;\n      });\n      sinon.spy(mock, 'persistKey');\n      sinon.spy(mock, 'postUserPref');\n      sinon.spy(params.form, 'save');\n      sinon.stub(App.router, 'transitionTo', Em.K);\n\n      view.createUserSuccessCallback({}, {}, params);\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n      expect(mock.persistKey.calledWith('user_name_value')).to.be.true;\n      expect(mock.postUserPref.calledWith('persists', true)).to.be.true;\n      expect(params.form.save.calledOnce).to.be.true;\n      expect(App.router.transitionTo.calledWith('allUsers')).to.be.true;\n\n      App.ModalPopup.show.restore();\n      App.router.get.restore();\n      App.router.transitionTo.restore();\n    });\n  });\n\n  describe('#createUserErrorCallback()', function () {\n\n    it('', function () {\n      sinon.stub(App.ModalPopup, 'show', Em.K);\n\n      view.createUserErrorCallback();\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#keyPress()', function () {\n\n    beforeEach(function () {\n      sinon.stub(view, 'create', Em.K);\n    });\n    afterEach(function () {\n      view.create.restore();\n    });\n\n    it('not \"Enter\" button pressed', function () {\n      expect(view.keyPress({keyCode: 99})).to.be.true;\n      expect(view.create.called).to.be.false;\n    });\n    it('\"Enter\" button pressed', function () {\n      expect(view.keyPress({keyCode: 13})).to.be.false;\n      expect(view.create.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#passwordValidation()', function () {\n    var mock = Em.Object.create();\n\n    beforeEach(function () {\n      sinon.stub(view.get('userForm'), 'getField', function () {\n        return mock;\n      });\n      sinon.stub(view.get('userForm'), 'isValid', Em.K);\n      sinon.stub(view.get('userForm'), 'isWarn', Em.K);\n    });\n    afterEach(function () {\n      view.get('userForm').getField.restore();\n      view.get('userForm').isValid.restore();\n      view.get('userForm').isWarn.restore();\n    });\n\n    it('passwordValue is null, isPasswordDirty = false', function () {\n      mock.set('value', null);\n      view.set('isPasswordDirty', false);\n\n      view.passwordValidation();\n      expect(view.get('isPasswordDirty')).to.be.false;\n      expect(view.get('userForm').isValid.called).to.be.false;\n      expect(view.get('userForm').isWarn.called).to.be.false;\n    });\n    it('passwordValue is correct, isPasswordDirty = true', function () {\n      mock.set('value', 'pass');\n      view.set('isPasswordDirty', true);\n\n      view.passwordValidation();\n      expect(view.get('isPasswordDirty')).to.be.true;\n      expect(view.get('userForm').isValid.calledOnce).to.be.true;\n      expect(view.get('userForm').isWarn.calledOnce).to.be.true;\n    });\n    it('passwordValue is correct, isPasswordDirty = false', function () {\n      mock.set('value', 'pass');\n      view.set('isPasswordDirty', false);\n\n      view.passwordValidation();\n      expect(view.get('isPasswordDirty')).to.be.true;\n      expect(view.get('userForm').isValid.calledOnce).to.be.true;\n      expect(view.get('userForm').isWarn.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#didInsertElement()', function () {\n    it('propertyDidChange function should be called', function () {\n      sinon.spy(view.get('userForm'), 'propertyDidChange');\n\n      view.didInsertElement();\n      expect(view.get('userForm').propertyDidChange.calledWith('object')).to.be.true;\n\n      view.get('userForm').propertyDidChange.restore();\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('views/main/admin/user/edit');\n\ndescribe('App.MainAdminUserEditView', function () {\n\n  var view = App.MainAdminUserEditView.create({\n    userForm: Em.Object.create({\n      getField: function (property) {\n        return this.get(property) || Em.Object.create();\n      },\n      isValid: Em.K,\n      isWarn: Em.K,\n      propertyDidChange: Em.K\n    })\n  });\n\n  describe('#edit()', function () {\n\n    beforeEach(function () {\n      sinon.stub(App.ajax, 'send', Em.K);\n    });\n    afterEach(function () {\n      view.get('userForm').isValid.restore();\n      App.ajax.send.restore();\n    });\n\n    it('form is invalid', function () {\n      sinon.stub(view.get('userForm'), 'isValid', function () {\n        return false;\n      });\n\n      expect(view.edit()).to.be.false;\n      expect(App.ajax.send.called).to.be.false;\n    });\n    it('form is valid', function () {\n      sinon.stub(view.get('userForm'), 'isValid', function () {\n        return true;\n      });\n      sinon.stub(view, 'identifyRoles', Em.K);\n      sinon.stub(view, 'setPassword', Em.K);\n\n\n      expect(view.edit()).to.be.true;\n      expect(App.ajax.send.calledOnce).to.be.true;\n      expect(view.identifyRoles.calledOnce).to.be.true;\n      expect(view.setPassword.calledOnce).to.be.true;\n\n      view.identifyRoles.restore();\n      view.setPassword.restore();\n    });\n  });\n\n  describe('#setPassword()', function () {\n    var form = Em.Object.create({\n      getField: function (property) {\n        return this.get(property);\n      },\n      new_password: Em.Object.create({\n        value: 'pass'\n      }),\n      old_password: Em.Object.create({\n        value: 'pass'\n      })\n    });\n\n    it('new_password value is empty', function () {\n      var Users = {};\n      form.set('new_password.value', \"\");\n\n      expect(view.setPassword(Users, form)).to.be.false;\n      expect(Users.password).to.be.undefined;\n      expect(Users.old_password).to.be.undefined;\n    });\n    it('old_password value is empty', function () {\n      var Users = {};\n      form.set('old_password.value', \"\");\n\n      expect(view.setPassword(Users, form)).to.be.false;\n      expect(Users.password).to.be.undefined;\n      expect(Users.old_password).to.be.undefined;\n    });\n    it('old_password and new_password values are correct', function () {\n      var Users = {};\n      form.set('old_password.value', \"old_pass\");\n      form.set('new_password.value', \"pass\");\n\n      expect(view.setPassword(Users, form)).to.be.true;\n      expect(Users.password).to.equal('pass');\n      expect(Users.old_password).to.equal('old_pass');\n    });\n  });\n\n  describe('#identifyRoles()', function () {\n    var mock = Em.Object.create();\n    var form = Em.Object.create({\n      getField: function () {\n        return mock;\n      }\n    });\n\n    it('admin is false', function () {\n      mock.set('value', false);\n\n      expect(view.identifyRoles(form)).to.equal('user');\n      expect(mock.get('value')).to.equal('user');\n    });\n    it('admin is true', function () {\n      mock.set('value', true);\n\n      expect(view.identifyRoles(form)).to.equal('admin,user');\n      expect(mock.get('value')).to.equal('admin,user');\n    });\n  });\n\n  describe('#editUserSuccessCallback()', function () {\n    it('', function () {\n      var params = {\n        form: {\n          save: Em.K\n        }\n      };\n      sinon.spy(params.form, 'save');\n      sinon.stub(App.router, 'transitionTo', Em.K);\n\n      view.editUserSuccessCallback({}, {}, params);\n      expect(params.form.save.calledOnce).to.be.true;\n      expect(App.router.transitionTo.calledWith('allUsers')).to.be.true;\n\n      App.router.transitionTo.restore();\n    });\n  });\n\n  describe('#editUserErrorCallback()', function () {\n    it('show popup', function () {\n      sinon.stub(App.ModalPopup, 'show', Em.K);\n      sinon.stub(view, 'parseErrorMessage', Em.K);\n\n      view.editUserErrorCallback({});\n      expect(App.ModalPopup.show.calledOnce).to.be.true;\n\n      App.ModalPopup.show.restore();\n      view.parseErrorMessage.restore();\n    });\n  });\n\n  describe('#parseErrorMessage()', function () {\n    it('\":\" is not present in response', function () {\n      var request = {\n        responseText: JSON.stringify({\n          message: 'content'\n        })\n      };\n\n      expect(view.parseErrorMessage(request)).to.equal('content');\n    });\n    it('one \":\" is  present in response', function () {\n      var request = {\n        responseText: JSON.stringify({\n          message: 'content : b'\n        })\n      };\n\n      expect(view.parseErrorMessage(request)).to.equal(' b');\n    });\n    it('several \":\" are  present in response', function () {\n      var request = {\n        responseText: JSON.stringify({\n          message: 'content : b: a'\n        })\n      };\n\n      expect(view.parseErrorMessage(request)).to.equal(' a');\n    });\n  });\n\n  describe('#keyPress()', function () {\n\n    beforeEach(function () {\n      sinon.stub(view, 'edit', Em.K);\n    });\n    afterEach(function () {\n      view.edit.restore();\n    });\n\n    it('not \"Enter\" button pressed', function () {\n      expect(view.keyPress({keyCode: 99})).to.be.true;\n      expect(view.edit.called).to.be.false;\n    });\n    it('\"Enter\" button pressed', function () {\n      expect(view.keyPress({keyCode: 13})).to.be.false;\n      expect(view.edit.calledOnce).to.be.true;\n    });\n  });\n\n  describe('#didInsertElement()', function () {\n\n    beforeEach(function () {\n      sinon.stub(view.get('userForm'), 'propertyDidChange', Em.K);\n    });\n    afterEach(function () {\n      view.get('userForm').propertyDidChange.restore();\n    });\n    view.set('userForm.old_password', Em.Object.create());\n    view.set('userForm.new_password', Em.Object.create());\n    view.set('userForm.new_passwordRetype', Em.Object.create());\n\n    it('isLdap value is true', function () {\n      view.set('userForm.isLdap', Em.Object.create({\n        value: true\n      }));\n\n      view.didInsertElement();\n      expect(view.get('userForm').propertyDidChange.calledWith('object')).to.be.true;\n      expect(view.get('userForm.old_password.disabled')).to.be.true;\n      expect(view.get('userForm.new_password.disabled')).to.be.true;\n      expect(view.get('userForm.new_passwordRetype.disabled')).to.be.true;\n    });\n    it('isLdap value is false', function () {\n      view.set('userForm.isLdap', Em.Object.create({\n        value: false\n      }));\n\n      view.didInsertElement();\n      expect(view.get('userForm').propertyDidChange.calledWith('object')).to.be.true;\n      expect(view.get('userForm.old_password.disabled')).to.be.false;\n      expect(view.get('userForm.new_password.disabled')).to.be.false;\n      expect(view.get('userForm.new_passwordRetype.disabled')).to.be.false;\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('views/main/charts/heatmap/heatmap_host');\n\ndescribe('App.MainChartsHeatmapHostView', function() {\n\n  var view = App.MainChartsHeatmapHostView.create({\n    templateName: '',\n    controller: Em.Object.create(),\n    content: {}\n  });\n\n  describe('#hostTemperatureStyle', function () {\n    var testCases = [\n      {\n        title: 'if hostToSlotMap is null then hostTemperatureStyle should be empty',\n        hostName: 'host',\n        controller: Em.Object.create({\n          hostToSlotMap: null,\n          selectedMetric: {\n            slotDefinitions: []\n          }\n        }),\n        result: ''\n      },\n      {\n        title: 'if hostName is null then hostTemperatureStyle should be empty',\n        hostName: '',\n        controller: Em.Object.create({\n          hostToSlotMap: {},\n          selectedMetric: {\n            slotDefinitions: []\n          }\n        }),\n        result: ''\n      },\n      {\n        title: 'if slot less than 0 then hostTemperatureStyle should be empty',\n        hostName: 'host1',\n        controller: Em.Object.create({\n          hostToSlotMap: {\n            \"host1\": -1\n          },\n          selectedMetric: {\n            slotDefinitions: []\n          }\n        }),\n        result: ''\n      },\n      {\n        title: 'if slotDefinitions is null then hostTemperatureStyle should be empty',\n        hostName: 'host1',\n        controller: Em.Object.create({\n          hostToSlotMap: {\n            \"host1\": 1\n          },\n          selectedMetric: {\n            slotDefinitions: null\n          }\n        }),\n        result: ''\n      },\n      {\n        title: 'if slotDefinitions length not more than slot number then hostTemperatureStyle should be empty',\n        hostName: 'host1',\n        controller: Em.Object.create({\n          hostToSlotMap: {\n            \"host1\": 1\n          },\n          selectedMetric: {\n            slotDefinitions: [{}]\n          }\n        }),\n        result: ''\n      },\n      {\n        title: 'if slotDefinitions correct then hostTemperatureStyle should be \"style1\"',\n        hostName: 'host1',\n        controller: Em.Object.create({\n          hostToSlotMap: {\n            \"host1\": 1\n          },\n          selectedMetric: {\n            slotDefinitions: [\n              Em.Object.create({cssStyle: 'style0'}),\n              Em.Object.create({cssStyle: 'style1'})\n            ]\n          }\n        }),\n        result: 'style1'\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        view.set('content.hostName', test.hostName);\n        view.set('controller', test.controller);\n        expect(view.get('hostTemperatureStyle')).to.equal(test.result);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('views/main/charts/heatmap/heatmap_rack');\n\ndescribe('App.MainChartsHeatmapRackView', function() {\n\n  var view = App.MainChartsHeatmapRackView.create({\n    templateName: ''\n  });\n\n  describe('#hostCssStyle', function () {\n    var testCases = [\n      {\n        title: 'if hosts haven\\'t been loaded yet then hostCssStyle should be have width 100%',\n        rack: Em.Object.create({\n          hosts: new Array(0),\n          isLoaded: false\n        }),\n        result: \"width:100%;float:left;\"\n      },\n      {\n        title: 'if hosts number is zero then hostCssStyle should be have width 10%',\n        rack: Em.Object.create({\n          hosts: new Array(0),\n          isLoaded: true\n        }),\n        result: \"width:10%;float:left;\"\n      },\n      {\n        title: 'if hosts number is one then hostCssStyle should be have width 99.5%',\n        rack: Em.Object.create({\n          hosts: new Array(1),\n          isLoaded: true\n        }),\n        result: \"width:99.5%;float:left;\"\n      },\n      {\n        title: 'if hosts number is ten then hostCssStyle should be have width 9.5%',\n        rack: Em.Object.create({\n          hosts: new Array(10),\n          isLoaded: true\n        }),\n        result: \"width:9.5%;float:left;\"\n      },\n      {\n        title: 'if hosts number is ten then hostCssStyle should be have width 10%',\n        rack: Em.Object.create({\n          hosts: new Array(11),\n          isLoaded: true\n        }),\n        result: \"width:10%;float:left;\"\n      }\n    ];\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        view.set('rack', test.rack);\n        expect(view.get('hostCssStyle')).to.equal(test.result);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/main/dashboard/widget');\n\ndescribe('App.DashboardWidgetView', function() {\n  var dashboardWidgetView = App.DashboardWidgetView.create();\n\n  describe('#viewID', function() {\n    it('viewID is computed with id', function() {\n      dashboardWidgetView.set('id', 5);\n      expect(dashboardWidgetView.get('viewID')).to.equal('widget-5');\n    });\n  });\n\n  describe('#hoverContentTopClass', function() {\n    var tests = [\n      {\n        h: ['', ''],\n        e: 'content-hidden-two-line',\n        m: '2 lines'\n      },\n      {\n        h: ['', '', ''],\n        e: 'content-hidden-three-line',\n        m: '3 lines'\n      },\n      {\n        h: [''],\n        e: '',\n        m: '1 line'\n      },\n      {\n        h: [],\n        e: '',\n        m: '0 lines'\n      },\n      {\n        h: ['', '', '', '', ''],\n        e: 'content-hidden-five-line',\n        m: '5 lines'\n      },\n      {\n        h: ['', '', '', ''],\n        e: 'content-hidden-four-line',\n        m: '4 lines'\n      }\n    ];\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        dashboardWidgetView.set('hiddenInfo', test.h);\n        expect(dashboardWidgetView.get('hoverContentTopClass')).to.equal(test.e);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widgets/datanode_live');\n\ndescribe('App.DataNodeUpView', function() {\n\n  var tests = [\n    {\n      data: 100,\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true\n      }\n    },\n    {\n      data: 0,\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false\n      }\n    },\n    {\n      data: 50,\n      e: {\n        isRed: false,\n        isOrange: true,\n        isGreen: false\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('', function() {\n      var dataNodeUpView = App.DataNodeUpView.create({model_type:null, data: test.data, content: test.data.toString()});\n      it('isRed', function() {\n        expect(dataNodeUpView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(dataNodeUpView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(dataNodeUpView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('messages');\nrequire('views/main/dashboard/widgets/hbase_average_load');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widget');\n\ndescribe('App.HBaseAverageLoadView', function() {\n\n  var tests = [\n    {\n      model: {\n        averageLoad: 1\n      },\n      e: {\n        isRed: false,\n        isOrange: true,\n        isGreen: false,\n        isNA: false,\n        content: '1'\n      }\n    },\n    {\n      model: {\n        averageLoad: 10\n      },\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false,\n        isNA: false,\n        content: '10'\n      }\n    },\n    {\n      model: {\n        averageLoad: 0\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '0'\n      }\n    },\n    {\n      model: {\n        averageLoad: null\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable')\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('averageLoad - ' + test.model.averageLoad, function() {\n      var hBaseAverageLoadView = App.HBaseAverageLoadView.create({model_type:null, model: test.model});\n      it('content', function() {\n        expect(hBaseAverageLoadView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(hBaseAverageLoadView.get('data')).to.equal(test.model.averageLoad);\n      });\n      it('isRed', function() {\n        expect(hBaseAverageLoadView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(hBaseAverageLoadView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(hBaseAverageLoadView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(hBaseAverageLoadView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('messages');\nrequire('views/main/dashboard/widgets/hbase_master_uptime');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widget');\n\ndescribe('App.HBaseMasterUptimeView', function() {\n\n  var tests = [\n    {\n      model: Em.Object.create({\n        masterStartTime: ((new Date()).getTime() - 192.1*24*3600*1000)\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '192.1 d',\n        data: 192.1\n      }\n    },\n    {\n      model:  Em.Object.create({\n        masterStartTime: 0\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: false,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    },\n    {\n      model:  Em.Object.create({\n        masterStartTime: null\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: false,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    var hBaseMasterUptimeView = App.HBaseMasterUptimeView.create({model_type:null, model: test.model});\n    hBaseMasterUptimeView.calc();\n    describe('masterStartTime - ' + test.model.masterStartTime, function() {\n      it('content', function() {\n        expect(hBaseMasterUptimeView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(hBaseMasterUptimeView.get('data')).to.equal(test.e.data);\n      });\n      it('isRed', function() {\n        expect(hBaseMasterUptimeView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(hBaseMasterUptimeView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(hBaseMasterUptimeView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(hBaseMasterUptimeView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/main/dashboard/widgets/hbase_regions_in_transition');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widget');\n\ndescribe('App.HBaseRegionsInTransitionView', function() {\n\n  var tests = [\n    {\n      model: {\n        regionsInTransition: 1\n      },\n      e: {\n        isRed: false,\n        isOrange: true,\n        isGreen: false,\n        isNA: false,\n        content: '1'\n      }\n    },\n    {\n      model: {\n        regionsInTransition: 10\n      },\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false,\n        isNA: false,\n        content: '10'\n      }\n    },\n    {\n      model: {\n        regionsInTransition: 0\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '0'\n      }\n    },\n    {\n      model: {\n        regionsInTransition: null\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: true,\n        content: 'null'\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('regionsInTransition - ' + test.model.regionsInTransition, function() {\n      var hBaseRegionsInTransitionView = App.HBaseRegionsInTransitionView.create({model_type:null, model: test.model});\n      it('content', function() {\n        expect(hBaseRegionsInTransitionView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(hBaseRegionsInTransitionView.get('data')).to.equal(test.model.regionsInTransition);\n      });\n      it('isRed', function() {\n        expect(hBaseRegionsInTransitionView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(hBaseRegionsInTransitionView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(hBaseRegionsInTransitionView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(hBaseRegionsInTransitionView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('messages');\nrequire('views/main/dashboard/widgets/jobtracker_rpc');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widget');\n\ndescribe('App.JobTrackerRpcView', function() {\n\n  var tests = [\n    {\n      model: {\n        jobTrackerRpc: 1\n      },\n      e: {\n        isRed: false,\n        isOrange: true,\n        isGreen: false,\n        isNA: false,\n        content: '1.00 ms',\n        data: '1.00'\n      }\n    },\n    {\n      model: {\n        jobTrackerRpc: 10\n      },\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false,\n        isNA: false,\n        content: '10.00 ms',\n        data: '10.00'\n      }\n    },\n    {\n      model: {\n        jobTrackerRpc: 0\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '0 ms',\n        data: 0\n      }\n    },\n    {\n      model: {\n        jobTrackerRpc: null\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('jobTrackerRpc - ' + test.model.jobTrackerRpc, function() {\n      var jobTrackerRpcView = App.JobTrackerRpcView.create({model_type:null, model: test.model});\n      it('content', function() {\n        expect(jobTrackerRpcView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(jobTrackerRpcView.get('data')).to.equal(test.e.data);\n      });\n      it('isRed', function() {\n        expect(jobTrackerRpcView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(jobTrackerRpcView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(jobTrackerRpcView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(jobTrackerRpcView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('messages');\nrequire('views/main/dashboard/widgets/jobtracker_uptime');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widget');\n\ndescribe('App.JobTrackerUptimeView', function() {\n\n  var tests = [\n    {\n      model: Em.Object.create({\n        jobTrackerStartTime: ((new Date()).getTime() - 192.1*24*3600*1000)\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '192.1 d',\n        data: 192.1\n      }\n    },\n    {\n      model: Em.Object.create({\n        jobTrackerStartTime: 0\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: false,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    },\n    {\n      model: Em.Object.create({\n        jobTrackerStartTime: null\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: false,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('jobTrackerStartTime - ' + test.model.jobTrackerStartTime, function() {\n      var jobTrackerUptimeView = App.JobTrackerUptimeView.create({model_type:null, model: test.model});\n      jobTrackerUptimeView.calc();\n      it('content', function() {\n        expect(jobTrackerUptimeView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(jobTrackerUptimeView.get('data')).to.equal(test.e.data);\n      });\n      it('isRed', function() {\n        expect(jobTrackerUptimeView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(jobTrackerUptimeView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(jobTrackerUptimeView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(jobTrackerUptimeView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('models/host_component');\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/links_widget');\n\ndescribe('App.LinkDashboardWidgetView', function() {\n\n  var model = Em.Object.create({\n    field: Em.Object.create({\n      publicHostName: 'host1'\n    })\n  });\n  var linkDashboardWidgetView = App.LinkDashboardWidgetView.create({\n    model_type: null,\n    model: model,\n    port: 1234,\n    modelField: 'field'\n  });\n  linkDashboardWidgetView.calc();\n  describe('#webUrl', function() {\n    it('calc', function() {\n      expect(linkDashboardWidgetView.get('webUrl')).to.equal('http://host1:1234');\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('utils/helper');\nrequire('views/common/chart/pie');\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/pie_chart_widget');\nrequire('views/main/dashboard/widgets/namenode_cpu');\n\ndescribe('App.NameNodeCpuPieChartView', function() {\n\n  var model = Em.Object.create({\n    used: null,\n    max: null\n  });\n  var nameNodeCpuPieChartView = App.NameNodeCpuPieChartView.create({\n    model_type: null,\n    model: model,\n    modelFieldUsed: 'used',\n    modelFieldMax: 'max',\n    widgetHtmlId: 'fake'\n  });\n\n  nameNodeCpuPieChartView.calc();\n\n  describe('#calcIsPieExists', function() {\n    var tests = [\n      {\n        model: Em.Object.create({\n          used: 1\n        }),\n        e: true,\n        m: 'Exists'\n      },\n      {\n        model: Em.Object.create({\n          used: 0\n        }),\n        e: true,\n        m: 'Exists'\n      },\n      {\n        model: Em.Object.create({}),\n        e: false,\n        m: 'Not exists'\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        nameNodeCpuPieChartView.set('model', test.model);\n        expect(nameNodeCpuPieChartView.calcIsPieExists()).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('calcDataForPieChart', function() {\n    var tests = [\n      {\n        model: Em.Object.create({\n          used: 0\n        }),\n        e: ['0.0', '0.00'],\n        m: 'Nothing is used'\n      },\n      {\n        model: Em.Object.create({\n          used: 100\n        }),\n        e: ['100.0', '100.00'],\n        m: 'All is used'\n      },\n      {\n        model: Em.Object.create({\n          used: 50\n        }),\n        e: ['50.0', '50.00'],\n        m: 'Half is used'\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        nameNodeCpuPieChartView.set('model', test.model);\n        expect(nameNodeCpuPieChartView.calcDataForPieChart()).to.eql(test.e);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('messages');\nrequire('views/main/dashboard/widgets/namenode_rpc');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widget');\n\ndescribe('App.NameNodeRpcView', function() {\n\n  var tests = [\n    {\n      model: {\n        nameNodeRpc: 1\n      },\n      e: {\n        isRed: false,\n        isOrange: true,\n        isGreen: false,\n        isNA: false,\n        content: '1.00 ms',\n        data: '1.00'\n      }\n    },\n    {\n      model: {\n        nameNodeRpc: 10\n      },\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false,\n        isNA: false,\n        content: '10.00 ms',\n        data: '10.00'\n      }\n    },\n    {\n      model: {\n        nameNodeRpc: 0\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '0 ms',\n        data: 0\n      }\n    },\n    {\n      model: {\n        nameNodeRpc: null\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('nameNodeRpc - ' + test.model.nameNodeRpc, function() {\n      var jobTrackerRpcView = App.NameNodeRpcView.create({model_type:null, model: test.model});\n      it('content', function() {\n        expect(jobTrackerRpcView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(jobTrackerRpcView.get('data')).to.equal(test.e.data);\n      });\n      it('isRed', function() {\n        expect(jobTrackerRpcView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(jobTrackerRpcView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(jobTrackerRpcView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(jobTrackerRpcView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('messages');\nrequire('views/main/dashboard/widgets/namenode_uptime');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widget');\n\ndescribe('App.NameNodeUptimeView', function() {\n\n  var tests = [\n    {\n      model: Em.Object.create({\n        nameNodeStartTime: ((new Date()).getTime() - 192.1*24*3600*1000)\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '192.1 d',\n        data: 192.1\n      }\n    },\n    {\n      model:  Em.Object.create({\n        nameNodeStartTime: 0\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: false,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    },\n    {\n      model:  Em.Object.create({\n        nameNodeStartTime: null\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: false,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    var nameNodeUptimeView = App.NameNodeUptimeView.create({model_type:null, model: test.model});\n    nameNodeUptimeView.calc();\n    describe('nameNodeStartTime - ' + test.model.nameNodeStartTime, function() {\n      it('content', function() {\n        expect(nameNodeUptimeView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(nameNodeUptimeView.get('data')).to.equal(test.e.data);\n      });\n      it('isRed', function() {\n        expect(nameNodeUptimeView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(nameNodeUptimeView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(nameNodeUptimeView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(nameNodeUptimeView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('messages');\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widgets/node_managers_live');\n\ndescribe('App.NodeManagersLiveView', function() {\n\n  var tests = [\n    {\n      model: {\n        nodeManagersTotal: 3,\n        nodeManagerLiveNodes: 2\n      },\n      e: {\n        isRed: false,\n        isOrange: true,\n        isGreen: false,\n        isNA: false,\n        content: '2/3',\n        data: 67\n      }\n    },\n    {\n      model: {\n        nodeManagersTotal: 2,\n        nodeManagerLiveNodes: 2\n      },\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '2/2',\n        data: 100\n      }\n    },\n    {\n      model: {\n        nodeManagersTotal: 2,\n        nodeManagerLiveNodes: 0\n      },\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false,\n        isNA: false,\n        content: '0/2',\n        data: 0.00\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('nodeManagerNodes length - ' + test.model.nodeManagersTotal + ' | nodeManagerLiveNodes length - ' + test.model.nodeManagerLiveNodes, function() {\n      var AppNodeManagersLiveView = App.NodeManagersLiveView.extend({nodeManagersLive: test.model.nodeManagerLiveNodes});\n      var nodeManagersLiveView = AppNodeManagersLiveView.create({model_type:null, model: test.model});\n      it('content', function() {\n        expect(nodeManagersLiveView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(nodeManagersLiveView.get('data')).to.equal(test.e.data);\n      });\n      it('isRed', function() {\n        expect(nodeManagersLiveView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(nodeManagersLiveView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(nodeManagersLiveView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(nodeManagersLiveView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/common/chart/pie');\nrequire('utils/helper');\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/pie_chart_widget');\n\ndescribe('App.PieChartDashboardWidgetView', function() {\n\n  var model = Em.Object.create({\n    used: null,\n    max: null\n  });\n  var pieChartDashboardWidgetView = App.PieChartDashboardWidgetView.create({\n    model_type: null,\n    model: model,\n    modelFieldUsed: 'used',\n    modelFieldMax: 'max',\n    widgetHtmlId: 'fake'\n  });\n\n  pieChartDashboardWidgetView.calc();\n\n  describe('#getUsed', function() {\n    var tests = [\n      {\n        model: Em.Object.create({\n          used: 1\n        }),\n        e: 1,\n        m: '\"Used\" is set'\n      },\n      {\n        model: Em.Object.create({\n          used: null\n        }),\n        e: 0,\n        m: '\"Used\" is not set'\n      },\n      {\n        model: Em.Object.create({}),\n        e: 0,\n        m: '\"Used\" is not defined'\n      }\n    ];\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        pieChartDashboardWidgetView.set('model', test.model);\n        expect(pieChartDashboardWidgetView.getUsed()).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#getMax', function() {\n    var tests = [\n      {\n        model: Em.Object.create({\n          max: 1\n        }),\n        e: 1,\n        m: '\"Max\" is set'\n      },\n      {\n        model: Em.Object.create({\n          max: null\n        }),\n        e: 0,\n        m: '\"Max\" is not set'\n      },\n      {\n        model: Em.Object.create({}),\n        e: 0,\n        m: '\"Max\" is not defined'\n      }\n    ];\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        pieChartDashboardWidgetView.set('model', test.model);\n        expect(pieChartDashboardWidgetView.getMax()).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#calcIsPieExists', function() {\n    var tests = [\n      {\n        model: Em.Object.create({\n          max: 1\n        }),\n        e: true,\n        m: 'Exists'\n      },\n      {\n        model: Em.Object.create({\n          max: 0\n        }),\n        e: false,\n        m: 'Not exists'\n      },\n      {\n        model: Em.Object.create({}),\n        e: false,\n        m: 'Not exists'\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        pieChartDashboardWidgetView.set('model', test.model);\n        expect(pieChartDashboardWidgetView.calcIsPieExists()).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('calcDataForPieChart', function() {\n    var tests = [\n      {\n        model: Em.Object.create({\n          max: 10,\n          used: 0\n        }),\n        e: ['0', '0.0'],\n        m: 'Nothing is used'\n      },\n      {\n        model: Em.Object.create({\n          max: 10,\n          used: 10\n        }),\n        e: ['100', '100.0'],\n        m: 'All is used'\n      },\n      {\n        model: Em.Object.create({\n          max: 10,\n          used: 5\n        }),\n        e: ['50', '50.0'],\n        m: 'Half is used'\n      }\n    ];\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        pieChartDashboardWidgetView.set('model', test.model);\n        expect(pieChartDashboardWidgetView.calcDataForPieChart()).to.eql(test.e);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('messages');\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widgets/resource_manager_uptime');\n\ndescribe('App.ResourceManagerUptimeView', function() {\n\n  var tests = [\n    {\n      model: Em.Object.create({\n        resourceManagerStartTime: ((new Date()).getTime() - 192.1*24*3600*1000)\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false,\n        content: '192.1 d',\n        data: 192.1\n      }\n    },\n    {\n      model:  Em.Object.create({\n        resourceManagerStartTime: 0\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: false,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    },\n    {\n      model:  Em.Object.create({\n        resourceManagerStartTime: null\n      }),\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: false,\n        isNA: true,\n        content: Em.I18n.t('services.service.summary.notAvailable'),\n        data: null\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    var resourceManagerUptimeView = App.ResourceManagerUptimeView.create({model_type:null, model: test.model});\n    resourceManagerUptimeView.calc();\n    describe('resourceManagerStartTime - ' + test.model.resourceManagerStartTime, function() {\n      it('content', function() {\n        expect(resourceManagerUptimeView.get('content')).to.equal(test.e.content);\n      });\n      it('data', function() {\n        expect(resourceManagerUptimeView.get('data')).to.equal(test.e.data);\n      });\n      it('isRed', function() {\n        expect(resourceManagerUptimeView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(resourceManagerUptimeView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(resourceManagerUptimeView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(resourceManagerUptimeView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widgets/tasktracker_live');\n\ndescribe('App.TaskTrackerUpView', function() {\n\n  var tests = [\n    {\n      data: 100,\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true\n      }\n    },\n    {\n      data: 0,\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false\n      }\n    },\n    {\n      data: 50,\n      e: {\n        isRed: false,\n        isOrange: true,\n        isGreen: false\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('', function() {\n      var taskTrackerUpView = App.TaskTrackerUpView.create({model_type:null, data: test.data, content: test.data.toString()});\n      it('isRed', function() {\n        expect(taskTrackerUpView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(taskTrackerUpView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(taskTrackerUpView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/text_widget');\n\ndescribe('App.TextDashboardWidgetView', function() {\n\n  var tests = [\n    {\n      data: 100,\n      e: {\n        isRed: false,\n        isOrange: false,\n        isGreen: true,\n        isNA: false\n      }\n    },\n    {\n      data: 1,\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false,\n        isNA: false\n      }\n    },\n    {\n      data: 50,\n      e: {\n        isRed: false,\n        isOrange: true,\n        isGreen: false,\n        isNA: false\n      }\n    },\n    {\n      data: null,\n      e: {\n        isRed: true,\n        isOrange: false,\n        isGreen: false,\n        isNA: true\n      }\n    }\n  ];\n\n  tests.forEach(function(test) {\n    describe('data - ' + test.data + ' | thresh1 - 40 | thresh2 - 70', function() {\n      var textDashboardWidgetView = App.TextDashboardWidgetView.create({thresh1:40, thresh2:70});\n      textDashboardWidgetView.set('data', test.data);\n      it('isRed', function() {\n        expect(textDashboardWidgetView.get('isRed')).to.equal(test.e.isRed);\n      });\n      it('isOrange', function() {\n        expect(textDashboardWidgetView.get('isOrange')).to.equal(test.e.isOrange);\n      });\n      it('isGreen', function() {\n        expect(textDashboardWidgetView.get('isGreen')).to.equal(test.e.isGreen);\n      });\n      it('isNA', function() {\n        expect(textDashboardWidgetView.get('isNA')).to.equal(test.e.isNA);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\n\nrequire('views/main/dashboard/widget');\nrequire('views/main/dashboard/widgets/text_widget');\nrequire('views/main/dashboard/widgets/uptime_text_widget');\n\ndescribe('App.UptimeTextDashboardWidgetView', function() {\n\n  describe('#timeConverter', function() {\n    var timestamps = [\n      {\n        t: 1358245370553,\n        e: {\n          l: 2,\n          f: 'Tue Jan 15 2013'\n        }\n      },\n      {\n        t: 0,\n        e: {\n          l: 2,\n          f: 'Thu Jan 01 1970'\n        }\n      }\n    ];\n    timestamps.forEach(function(timestamp) {\n      var uptimeTextDashboardWidgetView = App.UptimeTextDashboardWidgetView.create({thresh1:40, thresh2:70});\n      it('timestamp ' + timestamp.t, function() {\n        var result = uptimeTextDashboardWidgetView.timeConverter(timestamp.t);\n        expect(result.length).to.equal(timestamp.e.l);\n        expect(result[0]).to.equal(timestamp.e.f);\n      });\n    });\n  });\n\n  describe('#uptimeProcessing', function() {\n    var timestamps = [\n      {\n        t: (new Date()).getTime() - 10*1000,\n        e: {\n          timeUnit: 's'\n        }\n      },\n      {\n        t: (new Date()).getTime() - 3600*1000,\n        e: {\n          timeUnit: 'hr'\n        }\n      },\n      {\n        t: (new Date()).getTime() - 24*3600*1000,\n        e: {\n          timeUnit: 'd'\n        }\n      },\n      {\n        t: (new Date()).getTime() - 1800*1000,\n        e: {\n          timeUnit: 'min'\n        }\n      }\n    ];\n    timestamps.forEach(function(timestamp) {\n      var uptimeTextDashboardWidgetView = App.UptimeTextDashboardWidgetView.create({thresh1:40, thresh2:70});\n      it('timestamp ' + timestamp.t + '. timeUnit should be ' + '\"' + timestamp.e.timeUnit + '\"', function() {\n        var result = uptimeTextDashboardWidgetView.uptimeProcessing(timestamp.t);\n        expect(uptimeTextDashboardWidgetView.get('timeUnit')).to.equal(timestamp.e.timeUnit);\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('messages');\nvar filters = require('views/common/filter_view');\nrequire('mixins/common/userPref');\nrequire('mixins/common/localStorage');\nrequire('views/main/dashboard/widgets');\nvar mainDashboardWidgetsView;\n\ndescribe('App.MainDashboardWidgetsView', function() {\n\n  beforeEach(function() {\n    mainDashboardWidgetsView = App.MainDashboardWidgetsView.create();\n  });\n\n  describe('#setInitPrefObject', function() {\n    var hdfs_widgets_count = 7;\n    var mapreduce_widgets_count = 7;\n    var hbase_widgets_count = 4;\n    var yarn_widgets_count = 4;\n    var total_widgets_count = 27;\n    var tests = Em.A([\n      {\n        models: {\n          hdfs_model: null,\n          mapreduce_model: null,\n          hbase_model: null,\n          yarn_model: null\n        },\n        e: {\n          visibleL: total_widgets_count - hdfs_widgets_count - mapreduce_widgets_count - hbase_widgets_count - yarn_widgets_count - 1,\n          hiddenL: 0\n        },\n        m: 'All models are null'\n      },\n      {\n        models: {\n          hdfs_model: {},\n          mapreduce_model: null,\n          hbase_model: null,\n          yarn_model: null\n        },\n        e: {\n          visibleL: total_widgets_count  - mapreduce_widgets_count - hbase_widgets_count - yarn_widgets_count - 1,\n          hiddenL: 0\n        },\n        m: 'mapreduce_model, hbase_model, yarn_model are null'\n      },\n      {\n        models: {\n          hdfs_model: {},\n          mapreduce_model: {},\n          hbase_model: null,\n          yarn_model: null\n        },\n        e: {\n          visibleL: total_widgets_count - hbase_widgets_count - yarn_widgets_count - 1,\n          hiddenL: 0\n        },\n        m: 'hbase_model and yarn_model are null'\n      },\n      {\n        models: {\n          hdfs_model: {},\n          mapreduce_model: {},\n          hbase_model: {},\n          yarn_model: null\n        },\n        e: {\n          visibleL: total_widgets_count - yarn_widgets_count - 1,\n          hiddenL: 1\n        },\n        m: 'yarn_model is null'\n      },\n      {\n        models: {\n          hdfs_model: {},\n          mapreduce_model: {},\n          hbase_model: {},\n          yarn_model: {}\n        },\n        e: {\n          visibleL: total_widgets_count - 1,\n          hiddenL: 1\n        },\n        m: 'All models are not null'\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        mainDashboardWidgetsView.set('hdfs_model', test.models.hdfs_model);\n        mainDashboardWidgetsView.set('mapreduce_model', test.models.mapreduce_model);\n        mainDashboardWidgetsView.set('hbase_model', test.models.hbase_model);\n        mainDashboardWidgetsView.set('yarn_model', test.models.yarn_model);\n        mainDashboardWidgetsView.setInitPrefObject();\n        expect(mainDashboardWidgetsView.get('initPrefObject.visible.length')).to.equal(test.e.visibleL);\n        expect(mainDashboardWidgetsView.get('initPrefObject.hidden.length')).to.equal(test.e.hiddenL);\n      });\n    });\n  });\n\n  describe('#persistKey', function() {\n    App.router.set('loginName', 'tdk');\n    it('Check it', function() {\n      expect(mainDashboardWidgetsView.get('persistKey')).to.equal('user-pref-tdk-dashboard');\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('messages');\nvar filters = require('views/common/filter_view');\nrequire('views/main/dashboard');\nvar mainDashboardView;\ndescribe('App.MainDashboardView', function() {\n\n   beforeEach(function() {\n     mainDashboardView = App.MainDashboardView.create();\n   });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/host_component');\nrequire('views/main/host/details/host_component_view');\n\nvar hostComponentView;\n\ndescribe('App.HostComponentView', function() {\n\n  beforeEach(function() {\n    hostComponentView = App.HostComponentView.create({\n      startBlinking: function(){},\n      doBlinking: function(){},\n      getDesiredAdminState: function(){return $.ajax({});}\n    });\n  });\n\n  describe('#disabled', function() {\n\n    var tests = Em.A([\n      {\n        parentView: {content: {healthClass: 'health-status-DEAD-YELLOW'}},\n        e: 'disabled'\n      },\n      {\n        parentView: {content: {healthClass: 'another-class'}},\n        e: ''\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        hostComponentView = App.HostComponentView.create({\n          startBlinking: function(){},\n          doBlinking: function(){},\n          parentView: test.parentView\n        });\n        expect(hostComponentView.get('disabled')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#isUpgradeFailed', function() {\n\n    var tests = ['UPGRADE_FAILED'];\n    var testE = true;\n    var defaultE = false;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isUpgradeFailed')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#isInstallFailed', function() {\n\n    var tests = ['INSTALL_FAILED'];\n    var testE = true;\n    var defaultE = false;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isInstallFailed')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#isStart', function() {\n\n    var tests = ['STARTED','STARTING'];\n    var testE = true;\n    var defaultE = false;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isStart')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#isStop', function() {\n\n    var tests = ['INSTALLED'];\n    var testE = true;\n    var defaultE = false;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isStop')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#isInstalling', function() {\n\n    var tests = ['INSTALLING'];\n    var testE = true;\n    var defaultE = false;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isInstalling')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#isInit', function() {\n\n    var tests = ['INIT'];\n    var testE = true;\n    var defaultE = false;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isInit')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#noActionAvailable', function() {\n\n    var tests = ['STARTING', 'STOPPING', 'UNKNOWN', 'DISABLED'];\n    var testE = 'hidden';\n    var defaultE = '';\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('noActionAvailable')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#isActive', function() {\n\n    var tests = Em.A([\n      {passiveState: 'OFF', e: true},\n      {passiveState: 'ON', e: false},\n      {passiveState: 'IMPLIED', e: false}\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.workStatus, function() {\n        hostComponentView.set('content', {passiveState: test.passiveState});\n        expect(hostComponentView.get('isActive')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#isImplied', function() {\n\n    var tests = Em.A([\n      {\n        content: {service: {passiveState: 'ON'}},\n        parentView: {content: {passiveState: 'ON'}},\n        m: 'service in ON, host in ON',\n        e: true\n      },\n      {\n        content: {service: {passiveState: 'ON', serviceName:'SERVICE_NAME'}},\n        parentView: {content: {passiveState: 'OFF'}},\n        m: 'service in ON, host in OFF',\n        e: true\n      },\n      {\n        content: {service: {passiveState: 'OFF', serviceName:'SERVICE_NAME'}},\n        parentView: {content: {passiveState: 'ON'}},\n        m: 'service in OFF, host in ON',\n        e: true\n      },\n      {\n        content: {service: {passiveState: 'OFF'}},\n        parentView: {content: {passiveState: 'OFF'}},\n        m: 'service in OFF, host in OFF',\n        e: false\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        hostComponentView = App.HostComponentView.create({\n          startBlinking: function(){},\n          doBlinking: function(){},\n          parentView: test.parentView,\n          content: test.content\n        });\n        expect(hostComponentView.get('isImplied')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#isRestartComponentDisabled', function() {\n\n    var tests = ['STARTED'];\n    var testE = false;\n    var defaultE = true;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isRestartComponentDisabled')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#isDeleteComponentDisabled', function() {\n\n    var tests = ['INSTALLED', 'UNKNOWN', 'INSTALL_FAILED', 'UPGRADE_FAILED', 'INIT'];\n    var testE = false;\n    var defaultE = true;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isDeleteComponentDisabled')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#componentTextStatus', function() {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({componentTextStatus: 'status'}),\n        hostComponent: null,\n        e: 'status',\n        m: 'get content status'\n      },\n      {\n        content: Em.Object.create({componentTextStatus: 'status'}),\n        hostComponent: Em.Object.create({componentTextStatus: 'new_status'}),\n        e: 'new_status',\n        m: 'get hostComponent status'\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        hostComponentView = App.HostComponentView.create({\n          startBlinking: function(){},\n          doBlinking: function(){},\n          getDesiredAdminState: function(){return $.ajax({});},\n          content: test.content,\n          hostComponent: test.hostComponent\n        });\n        expect(hostComponentView.get('componentTextStatus')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#workStatus', function() {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({workStatus: 'status'}),\n        hostComponent: null,\n        e: 'status',\n        m: 'get content workStatus'\n      },\n      {\n        content: Em.Object.create({workStatus: 'status'}),\n        hostComponent: Em.Object.create({workStatus: 'new_status'}),\n        e: 'new_status',\n        m: 'get hostComponent workStatus'\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        hostComponentView = App.HostComponentView.create({\n          startBlinking: function(){},\n          doBlinking: function(){},\n          getDesiredAdminState: function(){return $.ajax({});},\n          content: test.content,\n          hostComponent: test.hostComponent\n        });\n        expect(hostComponentView.get('workStatus')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#statusClass', function() {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({workStatus: App.HostComponentStatus.install_failed,passiveState: 'OFF'}),\n        e: 'health-status-color-red icon-cog'\n      },\n      {\n        content: Em.Object.create({workStatus: App.HostComponentStatus.installing, passiveState: 'OFF'}),\n        e: 'health-status-color-blue icon-cog'\n      },\n      {\n        content: Em.Object.create({workStatus: 'STARTED', passiveState: 'ON'}),\n        e: 'health-status-started'\n      },\n      {\n        content: Em.Object.create({workStatus: 'STARTED', passiveState: 'IMPLIED'}),\n        e: 'health-status-started'\n      },\n      {\n        content: Em.Object.create({workStatus: 'STARTED', passiveState: 'OFF'}),\n        e: 'health-status-started'\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.content.get('workStatus') + ' ' + test.content.get('passiveState'), function() {\n        hostComponentView = App.HostComponentView.create({\n          startBlinking: function(){},\n          doBlinking: function(){},\n          getDesiredAdminState: function(){return $.ajax({});},\n          content: test.content\n        });\n        expect(hostComponentView.get('statusClass')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#isInProgress', function() {\n\n    var tests = ['STOPPING', 'STARTING'];\n    var testE = true;\n    var defaultE = false;\n\n    App.HostComponentStatus.getStatusesList().forEach(function(status) {\n      it(status, function() {\n        hostComponentView.set('content', {workStatus: status});\n        var e = tests.contains(status) ? testE : defaultE;\n        expect(hostComponentView.get('isInProgress')).to.equal(e);\n      });\n    });\n\n  });\n\n  describe('#statusIconClass', function() {\n    var tests = Em.A([\n      {s: 'health-status-started', e: App.healthIconClassGreen},\n      {s: 'health-status-starting', e: App.healthIconClassGreen},\n      {s: 'health-status-installed', e: App.healthIconClassRed},\n      {s: 'health-status-stopping', e: App.healthIconClassRed},\n      {s: 'health-status-unknown', e: App.healthIconClassYellow},\n      {s: 'health-status-DEAD-ORANGE', e: App.healthIconClassOrange},\n      {s: 'other', e: ''}\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.s, function() {\n        hostComponentView.reopen({statusClass: test.s});\n        expect(hostComponentView.get('statusIconClass')).to.equal(test.e);\n      })\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/host_component');\nrequire('views/main/host/details/host_component_view');\nrequire('mixins');\nrequire('mixins/main/host/details/host_components/decommissionable');\n\nvar hostComponentView;\n\ndescribe('App.Decommissionable', function() {\n\n  beforeEach(function() {\n    hostComponentView = App.HostComponentView.create(App.Decommissionable, {\n      startBlinking: function(){},\n      doBlinking: function(){},\n      getDesiredAdminState: function(){return $.ajax({});}\n    });\n  });\n\n  describe('#componentTextStatus', function() {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({componentTextStatus: 'status'}),\n        hostComponent: null,\n        isComponentRecommissionAvailable: false,\n        isComponentDecommissioning: false,\n        e: 'status',\n        m: 'get content status'\n      },\n      {\n        content: Em.Object.create({componentTextStatus: 'status'}),\n        hostComponent: Em.Object.create({componentTextStatus: 'new_status'}),\n        isComponentRecommissionAvailable: false,\n        isComponentDecommissioning: false,\n        e: 'new_status',\n        m: 'get hostComponent status'\n      },\n      {\n        content: Em.Object.create({componentTextStatus: 'status'}),\n        hostComponent: Em.Object.create({componentTextStatus: 'new_status'}),\n        isComponentRecommissionAvailable: false,\n        isComponentDecommissioning: false,\n        e: 'new_status',\n        m: 'get hostComponent status'\n      },\n      {\n        content: Em.Object.create({componentTextStatus: 'status'}),\n        hostComponent: Em.Object.create({componentTextStatus: 'new_status'}),\n        isComponentRecommissionAvailable: true,\n        isComponentDecommissioning: true,\n        e: Em.I18n.t('hosts.host.decommissioning'),\n        m: 'get decommissioning status'\n      },\n      {\n        content: Em.Object.create({componentTextStatus: 'status'}),\n        hostComponent: Em.Object.create({componentTextStatus: 'new_status'}),\n        isComponentRecommissionAvailable: true,\n        isComponentDecommissioning: false,\n        e: Em.I18n.t('hosts.host.decommissioned'),\n        m: 'get decommissioned status'\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        hostComponentView = App.HostComponentView.create(App.Decommissionable, {\n          startBlinking: function(){},\n          doBlinking: function(){},\n          getDesiredAdminState: function(){return $.ajax({});},\n          content: test.content,\n          hostComponent: test.hostComponent,\n          isComponentRecommissionAvailable: test.isComponentRecommissionAvailable,\n          isComponentDecommissioning: test.isComponentDecommissioning\n        });\n        expect(hostComponentView.get('componentTextStatus')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#statusClass', function() {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({workStatus: App.HostComponentStatus.install_failed,passiveState: 'OFF'}),\n        isComponentRecommissionAvailable: false,\n        e: 'health-status-color-red icon-cog'\n      },\n      {\n        content: Em.Object.create({workStatus: App.HostComponentStatus.installing, passiveState: 'OFF'}),\n        isComponentRecommissionAvailable: false,\n        e: 'health-status-color-blue icon-cog'\n      },\n      {\n        content: Em.Object.create({workStatus: 'STARTED', passiveState: 'ON'}),\n        isComponentRecommissionAvailable: false,\n        e: 'health-status-started'\n      },\n      {\n        content: Em.Object.create({workStatus: 'STARTED', passiveState: 'IMPLIED'}),\n        isComponentRecommissionAvailable: false,\n        e: 'health-status-started'\n      },\n      {\n        content: Em.Object.create({workStatus: 'STARTED', passiveState: 'OFF'}),\n        isComponentRecommissionAvailable: false,\n        e: 'health-status-started'\n      },\n      {\n        content: Em.Object.create({workStatus: 'STARTED', passiveState: 'OFF'}),\n        isComponentRecommissionAvailable: true,\n        e: 'health-status-DEAD-ORANGE'\n      },\n      {\n        content: Em.Object.create({workStatus: 'STARTING', passiveState: 'OFF'}),\n        isComponentRecommissionAvailable: true,\n        e: 'health-status-DEAD-ORANGE'\n      },\n      {\n        content: Em.Object.create({workStatus: 'INSTALLED', passiveState: 'OFF'}),\n        isComponentRecommissionAvailable: true,\n        e: 'health-status-DEAD-ORANGE'\n      }\n\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.content.get('workStatus') + ' ' + test.content.get('passiveState') + ' ' + test.isComponentRecommissionAvailable?'true':'false', function() {\n        hostComponentView = App.HostComponentView.create(App.Decommissionable,{\n          startBlinking: function(){},\n          doBlinking: function(){},\n          getDesiredAdminState: function(){return $.ajax({});},\n          isComponentRecommissionAvailable: test.isComponentRecommissionAvailable,\n          content: test.content\n        });\n        expect(hostComponentView.get('statusClass')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#isInProgress', function() {\n\n    var tests = Em.A([\n      {\n        workStatus: App.HostComponentStatus.stopping,\n        isDecommissioning: false,\n        e: true\n      },\n      {\n        workStatus: App.HostComponentStatus.starting,\n        isDecommissioning: false,\n        e: true\n      },\n      {\n        workStatus: 'other_status',\n        isDecommissioning: false,\n        e: false\n      },\n      {\n        workStatus: 'other_status',\n        isDecommissioning: true,\n        e: true\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.workStatus + ' ' + test.isDecommissioning?'true':'false', function() {\n\n        hostComponentView = App.HostComponentView.create(App.Decommissionable,{\n          startBlinking: function(){},\n          doBlinking: function(){},\n          getDesiredAdminState: function(){return $.ajax({});},\n          isDecommissioning: test.isDecommissioning,\n          content: Em.Object.create({workStatus: test.workStatus})\n        });\n\n        expect(hostComponentView.get('isInProgress')).to.equal(test.e);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('models/host');\nrequire('models/service');\nrequire('models/host_component');\nrequire('mappers/server_data_mapper');\nrequire('views/main/host/summary');\n\nvar mainHostSummaryView;\nvar extendedMainHostSummaryView = App.MainHostSummaryView.extend({content: {}, addToolTip: function(){}, installedServices: []});\nvar modelSetup = require('test/init_model_test');\n\ndescribe('App.MainHostSummaryView', function() {\n\n  beforeEach(function() {\n    modelSetup.setupStackServiceComponent();\n    mainHostSummaryView = extendedMainHostSummaryView.create({});\n  });\n\n  afterEach(function(){\n    modelSetup.cleanStackServiceComponent();\n  });\n\n  describe('#sortedComponents', function() {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'B'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'A'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'C'}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'D'})\n          ])\n        }),\n        m: 'List of masters, slaves and clients',\n        e: ['A', 'C', 'B']\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'B'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'A'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'C'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'D'})\n          ])\n        }),\n        m: 'List of masters and slaves',\n        e: ['A', 'C', 'D', 'B']\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'B'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'A'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'C'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'D'})\n          ])\n        }),\n        m: 'List of masters',\n        e: ['B', 'A', 'C', 'D']\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'B'}),\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'A'}),\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'C'}),\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'D'})\n          ])\n        }),\n        m: 'List of slaves',\n        e: ['B', 'A', 'C', 'D']\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([])\n        }),\n        m: 'Empty list',\n        e: []\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'B'}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'A'}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'C'}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'D'})\n          ])\n        }),\n        m: 'List of clients',\n        e: []\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        test.content.get('hostComponents').forEach(function(component) {\n          component.set('id', component.get('componentName'));\n        });\n        mainHostSummaryView.set('sortedComponents', []);\n        mainHostSummaryView.set('content', test.content);\n        mainHostSummaryView.sortedComponentsFormatter();\n        expect(mainHostSummaryView.get('sortedComponents').mapProperty('componentName')).to.eql(test.e);\n      });\n    });\n\n  });\n\n  describe('#clients', function() {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'B'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'A'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'C'}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'D'})\n          ])\n        }),\n        m: 'List of masters, slaves and clients',\n        e: ['D']\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'B'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'A'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'C'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'D'})\n          ])\n        }),\n        m: 'List of masters and slaves',\n        e: []\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'B'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'A'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'C'}),\n            Em.Object.create({isMaster: true, isSlave: false, componentName: 'D'})\n          ])\n        }),\n        m: 'List of masters',\n        e: []\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'B'}),\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'A'}),\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'C'}),\n            Em.Object.create({isMaster: false, isSlave: true, componentName: 'D'})\n          ])\n        }),\n        m: 'List of slaves',\n        e: []\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([])\n        }),\n        m: 'Empty list',\n        e: []\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'B'}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'A'}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'C'}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'D'})\n          ])\n        }),\n        m: 'List of clients',\n        e: ['B', 'A', 'C', 'D']\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        mainHostSummaryView.set('content', test.content);\n        expect(mainHostSummaryView.get('clients').mapProperty('componentName')).to.eql(test.e);\n      });\n    });\n\n  });\n\n  describe('#areClientWithStaleConfigs', function() {\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'D', staleConfigs: true}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'C', staleConfigs: false})\n          ])\n        }),\n        m: 'Some clients with stale configs',\n        e: true\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'D', staleConfigs: false}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'C', staleConfigs: false})\n          ])\n        }),\n        m: 'No clients with stale configs',\n        e: false\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'D', staleConfigs: true}),\n            Em.Object.create({isMaster: false, isSlave: false, componentName: 'C', staleConfigs: true})\n          ])\n        }),\n        m: 'All clients with stale configs',\n        e: true\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([])\n        }),\n        m: 'Empty list',\n        e: false\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        mainHostSummaryView.set('content', test.content);\n        expect(mainHostSummaryView.get('areClientWithStaleConfigs')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#isAddComponent', function() {\n\n    var tests = Em.A([\n      {content: {healthClass: 'health-status-DEAD-YELLOW', hostComponents: Em.A([])}, e: false},\n      {content: {healthClass: 'OTHER_VALUE', hostComponents: Em.A([])}, e: true}\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.content.healthClass, function() {\n        mainHostSummaryView.set('content', test.content);\n        expect(mainHostSummaryView.get('isAddComponent')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#installableClientComponents', function() {\n\n    it('delete host not supported', function() {\n      App.set('supports.deleteHost', false);\n      expect(mainHostSummaryView.get('installableClientComponents')).to.eql([]);\n      App.set('supports.deleteHost', true);\n    });\n\n    var tests = Em.A([\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([])\n        }),\n        services: ['HDFS', 'YARN', 'MAPREDUCE2'],\n        e: ['HDFS_CLIENT', 'YARN_CLIENT', 'MAPREDUCE2_CLIENT'],\n        m: 'no one client installed'\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({\n              componentName: 'HDFS_CLIENT'\n            })\n          ])\n        }),\n        services: ['HDFS', 'YARN', 'MAPREDUCE2'],\n        e: ['YARN_CLIENT', 'MAPREDUCE2_CLIENT'],\n        m: 'some clients are already installed'\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({\n              componentName: 'HDFS_CLIENT'\n            }),\n            Em.Object.create({\n              componentName: 'YARN_CLIENT'\n            }),\n            Em.Object.create({\n              componentName: 'MAPREDUCE2_CLIENT'\n            })\n          ])\n        }),\n        services: ['HDFS', 'YARN', 'MAPREDUCE2'],\n        e: [],\n        m: 'all clients are already installed'\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        mainHostSummaryView.set('content', test.content);\n        mainHostSummaryView.set('installedServices', test.services);\n        expect(mainHostSummaryView.get('installableClientComponents')).to.include.members(test.e);\n        expect(test.e).to.include.members(mainHostSummaryView.get('installableClientComponents'));\n      });\n    });\n\n  });\n\n  describe('#addableComponents', function() {\n    var tests = Em.A([\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([])\n        }),\n        services: ['HDFS', 'YARN', 'MAPREDUCE2'],\n        e: ['DATANODE', 'NODEMANAGER', 'CLIENTS'],\n        m: 'no components on host (impossible IRL, but should be tested)'\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({\n              componentName: 'HDFS_CLIENT'\n            }),\n            Em.Object.create({\n              componentName: 'DATANODE'\n            })\n          ])\n        }),\n        services: ['HDFS', 'YARN', 'MAPREDUCE2'],\n        e: ['NODEMANAGER', 'CLIENTS'],\n        m: 'some components are already installed'\n      },\n      {\n        content: Em.Object.create({\n          hostComponents: Em.A([\n            Em.Object.create({\n              componentName: 'HDFS_CLIENT'\n            }),\n            Em.Object.create({\n              componentName: 'YARN_CLIENT'\n            }),\n            Em.Object.create({\n              componentName: 'MAPREDUCE2_CLIENT'\n            }),\n            Em.Object.create({\n              componentName: 'NODEMANAGER'\n            })\n          ])\n        }),\n        services: ['HDFS', 'YARN', 'MAPREDUCE2'],\n        e: ['DATANODE'],\n        m: 'all clients and some other components are already installed'\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        mainHostSummaryView.set('content', test.content);\n        mainHostSummaryView.set('installedServices', test.services);\n        expect(mainHostSummaryView.get('addableComponents').mapProperty('componentName')).to.eql(test.e);\n      });\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/main/jobs/hive_job_details_tez_dag_view');\n\ndescribe('App.MainHiveJobDetailsTezDagView', function() {\n  var tezDagView = App.MainHiveJobDetailsTezDagView.create();\n\n  describe('#getNodeCalculatedDimensions()', function() {\n    var tests = Em.A([\n      {\n        i: {\n          node: {\n            operations: [],\n            duration: 100\n          },\n          minDuration: 1\n        },\n        e: {\n          width : 180,\n          height : 40,\n          drawWidth : 180,\n          drawHeight : 40,\n          scale : 1\n        },\n        m: 'Node(ops=0,duration=100) minDuration=1'\n      },\n      {\n        i: {\n          node: {\n            operations: [1,2,3,4,5],\n            duration: 4\n          },\n          minDuration: 1\n        },\n        e: {\n          width : 180,\n          height : 80,\n          drawWidth : 180,\n          drawHeight : 40+40,\n          scale : 1\n        },\n        m: 'Node(ops=5,duration=4) minDuration=1'\n      },\n      {\n        i: {\n          node: {\n            operations: [1],\n            duration: 1\n          },\n          minDuration: 1\n        },\n        e: {\n          width : 180,\n          height : 60,\n          drawWidth : 180,\n          drawHeight : 60,\n          scale : 1\n        },\n        m: 'Node(ops=1,duration=1) minDuration=1'\n      },\n      { // Error case\n        i: {\n          node: {\n            operations: [1],\n            duration: 1\n          },\n          minDuration: 3\n        },\n        e: {\n          width : 180,\n          height : 60,\n          drawWidth : 180,\n          drawHeight : 60,\n          scale : 1\n        },\n        m: 'Node(ops=1,duration=1) minDuration=3'\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        var nodeDim = tezDagView.getNodeCalculatedDimensions(test.i.node, test.i.minDuration);\n        Em.keys(test.e).forEach(function(key) {\n          expect(nodeDim[key]).to.equal(test.e[key]);\n        });\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with this\n * work for additional information regarding copyright ownership. The ASF\n * licenses this file to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nvar App = require('app');\nmodule.exports = {\n  _createVertex : function(row, col, state, type, numOps, inEdges, outEdges, vertexJsons) {\n    var v = {\n      id : 'v_' + row + '_' + col,\n      instance_id : 'vi_' + row + '_' + col,\n      name : 'Vertex ' + row + ', ' + col,\n      state : state,\n      type : type,\n      operations : [],\n      outgoing_edges : outEdges,\n      incoming_edges : inEdges\n    };\n    for ( var c = 0; c < numOps; c++) {\n      v.operations.push(\"Op \" + c);\n    }\n    vertexJsons.push(v);\n    return v;\n  },\n\n  _createEdge : function(id, type, from, to, edgeJsons) {\n    var e = {\n      id : id,\n      instance_id : 'i_' + id,\n      from_vertex_id : from.id,\n      to_vertex_id : to.id,\n      edge_type : type\n    }\n    edgeJsons.push(e);\n    return e;\n  },\n\n  /**\n   * Creates a Tez DAG for test purposes with 6 nodes in row 1, 1 node in row 2\n   * and 5 nodes in row 3.\n   *\n   * Usage: <code>\n   *     var testDag = jobUtils.createTezDag_6x1x5();\n   *     vertices = testDag.get('vertices');\n   *     edges = testDag.get('edges');\n   * </code>\n   */\n  createTezDag_6x1x5 : function() {\n    var vertices = [];\n    var dagJson = {\n      id : 'dag1',\n      instance_id : 'dag1',\n      name : 'Test DAG 1',\n      stage : 'My stage',\n      vertices : [],\n      edges : []\n    };\n    var vertexJsons = [];\n    var edgeJsons = [];\n    // Row 1\n    var v1 = this._createVertex(1, 1, \"FAILED\", App.TezDagVertexType.MAP, 30, [], [ 'e1' ], vertexJsons);\n    var v2 = this._createVertex(1, 2, \"RUNNING\", App.TezDagVertexType.REDUCE, 2, [], [ 'e2' ], vertexJsons);\n    var v3 = this._createVertex(1, 3, \"FAILED\", App.TezDagVertexType.MAP, 5, [], [ 'e3' ], vertexJsons);\n    var v4 = this._createVertex(1, 4, \"FAILED\", App.TezDagVertexType.REDUCE, 10, [], [ 'e4' ], vertexJsons);\n    var v5 = this._createVertex(1, 5, \"FAILED\", App.TezDagVertexType.MAP, 15, [], [ 'e5' ], vertexJsons);\n    var v6 = this._createVertex(1, 6, \"FAILED\", App.TezDagVertexType.REDUCE, 20, [], [ 'e6' ], vertexJsons);\n    // Row 2\n    var v7 = this._createVertex(2, 1, \"SUCCEEDED\", App.TezDagVertexType.UNION, 30, [ 'e1', 'e2', 'e3', 'e4', 'e5', 'e6' ], [ 'e7', 'e8', 'e9', 'e10', 'e11' ], vertexJsons);\n    // Row 3\n    var v8 = this._createVertex(3, 1, \"FAILED\", App.TezDagVertexType.REDUCE, 30, [ 'e7' ], [], vertexJsons);\n    var v9 = this._createVertex(3, 2, \"RUNNING\", App.TezDagVertexType.MAP, 2, [ 'e8' ], [], vertexJsons);\n    var v10 = this._createVertex(3, 3, \"FAILED\", App.TezDagVertexType.REDUCE, 5, [ 'e9' ], [], vertexJsons);\n    var v11 = this._createVertex(3, 4, \"FAILED\", App.TezDagVertexType.MAP, 10, [ 'e10' ], [], vertexJsons);\n    var v12 = this._createVertex(3, 5, \"FAILED\", App.TezDagVertexType.REDUCE, 15, [ 'e11' ], [], vertexJsons);\n    // Edges 1-2\n    this._createEdge('e1', 'BROADCAST', v1, v7, edgeJsons);\n    this._createEdge('e2', 'BROADCAST', v2, v7, edgeJsons);\n    this._createEdge('e3', 'BROADCAST', v3, v7, edgeJsons);\n    this._createEdge('e4', 'SCATTER_GATHER', v4, v7, edgeJsons);\n    this._createEdge('e5', 'SCATTER_GATHER', v5, v7, edgeJsons);\n    this._createEdge('e6', 'SCATTER_GATHER', v6, v7, edgeJsons);\n    // Edges 2-3\n    this._createEdge('e7', 'SCATTER_GATHER', v7, v8, edgeJsons);\n    this._createEdge('e8', 'SCATTER_GATHER', v7, v9, edgeJsons);\n    this._createEdge('e9', 'SCATTER_GATHER', v7, v10, edgeJsons);\n    this._createEdge('e10', 'BROADCAST', v7, v11, edgeJsons);\n    this._createEdge('e11', 'BROADCAST', v7, v12, edgeJsons);\n    vertexJsons.forEach(function(v) {\n      dagJson.vertices.push(v.id);\n    })\n    edgeJsons.forEach(function(e) {\n      dagJson.edges.push(e.id);\n    })\n    App.store.load(App.TezDag, dagJson);\n    App.store.loadMany(App.TezDagVertex, vertexJsons);\n    App.store.loadMany(App.TezDagEdge, edgeJsons);\n    return App.TezDag.find('dag1');\n  },\n\n  /**\n   * Creates a Tez DAG for test purposes with 6 nodes in row 1, 1 node in row 2\n   * and 5 nodes in row 3.\n   *\n   * Usage: <code>\n   *     var testDag = jobUtils.createTezDag_7x1_1x1();\n   *     vertices = testDag.get('vertices');\n   *     edges = testDag.get('edges');\n   * </code>\n   */\n  createTezDag_7x1_1x1 : function() {\n    var vertices = [];\n    var dagJson = {\n      id : 'dag1',\n      instance_id : 'dag1',\n      name : 'Test DAG 1',\n      stage : 'My stage',\n      vertices : [],\n      edges : []\n    };\n    var vertexJsons = [];\n    var edgeJsons = [];\n    // Row 1\n    var v1 = this._createVertex(1, 1, \"FAILED\", App.TezDagVertexType.REDUCE, 30, [], [ 'e1' ], vertexJsons);\n    var v4 = this._createVertex(1, 4, \"FAILED\", App.TezDagVertexType.MAP, 10, [], [ 'e4' ], vertexJsons);\n    var v6 = this._createVertex(1, 6, \"FAILED\", App.TezDagVertexType.REDUCE, 20, [], [ 'e6' ], vertexJsons);\n    var v2 = this._createVertex(1, 2, \"RUNNING\", App.TezDagVertexType.MAP, 2, [], [ 'e2' ], vertexJsons);\n    var v3 = this._createVertex(1, 3, \"FAILED\", App.TezDagVertexType.REDUCE, 5, [], [ 'e3' ], vertexJsons);\n    var v5 = this._createVertex(1, 5, \"FAILED\", App.TezDagVertexType.MAP, 15, [], [ 'e5' ], vertexJsons);\n    var v7 = this._createVertex(1, 7, \"FAILED\", App.TezDagVertexType.REDUCE, 4, [], [ 'e7' ], vertexJsons);\n    // Row 2\n    var v8 = this._createVertex(2, 1, \"SUCCEEDED\", App.TezDagVertexType.MAP, 30, [ 'e1', 'e2', 'e3', 'e4' ], [ 'e8' ], vertexJsons);\n    var v9 = this._createVertex(2, 2, \"FAILED\", App.TezDagVertexType.REDUCE, 30, [ 'e5', 'e6', 'e7' ], ['e9'], vertexJsons);\n    // Row 3\n    var v10 = this._createVertex(3, 1, \"RUNNING\", App.TezDagVertexType.UNION, 2, [ 'e8', 'e9' ], [], vertexJsons);\n    // Edges 1-2\n    this._createEdge('e1', 'BROADCAST', v1, v8, edgeJsons);\n    this._createEdge('e2', 'BROADCAST', v2, v8, edgeJsons);\n    this._createEdge('e3', 'BROADCAST', v3, v8, edgeJsons);\n    this._createEdge('e4', 'SCATTER_GATHER', v4, v8, edgeJsons);\n    this._createEdge('e5', 'SCATTER_GATHER', v5, v9, edgeJsons);\n    this._createEdge('e6', 'SCATTER_GATHER', v6, v9, edgeJsons);\n    this._createEdge('e7', 'SCATTER_GATHER', v7, v9, edgeJsons);\n    // Edges 2-3\n    this._createEdge('e8', 'SCATTER_GATHER', v8, v10, edgeJsons);\n    this._createEdge('e9', 'SCATTER_GATHER', v9, v10, edgeJsons);\n    vertexJsons.forEach(function(v) {\n      dagJson.vertices.push(v.id);\n    })\n    edgeJsons.forEach(function(e) {\n      dagJson.edges.push(e.id);\n    })\n    App.store.load(App.TezDag, dagJson);\n    App.store.loadMany(App.TezDagVertex, vertexJsons);\n    App.store.loadMany(App.TezDagEdge, edgeJsons);\n    return App.TezDag.find('dag1');\n  },\n\n  /**\n   * Creates a Tez DAG for test purposes. Each row in the graph is fully\n   * connected to the next row. The number of nodes in each row is passed as\n   * input.\n   *\n   * Usage:\n   * <code>\n   *  var testDag = jobUtils._test_createTezDag_fullyConnected([10,3,8]);\n   *  vertices = testDag.get('vertices');\n   *  edges = testDag.get('edges');\n   * </code>\n   */\n  createTezDag_fullyConnected : function(rowCounts) {\n    var vertices = [];\n    var dagJson = {\n      id : 'dag1',\n      instance_id : 'dag1',\n      name : 'Test DAG 1',\n      stage : 'My stage',\n      vertices : [],\n      edges : []\n    };\n    var vertexJsons = [];\n    var edgeJsons = [];\n    var matrix = new Array(rowCounts.length);\n    for ( var r = 0; r < rowCounts.length; r++) {\n      matrix[r] = new Array(rowCounts[r]);\n      for ( var c = 0; c < rowCounts[r]; c++) {\n        var outs = [];\n        var ins = [];\n        if (r < rowCounts.length - 1) {\n          for ( var c2 = 0; c2 < rowCounts[r + 1]; c2++) {\n            outs.push('e_' + r + c + '_' + (r + 1) + c2);\n          }\n        }\n        if (r > 0) {\n          for ( var c2 = 0; c2 < rowCounts[r - 1]; c2++) {\n            ins.push('e_' + (r - 1) + c2 + '_' + r + c);\n          }\n        }\n        matrix[r][c] = this._createVertex(r, c, \"RUNNING\", true, (r + 1) * (c + 1), ins, outs, vertexJsons);\n        if (r > 0) {\n          for ( var c2 = 0; c2 < rowCounts[r - 1]; c2++) {\n            this._createEdge('e_' + (r - 1) + c2 + '_' + r + c, 'BROADCAST', matrix[r - 1][c2], matrix[r][c], edgeJsons);\n          }\n        }\n      }\n    }\n    vertexJsons.forEach(function(v) {\n      dagJson.vertices.push(v.id);\n    })\n    edgeJsons.forEach(function(e) {\n      dagJson.edges.push(e.id);\n    })\n    App.store.load(App.TezDag, dagJson);\n    App.store.loadMany(App.TezDagVertex, vertexJsons);\n    App.store.loadMany(App.TezDagEdge, edgeJsons);\n    return App.TezDag.find('dag1');\n  }\n}\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/main/jobs/hive_job_details_view');\n\ndescribe('App.MainHiveJobDetailsView', function () {\n  var mainHiveJobDetailsView = App.MainHiveJobDetailsView.create({\n    controller: App.MainHiveJobDetailsController.create({\n      content: Ember.Object.create({\n        id: 'id',\n        queryText: 'show tables',\n        stages: [{\n          id: 'Stage-0',\n          description: '. Fetch Operator'\n        }, {\n          id: 'Stage-1',\n          description: '. Tez'\n        }],\n        name: 'id',\n        startTime: 1394569191001,\n        endTime: null,\n        tezDagId: 'id:1',\n        tezDag: {\n          id: 'id:1',\n          instanceId: 'dag_1394502141829_0425_1',\n          name: 'id:1',\n          yarnApplicationId: 'application_1395263571423_0014',\n          stage: 'Stage-1',\n          vertices: [\n            Ember.Object.create({\n              id: 'id:1/Map 1',\n              name: 'Map 1',\n              type: 'MAP',\n              operations: ['TableScan', 'Filter Operator', 'Reduce Output Operator'],\n              operationPlan: '[\\n  {\\n    \"TableScan\": {\\n      \"filterExpr:\": \"((hd_dep_count = 4) or (hd_vehicle_count = 3)) (type: boolean)\",\\n      \"alias:\": \"household_demographics\",\\n      \"children\": {\\n        \"Filter Operator\": {\\n          \"predicate:\": \"((hd_dep_count = 4) or (hd_vehicle_count = 3)) (type: boolean)\",\\n          \"children\": {\\n            \"Reduce Output Operator\": {\\n              \"Map-reduce partition columns:\": \"hd_demo_sk (type: int)\",\\n              \"sort order:\": \"+\",\\n              \"value expressions:\": \"hd_demo_sk (type: int), hd_dep_count (type: int), hd_vehicle_count (type: int)\",\\n              \"Statistics:\": \"Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\",\\n              \"key expressions:\": \"hd_demo_sk (type: int)\"\\n            }\\n          },\\n          \"Statistics:\": \"Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\"\\n        }\\n      },\\n      \"Statistics:\": \"Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\"\\n    }\\n  }\\n]'\n            }), Ember.Object.create({\n              id: 'id:1/Map 2',\n              name: 'Map 2',\n              state: 'KILLED',\n              type: 'MAP',\n              startTime: 1394569231819,\n              endTime: 1394569303554,\n              operations: ['TableScan', 'Map Join Operator', 'Map Join Operator', 'Map Join Operator', 'Map Join Operator', 'Filter Operator', 'Select Operator', 'Group By Operator', 'Reduce Output Operator'],\n              operationPlan: '[\\n  {\\n    \"TableScan\": {\\n      \"alias:\": \"store_sales\",\\n      \"children\": {\\n        \"Map Join Operator\": {\\n          \"keys:\": {\\n            \"0\": \"ss_sold_date_sk (type: int)\",\\n            \"1\": \"d_date_sk (type: int)\"\\n          },\\n          \"outputColumnNames:\": [\\n            \"_col0\",\\n            \"_col3\",\\n            \"_col5\",\\n            \"_col6\",\\n            \"_col8\",\\n            \"_col18\",\\n            \"_col21\",\\n            \"_col22\",\\n            \"_col25\",\\n            \"_col31\",\\n            \"_col32\"\\n          ],\\n          \"children\": {\\n            \"Map Join Operator\": {\\n              \"keys:\": {\\n                \"0\": \"UDFToDouble(_col22) (type: double)\",\\n                \"1\": \"UDFToDouble(s_store_sk) (type: double)\"\\n              },\\n              \"outputColumnNames:\": [\\n                \"_col0\",\\n                \"_col3\",\\n                \"_col5\",\\n                \"_col6\",\\n                \"_col8\",\\n                \"_col18\",\\n                \"_col21\",\\n                \"_col22\",\\n                \"_col25\",\\n                \"_col31\",\\n                \"_col32\",\\n                \"_col55\",\\n                \"_col77\"\\n              ],\\n              \"children\": {\\n                \"Map Join Operator\": {\\n                  \"keys:\": {\\n                    \"0\": \"_col5 (type: int)\",\\n                    \"1\": \"hd_demo_sk (type: int)\"\\n                  },\\n                  \"outputColumnNames:\": [\\n                    \"_col0\",\\n                    \"_col22\",\\n                    \"_col31\",\\n                    \"_col34\",\\n                    \"_col36\",\\n                    \"_col37\",\\n                    \"_col39\",\\n                    \"_col49\",\\n                    \"_col52\",\\n                    \"_col53\",\\n                    \"_col56\",\\n                    \"_col62\",\\n                    \"_col63\",\\n                    \"_col86\",\\n                    \"_col89\",\\n                    \"_col90\"\\n                  ],\\n                  \"children\": {\\n                    \"Map Join Operator\": {\\n                      \"keys:\": {\\n                        \"0\": \"_col37 (type: int)\",\\n                        \"1\": \"ca_address_sk (type: int)\"\\n                      },\\n                      \"outputColumnNames:\": [\\n                        \"_col0\",\\n                        \"_col3\",\\n                        \"_col4\",\\n                        \"_col7\",\\n                        \"_col29\",\\n                        \"_col38\",\\n                        \"_col41\",\\n                        \"_col43\",\\n                        \"_col44\",\\n                        \"_col46\",\\n                        \"_col56\",\\n                        \"_col59\",\\n                        \"_col60\",\\n                        \"_col63\",\\n                        \"_col69\",\\n                        \"_col70\",\\n                        \"_col93\",\\n                        \"_col99\"\\n                      ],\\n                      \"children\": {\\n                        \"Filter Operator\": {\\n                          \"predicate:\": \"((((((((_col38 = _col63) and (_col60 = _col7)) and (_col43 = _col0)) and (_col44 = _col93)) and ((_col3 = 4) or (_col4 = 3))) and (_col70) IN (6, 0)) and (_col69) IN (1999, (1999 + 1), (1999 + 2))) and (_col29) IN (\\'Fairview\\', \\'Fairview\\', \\'Fairview\\', \\'Midway\\', \\'Fairview\\')) (type: boolean)\",\\n                          \"children\": {\\n                            \"Select Operator\": {\\n                              \"expressions:\": \"_col46 (type: int), _col41 (type: int), _col44 (type: int), _col99 (type: string), _col56 (type: decimal(7,2)), _col59 (type: decimal(7,2))\",\\n                              \"outputColumnNames:\": [\\n                                \"_col46\",\\n                                \"_col41\",\\n                                \"_col44\",\\n                                \"_col99\",\\n                                \"_col56\",\\n                                \"_col59\"\\n                              ],\\n                              \"children\": {\\n                                \"Group By Operator\": {\\n                                  \"mode:\": \"hash\",\\n                                  \"aggregations:\": [\\n                                    \"sum(_col56)\",\\n                                    \"sum(_col59)\"\\n                                  ],\\n                                  \"keys:\": \"_col46 (type: int), _col41 (type: int), _col44 (type: int), _col99 (type: string)\",\\n                                  \"outputColumnNames:\": [\\n                                    \"_col0\",\\n                                    \"_col1\",\\n                                    \"_col2\",\\n                                    \"_col3\",\\n                                    \"_col4\",\\n                                    \"_col5\"\\n                                  ],\\n                                  \"children\": {\\n                                    \"Reduce Output Operator\": {\\n                                      \"Map-reduce partition columns:\": \"_col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: string)\",\\n                                      \"sort order:\": \"++++\",\\n                                      \"value expressions:\": \"_col4 (type: decimal(17,2)), _col5 (type: decimal(17,2))\",\\n                                      \"Statistics:\": \"Num rows: 32946 Data size: 43551613 Basic stats: COMPLETE Column stats: NONE\",\\n                                      \"key expressions:\": \"_col0 (type: int), _col1 (type: int), _col2 (type: int), _col3 (type: string)\"\\n                                    }\\n                                  },\\n                                  \"Statistics:\": \"Num rows: 32946 Data size: 43551613 Basic stats: COMPLETE Column stats: NONE\"\\n                                }\\n                              },\\n                              \"Statistics:\": \"Num rows: 32946 Data size: 43551613 Basic stats: COMPLETE Column stats: NONE\"\\n                            }\\n                          },\\n                          \"Statistics:\": \"Num rows: 32946 Data size: 43551613 Basic stats: COMPLETE Column stats: NONE\"\\n                        }\\n                      },\\n                      \"Statistics:\": \"Num rows: 4217199 Data size: 5574753280 Basic stats: COMPLETE Column stats: NONE\",\\n                      \"condition map:\": [\\n                        {\\n                          \"\": \"Inner Join 0 to 1\"\\n                        }\\n                      ],\\n                      \"condition expressions:\": {\\n                        \"0\": \"{_col86} {_col89} {_col90} {_col0} {_col22} {_col31} {_col34} {_col36} {_col37} {_col39} {_col49} {_col52} {_col53} {_col56} {_col62} {_col63}\",\\n                        \"1\": \"{ca_address_sk} {ca_city}\"\\n                      }\\n                    }\\n                  },\\n                  \"Statistics:\": \"Num rows: 3833817 Data size: 5067957248 Basic stats: COMPLETE Column stats: NONE\",\\n                  \"condition map:\": [\\n                    {\\n                      \"\": \"Inner Join 0 to 1\"\\n                    }\\n                  ],\\n                  \"condition expressions:\": {\\n                    \"0\": \"{_col55} {_col77} {_col0} {_col3} {_col5} {_col6} {_col8} {_col18} {_col21} {_col22} {_col25} {_col31} {_col32}\",\\n                    \"1\": \"{hd_demo_sk} {hd_dep_count} {hd_vehicle_count}\"\\n                  }\\n                }\\n              },\\n              \"Statistics:\": \"Num rows: 3485288 Data size: 4607233536 Basic stats: COMPLETE Column stats: NONE\",\\n              \"condition map:\": [\\n                {\\n                  \"\": \"Inner Join 0 to 1\"\\n                }\\n              ],\\n              \"condition expressions:\": {\\n                \"0\": \"{_col0} {_col3} {_col5} {_col6} {_col8} {_col18} {_col21} {_col22} {_col25} {_col31} {_col32}\",\\n                \"1\": \"{s_store_sk} {s_city}\"\\n              }\\n            }\\n          },\\n          \"Statistics:\": \"Num rows: 3168444 Data size: 4188394240 Basic stats: COMPLETE Column stats: NONE\",\\n          \"condition map:\": [\\n            {\\n              \"\": \"Inner Join 0 to 1\"\\n            }\\n          ],\\n          \"condition expressions:\": {\\n            \"0\": \"{ss_sold_date_sk} {ss_customer_sk} {ss_hdemo_sk} {ss_addr_sk} {ss_ticket_number} {ss_coupon_amt} {ss_net_profit} {ss_store_sk}\",\\n            \"1\": \"{d_date_sk} {d_year} {d_dow}\"\\n          }\\n        }\\n      },\\n      \"Statistics:\": \"Num rows: 2880404 Data size: 3807631184 Basic stats: COMPLETE Column stats: NONE\"\\n    }\\n  }\\n]',\n              tasksCount: 6,\n              fileReadBytes: 0,\n              fileWriteBytes: 337559,\n              fileReadOps: 0,\n              fileWriteOps: 0,\n              spilledRecords: 7194,\n              hdfsReadBytes: 12854749,\n              hdfsWriteBytes: 0,\n              hdfsReadOps: 12,\n              hdfsWriteOps: 0\n            })\n          ]\n        }\n      })\n    })\n  });\n  describe('#zoomStep', function () {\n    it('should be calculated according to difference between zoomScaleTo and zoomScaleFrom', function () {\n      mainHiveJobDetailsView.set('zoomScaleFrom', 0);\n      mainHiveJobDetailsView.set('zoomScaleTo', 1);\n      expect(mainHiveJobDetailsView.get('zoomStep')).to.equal(0.2);\n      mainHiveJobDetailsView.set('zoomScaleFrom', 2);\n      expect(mainHiveJobDetailsView.get('zoomStep')).to.equal(0.01);\n    });\n  });\n  describe('#canGraphZoomIn', function () {\n    it('should be calculated according to comparison between zoomScale and zoomScaleTo', function () {\n      mainHiveJobDetailsView.set('zoomScale', 2);\n      expect(mainHiveJobDetailsView.get('canGraphZoomIn')).to.equal(false);\n      mainHiveJobDetailsView.set('zoomScaleTo', 3);\n      expect(mainHiveJobDetailsView.get('canGraphZoomIn')).to.equal(true);\n    });\n  });\n  describe('#canGraphZoomOut', function () {\n    it('should be calculated according to comparison between zoomScale and zoomScaleFrom', function () {\n      mainHiveJobDetailsView.set('zoomScale', 3);\n      expect(mainHiveJobDetailsView.get('canGraphZoomOut')).to.equal(true);\n      mainHiveJobDetailsView.set('zoomScaleFrom', 4);\n      expect(mainHiveJobDetailsView.get('canGraphZoomOut')).to.equal(false);\n    });\n  });\n  describe('#doGraphZoomIn', function () {\n    it('should be calculated according to zoomScale, zoomScaleTo and zoomScaleFrom', function () {\n      mainHiveJobDetailsView.set('zoomScale', 0);\n      mainHiveJobDetailsView.set('zoomScaleTo', 1);\n      mainHiveJobDetailsView.set('zoomScaleFrom', 0);\n      mainHiveJobDetailsView.doGraphZoomIn();\n      expect(mainHiveJobDetailsView.get('zoomScale')).to.equal(0.2);\n      mainHiveJobDetailsView.set('zoomScale', 0);\n      mainHiveJobDetailsView.set('zoomScaleTo', 10);\n      mainHiveJobDetailsView.set('zoomScaleFrom', 0);\n      mainHiveJobDetailsView.doGraphZoomIn();\n      expect(mainHiveJobDetailsView.get('zoomScale')).to.equal(2);\n    });\n  });\n  describe('#doGraphZoomOut', function () {\n    it('should be calculated according to zoomScale, zoomScaleTo and zoomScaleFrom', function () {\n      mainHiveJobDetailsView.set('zoomScale', 3);\n      mainHiveJobDetailsView.set('zoomScaleTo', 2);\n      mainHiveJobDetailsView.set('zoomScaleFrom', 1);\n      mainHiveJobDetailsView.doGraphZoomOut();\n      expect(mainHiveJobDetailsView.get('zoomScale')).to.equal(2.8);\n      mainHiveJobDetailsView.set('zoomScale', 1);\n      mainHiveJobDetailsView.set('zoomScaleTo', 10);\n      mainHiveJobDetailsView.set('zoomScaleFrom', 0);\n      mainHiveJobDetailsView.doGraphZoomOut();\n      expect(mainHiveJobDetailsView.get('zoomScale')).to.equal(0);\n    });\n  });\n  describe('#toggleShowQueryText', function () {\n    it('should be toggled according to showQuery', function () {\n      mainHiveJobDetailsView.set('showQuery', true);\n      expect(mainHiveJobDetailsView.get('toggleShowQueryText')).to.equal(Em.I18n.t('jobs.hive.less'));\n      mainHiveJobDetailsView.toggleProperty('showQuery');\n      expect(mainHiveJobDetailsView.get('toggleShowQueryText')).to.equal(Em.I18n.t('jobs.hive.more'));\n    });\n  });\n  describe('#summaryMetricTypeDisplay', function () {\n    it('should return the correct message for output', function () {\n      mainHiveJobDetailsView.set('summaryMetricType', 'output');\n      expect(mainHiveJobDetailsView.get('summaryMetricTypeDisplay')).to.equal(Em.I18n.t('jobs.hive.tez.metric.output'));\n    });\n  });\n  describe('#initialDataLoaded', function () {\n    it('controller.content should be loaded to view.content', function () {\n      mainHiveJobDetailsView.set('controller.loaded', true);\n      expect(mainHiveJobDetailsView.get('content.id')).to.equal(mainHiveJobDetailsView.get('controller.content.id'));\n    });\n  });\n  describe('#jobObserver', function () {\n    it('should set selection of the first vertex as default', function () {\n      expect(mainHiveJobDetailsView.get('selectedVertex.id')).to.equal(mainHiveJobDetailsView.get('controller.content.tezDag.vertices').objectAt(0).get('id'));\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/main/jobs_view');\n\ndescribe('App.MainJobsView', function () {\n  var mainJobsView = App.MainJobsView.create({\n    controller: Ember.Object.create({\n      filterObject: Ember.Object.create(),\n      navIDs: Ember.Object.create({\n        backIDs: ['id0', 'id1'],\n        nextID: 'id2'\n      }),\n      content: [\n        Ember.Object.create({\n          id: 'id',\n          query_text: 'show tables',\n          name: 'id',\n          user: ['user'],\n          failed: false,\n          startTime: 1393443850756,\n          endTime: 1393443875265,\n          tezDagId: 'id:1',\n          hasTezDag: true\n        })\n      ]\n    })\n  });\n  mainJobsView.get('controller').set('sortedContent', mainJobsView.controller.get('content').toArray());\n  var jobNameView = mainJobsView.jobNameView.create();\n  jobNameView.set('job', mainJobsView.get('controller.content').objectAt(0));\n  describe('#noDataToShow', function () {\n    it('should be false if content is not empty', function () {\n      mainJobsView.noDataToShowObserver();\n      expect(mainJobsView.get('noDataToShow')).to.equal(false);\n    });\n  });\n  describe('#rowsPerPageSelectView.disabled', function() {\n    it('should be true if controller.navIDs.backIDs.length > 1', function () {\n      var rowsPerPageSelectView = mainJobsView.rowsPerPageSelectView.create({\n        parentView: Ember.View.create({\n          hasBackLinks: true\n        })\n      });\n      rowsPerPageSelectView.disabledObserver();\n      expect(rowsPerPageSelectView.get('disabled')).to.equal(true);\n    });\n  });\n  describe('#hasNextJobs', function () {\n    it('should be true if controller.navIDs.nextID is not empty', function () {\n      expect(mainJobsView.get('hasNextJobs')).to.equal(true);\n    });\n  });\n  describe('#hasBackLinks', function () {\n    it('should be true if there are several controller.navIDs.backIDs', function () {\n      expect(mainJobsView.get('hasBackLinks')).to.equal(true);\n    });\n  });\n  describe('#jobsPaginationLeft.class', function () {\n    it('should be paginate_next if there are new jobs and no filter is applied', function () {\n      mainJobsView.get('controller.filterObject').set('isAnyFilterApplied', false);\n      var jobsPaginationLeft = mainJobsView.jobsPaginationLeft.create({\n        parentView: Ember.View.create({\n          hasBackLinks: true\n        })\n      });\n      expect(jobsPaginationLeft.get('class')).to.equal('paginate_previous');\n    });\n  });\n  describe('#jobsPaginationRight.class', function () {\n    it('should be paginate_next if there are new jobs and no filter is applied', function () {\n      var jobsPaginationRight = mainJobsView.jobsPaginationRight.create({\n        parentView: Ember.View.create({\n          hasNextJobs: true\n        })\n      });\n      expect(jobsPaginationRight.get('class')).to.equal('paginate_next');\n    });\n  });\n  describe('#jobNameView.isLink', function () {\n    it('should be empty if job has Tez DAG', function () {\n      jobNameView.isLinkObserver();\n      expect(jobNameView.get('isLink')).to.equal('');\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('controllers/main/mirroring/edit_dataset_controller');\nrequire('models/target_cluster');\nrequire('views/main/mirroring/edit_dataset_view');\n\nvar mainMirroringEditDataSetView;\ndescribe('App.MainMirroringEditDataSetView', function () {\n\n  beforeEach(function () {\n    mainMirroringEditDataSetView = App.MainMirroringEditDataSetView.create({\n      controller: App.MainMirroringEditDataSetController.create(),\n      isLoaded: true\n    });\n  });\n\n  describe('targetClusterSelect.content', function () {\n    var targetClusterSelect;\n    beforeEach(function () {\n      targetClusterSelect = mainMirroringEditDataSetView.get('targetClusterSelect').create({\n        parentView: mainMirroringEditDataSetView\n      });\n    });\n\n    it('should be empty if data is not loaded', function () {\n      targetClusterSelect.set('parentView.isLoaded', false);\n      expect(targetClusterSelect.get('content')).to.be.empty;\n    });\n    it('should contain list of clusters if data is loaded', function () {\n      targetClusterSelect.set('parentView.isLoaded', true);\n      targetClusterSelect.set('parentView.targetClusters', [\n        {name: 'test1'},\n        {name: 'test2'},\n        {name: App.get('clusterName')}\n      ]);\n      expect(targetClusterSelect.get('content')).to.eql([\n        'test1',\n        'test2',\n        Em.I18n.t('mirroring.dataset.addTargetCluster')\n      ]);\n    });\n  });\n\n  describe('targetClusterSelect.change', function () {\n    var targetClusterSelect;\n    beforeEach(function () {\n      targetClusterSelect = mainMirroringEditDataSetView.get('targetClusterSelect').create({\n        parentView: mainMirroringEditDataSetView,\n        content: ['test1', 'test2', 'test3']\n      });\n      sinon.stub(targetClusterSelect.parentView, 'manageClusters', Em.K);\n    });\n\n    afterEach(function () {\n      targetClusterSelect.parentView.manageClusters.restore();\n    });\n\n    it('should open manage cluster popup if appropriate option was selected', function () {\n      targetClusterSelect.set('selection', Em.I18n.t('mirroring.dataset.addTargetCluster'));\n      targetClusterSelect.change();\n      expect(targetClusterSelect.get('selection')).to.equal('test1');\n      expect(targetClusterSelect.parentView.manageClusters.calledOnce).to.be.true;\n      expect(targetClusterSelect.get('parentView.controller.formFields.datasetTargetClusterName')).to.equal('test1');\n    });\n    it('should not open manage cluster popup if appropriate option was not selected', function () {\n      targetClusterSelect.set('selection', 'test3');\n      targetClusterSelect.change();\n      expect(targetClusterSelect.get('selection')).to.equal('test3');\n      expect(targetClusterSelect.parentView.manageClusters.calledOnce).to.be.false;\n      expect(targetClusterSelect.get('parentView.controller.formFields.datasetTargetClusterName')).to.equal('test3');\n    });\n  });\n\n  describe('onTargetClustersChange', function () {\n\n    var testCases = [\n      {\n        isLoaded: true,\n        targetClusters: [1, 2, 3],\n        targetClusterName: 'test',\n        hasTargetClusters: true\n      },\n      {\n        isLoaded: false,\n        targetClusters: [1, 2, 3],\n        targetClusterName: null,\n        hasTargetClusters: false\n      },\n      {\n        isLoaded: true,\n        targetClusters: [1],\n        targetClusterName: null,\n        hasTargetClusters: false\n      }\n    ];\n\n    testCases.forEach(function (test) {\n      it('should set hasTargetClusters property depending on cluster list', function () {\n        mainMirroringEditDataSetView.set('isLoaded', test.isLoaded);\n        mainMirroringEditDataSetView.set('targetClusters', test.targetClusters);\n        mainMirroringEditDataSetView.set('controller.formFields.datasetTargetClusterName', 'test');\n        mainMirroringEditDataSetView.onTargetClustersChange();\n        expect(mainMirroringEditDataSetView.get('hasTargetClusters')).to.equal(test.hasTargetClusters);\n        expect(mainMirroringEditDataSetView.get('controller.formFields.datasetTargetClusterName')).to.equal(test.targetClusterName);\n      });\n    });\n  });\n\n  describe('fillForm', function () {\n\n    App.store.loadMany(App.Dataset, [\n      {\n        id: 'test1',\n        name: 'test1',\n        target_cluster_name: 'testCluster1',\n        source_dir: '/testDir1',\n        target_dir: '/testDir1',\n        frequency: '5',\n        frequency_unit: 'days',\n        schedule_start_date: new Date('11/29/2014 01:00 AM').toISOString().replace(/\\:\\d{2}\\.\\d{3}/, ''),\n        schedule_end_date: new Date('11/29/2014 02:00 AM').toISOString().replace(/\\:\\d{2}\\.\\d{3}/, '')\n      },\n      {\n        id: 'test2',\n        name: 'test2',\n        target_cluster_name: 'testCluster2',\n        source_dir: '/testDir2',\n        target_dir: '/testDir2',\n        frequency: '10',\n        frequency_unit: 'hours',\n        schedule_start_date: new Date('11/20/2014 01:00 AM').toISOString().replace(/\\:\\d{2}\\.\\d{3}/, ''),\n        schedule_end_date: new Date('11/21/2014 02:00 PM').toISOString().replace(/\\:\\d{2}\\.\\d{3}/, '')\n      },\n      {\n        id: 'test3',\n        name: 'test3',\n        target_cluster_name: 'testCluster3',\n        source_dir: '/testDir3',\n        target_dir: '/testDir3',\n        frequency: '1',\n        frequency_unit: 'minutes',\n        schedule_start_date: new Date('10/29/2014 01:00 AM').toISOString().replace(/\\:\\d{2}\\.\\d{3}/, ''),\n        schedule_end_date: new Date('11/29/2015 02:00 AM').toISOString().replace(/\\:\\d{2}\\.\\d{3}/, '')\n      }\n    ]);\n\n    var testCases = [\n      {\n        datasetName: 'test1',\n        datasetSourceDir: '/testDir1',\n        datasetTargetDir: '/testDir1',\n        datasetTargetClusterName: 'testCluster1',\n        datasetFrequency: '5',\n        repeatOptionSelected: 'days',\n        datasetStartDate: '11/29/14',\n        datasetEndDate: '11/29/14',\n        hoursForStart: '01',\n        hoursForEnd: '02',\n        minutesForStart: '00',\n        minutesForEnd: '00',\n        middayPeriodForStart: 'AM',\n        middayPeriodForEnd: 'AM'\n      },\n      {\n        datasetName: 'test2',\n        datasetSourceDir: '/testDir2',\n        datasetTargetDir: '/testDir2',\n        datasetTargetClusterName: 'testCluster2',\n        datasetFrequency: '10',\n        repeatOptionSelected: 'hours',\n        datasetStartDate: '11/20/14',\n        datasetEndDate: '11/21/14',\n        hoursForStart: '01',\n        hoursForEnd: '02',\n        minutesForStart: '00',\n        minutesForEnd: '00',\n        middayPeriodForStart: 'AM',\n        middayPeriodForEnd: 'PM'\n      },\n      {\n        datasetName: 'test3',\n        datasetSourceDir: '/testDir3',\n        datasetTargetDir: '/testDir3',\n        datasetTargetClusterName: 'testCluster3',\n        datasetFrequency: '1',\n        repeatOptionSelected: 'minutes',\n        datasetStartDate: '10/29/14',\n        datasetEndDate: '11/29/15',\n        hoursForStart: '01',\n        hoursForEnd: '02',\n        minutesForStart: '00',\n        minutesForEnd: '00',\n        middayPeriodForStart: 'AM',\n        middayPeriodForEnd: 'AM'\n      }\n    ];\n\n    it('should not set form fields if isLoaded is false', function () {\n      mainMirroringEditDataSetView.set('isLoaded', false);\n      mainMirroringEditDataSetView.fillForm();\n      Em.keys(mainMirroringEditDataSetView.get('controller.formFields')).forEach(function (field) {\n        expect(mainMirroringEditDataSetView.get('controller.formFields.' + field)).to.be.null;\n      });\n    });\n\n    it('should not set form fields if controller.isEdit is false', function () {\n      mainMirroringEditDataSetView.set('controller.isEdit', false);\n      mainMirroringEditDataSetView.fillForm();\n      Em.keys(mainMirroringEditDataSetView.get('controller.formFields')).forEach(function (field) {\n        expect(mainMirroringEditDataSetView.get('controller.formFields.' + field)).to.be.null;\n      });\n    });\n\n    testCases.forEach(function (test) {\n      it('set appropriate form fields from dataset model', function () {\n        mainMirroringEditDataSetView.set('controller.datasetIdToEdit', test.datasetName);\n        mainMirroringEditDataSetView.set('controller.isEdit', true);\n        mainMirroringEditDataSetView.fillForm();\n        Em.keys(mainMirroringEditDataSetView.get('controller.formFields')).forEach(function (field) {\n          expect(mainMirroringEditDataSetView.get('controller.formFields.' + field)).to.equal(test[field]);\n        });\n      });\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('views/main/service/info/configs');\n\ndescribe('App.MainServiceInfoConfigsView', function() {\n\n  var view = App.MainServiceInfoConfigsView.create({\n    controller: Em.Object.create()\n  });\n\n  describe('#updateComponentInformation', function() {\n\n    var testCases = [\n      {\n        title: 'if components absent then counters should be 0',\n        content: {\n          restartRequiredHostsAndComponents: {}\n        },\n        result: {\n          componentsCount: 0,\n          hostsCount: 0\n        }\n      },\n      {\n        title: 'if host doesn\\'t have components then hostsCount should be 1 and componentsCount should be 0',\n        content: {\n          restartRequiredHostsAndComponents: {\n            host1: []\n          }\n        },\n        result: {\n          componentsCount: 0,\n          hostsCount: 1\n        }\n      },\n      {\n        title: 'if host has 1 component then hostsCount should be 1 and componentsCount should be 1',\n        content: {\n          restartRequiredHostsAndComponents: {\n            host1: [{}]\n          }\n        },\n        result: {\n          componentsCount: 1,\n          hostsCount: 1\n        }\n      }\n    ];\n    testCases.forEach(function(test) {\n      it(test.title, function() {\n        view.set('controller.content', test.content);\n        view.updateComponentInformation();\n        expect(view.get('componentsCount')).to.equal(test.result.componentsCount);\n        expect(view.get('hostsCount')).to.equal(test.result.hostsCount);\n      });\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('views/main/service/info/summary');\n\ndescribe('App.MainServiceInfoSummaryView', function() {\n\n  var mainServiceInfoSummaryView = App.MainServiceInfoSummaryView.create({\n    monitorsLiveTextView: Em.View.create(),\n    controller: Em.Object.create({\n      content: Em.Object.create({\n        id: 'HDFS',\n        serviceName: 'HDFS',\n        hostComponents: []\n      })\n    })\n  });\n\n  describe('#servers', function () {\n    it('services shuldn\\'t have servers except FLUME and ZOOKEEPER', function () {\n      expect(mainServiceInfoSummaryView.get('servers')).to.be.empty;\n    });\n\n    it('if one server exists then first server should have isComma and isAnd property false', function () {\n      mainServiceInfoSummaryView.set('controller.content', Em.Object.create({\n        id: 'ZOOKEEPER',\n        serviceName: 'ZOOKEEPER',\n        hostComponents: [\n          Em.Object.create({\n            displayName: '',\n            isMaster: true\n          })\n        ]\n      }));\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(0).isComma).to.equal(false);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(0).isAnd).to.equal(false);\n    });\n\n    it('if more than one servers exist then first server should have isComma - true and isAnd - false', function () {\n      mainServiceInfoSummaryView.set('controller.content', Em.Object.create({\n        id: 'ZOOKEEPER',\n        serviceName: 'ZOOKEEPER',\n        hostComponents: [\n          Em.Object.create({\n            displayName: '',\n            isMaster: true\n          }),\n          Em.Object.create({\n            displayName: '',\n            isMaster: true\n          })\n        ]\n      }));\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(0).isComma).to.equal(true);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(0).isAnd).to.equal(false);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(1).isComma).to.equal(false);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(1).isAnd).to.equal(false);\n    });\n\n    it('if more than two servers exist then second server should have isComma - false and isAnd - true', function () {\n      mainServiceInfoSummaryView.set('controller.content', Em.Object.create({\n        id: 'ZOOKEEPER',\n        serviceName: 'ZOOKEEPER',\n        hostComponents: [\n          Em.Object.create({\n            displayName: '',\n            isMaster: true\n          }),\n          Em.Object.create({\n            displayName: '',\n            isMaster: true\n          }),\n          Em.Object.create({\n            displayName: '',\n            isMaster: true\n          })\n        ]\n      }));\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(0).isComma).to.equal(true);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(0).isAnd).to.equal(false);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(1).isComma).to.equal(false);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(1).isAnd).to.equal(true);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(2).isComma).to.equal(false);\n      expect(mainServiceInfoSummaryView.get('servers').objectAt(2).isAnd).to.equal(false);\n    });\n\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/controls_view');\nrequire('utils/ajax/ajax');\nrequire('router');\n\ndescribe('views/wizard/control_views', function() {\n  describe('App.CheckDBConnectionView', function() {\n    var createView = function(serviceName) {\n      return App.CheckDBConnectionView.extend({\n        parentView: Em.View.create({\n          service: Em.Object.create({\n            serviceName: serviceName\n          }),\n          categoryConfigsAll: function() {\n            return Em.A(\n              require('data/HDP2/global_properties').configProperties.concat(require('data/HDP2/site_properties').configProperties)\n                .filterProperty('serviceName', serviceName).map(function(property) { return App.ServiceConfigProperty.create(property)})\n            );\n          }.property()\n        })\n      });\n    };\n    var generateTypeValueProp = function(type, value) {\n      return {\n        type: type,\n        value: value\n      }\n    };\n    var prepareConfigsTesting = function() {\n      var view = createView('HIVE').create({ databaseName: 'MySQL'});\n      var setConfigProperty = function(name, value) {\n        view.get('parentView.categoryConfigsAll').findProperty('name', name).set('value', value);\n      };\n\n      setConfigProperty('javax.jdo.option.ConnectionUserName', 'hive_user');\n      setConfigProperty('javax.jdo.option.ConnectionPassword', 'hive_pass');\n      setConfigProperty('ambari.hive.db.schema.name', 'hive_scheme');\n      setConfigProperty('javax.jdo.option.ConnectionURL', 'hive_c_url');\n      return view;\n    }\n    describe('`Oozie` properties checking', function() {\n      var view = createView('OOZIE').create();\n      describe('#requiredProperties', function() {\n        var expectedProperties = ['oozie.db.schema.name','oozie.service.JPAService.jdbc.username','oozie.service.JPAService.jdbc.password','oozie.service.JPAService.jdbc.driver','oozie.service.JPAService.jdbc.url'];\n        it('required properties present {0}'.format(expectedProperties.join(',')), function() {\n          expect(view.get('requiredProperties')).to.have.members(expectedProperties);\n        });\n      });\n      describe('#hostNameProperty', function() {\n        var testMessage = 'property name should be `{0}`';\n        var tests = [\n          {\n            databaseName: 'MySQL',\n            e: 'oozie_existing_mysql_host'\n          },\n          {\n            databaseName: 'PostgreSQL',\n            e: 'oozie_existing_postgresql_host'\n          },\n          {\n            databaseName: 'Oracle',\n            e: 'oozie_existing_oracle_host'\n          }\n        ];\n        tests.forEach(function(test) {\n          it(testMessage.format(test.e), function() {\n            view.set('databaseName', test.databaseName);\n            expect(view.get('hostNameProperty')).to.eql(test.e);\n          });\n        });\n      });\n    });\n\n    describe('`Hive` properties checking', function() {\n      var view = createView('HIVE').create();\n      describe('#requiredProperties', function() {\n        var expectedProperties = ['ambari.hive.db.schema.name','javax.jdo.option.ConnectionUserName','javax.jdo.option.ConnectionPassword','javax.jdo.option.ConnectionDriverName','javax.jdo.option.ConnectionURL'];\n        it('required properties present {0}'.format(expectedProperties.join(',')), function() {\n          expect(view.get('requiredProperties')).to.have.members(expectedProperties);\n        });\n      });\n      describe('#hostNameProperty', function() {\n        var testMessage = 'property name should be `{0}`';\n        var tests = [\n          {\n            databaseName: 'MySQL',\n            e: 'hive_existing_mysql_host'\n          },\n          {\n            databaseName: 'PostgreSQL',\n            e: 'hive_existing_postgresql_host'\n          },\n          {\n            databaseName: 'Oracle',\n            e: 'hive_existing_oracle_host'\n          }\n        ];\n        tests.forEach(function(test) {\n          it(testMessage.format(test.e), function() {\n            view.set('databaseName', test.databaseName);\n            expect(view.get('hostNameProperty')).to.eql(test.e);\n          });\n        }, this);\n      });\n      describe('#connectionProperties', function() {\n        var view = prepareConfigsTesting();\n        var tests = [\n          generateTypeValueProp('user_name', 'hive_user'),\n          generateTypeValueProp('user_passwd', 'hive_pass'),\n          generateTypeValueProp('db_connection_url', 'hive_c_url')\n        ];\n        var testMessage = 'property `{0}` should have `{1}`';\n        tests.forEach(function(test) {\n          it(testMessage.format(test.value, test.type), function() {\n            expect(view.get('connectionProperties')[test.type]).to.eql(test.value);\n          });\n        });\n      });\n\n      describe('#preparedDBProperties', function() {\n        var view = prepareConfigsTesting();\n        var tests = [\n          generateTypeValueProp('javax.jdo.option.ConnectionUserName', 'hive_user'),\n          generateTypeValueProp('javax.jdo.option.ConnectionPassword', 'hive_pass'),\n          generateTypeValueProp('javax.jdo.option.ConnectionURL', 'hive_c_url')\n        ];\n        var testMessage = 'property `{1}` should have `{0}`';\n        tests.forEach(function(test) {\n          it(testMessage.format(test.value, test.type), function() {\n            expect(view.get('preparedDBProperties')[test.type]).to.eql(test.value);\n          });\n        });\n      });\n\n\n    });\n\n    describe('#isBtnDisabled', function() {\n      var view = createView('HIVE').create({ databaseName: 'MySQL' });\n      var testMessage = 'button should be {0} if `isValidationPassed`/`isConnecting`: {1}/{2}';\n      var tests = [\n        {\n          isValidationPassed: true,\n          isConnecting: true,\n          e: true\n        },\n        {\n          isValidationPassed: true,\n          isConnecting: false,\n          e: false\n        }\n      ];\n      tests.forEach(function(test) {\n        it(testMessage.format(!!test.e ? 'disabled' : 'enabled', test.isValidationPassed, test.isConnecting), function() {\n          view.set('isValidationPassed', test.isValidationPassed);\n          view.set('isConnecting', test.isConnecting);\n          expect(view.get('isBtnDisabled')).to.be.eql(test.e);\n        });\n      })\n    });\n\n    describe('#connectToDatabase()', function() {\n      before(function() {\n        sinon.spy(App.ajax, 'send');\n      });\n      describe('connection request validation', function() {\n        var view = createView('HIVE').create({ databaseName: 'MySQL'});\n        var setConfigProperty = function(name, value) {\n          view.get('parentView.categoryConfigsAll').findProperty('name', name).set('value', value);\n        };\n\n        setConfigProperty('javax.jdo.option.ConnectionUserName', 'hive_user');\n        setConfigProperty('javax.jdo.option.ConnectionPassword', 'hive_pass');\n        setConfigProperty('ambari.hive.db.schema.name', 'hive_scheme');\n        setConfigProperty('javax.jdo.option.ConnectionURL', 'hive_c_url');\n\n        it('request should be passed with correct params', function() {\n          view.connectToDatabase();\n          expect(App.ajax.send.calledOnce).to.be.ok;\n        })\n      });\n      after(function() {\n        App.ajax.send.restore();\n      })\n    });\n\n  });\n\n  describe('App.ServiceConfigRadioButtons', function() {\n    var createView = function(serviceName) {\n      return App.ServiceConfigRadioButtons.extend({\n        categoryConfigsAll: function() {\n          return Em.A(\n            require('data/HDP2/global_properties').configProperties.concat(require('data/HDP2/site_properties').configProperties)\n              .filterProperty('serviceName', serviceName).map(function(property) { return App.ServiceConfigProperty.create(property)})\n          );\n        }.property()\n      });\n    };\n\n    var setProperties = function(properties, propertyMap) {\n      for (var propertyName in propertyMap) {\n        properties.findProperty('name', propertyName).set('value', propertyMap[propertyName]);\n      }\n    };\n\n    before(function() {\n      App.clusterStatus.set('wizardControllerName','installerController');\n    });\n    describe('#onOptionsChange()', function() {\n      var oozieDerby =  {\n        serviceConfig: { value: 'New Derby Database' },\n        setupProperties: {\n          'oozie.db.schema.name': 'derby.oozie.schema',\n          'oozie.service.JPAService.jdbc.driver': 'oozie.driver',\n          'oozie_ambari_host': 'derby.host.com'\n        },\n        expectedProperties: [\n          {\n            path: 'databaseName',\n            value: 'derby.oozie.schema'\n          },\n          {\n            path: 'dbClass.name',\n            value: 'oozie.service.JPAService.jdbc.driver'\n          },\n          {\n            path: 'dbClass.value',\n            value: 'org.apache.derby.jdbc.EmbeddedDriver'\n          },\n          {\n            path: 'hostName',\n            value: 'derby.host.com'\n          },\n          {\n            path: 'connectionUrl.name',\n            value: 'oozie.service.JPAService.jdbc.url'\n          },\n          {\n            path: 'connectionUrl.value',\n            value: 'jdbc:derby:${oozie.data.dir}/${oozie.db.schema.name}-db;create=true'\n          }\n        ]\n      };\n      var oozieExistingMysql = {\n        serviceConfig: { value: 'Existing MySQL Database' },\n        setupProperties: {\n          'oozie.db.schema.name': 'mysql.oozie.schema',\n          'oozie.service.JPAService.jdbc.driver': 'oozie.driver',\n          'oozie_existing_mysql_host': 'mysql.host.com'\n        },\n        expectedProperties: [\n          {\n            path: 'databaseName',\n            value: 'mysql.oozie.schema'\n          },\n          {\n            path: 'dbClass.name',\n            value: 'oozie.service.JPAService.jdbc.driver'\n          },\n          {\n            path: 'dbClass.value',\n            value: 'com.mysql.jdbc.Driver'\n          },\n          {\n            path: 'hostName',\n            value: 'mysql.host.com'\n          },\n          {\n            path: 'connectionUrl.name',\n            value: 'oozie.service.JPAService.jdbc.url'\n          },\n          {\n            path: 'connectionUrl.value',\n            value: 'jdbc:mysql://mysql.host.com/mysql.oozie.schema'\n          }\n        ]\n      };\n      var oozieExistingPostgresql = {\n        serviceConfig: { value: 'Existing PostgreSQL Database' },\n        setupProperties: {\n          'oozie.db.schema.name': 'postgresql.oozie.schema',\n          'oozie.service.JPAService.jdbc.driver': 'oozie.driver',\n          'oozie_existing_postgresql_host': 'postgresql.host.com'\n        },\n        expectedProperties: [\n          {\n            path: 'databaseName',\n            value: 'postgresql.oozie.schema'\n          },\n          {\n            path: 'dbClass.name',\n            value: 'oozie.service.JPAService.jdbc.driver'\n          },\n          {\n            path: 'dbClass.value',\n            value: 'org.postgresql.Driver'\n          },\n          {\n            path: 'hostName',\n            value: 'postgresql.host.com'\n          },\n          {\n            path: 'connectionUrl.name',\n            value: 'oozie.service.JPAService.jdbc.url'\n          },\n          {\n            path: 'connectionUrl.value',\n            value: 'jdbc:postgresql://postgresql.host.com:5432/postgresql.oozie.schema'\n          }\n        ]\n      };\n      var oozieExistingOracle = {\n        serviceConfig: { value: 'Existing Oracle Database' },\n        setupProperties: {\n          'oozie.db.schema.name': 'oracle.oozie.schema',\n          'oozie.service.JPAService.jdbc.driver': 'oozie.driver',\n          'oozie_existing_oracle_host': 'oracle.host.com'\n        },\n        expectedProperties: [\n          {\n            path: 'databaseName',\n            value: 'oracle.oozie.schema'\n          },\n          {\n            path: 'dbClass.name',\n            value: 'oozie.service.JPAService.jdbc.driver'\n          },\n          {\n            path: 'dbClass.value',\n            value: 'oracle.jdbc.driver.OracleDriver'\n          },\n          {\n            path: 'hostName',\n            value: 'oracle.host.com'\n          },\n          {\n            path: 'connectionUrl.name',\n            value: 'oozie.service.JPAService.jdbc.url'\n          },\n          {\n            path: 'connectionUrl.value',\n            value: 'jdbc:oracle:thin:@//oracle.host.com:1521/oracle.oozie.schema'\n          }\n        ]\n      };\n      var tests = [\n        {\n          serviceName: 'OOZIE',\n          mockData: [\n            oozieDerby,\n            oozieExistingMysql,\n            oozieExistingPostgresql,\n            oozieExistingOracle\n          ]\n        }\n      ];\n      tests.forEach(function(test) {\n        describe('`{0}` service processing'.format(test.serviceName), function() {\n          test.mockData.forEach(function(test) {\n            describe('`oozie_database` value \"{0}\"'.format(test.serviceConfig.value), function() {\n              var view = createView('OOZIE').create();\n              before(function() {\n                var categoryConfigs = view.get('categoryConfigsAll');\n                view.reopen({\n                  serviceConfig: function() {\n                    var property = categoryConfigs.findProperty('name', 'oozie_database');\n                    property.set('value', test.serviceConfig.value);\n                    return property;\n                  }.property()\n                });\n                setProperties(categoryConfigs, test.setupProperties);\n                view.didInsertElement();\n              })\n              test.expectedProperties.forEach(function(property) {\n                it('#{0} should be \"{1}\"'.format(property.path, property.value), function() {\n                  expect(view.get(property.path)).to.eql(property.value);\n                });\n              });\n            });\n          });\n        })\n      });\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/step0_view');\n\nvar view, controller = Em.Object.create({\n  clusterNameError: '',\n  loadStep: Em.K\n});\n\ndescribe('App.WizardStep0View', function () {\n\n  beforeEach(function () {\n    view = App.WizardStep0View.create({'controller': controller});\n  });\n\n  describe('#onError', function () {\n    it('should be true if clusterNameError appears', function () {\n      controller.set('clusterNameError', 'ERROR');\n      expect(view.get('onError')).to.equal(true);\n    });\n    it('should be false if clusterNameError doesn\\'t appears', function () {\n      controller.set('clusterNameError', '');\n      expect(view.get('onError')).to.equal(false);\n    });\n  });\n\n  describe('#didInsertElement', function () {\n    beforeEach(function () {\n      sinon.stub(App, 'popover', Em.K);\n      sinon.spy(view.get('controller'), 'loadStep');\n    });\n    afterEach(function () {\n      App.popover.restore();\n      view.get('controller').loadStep.restore();\n    });\n    it('should call loadStep', function () {\n      view.didInsertElement();\n      expect(view.get('controller').loadStep.calledOnce).to.equal(true);\n    });\n    it('should create popover', function () {\n      view.didInsertElement();\n      expect(App.popover.calledOnce).to.equal(true);\n    });\n  });\n\n});\n\ndescribe('App.WizardStep0ViewClusterNameInput', function () {\n\n  beforeEach(function() {\n    view = App.WizardStep0ViewClusterNameInput.create({\n      parentView: Em.Object.create({\n        controller: Em.Object.create({\n          submit: Em.K\n        })\n      })\n    });\n  });\n\n  describe('#keyPress', function() {\n    it('should return true if pressed not Enter', function() {\n      expect(view.keyPress({keyCode: 1})).to.equal(true);\n    });\n    it('should submit form if Enter pressed', function() {\n      sinon.spy(view.get('parentView.controller'), 'submit');\n      expect(view.keyPress({keyCode: 13})).to.equal(false);\n      expect(view.get('parentView.controller').submit.calledOnce).to.equal(true);\n      view.get('parentView.controller').submit.restore();\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/step10_view');\nvar view;\ndescribe('App.WizardStep10View', function() {\n  beforeEach(function() {\n    view = App.WizardStep10View.create({\n      controller: App.WizardStep10Controller.create()\n    });\n  });\n  describe('didInsertElement', function() {\n    it('should call loadStep', function() {\n      sinon.stub(view.get('controller'), 'loadStep', Em.K);\n      view.didInsertElement();\n      expect(view.get('controller').loadStep.calledOnce).to.equal(true);\n      view.get('controller').loadStep.restore();\n    });\n  });\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/step1_view');\n\nvar view;\n\nvar controller = Em.Object.create({\n  content: {\n    stacks: []\n  }\n});\n\ndescribe('App.WizardStep1View', function () {\n\n  beforeEach(function () {\n    view = App.WizardStep1View.create({'controller': controller});\n    view.set('$', function () {\n      return Em.Object.create({hide: Em.K, toggle: Em.K});\n    });\n  });\n\n  describe('#allRepositoriesGroups', function () {\n\n    var controller = Em.Object.create({\n      content: {\n        stacks: [\n          {\n            operatingSystems: [\n              {\n                osType: 'redhat5',\n                selected: true\n              },\n              {\n                osType: 'redhat5',\n                selected: true\n              },\n              {\n                osType: 'redhat6',\n                selected: false\n              }\n            ],\n            isSelected: true\n          }\n        ]\n      }\n    });\n\n    var allRepositories = [\n      Ember.Object.create({osType: 'redhat5', 'empty-error': true}),\n      Ember.Object.create({osType: 'redhat5', 'empty-error': true}),\n      Ember.Object.create({osType: 'redhat6', 'empty-error': true})\n    ];\n\n    it('should create repo groups from repo list', function () {\n      view.reopen({\n        controller: controller\n      });\n      view.set('allRepositories', allRepositories);\n      expect(view.get('allRepositoriesGroups.length')).to.equal(2);\n      expect(view.get('allRepositoriesGroups')[0].get('name')).to.equal('redhat5');\n      expect(view.get('allRepositoriesGroups')[1].get('name')).to.equal('redhat6');\n      expect(view.get('allRepositoriesGroups')[0].get('checked')).to.be.true;\n      expect(view.get('allRepositoriesGroups')[1].get('checked')).to.be.false;\n      expect(view.get('allRepositoriesGroups')[0].get('repositories')).to.eql([allRepositories[0], allRepositories[1]]);\n      expect(view.get('allRepositoriesGroups')[1].get('repositories')).to.eql([allRepositories[2]]);\n    });\n\n    it('should create empty array if there is no stacks', function () {\n      view.reopen({\n        controller: controller\n      });\n      view.set('controller.content.stacks', []);\n      view.set('allRepositories', allRepositories);\n      expect(view.get('allRepositoriesGroups.length')).to.equal(0);\n    });\n  });\n\n  describe('#emptyRepoExist', function () {\n\n    var tests = Em.A([\n      {\n        allRepositories: [\n          {'empty-error': false},\n          {'empty-error': false},\n          {'empty-error': false}\n        ],\n        e: false\n      },\n      {\n        allRepositories: [\n          {'empty-error': true},\n          {'empty-error': false},\n          {'empty-error': false}\n        ],\n        e: true\n      },\n      {\n        allRepositories: [\n          {'empty-error': true},\n          {'empty-error': true},\n          {'empty-error': true}\n        ],\n        e: true\n      }\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.allRepositories.mapProperty('empty-error').join(', '), function () {\n        view.set('allRepositories', test.allRepositories);\n        expect(view.get('emptyRepoExist')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#allRepoUnchecked', function () {\n\n    var tests = Em.A([\n      {\n        allRepositoriesGroups: [\n          {'checked': false},\n          {'checked': false},\n          {'checked': false}\n        ],\n        e: true\n      },\n      {\n        allRepositoriesGroups: [\n          {'checked': true},\n          {'checked': false},\n          {'checked': false}\n        ],\n        e: false\n      },\n      {\n        allRepositoriesGroups: [\n          {'checked': true},\n          {'checked': true},\n          {'checked': true}\n        ],\n        e: false\n      }\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.allRepositoriesGroups.mapProperty('checked').join(', '), function () {\n        view.reopen({\n          allRepositoriesGroups: test.allRepositoriesGroups\n        });\n        expect(view.get('allRepoUnchecked')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#stacks', function () {\n\n    var tests = Em.A([\n      {\n        m: 'Stack with 2 HDP',\n        stacks: [\n          Em.Object.create({isSelected: true, name: 'HDP-2.0.1'}),\n          Em.Object.create({isSelected: false, name: 'HDP-1.3.3'})\n        ],\n        e: {\n          names: ['HDP 2.0.1', 'HDP 1.3.3'],\n          selected: [true, false]\n        }\n      },\n      {\n        m: 'No HDP',\n        stacks: [],\n        e: {\n          names: [],\n          selected: []\n        }\n      }\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        view.set('controller.content.stacks', test.stacks);\n        var stacks = view.get('stacks');\n        expect(stacks.mapProperty('name')).to.eql(test.e.names);\n        expect(stacks.mapProperty('isSelected')).to.eql(test.e.selected);\n      });\n    });\n\n  });\n\n  describe('#isSubmitDisabled', function () {\n\n    var tests = Em.A([\n      {\n        emptyRepoExist: false,\n        allRepoUnchecked: false,\n        invalidUrlExist: false,\n        e: false\n      },\n      {\n        emptyRepoExist: true,\n        allRepoUnchecked: false,\n        invalidUrlExist: false,\n        e: true\n      },\n      {\n        emptyRepoExist: false,\n        allRepoUnchecked: true,\n        invalidUrlExist: false,\n        e: true\n      },\n      {\n        emptyRepoExist: false,\n        allRepoUnchecked: false,\n        invalidUrlExist: true,\n        e: true\n      },\n      {\n        emptyRepoExist: true,\n        allRepoUnchecked: false,\n        invalidUrlExist: true,\n        e: true\n      },\n      {\n        emptyRepoExist: true,\n        allRepoUnchecked: true,\n        invalidUrlExist: false,\n        e: true\n      },\n      {\n        emptyRepoExist: false,\n        allRepoUnchecked: true,\n        invalidUrlExist: true,\n        e: true\n      },\n      {\n        emptyRepoExist: true,\n        allRepoUnchecked: true,\n        invalidUrlExist: true,\n        e: true\n      }\n    ]);\n\n    tests.forEach(function (test) {\n      it(test.emptyRepoExist.toString() + ' ' + test.allRepoUnchecked.toString() + ' ' + test.invalidUrlExist.toString(), function () {\n        view = App.WizardStep1View.create();\n        view.reopen({\n          emptyRepoExist: test.emptyRepoExist,\n          allRepoUnchecked: test.allRepoUnchecked,\n          invalidUrlExist: test.invalidUrlExist\n        });\n        expect(view.get('isSubmitDisabled')).to.equal(test.e);\n      });\n    });\n\n  });\n\n  describe('#invalidUrlExist', function () {\n    var tests = Em.A([\n      {\n        stacks: [Em.Object.create({isSelected: true, invalidCnt: 1})],\n        allRepositories: [Em.Object.create({validation: 'icon-exclamation-sign'})],\n        m: 'invalidCnt: 1, validation: icon-exclamation-sign',\n        e: true\n      },\n      {\n        stacks: [Em.Object.create({isSelected: true, invalidCnt: 1})],\n        allRepositories: [Em.Object.create({validation: ''})],\n        m: 'invalidCnt: 1, validation: \"\"',\n        e: false\n      },\n      {\n        stacks: [Em.Object.create({isSelected: true, invalidCnt: 0})],\n        allRepositories: [Em.Object.create({validation: ''})],\n        m: 'invalidCnt: 0, validation: \"\"',\n        e: false\n      },\n      {\n        stacks: [Em.Object.create({isSelected: true, invalidCnt: 0})],\n        allRepositories: [Em.Object.create({validation: 'icon-exclamation-sign'})],\n        m: 'invalidCnt: 0, validation: icon-exclamation-sign',\n        e: false\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        view.reopen({\n          allRepositoriesGroups: null\n        });\n        view.set('controller.content.stacks', test.stacks);\n        view.set('allRepositories', test.allRepositories);\n        expect(view.get('invalidUrlExist')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#totalErrorCnt', function () {\n    var tests = Em.A([\n      {\n        allRepositories: [\n          {}\n        ],\n        m: 'allRepoUnchecked',\n        allRepoUnchecked: true,\n        e: 1\n      },\n      {\n        allRepositories: [\n          {'empty-error': true},\n          {'empty-error': true}\n        ],\n        allRepoUnchecked: false,\n        m: 'two with empty-error',\n        e: 2\n      },\n      {\n        allRepositories: [\n          {'validation': 'icon-exclamation-sign'},\n          {'validation': 'icon-exclamation-sign'}\n        ],\n        allRepoUnchecked: false,\n        m: 'two with validation=\"icon-exclamation-sign\"',\n        e: 2\n      },\n      {\n        allRepositories: [\n          {'empty-error': true, 'validation': 'icon-exclamation-sign'},\n          {'empty-error': true, 'validation': 'icon-exclamation-sign'}\n        ],\n        allRepoUnchecked: false,\n        m: 'two with empty-error, two with validation=\"icon-exclamation-sign\"',\n        e: 4\n      },\n      {\n        allRepositories: [\n          {}\n        ],\n        allRepoUnchecked: false,\n        m: 'no errors/warnings etc',\n        e: 0\n      }\n    ]);\n    tests.forEach(function (test) {\n      it(test.m, function () {\n        view.reopen({\n          allRepositoriesGroups: null,\n          allRepoUnchecked: test.allRepoUnchecked\n        });\n        view.set('allRepositories', test.allRepositories);\n        expect(view.get('totalErrorCnt')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#didInsertElement', function () {\n    it('should create tooltip', function () {\n      sinon.stub($.fn, 'tooltip', Em.K);\n      view.set('isRLCollapsed', false);\n      view.didInsertElement();\n      expect($.fn.tooltip.calledOnce).to.equal(true);\n      $.fn.tooltip.restore();\n    });\n  });\n\n  describe('#stackRadioButton', function () {\n\n    var v;\n    beforeEach(function () {\n      v = view.get('stackRadioButton').create({\n        content: Em.Object.create({\n          name: ''\n        }),\n        controller: Em.Object.create({\n          content: Em.Object.create({\n            stacks: []\n          })\n        })\n      });\n    });\n\n    describe('#checked', function () {\n      it('should be equal content.isSelected', function () {\n        v.set('content.isSelected', true);\n        expect(v.get('checked')).to.equal(true);\n        v.set('content.isSelected', false);\n        expect(v.get('checked')).to.equal(false);\n      });\n    });\n\n    describe('#click', function () {\n      it('should select proper stack', function () {\n        v.set('controller.content.stacks', Em.A([Em.Object.create({name: 'n-1'}), Em.Object.create({name: 'n-2'}), Em.Object.create({name: 'n-3'})]));\n        v.set('content.name', 'n 2');\n        v.click();\n        expect(v.get('controller.content.stacks').getEach('isSelected')).to.eql([false, true, false]);\n      });\n    });\n\n  });\n\n  describe('#popoverView', function () {\n\n    var v;\n    beforeEach(function () {\n      v = view.get('popoverView').create();\n      sinon.stub(App, 'popover', Em.K);\n    });\n\n    afterEach(function () {\n      App.popover.restore();\n    });\n\n    describe('#didInsertElement', function () {\n      it('should create popover', function () {\n        v.didInsertElement();\n        expect(App.popover.calledOnce).to.equal(true);\n      });\n    });\n\n  });\n\n  describe('#onToggleBlock', function () {\n    it('should toggle isRLCollapsed', function () {\n      view.set('isRLCollapsed', true);\n      view.onToggleBlock();\n      expect(view.get('isRLCollapsed')).to.equal(false);\n      view.onToggleBlock();\n      expect(view.get('isRLCollapsed')).to.equal(true);\n    });\n  });\n\n  describe('#updateByCheckbox', function () {\n\n    var allRepositories = [\n      Em.Object.create({\n        id: 'id',\n        osType: 'redhat5',\n        baseUrl: 'baseUrl',\n        latestBaseUrl: 'latestBaseUrl',\n        validation: '',\n        selected: ''\n      })\n    ];\n\n    var allRepositoriesGroups = [\n      Em.Object.create({\n        name: 'redhat5',\n        checked: false,\n        repositories: [Em.Object.create({\n          id: 'id',\n          osType: 'redhat5',\n          baseUrl: 'baseUrl',\n          latestBaseUrl: 'latestBaseUrl',\n          validation: '',\n          selected: ''\n        })\n        ]\n      })\n    ];\n\n    var controller = {\n      content: {\n        stacks: [\n          {\n            isSelected: true,\n            operatingSystems: [\n              {\n                id: 'id',\n                osType: 'redhat5',\n                baseUrl: 'baseUrl',\n                latestBaseUrl: 'latestBaseUrl',\n                validation: '',\n                selected: false\n              }\n            ]\n          }\n        ]\n      }\n    };\n\n    it('target group isn\\'t checked', function () {\n      view.reopen({\n        allRepositories: allRepositories,\n        allRepositoriesGroups: allRepositoriesGroups,\n        controller: controller\n      });\n      view.updateByCheckbox();\n      var os = view.get('controller.content.stacks')[0].operatingSystems[0],\n          targetGroup = view.get('allRepositories.firstObject');\n      expect(os.baseUrl).to.equal(os.latestBaseUrl);\n      expect(os.selected).to.equal(false);\n      expect(os.validation).to.be.null;\n      expect(targetGroup.get('baseUrl')).to.equal('latestBaseUrl');\n      expect(targetGroup.get('latestBaseUrl')).to.equal('latestBaseUrl');\n      expect(targetGroup.get('undo')).to.equal(false);\n      expect(targetGroup.get('invalid-error')).to.equal(false);\n      expect(targetGroup.get('clearAll')).to.equal(false);\n      expect(targetGroup.get('empty-error')).to.equal(false);\n      expect(targetGroup.get('validation')).to.be.null;\n    });\n\n    it('target group is checked, skipValidationChecked = true', function () {\n      controller.content.stacks[0].operatingSystems[0].selected = true;\n      allRepositoriesGroups[0].set('checked', true);\n      view.reopen({\n        allRepositories: allRepositories,\n        allRepositoriesGroups: allRepositoriesGroups,\n        controller: controller,\n        skipValidationChecked: true\n      });\n      view.updateByCheckbox();\n      var os = view.get('controller.content.stacks')[0].operatingSystems[0],\n          targetGroup = view.get('allRepositories.firstObject');\n      expect(os.selected).to.equal(true);\n      expect(os.skipValidation).to.equal(true);\n      expect(targetGroup.get('invalid-error')).to.equal(false);\n      expect(targetGroup.get('empty-error')).to.equal(false);\n      expect(targetGroup.get('clearAll')).to.equal('latestBaseUrl');\n      expect(targetGroup.get('validation')).to.be.null;\n    });\n  });\n\n  describe('#clearGroupLocalRepository', function () {\n    it('should be proxy for doActionForGroupLocalRepository', function () {\n      sinon.stub(view, 'doActionForGroupLocalRepository', Em.K);\n      view.clearGroupLocalRepository({});\n      expect(view.doActionForGroupLocalRepository.calledWith({}, '')).to.equal(true);\n      view.doActionForGroupLocalRepository.restore();\n    });\n  });\n\n  describe('#undoGroupLocalRepository', function () {\n    it('should be proxy for doActionForGroupLocalRepository', function () {\n      sinon.stub(view, 'doActionForGroupLocalRepository', Em.K);\n      view.undoGroupLocalRepository({});\n      expect(view.doActionForGroupLocalRepository.calledWith({}, 'latestBaseUrl')).to.equal(true);\n      view.doActionForGroupLocalRepository.restore();\n    });\n  });\n\n  describe('#doActionForGroupLocalRepository', function () {\n\n    beforeEach(function () {\n      sinon.stub(view, 'loadRepositories', Em.K);\n    });\n\n    afterEach(function () {\n      view.loadRepositories.restore();\n    });\n\n    it('should update OS in selected stack', function () {\n      var event = {context: Em.Object.create({'group-number': 0})};\n      view.reopen({\n        allRepositories: [\n          Em.Object.create({\n            'group-number': 0,\n            checked: false\n          })\n        ],\n        controller: {\n          content: {\n            stacks: [\n              {\n                isSelected: true,\n                operatingSystems: [\n                  {\n                    osType: 'redhat5',\n                    baseUrl: 'baseUrl',\n                    latestBaseUrl: 'latestBaseUrl',\n                    validation: '',\n                    selected: ''\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      });\n      view.doActionForGroupLocalRepository(event, '');\n      var os = view.get('controller.content.stacks')[0].operatingSystems[0];\n      expect(os.baseUrl).to.equal('');\n      expect(os.validation).to.be.null;\n      expect(view.loadRepositories.calledOnce).to.equal(true);\n    });\n\n    it('should update OS in selected stack (2)', function () {\n      var event = {context: Em.Object.create({'group-number': 0})};\n      view.reopen({\n        allRepositories: [\n          Em.Object.create({\n            'group-number': 0,\n            checked: false\n          })\n        ],\n        controller: {\n          content: {\n            stacks: [\n              {\n                isSelected: true,\n                operatingSystems: [\n                  {\n                    osType: 'redhat5',\n                    baseUrl: 'baseUrl',\n                    latestBaseUrl: 'latestBaseUrl',\n                    validation: '',\n                    selected: ''\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      });\n      view.doActionForGroupLocalRepository(event, 'latestBaseUrl');\n      var os = view.get('controller.content.stacks')[0].operatingSystems[0];\n      expect(os.baseUrl).to.equal('latestBaseUrl');\n      expect(os.validation).to.be.null;\n      expect(view.loadRepositories.calledOnce).to.equal(true);\n    });\n\n  });\n\n  describe('#editLocalRepository', function () {\n\n    it('should update os and group', function () {\n      view.reopen({\n        allRepositories: [\n          Em.Object.create({\n            'group-number': 0,\n            checked: false,\n            baseUrl: 'b1'\n          })\n        ],\n        controller: {\n          content: {\n            stacks: [\n              {\n                isSelected: true,\n                operatingSystems: [\n                  {\n                    osType: 'redhat5',\n                    baseUrl: 'baseUrl',\n                    latestBaseUrl: 'latestBaseUrl',\n                    validation: '',\n                    selected: ''\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      });\n      view.editLocalRepository();\n      var os = view.get('controller.content.stacks')[0].operatingSystems[0],\n          targetGroup = view.get('allRepositories.firstObject');\n      expect(os.baseUrl).to.equal(targetGroup.get('baseUrl'));\n      expect(os.validation).to.be.null;\n\n\n      expect(targetGroup.get('undo')).to.equal(true);\n      expect(targetGroup.get('invalid-error')).to.equal(false);\n      expect(targetGroup.get('empty-error')).to.equal(false);\n      expect(targetGroup.get('validation')).to.be.null;\n    });\n\n  });\n\n  describe('#loadRepositories', function () {\n    beforeEach(function () {\n      sinon.stub(view, 'updateByCheckbox', Em.K);\n      sinon.stub(view, 'editLocalRepository', Em.K);\n    });\n    afterEach(function () {\n      view.updateByCheckbox.restore();\n      view.editLocalRepository.restore();\n    });\n    it('Should create repository object from controller content stack data', function () {\n      controller = {\n        content: {\n          stacks: [\n            {\n              isSelected: true,\n              operatingSystems: [\n                {\n                  'id': 'test',\n                  'repoId': 'HDP',\n                  'baseUrl': 'http://test1',\n                  'osType': 'RedHat',\n                  'latestBaseUrl': 'http://test1',\n                  'defaultBaseUrl': 'http://test3',\n                  'validation': 'icon-exclamation-sign',\n                  'errorTitle': 'test',\n                  'errorContent': 'test'\n                }\n              ]\n            }\n          ]\n        }\n      };\n      result = Ember.Object.create({\n        'id': 'test',\n        'repoId': 'HDP',\n        'baseUrl': 'http://test1',\n        'osType': 'RedHat',\n        'latestBaseUrl': 'http://test1',\n        'defaultBaseUrl': 'http://test3',\n        'empty-error': false,\n        'invalid-error': true,\n        'validation': 'icon-exclamation-sign',\n        'undo': false,\n        'clearAll': 'http://test1',\n        'errorTitle': 'test',\n        'errorContent': 'test'\n      });\n      view.reopen({\n        controller: controller\n      });\n      view.loadRepositories();\n      var allRepositories = view.get('allRepositories');\n      Em.keys(allRepositories).forEach(function (key) {\n        expect(allRepositories[0].get(key)).to.equal(result.get(key));\n      });\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/step2_view');\n\nvar view, controller = Em.Object.create({\n  clusterNameError: ''\n});\n\ndescribe('App.WizardStep0View', function () {\n\n  beforeEach(function() {\n    view = App.WizardStep2View.create({'controller': controller});\n  });\n\n  describe('#sshKeyState', function() {\n    it('should be equal to controller.content.installOptions.manualInstall', function() {\n      controller.set('content', {installOptions: {manualInstall: false}});\n      expect(view.get('sshKeyState')).to.equal(false);\n      controller.toggleProperty('content.installOptions.manualInstall');\n      expect(view.get('sshKeyState')).to.equal(true);\n    });\n  });\n\n  describe('#didInsertElement', function() {\n    beforeEach(function () {\n      sinon.stub(App, 'popover', Em.K);\n      view.set('controller.hostsError', 'some text');\n      view.set('controller.sshKeyError', 'some text');\n    });\n    afterEach(function () {\n      App.popover.restore();\n    });\n    it('should clean hostsError', function () {\n      view.didInsertElement();\n      expect(view.get('controller.hostsError')).to.be.null;\n    });\n    it('should clean sshKeyError', function () {\n      view.didInsertElement();\n      expect(view.get('controller.sshKeyError')).to.be.null;\n    });\n    it('should create popover', function () {\n      view.didInsertElement();\n      expect(App.popover.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#providingSSHKeyRadioButton', function() {\n    var v;\n\n    beforeEach(function() {\n      v = view.get('providingSSHKeyRadioButton').create({\n        controller: Em.Object.create({\n          content: {\n            installOptions: {\n              useSsh: true,\n              manualInstall: true\n            }\n          }\n        })\n      });\n    });\n\n    describe('#checked', function() {\n      it('should be equal to controller.content.installOptions.useSsh', function () {\n        v.set('controller.content.installOptions.useSsh', false);\n        expect(v.get('checked')).to.equal(false);\n        v.set('controller.content.installOptions.useSsh', true);\n        expect(v.get('checked')).to.equal(true);\n      });\n    });\n\n    describe('#click', function() {\n      it('should update controller.content.installOptions.useSsh', function () {\n        v.set('controller.content.installOptions.useSsh', false);\n        v.click();\n        expect(v.get('controller.content.installOptions.useSsh')).to.equal(true);\n      });\n      it('should update controller.content.installOptions.manualInstall', function () {\n        v.set('controller.content.installOptions.manualInstall', true);\n        v.click();\n        expect(v.get('controller.content.installOptions.manualInstall')).to.equal(false);\n      });\n    });\n\n  });\n\n  describe('#manualRegistrationRadioButton', function() {\n    var v;\n\n    beforeEach(function() {\n      v = view.get('manualRegistrationRadioButton').create({\n        controller: Em.Object.create({\n          content: {\n            installOptions: {\n              useSsh: true,\n              manualInstall: true\n            }\n          }\n        })\n      });\n    });\n\n    describe('#checked', function() {\n      it('should be equal to controller.content.installOptions.manualInstall', function () {\n        v.set('controller.content.installOptions.manualInstall', false);\n        expect(v.get('checked')).to.equal(false);\n        v.set('controller.content.installOptions.manualInstall', true);\n        expect(v.get('checked')).to.equal(true);\n      });\n    });\n\n    describe('#click', function() {\n      it('should update controller.content.installOptions.useSsh', function () {\n        v.set('controller.content.installOptions.useSsh', true);\n        v.click();\n        expect(v.get('controller.content.installOptions.useSsh')).to.equal(false);\n      });\n      it('should update controller.content.installOptions.manualInstall', function () {\n        v.set('controller.content.installOptions.manualInstall', false);\n        v.click();\n        expect(v.get('controller.content.installOptions.manualInstall')).to.equal(true);\n      });\n    });\n\n  });\n\n  describe('#textFieldView', function() {\n    var v;\n\n    beforeEach(function() {\n      v = view.get('textFieldView').create();\n    });\n\n    describe('#disabled', function() {\n      it('should be inverted to isEnabled', function () {\n        v.set('isEnabled', false);\n        expect(v.get('disabled')).to.equal(true);\n        v.set('isEnabled', true);\n        expect(v.get('disabled')).to.equal(false);\n      });\n    });\n\n  });\n\n});\n\ndescribe('App.SshKeyFileUploader', function() {\n\n  beforeEach(function() {\n    view = App.SshKeyFileUploader.create();\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/step3/hostLogPopupBody_view');\nvar view;\ndescribe('App.WizardStep3HostLogPopupBody', function() {\n\n  beforeEach(function() {\n    view = App.WizardStep3HostLogPopupBody.create({\n      parentView: Em.Object.create({\n        host: Em.Object.create()\n      })\n    });\n  });\n\n  describe('#textArea', function() {\n\n    var v;\n\n    beforeEach(function() {\n      v = view.get('textArea').create();\n    });\n\n    describe('#value', function() {\n      it('should be equal to content', function() {\n        var c = 'Relax, you are doing fine';\n        v.set('content', c);\n        expect(v.get('value')).to.equal(c);\n      });\n    });\n\n  });\n\n  describe('#bootLog', function() {\n    it('should be equal to parentView.host.bootLog', function() {\n      var log = 'i wanna play a game';\n      view.set('parentView.host.bootLog', log);\n      expect(view.get('bootLog')).to.equal(log);\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nvar lazyloading = require('utils/lazy_loading');\nrequire('views/wizard/step3/hostWarningPopupBody_view');\nvar view;\n\ndescribe('App.WizardStep3HostWarningPopupBody', function() {\n\n  beforeEach(function() {\n    view = App.WizardStep3HostWarningPopupBody.create({\n      didInsertElement: Em.K,\n      $: function() {\n        return Em.Object.create({\n          toggle: Em.K\n        })\n      }\n    });\n  });\n\n  describe('#onToggleBlock', function() {\n    it('should toggle', function() {\n      var context = Em.Object.create({isCollapsed: false});\n      view.onToggleBlock({context: context});\n      expect(context.get('isCollapsed')).to.equal(true);\n      view.onToggleBlock({context: context});\n      expect(context.get('isCollapsed')).to.equal(false);\n    });\n  });\n\n  describe('#showHostsPopup', function() {\n    it('should call App.ModalPopup.show', function() {\n      sinon.stub(App.ModalPopup, 'show', Em.K);\n      view.showHostsPopup({context: []});\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n  });\n\n  describe('#categoryWarnings', function() {\n    it('should return empty array', function() {\n      var warningsByHost = null;\n      view.reopen({warningsByHost: warningsByHost});\n      expect(view.get('categoryWarnings')).to.eql([]);\n    });\n    it('should return filtered warnings', function() {\n      var warningsByHost = [\n        {name: 'c', warnings: [{}, {}, {}]},\n        {name: 'd', warnings: [{}]}\n      ];\n      view.reopen({warningsByHost: warningsByHost, category: 'c'});\n      expect(view.get('categoryWarnings.length')).to.equal(3);\n    });\n  });\n\n  describe('#warningHostsNamesCount', function() {\n    it('should parse warnings', function() {\n      view.set('bodyController', Em.Object.create({\n        repoCategoryWarnings: [\n          {hostsNames: ['h1', 'h4']}\n        ],\n        diskCategoryWarnings: [\n          {hostsNames: ['h2', 'h5']}\n        ],\n        warningsByHost: [\n          {},\n          { name: 'h1', warnings: [{}, {}, {}] },\n          { name: 'h2', warnings: [{}, {}, {}] },\n          { name: 'h3', warnings: [] }\n        ]\n      }));\n      expect(view.warningHostsNamesCount()).to.equal(4);\n    });\n  });\n\n  describe('#hostSelectView', function() {\n\n    var v;\n\n    beforeEach(function() {\n      v = view.get('hostSelectView').create();\n    });\n\n    describe('#click', function() {\n      Em.A([\n          {\n            isLoaded: false,\n            isLazyLoading: true,\n            e: true\n          },\n          {\n            isLoaded: true,\n            isLazyLoading: true,\n            e: false\n          },\n          {\n            isLoaded: false,\n            isLazyLoading: false,\n            e: false\n          },\n          {\n            isLoaded: true,\n            isLazyLoading: false,\n            e: false\n          }\n        ]).forEach(function (test) {\n          it('isLoaded: ' + test.isLoaded.toString() + ', isLazyLoading: ' + test.isLazyLoading.toString(), function () {\n            v.reopen({\n              isLoaded: test.isLoaded,\n              isLazyLoading: test.isLazyLoading\n            });\n            sinon.spy(lazyloading, 'run');\n            v.click();\n            if (test.e) {\n              expect(lazyloading.run.calledOnce).to.equal(true);\n            }\n            else {\n              expect(lazyloading.run.called).to.equal(false);\n            }\n            lazyloading.run.restore();\n          });\n        });\n    });\n\n  });\n\n  describe('#contentInDetails', function() {\n    var content = [\n      {category: 'firewall', warnings: [{name: 'n1'}, {name: 'n2'}, {name: 'n3'}]},\n      {category: 'fileFolders', warnings: [{name: 'n4'}, {name: 'n5'}, {name: 'n6'}]},\n      {category: 'reverseLookup', warnings: [{name: 'n19', hosts: [\"h1\"]}]},\n      {\n        category: 'process',\n        warnings: [\n          {name: 'n7', hosts:['h1', 'h2'], user: 'u1', pid: 'pid1'},\n          {name: 'n8', hosts:['h2'], user: 'u2', pid: 'pid2'},\n          {name: 'n9', hosts:['h3'], user: 'u1', pid: 'pid3'}\n        ]\n      },\n      {category: 'package', warnings: [{name: 'n10'}, {name: 'n11'}, {name: 'n12'}]},\n      {category: 'service', warnings: [{name: 'n13'}, {name: 'n14'}, {name: 'n15'}]},\n      {category: 'user', warnings: [{name: 'n16'}, {name: 'n17'}, {name: 'n18'}]}\n    ], warningsByHost = [\n      {},\n      {name: 'c', warnings: [{}, {}, {}]},\n      {name: 'd', warnings: [{}]}\n    ];\n    beforeEach(function() {\n      view.reopen({content: content, warningsByHost: warningsByHost});\n    });\n    it('should map hosts', function() {\n      var newContent = view.get('contentInDetails');\n      expect(newContent.contains('c d')).to.equal(true);\n    });\n    it('should map firewall warnings', function() {\n      var newContent = view.get('contentInDetails');\n      expect(newContent.contains('n1<br>n2<br>n3')).to.equal(true);\n    });\n    it('should map fileFolders warnings', function() {\n      var newContent = view.get('contentInDetails');\n      expect(newContent.contains('n4 n5 n6')).to.equal(true);\n    });\n    it('should map process warnings', function() {\n      var newContent = view.get('contentInDetails');\n      expect(newContent.contains('(h1,u1,pid1)')).to.equal(true);\n      expect(newContent.contains('(h2,u1,pid1)')).to.equal(true);\n      expect(newContent.contains('(h2,u2,pid2)')).to.equal(true);\n      expect(newContent.contains('(h3,u1,pid3)')).to.equal(true);\n    });\n    it('should map package warnings', function() {\n      var newContent = view.get('contentInDetails');\n      expect(newContent.contains('n10 n11 n12')).to.equal(true);\n    });\n    it('should map service warnings', function() {\n      var newContent = view.get('contentInDetails');\n      expect(newContent.contains('n13 n14 n15')).to.equal(true);\n    });\n    it('should map user warnings', function() {\n      var newContent = view.get('contentInDetails');\n      expect(newContent.contains('n16 n17 n18')).to.equal(true);\n    });\n    it('should map reverse lookup warnings', function() {\n      var newContent = view.get('contentInDetails');\n      expect(newContent.contains('h1')).to.equal(true);\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/step3/hostWarningPopupFooter_view');\nvar view;\n\ndescribe('App.WizardStep3HostWarningPopupFooter', function() {\n\n  beforeEach(function() {\n    view = App.WizardStep3HostWarningPopupFooter.create();\n    view.reopen({footerController: Em.Object.create()});\n  });\n\n  describe('#progressWidth', function() {\n    it('based on footerController.checksUpdateProgress', function() {\n      view.set('footerController.checksUpdateProgress', 42);\n      expect(view.get('progressWidth')).to.equal('width:42%');\n    });\n  });\n\n  describe('#isUpdateInProgress', function() {\n    var tests = Em.A([\n      {checksUpdateProgress: 0, e: false},\n      {checksUpdateProgress: 100, e: false},\n      {checksUpdateProgress: 50, e: true}\n    ]);\n    tests.forEach(function(test) {\n      it(test.checksUpdateProgress, function() {\n        view.set('footerController.checksUpdateProgress', test.checksUpdateProgress);\n        expect(view.get('isUpdateInProgress')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#updateStatusClass', function() {\n    var tests = Em.A([\n      {checksUpdateStatus: 'SUCCESS', e: 'text-success'},\n      {checksUpdateStatus: 'FAILED', e: 'text-error'},\n      {checksUpdateStatus: 'PANIC', e: null}\n    ]);\n    tests.forEach(function(test) {\n      it(test.checksUpdateStatus, function() {\n        view.set('footerController.checksUpdateStatus', test.checksUpdateStatus);\n        if (Em.isNone(test.e)) {\n          expect(view.get('updateStatusClass')).to.be.null;\n        }\n        else {\n          expect(view.get('updateStatusClass')).to.equal(test.e);\n        }\n      })\n    });\n  });\n\n  describe('#updateStatus', function() {\n    var tests = Em.A([\n      {checksUpdateStatus: 'SUCCESS', e: Em.I18n.t('installer.step3.warnings.updateChecks.success')},\n      {checksUpdateStatus: 'FAILED', e: Em.I18n.t('installer.step3.warnings.updateChecks.failed')},\n      {checksUpdateStatus: 'PANIC', e: null}\n    ]);\n    tests.forEach(function(test) {\n      it(test.checksUpdateStatus, function() {\n        view.set('footerController.checksUpdateStatus', test.checksUpdateStatus);\n        if (Em.isNone(test.e)) {\n          expect(view.get('updateStatus')).to.be.null;\n        }\n        else {\n          expect(view.get('updateStatus')).to.equal(test.e);\n        }\n      })\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('messages');\nrequire('views/wizard/step3_view');\nvar v;\ndescribe('App.WizardStep3View', function () {\n\n  var view = App.WizardStep3View.create({\n    monitorStatuses: function () {\n    },\n    content: [\n      Em.Object.create({\n        name: 'host1',\n        bootStatus: 'PENDING',\n        isChecked: false\n      }),\n      Em.Object.create({\n        name: 'host2',\n        bootStatus: 'PENDING',\n        isChecked: true\n      }),\n      Em.Object.create({\n        name: 'host3',\n        bootStatus: 'PENDING',\n        isChecked: true\n      })\n    ],\n    pageContent: function () {\n      return this.get('content');\n    }.property('content')\n  });\n\n  describe('#watchSelection', function () {\n    it('2 of 3 hosts selected', function () {\n      view.watchSelection();\n      expect(view.get('noHostsSelected')).to.equal(false);\n      expect(view.get('selectedHostsCount')).to.equal(2);\n    });\n    it('all hosts selected', function () {\n      view.selectAll();\n      view.watchSelection();\n      expect(view.get('noHostsSelected')).to.equal(false);\n      expect(view.get('selectedHostsCount')).to.equal(3);\n    });\n    it('none hosts selected', function () {\n      view.unSelectAll();\n      view.watchSelection();\n      expect(view.get('noHostsSelected')).to.equal(true);\n      expect(view.get('selectedHostsCount')).to.equal(0);\n    });\n  });\n\n  describe('#selectAll', function () {\n    it('select all hosts', function () {\n      view.selectAll();\n      expect(view.get('content').everyProperty('isChecked', true)).to.equal(true);\n    });\n  });\n\n  describe('#unSelectAll', function () {\n    it('unselect all hosts', function () {\n      view.unSelectAll();\n      expect(view.get('content').everyProperty('isChecked', false)).to.equal(true);\n    });\n  });\n\n  var testCases = Em.A([\n    {\n      title: 'none hosts',\n      content: [],\n      result: {\n        \"ALL\": 0,\n        \"RUNNING\": 0,\n        \"REGISTERING\": 0,\n        \"REGISTERED\": 0,\n        \"FAILED\": 0\n      }\n    },\n    {\n      title: 'all hosts RUNNING',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          bootStatus: 'RUNNING'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          bootStatus: 'RUNNING'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          bootStatus: 'RUNNING'\n        })\n      ],\n      result: {\n        \"ALL\": 3,\n        \"RUNNING\": 3,\n        \"REGISTERING\": 0,\n        \"REGISTERED\": 0,\n        \"FAILED\": 0\n      }\n    },\n    {\n      title: 'all hosts REGISTERING',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          bootStatus: 'REGISTERING'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          bootStatus: 'REGISTERING'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          bootStatus: 'REGISTERING'\n        })\n      ],\n      result: {\n        \"ALL\": 3,\n        \"RUNNING\": 0,\n        \"REGISTERING\": 3,\n        \"REGISTERED\": 0,\n        \"FAILED\": 0\n      }\n    },\n    {\n      title: 'all hosts REGISTERED',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          bootStatus: 'REGISTERED'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          bootStatus: 'REGISTERED'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          bootStatus: 'REGISTERED'\n        })\n      ],\n      result: {\n        \"ALL\": 3,\n        \"RUNNING\": 0,\n        \"REGISTERING\": 0,\n        \"REGISTERED\": 3,\n        \"FAILED\": 0\n      }\n    },\n    {\n      title: 'all hosts FAILED',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          bootStatus: 'FAILED'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          bootStatus: 'FAILED'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          bootStatus: 'FAILED'\n        })\n      ],\n      result: {\n        \"ALL\": 3,\n        \"RUNNING\": 0,\n        \"REGISTERING\": 0,\n        \"REGISTERED\": 0,\n        \"FAILED\": 3\n      }\n    },\n    {\n      title: 'first host is FAILED, second is RUNNING, third is REGISTERED',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          bootStatus: 'FAILED'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          bootStatus: 'RUNNING'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          bootStatus: 'REGISTERED'\n        })\n      ],\n      result: {\n        \"ALL\": 3,\n        \"RUNNING\": 1,\n        \"REGISTERING\": 0,\n        \"REGISTERED\": 1,\n        \"FAILED\": 1\n      }\n    },\n    {\n      title: 'two hosts is REGISTERING, one is REGISTERED',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          bootStatus: 'REGISTERING'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          bootStatus: 'REGISTERING'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          bootStatus: 'REGISTERED'\n        })\n      ],\n      result: {\n        \"ALL\": 3,\n        \"RUNNING\": 0,\n        \"REGISTERING\": 2,\n        \"REGISTERED\": 1,\n        \"FAILED\": 0\n      }\n    }\n  ]);\n\n  describe('#countCategoryHosts', function () {\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        view.set('content', test.content);\n        view.countCategoryHosts();\n        view.get('categories').forEach(function (category) {\n          expect(category.get('hostsCount')).to.equal(test.result[category.get('hostsBootStatus')])\n        })\n      });\n    }, this);\n  });\n\n  describe('#doFilter', function () {\n    testCases.forEach(function (test) {\n      describe(test.title, function () {\n        view.get('categories').forEach(function (category) {\n          it('. Selected category - ' + category.get('hostsBootStatus'), function () {\n            view.set('content', test.content);\n            view.reopen({\n              selectedCategory: category\n            });\n            view.doFilter();\n            expect(view.get('filteredContent').length).to.equal(test.result[category.get('hostsBootStatus')])\n          });\n        });\n      });\n    }, this);\n  });\n\n  describe('#monitorStatuses', function() {\n    var tests = Em.A([\n      {\n        controller: Em.Object.create({bootHosts: Em.A([])}),\n        m: 'Empty hosts list',\n        e: {status: 'alert-warn', linkText: ''}\n      },\n      {\n        controller: Em.Object.create({bootHosts: Em.A([{}]), isWarningsLoaded: false}),\n        m: 'isWarningsLoaded false',\n        e: {status: 'alert-info', linkText: ''}\n      },\n      {\n        controller: Em.Object.create({bootHosts: Em.A([{}]), isWarningsLoaded: true, isHostHaveWarnings: true}),\n        m: 'isWarningsLoaded true, isHostHaveWarnings true',\n        e: {status: 'alert-warn', linkText: Em.I18n.t('installer.step3.warnings.linkText')}\n      },\n      {\n        controller: Em.Object.create({bootHosts: Em.A([{}]), isWarningsLoaded: true, repoCategoryWarnings: ['']}),\n        m: 'isWarningsLoaded true, repoCategoryWarnings not empty',\n        e: {status: 'alert-warn', linkText: Em.I18n.t('installer.step3.warnings.linkText')}\n      },\n      {\n        controller: Em.Object.create({bootHosts: Em.A([{}]), isWarningsLoaded: true, diskCategoryWarnings: ['']}),\n        m: 'isWarningsLoaded true, diskCategoryWarnings not empty',\n        e: {status: 'alert-warn', linkText: Em.I18n.t('installer.step3.warnings.linkText')}\n      },\n      {\n        controller: Em.Object.create({bootHosts: Em.A([{}]), isWarningsLoaded: true, diskCategoryWarnings: [], repoCategoryWarnings: []}),\n        m: 'isWarningsLoaded true, diskCategoryWarnings is empty, repoCategoryWarnings is empty',\n        e: {status: 'alert-success', linkText: Em.I18n.t('installer.step3.noWarnings.linkText')}\n      },\n      {\n        controller: Em.Object.create({bootHosts: Em.A([{bootStatus: 'FAILED'}]), isWarningsLoaded: true, diskCategoryWarnings: [], repoCategoryWarnings: []}),\n        m: 'isWarningsLoaded true, diskCategoryWarnings is empty, repoCategoryWarnings is empty, all failed',\n        e: {status: 'alert-warn', linkText: ''}\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        v = App.WizardStep3View.create({\n          controller: test.controller\n        });\n        v.monitorStatuses();\n        expect(v.get('status')).to.equal(test.e.status);\n        expect(v.get('linkText')).to.equal(test.e.linkText);\n      });\n    });\n  });\n\n  describe('#retrySelectedHosts', function() {\n    it('should set active category \"All\"', function() {\n      view.set('controller', Em.Object.create({retrySelectedHosts: Em.K, registeredHosts: []}));\n      view.retrySelectedHosts();\n      expect(view.get('categories').findProperty('hostsBootStatus', 'ALL').get('isActive')).to.equal(true);\n    });\n  });\n\n  describe('#selectCategory', function() {\n    var tests = Em.A(['ALL','RUNNING','REGISTERING','REGISTERED','FAILED']);\n    tests.forEach(function(test) {\n      it('should set active category \"' + test + '\"', function() {\n        view.set('controller', Em.Object.create({retrySelectedHosts: Em.K, registeredHosts: []}));\n        view.selectCategory({context:Em.Object.create({hostsBootStatus:test})});\n        expect(view.get('categories').findProperty('hostsBootStatus', test).get('isActive')).to.equal(true);\n      });\n    });\n  });\n\n  describe('#countCategoryHosts', function() {\n    it('should set host count for each category', function() {\n      view.set('content', Em.A([\n        Em.Object.create({bootStatus: 'RUNNING'}),\n        Em.Object.create({bootStatus: 'REGISTERING'}),\n        Em.Object.create({bootStatus: 'REGISTERED'}),\n        Em.Object.create({bootStatus: 'FAILED'})\n      ]));\n      view.countCategoryHosts();\n      expect(view.get('categories').mapProperty('hostsCount')).to.eql([4,1,1,1,1]);\n    });\n  });\n\n  describe('#hostBootStatusObserver', function() {\n    it('should call \"Em.run.once\" three times', function() {\n      sinon.spy(Em.run, 'once');\n      view.hostBootStatusObserver();\n      expect(Em.run.once.calledThrice).to.equal(true);\n      expect(Em.run.once.firstCall.args[1]).to.equal('countCategoryHosts');\n      expect(Em.run.once.secondCall.args[1]).to.equal('filter');\n      expect(Em.run.once.thirdCall.args[1]).to.equal('monitorStatuses');\n      Em.run.once.restore();\n    });\n  });\n\n  describe('#watchSelection', function() {\n    describe('should set \"pageChecked\"', function() {\n      var tests = Em.A([\n        {pageContent: Em.A([]),m:'false if empty \"pageContent\"', e: false},\n        {pageContent: Em.A([{isChecked: false}]),m:'false if not-empty \"pageContent\" and not all \"isChecked\" true', e: false},\n        {pageContent: Em.A([{isChecked: true}]),m:'true if not-empty \"pageContent\" and all \"isChecked\" true', e: false}\n      ]);\n      tests.forEach(function(test) {\n        it(test.m, function() {\n          view.set('pageContent', test.pageContent);\n          view.watchSelection();\n          expect(view.get('pageChecked')).to.equal(test.e);\n        });\n      });\n    });\n    describe('should set \"noHostsSelected\" and \"selectedHostsCount\"', function() {\n      var tests = Em.A([\n        {pageContent: Em.A([]),content:Em.A([]),m:' - \"true\", \"0\" if content is empty',e:{selectedHostsCount: 0, noHostsSelected: true}},\n        {pageContent: Em.A([]),content:Em.A([Em.Object.create({isChecked: false})]),m:' - \"true\", \"0\" if no one isChecked',e:{selectedHostsCount: 0, noHostsSelected: true}},\n        {pageContent: Em.A([]),content:Em.A([Em.Object.create({isChecked: true}),Em.Object.create({isChecked: false})]),m:' - \"false\", \"1\" if one isChecked',e:{selectedHostsCount: 1, noHostsSelected: false}}\n      ]);\n      tests.forEach(function(test) {\n        it(test.m, function() {\n          view.set('pageContent', test.pageContent);\n          view.set('content', test.content);\n          view.watchSelection();\n          expect(view.get('noHostsSelected')).to.equal(test.e.noHostsSelected);\n          expect(view.get('selectedHostsCount')).to.equal(test.e.selectedHostsCount);\n        });\n      });\n    });\n  });\n\n  describe('#watchSelectionOnce', function() {\n    it('should call \"Em.run.once\" one time', function() {\n      sinon.spy(Em.run, 'once');\n      view.watchSelectionOnce();\n      expect(Em.run.once.calledOnce).to.equal(true);\n      expect(Em.run.once.firstCall.args[1]).to.equal('watchSelection');\n      Em.run.once.restore();\n    });\n  });\n\n  describe('#selectedCategory', function() {\n    it('should equal category with isActive = true', function() {\n      view.get('categories').findProperty('hostsBootStatus', 'FAILED').set('isActive', true);\n      expect(view.get('selectedCategory.hostsBootStatus')).to.equal('FAILED');\n    });\n  });\n\n  describe('#onPageChecked', function() {\n    var tests = Em.A([\n      {\n        selectionInProgress: true,\n        pageContent: [Em.Object.create({isChecked: true}), Em.Object.create({isChecked: false})],\n        pageChecked: true,\n        m: 'shouldn\\'t do nothing if selectionInProgress is true',\n        e: [true, false]\n      },\n      {\n        selectionInProgress: false,\n        pageContent: [Em.Object.create({isChecked: true}), Em.Object.create({isChecked: false})],\n        pageChecked: true,\n        m: 'should set each isChecked to pageChecked value',\n        e: [true, true]\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        v = App.WizardStep3View.create({\n          'pageContent': test.pageContent,\n          'pageChecked': test.pageChecked,\n          'selectionInProgress': test.selectionInProgress\n        });\n        v.onPageChecked();\n        expect(v.get('pageContent').mapProperty('isChecked')).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#didInsertElement', function() {\n    beforeEach(function() {\n      v = App.WizardStep3View.create({\n        controller: Em.Object.create({\n          loadStep: Em.K\n        })\n      });\n      sinon.spy(v.get('controller'), 'loadStep');\n    });\n    afterEach(function() {\n      v.get('controller').loadStep.restore();\n    });\n    it('should call loadStep', function() {\n      v.didInsertElement();\n      expect(v.get('controller').loadStep.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#categoryObject', function() {\n    var o;\n    beforeEach(function() {\n      v = App.WizardStep3View.create();\n      o = v.get('categoryObject').create();\n    });\n\n    describe('#label', function() {\n      it('should use value and hostCount', function() {\n        o.setProperties({\n          value: 'abc',\n          hostsCount: 3\n        });\n        expect(o.get('label')).to.equal('abc (3)');\n      });\n    });\n\n    describe('#itemClass', function() {\n      it('should depends on isActive', function() {\n        o.set('isActive', true);\n        expect(o.get('itemClass')).to.equal('active');\n        o.set('isActive', false);\n        expect(o.get('itemClass')).to.equal('');\n      });\n    });\n\n  });\n\n});\n\nvar wView;\ndescribe('App.WizardHostView', function() {\n\n  beforeEach(function() {\n    wView = App.WizardHostView.create({\n      hostInfo: {},\n      controller: Em.Object.create({\n        removeHost: Em.K,\n        retryHost: Em.K\n      })\n    });\n    sinon.spy(wView.get('controller'), 'retryHost');\n    sinon.spy(wView.get('controller'), 'removeHost');\n  });\n\n  afterEach(function() {\n    wView.get('controller').retryHost.restore();\n    wView.get('controller').removeHost.restore();\n  });\n\n  describe('#retry', function() {\n    it('should call controller.retryHost', function() {\n      wView.retry();\n      expect(wView.get('controller').retryHost.calledWith({})).to.equal(true);\n      expect(wView.get('controller').retryHost.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#remove', function() {\n    it('should call controller.removeHost', function() {\n      wView.remove();\n      expect(wView.get('controller').removeHost.calledWith({})).to.equal(true);\n      expect(wView.get('controller').removeHost.calledOnce).to.equal(true);\n    });\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('views/wizard/step5_view');\nvar view;\n\ndescribe('App.WizardStep5View', function() {\n\n  beforeEach(function() {\n    view = App.WizardStep5View.create({\n      controller: App.WizardStep5Controller.create({})\n    });\n  });\n\n  describe('#didInsertElement', function() {\n    it('should call controller.loadStep', function() {\n      sinon.stub(view.get('controller'), 'loadStep', Em.K);\n      view.didInsertElement();\n      expect(view.get('controller').loadStep.calledOnce).to.equal(true);\n      view.get('controller').loadStep.restore();\n    });\n  });\n\n  describe('#shouldUseInputs', function() {\n    it('should based on hosts count', function() {\n      view.set('controller.hosts', d3.range(0, 25).map(function() {return {};}));\n      expect(view.get('shouldUseInputs')).to.be.false;\n      view.set('controller.hosts', d3.range(0, 26).map(function() {return {};}));\n      expect(view.get('shouldUseInputs')).to.be.true;\n      view.set('controller.hosts', d3.range(0, 24).map(function() {return {};}));\n      expect(view.get('shouldUseInputs')).to.be.false;\n    });\n  });\n\n});\n\ndescribe('App.SelectHostView', function() {\n\n  beforeEach(function() {\n    view = App.SelectHostView.create({\n      controller: App.WizardStep5Controller.create({}),\n      $: function() {return {typeahead: function(){return {on: Em.K}}}},\n      updateErrorStatus: Em.K\n    });\n  });\n\n  describe('#click', function() {\n\n    beforeEach(function() {\n      sinon.stub(view, 'initContent', Em.K);\n    });\n\n    afterEach(function() {\n      view.initContent.restore();\n    });\n\n    it('should call initContent', function() {\n      view.click();\n      expect(view.initContent.calledOnce).to.be.true;\n    });\n\n  });\n\n  describe('#didInsertElement', function() {\n\n    it('should set value', function() {\n      view.set('value', '');\n      view.set('component', {selectedHost: 'h1'});\n      view.didInsertElement();\n      expect(view.get('value')).to.equal('h1');\n    });\n\n  });\n\n  describe('#changeHandler', function() {\n\n    beforeEach(function() {\n      view.set('component', {component_name: 'ZOOKEEPER_SERVER', zId: 1});\n      view.set('controller.hosts', [Em.Object.create({host_info: 'h1 info', host_name: 'h1'})]);\n      view.set('value', 'h1 info');\n      view.set('controller.rebalanceComponentHostsCounter', 0);\n      view.set('controller.componentToRebalance', '');\n      sinon.stub(view.get('controller'), 'assignHostToMaster', Em.K);\n      sinon.stub(view.get('controller'), 'updateIsHostNameValidFlag', Em.K);\n      sinon.stub(view, 'shouldChangeHandlerBeCalled', function() {return true;});\n    });\n\n    afterEach(function() {\n      view.get('controller').assignHostToMaster.restore();\n      view.get('controller').updateIsHostNameValidFlag.restore();\n      view.shouldChangeHandlerBeCalled.restore();\n    });\n\n    it('shouldn\\'t do nothing if view is destroyed', function() {\n      view.set('state', 'destroyed');\n      expect(view.get('controller').assignHostToMaster.called).to.be.false;\n    });\n\n    it('should call assignHostToMaster', function() {\n      view.changeHandler();\n      expect(view.get('controller').assignHostToMaster.calledWith('ZOOKEEPER_SERVER', 'h1', 1));\n    });\n\n    it('should increment rebalanceComponentHostsCounter if component it is multiple', function() {\n      view.set('component', {component_name: 'ZOOKEEPER_SERVER'});\n      view.changeHandler();\n      expect(view.get('controller.rebalanceComponentHostsCounter')).to.equal(1);\n    });\n\n    it('should set componentToRebalance', function() {\n      view.changeHandler();\n      expect(view.get('controller.componentToRebalance')).to.equal('ZOOKEEPER_SERVER');\n    });\n\n  });\n\n});\n\ndescribe('App.InputHostView', function() {\n\n  beforeEach(function() {\n    view = App.InputHostView.create({\n      controller: App.WizardStep5Controller.create({}),\n      $: function() {return {typeahead: function(){return {on: Em.K}}}},\n      updateErrorStatus: Em.K\n    });\n  });\n\n  describe('#didInsertElement', function() {\n\n    beforeEach(function() {\n      sinon.stub(view, 'initContent', Em.K);\n      view.set('content', [Em.Object.create({host_name: 'h1', host_info: 'h1 info'})]);\n      view.set('component', {selectedHost: 'h1'});\n    });\n\n    afterEach(function() {\n      view.initContent.restore();\n    });\n\n    it('should call initContent', function() {\n      view.didInsertElement();\n      expect(view.initContent.calledOnce).to.equal(true);\n    });\n\n    it('should set selectedHost host_info to value', function() {\n      view.set('value', '');\n      view.didInsertElement();\n      expect(view.get('value')).to.equal('h1 info');\n    });\n\n  });\n\n  describe('#changeHandler', function() {\n\n    beforeEach(function() {\n      view.set('component', {component_name: 'ZOOKEEPER_SERVER', zId: 1});\n      view.set('controller.hosts', [Em.Object.create({host_info: 'h1 info', host_name: 'h1'})]);\n      view.set('value', 'h1 info');\n      view.set('controller.rebalanceComponentHostsCounter', 0);\n      view.set('controller.componentToRebalance', '');\n      sinon.stub(view.get('controller'), 'assignHostToMaster', Em.K);\n      sinon.stub(view.get('controller'), 'updateIsHostNameValidFlag', Em.K);\n      sinon.stub(view, 'shouldChangeHandlerBeCalled', function() {return true;});\n    });\n\n    afterEach(function() {\n      view.get('controller').assignHostToMaster.restore();\n      view.get('controller').updateIsHostNameValidFlag.restore();\n      view.shouldChangeHandlerBeCalled.restore();\n    });\n\n    it('shouldn\\'t do nothing if view is destroyed', function() {\n      view.set('state', 'destroyed');\n      expect(view.get('controller').assignHostToMaster.called).to.be.false;\n    });\n\n    it('should call assignHostToMaster', function() {\n      view.changeHandler();\n      expect(view.get('controller').assignHostToMaster.calledWith('ZOOKEEPER_SERVER', 'h1', 1));\n    });\n\n    it('should increment rebalanceComponentHostsCounter if component it is multiple', function() {\n      view.set('component', {component_name: 'ZOOKEEPER_SERVER'});\n      view.changeHandler();\n      expect(view.get('controller.rebalanceComponentHostsCounter')).to.equal(1);\n    });\n\n    it('should set componentToRebalance', function() {\n      view.changeHandler();\n      expect(view.get('controller.componentToRebalance')).to.equal('ZOOKEEPER_SERVER');\n    });\n\n  });\n\n  describe('#getAvailableHosts', function() {\n    var tests = Em.A([\n      {\n        hosts: Em.A([]),\n        selectedHost: 'h2',\n        componentName: 'ZOOKEEPER_SERVER',\n        selectedServicesMasters: Em.A([\n          Em.Object.create({component_name: 'ZOOKEEPER_SERVER', selectedHost: 'h1'})\n        ]),\n        m: 'Empty hosts',\n        e: []\n      },\n      {\n        hosts: Em.A([\n          Em.Object.create({host_name: 'h1'}),\n          Em.Object.create({host_name: 'h2'})\n        ]),\n        selectedHost: 'h2',\n        componentName: 'c1',\n        selectedServicesMasters: Em.A([\n          Em.Object.create({component_name: 'c2', selectedHost: 'h1'})\n        ]),\n        m: 'Two hosts',\n        e: ['h1', 'h2']\n      },\n      {\n        hosts: Em.A([\n          Em.Object.create({host_name: 'h1'}),\n          Em.Object.create({host_name: 'h2'})\n        ]),\n        selectedHost: 'h2',\n        componentName: 'ZOOKEEPER_SERVER',\n        selectedServicesMasters: Em.A([\n          Em.Object.create({component_name: 'ZOOKEEPER_SERVER', selectedHost: 'h1'})\n        ]),\n        m: 'Two hosts, ZOOKEEPER_SERVER',\n        e: ['h2']\n      },\n      {\n        hosts: Em.A([\n          Em.Object.create({host_name: 'h1'}),\n          Em.Object.create({host_name: 'h2'})\n        ]),\n        selectedHost: 'h2',\n        componentName: 'HBASE_MASTER',\n        selectedServicesMasters: Em.A([\n          Em.Object.create({component_name: 'HBASE_MASTER', selectedHost: 'h1'})\n        ]),\n        m: 'Two hosts, HBASE_MASTER',\n        e: ['h2']\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        view.set('controller.hosts', test.hosts);\n        view.set('component', {component_name: test.componentName});\n        view.set('controller.selectedServicesMasters', test.selectedServicesMasters);\n        var r = view.getAvailableHosts();\n        expect(r.mapProperty('host_name')).to.eql(test.e);\n      });\n    });\n  });\n\n  describe('#rebalanceComponentHostsOnce', function() {\n    var tests = Em.A([\n      {\n        componentName: 'c1',\n        componentToRebalance: 'c2',\n        content: [{}],\n        m: 'componentName not equal to componentToRebalance',\n        e: {\n          initContent: false\n        }\n      },\n      {\n        componentName: 'c2',\n        componentToRebalance: 'c2',\n        content: [{}],\n        m: 'componentName equal to componentToRebalance',\n        e: {\n          initContent: true\n        }\n      }\n    ]);\n\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        view.set('content', test.content);\n        view.set('component', {component_name: test.componentName});\n        view.set('controller.componentToRebalance', test.componentToRebalance);\n        sinon.stub(view, 'initContent', Em.K);\n        view.rebalanceComponentHostsOnce();\n        expect(view.initContent.calledOnce).to.equal(test.e.initContent);\n        view.initContent.restore();\n      });\n    });\n  });\n\n  describe('#initContent', function() {\n    var tests = Em.A([\n      {\n        hosts: 25,\n        m: 'not lazy loading, 25 hosts, no selected host',\n        e: 25\n      },\n      {\n        hosts: 25,\n        h: 4,\n        m: 'not lazy loading, 25 hosts, one selected host',\n        e: 25\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        view.reopen({getAvailableHosts: function() {return d3.range(0, test.hosts).map(function(indx){return Em.Object.create({host_name: indx})});}});\n        if (test.h) {\n          view.set('selectedHost', test.h);\n        }\n        view.initContent();\n        expect(view.get('content.length')).to.equal(test.e);\n      });\n    });\n  });\n\n  describe('#change', function() {\n\n    beforeEach(function() {\n      sinon.stub(view, 'changeHandler', Em.K);\n    });\n\n    afterEach(function() {\n      view.changeHandler.restore();\n    });\n\n    it('shouldn\\'t do nothing if view is destroyed', function() {\n      view.set('controller.hostNameCheckTrigger', false);\n      view.set('state', 'destroyed');\n      view.change();\n      expect(view.get('controller.hostNameCheckTrigger')).to.equal(false);\n    });\n\n    it('should toggle hostNameCheckTrigger', function() {\n      view.set('controller.hostNameCheckTrigger', false);\n      view.change();\n      expect(view.get('controller.hostNameCheckTrigger')).to.equal(true);\n    });\n\n  });\n\n});\n\ndescribe('App.RemoveControlView', function() {\n\n  beforeEach(function() {\n    view = App.RemoveControlView.create({\n      controller: App.WizardStep5Controller.create({})\n    });\n  });\n\n  describe('#click', function() {\n    beforeEach(function() {\n      sinon.stub(view.get('controller'), 'removeComponent', Em.K);\n    });\n    afterEach(function() {\n      view.get('controller').removeComponent.restore();\n    });\n    it('should call removeComponent', function() {\n      view.set('zId', 1);\n      view.set('componentName', 'c1');\n      view.click();\n      expect(view.get('controller').removeComponent.calledWith('c1', 1)).to.equal(true);\n    });\n  });\n\n});\n\ndescribe('App.AddControlView', function() {\n\n  beforeEach(function() {\n    view = App.AddControlView.create({\n      controller: App.WizardStep5Controller.create({})\n    });\n  });\n\n  describe('#click', function() {\n\n    beforeEach(function() {\n      sinon.stub(view.get('controller'), 'addComponent', Em.K);\n    });\n\n    afterEach(function() {\n      view.get('controller').addComponent.restore();\n    });\n\n    it('should call addComponent', function() {\n      view.set('componentName', 'c1');\n      view.click();\n      expect(view.get('controller').addComponent.calledWith('c1')).to.equal(true);\n    });\n\n  });\n\n});\n","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('utils/helper');\nrequire('utils/string_utils');\nrequire('views/wizard/step6_view');\nvar view;\n\ndescribe('App.WizardStep6View', function() {\n\n  beforeEach(function() {\n    view = App.WizardStep6View.create({\n      controller: App.WizardStep6Controller.create()\n    });\n  });\n\n  describe('#content', function() {\n    it('should be same to controller.hosts', function() {\n      view.set('content', []);\n      var d = [{}, {}];\n      view.set('controller.hosts', d);\n      expect(view.get('content')).to.eql(d);\n    });\n  });\n\n  describe('#filteredContent', function() {\n    it('should be same to content', function() {\n      view.set('content', []);\n      var d = [{}, {}];\n      view.set('controller.hosts', d);\n      expect(view.get('filteredContent')).to.eql(d);\n    });\n  });\n\n  describe('#didInsertElement', function() {\n    beforeEach(function() {\n      sinon.stub(view.get('controller'), 'loadStep', Em.K);\n      sinon.stub(App, 'tooltip', Em.K);\n      sinon.stub(view, 'setLabel', Em.K);\n    });\n    afterEach(function() {\n      view.get('controller').loadStep.restore();\n      App.tooltip.restore();\n      view.setLabel.restore();\n    });\n    it('should call loadStep', function() {\n      view.didInsertElement();\n      expect(view.get('controller').loadStep.calledOnce).to.equal(true);\n    });\n    it('should create tooltip', function() {\n      view.didInsertElement();\n      expect(App.tooltip.calledOnce).to.equal(true);\n    });\n    it('should call setLabel if not controller.isMasters', function() {\n      view.set('controller.isMasters', false);\n      view.didInsertElement();\n      expect(view.setLabel.calledOnce).to.equal(true);\n    });\n    it('shouldn\\'t call setLabel if controller.isMasters', function() {\n      view.set('controller.isMasters', true);\n      view.didInsertElement();\n      expect(view.setLabel.called).to.equal(false);\n    });\n  });\n\n  describe('#setLabel', function() {\n    var tests = Em.A([\n      {\n        clients: [{display_name: 'c1'}],\n        m: 'One client',\n        e: 'c1'\n      },\n      {\n        clients: [{display_name: 'c1'}, {display_name: 'c2'}],\n        m: 'Two clients',\n        e: 'c1 and c2.'\n      },\n      {\n        clients: [{display_name: 'c1'}, {display_name: 'c2'}, {display_name: 'c3'}],\n        m: 'Three clients',\n        e: 'c1, c2 and c3.'\n      },\n      {\n        clients: [{display_name: 'c1'}, {display_name: 'c2'}, {display_name: 'c3'}, {display_name: 'c4'}],\n        m: 'Four clients',\n        e: 'c1, c2, c3 and c4.'\n      },\n      {\n        clients: [{display_name: 'c1'}, {display_name: 'c2'}, {display_name: 'c3'}, {display_name: 'c4'}, {display_name: 'c5'}],\n        m: 'Five clients',\n        e: 'c1, c2, c3, c4 and c5.'\n      }\n    ]);\n    tests.forEach(function(test) {\n      it(test.m, function() {\n        view.set('controller.content', {clients: test.clients});\n        view.setLabel();\n        expect(view.get('label').endsWith(test.e)).to.equal(true);\n      });\n    });\n  });\n  \n  describe('#checkboxView', function() {\n    it('should call checkCallback', function() {\n      var v = view.get('checkboxView').create({\n        controller: App.WizardStep6Controller.create()\n      });\n      sinon.stub(v.get('controller'), 'checkCallback', Em.K);\n      v.click();\n      expect(v.get('controller').checkCallback.calledOnce).to.equal(true);\n      v.get('controller').checkCallback.restore();\n    });\n  });\n\n});\n\ndescribe('App.WizardStep6HostView', function() {\n\n  beforeEach(function() {\n    view = App.WizardStep6HostView.create({\n      controller: App.WizardStep6Controller.create()\n    });\n  });\n\n  describe('#didInsertElement', function() {\n    beforeEach(function() {\n      sinon.stub(App, 'popover', Em.K);\n    });\n    afterEach(function() {\n      App.popover.restore();\n    });\n    it('should create popover if not controller.isMasters', function() {\n      sinon.stub(view.get('controller'), 'getMasterComponentsForHost', function() {return [{}, {}];});\n      view.set('controller.isMasters', false);\n      view.didInsertElement();\n      expect(App.popover.calledOnce).to.equal(true);\n      view.get('controller').getMasterComponentsForHost.restore();\n    });\n    it('shouldn\\'t create popover if controller.isMasters', function() {\n      view.set('controller.isMasters', true);\n      view.didInsertElement();\n      expect(App.popover.called).to.equal(false);\n    });\n    it('shouldn\\'t create popover if controller.getMasterComponentsForHost returns empty array', function() {\n      sinon.stub(view.get('controller'), 'getMasterComponentsForHost', function() {return [];});\n      view.set('controller.isMasters', true);\n      view.didInsertElement();\n      expect(App.popover.called).to.equal(false);\n      view.get('controller').getMasterComponentsForHost.restore();\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar App = require('app');\nrequire('utils/helper');\nrequire('utils/string_utils');\nrequire('views/wizard/step8_view');\nvar view;\n\ndescribe('App.WizardStep8View', function() {\n\n  beforeEach(function() {\n    view = App.WizardStep8View.create();\n  });\n\n  describe('#didInsertElement', function() {\n    it('should call loadStep', function() {\n      view.set('controller', Em.Object.create({\n        loadStep: Em.K\n      }));\n      sinon.spy(view.get('controller'), 'loadStep');\n      view.didInsertElement();\n      expect(view.get('controller').loadStep.calledOnce).to.equal(true);\n      view.get('controller').loadStep.restore();\n    });\n  });\n\n  describe('#printReview', function() {\n    it('should call jqprint', function() {\n      sinon.stub($.fn, 'jqprint', Em.K);\n      view.printReview();\n      expect($.fn.jqprint.calledOnce).to.equal(true);\n      $.fn.jqprint.restore();\n    });\n  });\n\n  describe('#showLoadingIndicator', function() {\n    it('should hide existing popup', function() {\n      var popup = App.ModalPopup.show({});\n      view.set('modalPopup', popup);\n      view.set('controller', {isSubmitDisabled: false});\n      view.showLoadingIndicator();\n      expect(Em.isNone(view.get('popup'))).to.equal(true);\n    });\n    it('if popup exists shouldn\\'t create another', function() {\n      view.set('modalPopup', App.ModalPopup.show({}));\n      view.set('controller', {isSubmitDisabled: true});\n      sinon.spy(App.ModalPopup, 'show');\n      view.showLoadingIndicator();\n      expect(App.ModalPopup.show.called).to.equal(false);\n      App.ModalPopup.show.restore();\n    });\n    it('if popup doesn\\'t exist should create another', function() {\n      view.set('modalPopup', null);\n      view.reopen({controller: {isSubmitDisabled: true}});\n      sinon.spy(App.ModalPopup, 'show');\n      view.showLoadingIndicator();\n      expect(App.ModalPopup.show.calledOnce).to.equal(true);\n      App.ModalPopup.show.restore();\n    });\n\n    describe('#bodyClass', function() {\n\n      beforeEach(function() {\n        view.set('modalPopup', null);\n        view.reopen({controller: {isSubmitDisabled: true}});\n      });\n\n      describe('#autoHide', function() {\n        it('should be called if controller.servicesInstalled is true', function() {\n          view.showLoadingIndicator();\n          var v = view.get('modalPopup').get('bodyClass').create();\n          v.reopen({controller: {servicesInstalled: false}, parentView: Em.Object.create({hide: Em.K})});\n          sinon.spy(v.get('parentView'), 'hide');\n          v.set('controller.servicesInstalled', true);\n          expect(v.get('parentView').hide.calledOnce).to.equal(true);\n          v.get('parentView').hide.restore();\n        });\n        it('shouldn\\'t be called if controller.servicesInstalled is false', function() {\n          view.showLoadingIndicator();\n          var v = view.get('modalPopup').get('bodyClass').create();\n          v.reopen({controller: {servicesInstalled: false}, parentView: Em.Object.create({hide: Em.K})});\n          sinon.spy(v.get('parentView'), 'hide');\n          v.set('controller.servicesInstalled', false);\n          expect(v.get('parentView').hide.called).to.equal(false);\n          v.get('parentView').hide.restore();\n        });\n      });\n\n      describe('#ajaxQueueChangeObs', function() {\n        it('should set barWidth and message', function() {\n          view.showLoadingIndicator();\n          var v = view.get('modalPopup').get('bodyClass').create();\n          v.reopen({controller: {ajaxQueueLength: 12, ajaxRequestsQueue: Em.Object.create({queue: []})}});\n          v.set('controller.ajaxRequestsQueue.queue', [{}, {}, {}, {}]);\n          expect(v.get('barWidth')).to.equal('width: ' + (8 / 12 * 100) + '%;');\n          expect(v.get('message')).to.equal(Em.I18n.t('installer.step8.deployPopup.message').format(8, 12));\n        });\n      });\n\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/step9/hostLogPopupBody_view');\nvar view;\n\ndescribe('App.WizardStep9HostLogPopupBodyView', function() {\n\n  beforeEach(function() {\n    view = App.WizardStep9HostLogPopupBodyView.create({\n      parentView: Em.Object.create({\n        host: Em.Object.create()\n      })\n    });\n  });\n\n  describe('#isHeartbeatLost', function() {\n    it('should depends on parentView.host.status', function() {\n      view.set('parentView.host.status', 'success');\n      expect(view.get('isHeartbeatLost')).to.equal(false);\n      view.set('parentView.host.status', 'heartbeat_lost');\n      expect(view.get('isHeartbeatLost')).to.equal(true);\n    });\n  });\n\n  describe('#isNoTasksScheduled', function() {\n    it('should be same to parentView.host.isNoTasksForInstall', function() {\n      view.set('parentView.host.isNoTasksForInstall', true);\n      expect(view.get('isNoTasksScheduled')).to.equal(true);\n      view.set('parentView.host.isNoTasksForInstall', false);\n      expect(view.get('isNoTasksScheduled')).to.equal(false);\n    });\n  });\n\n  describe('#visibleTasks', function() {\n    Em.A([\n        {\n          value: 'pending',\n          f: ['pending', 'queued']\n        },\n        {\n          value: 'in_progress',\n          f: ['in_progress']\n        },\n        {\n          value: 'failed',\n          f: ['failed']\n        },\n        {\n          value: 'completed',\n          f: ['completed']\n        },\n        {\n          value: 'aborted',\n          f: ['aborted']\n        },\n        {\n          value: 'timedout',\n          f: ['timedout']\n        },\n        {\n          value: 'all'\n        }\n      ]).forEach(function(test) {\n        it(test.value, function() {\n          view.reopen({\n            category: Em.Object.create({value: test.value}),\n            tasks: Em.A([\n              {status: 'pending', isVisible: false},\n              {status: 'queued', isVisible: false},\n              {status: 'in_progress', isVisible: false},\n              {status: 'failed', isVisible: false},\n              {status: 'completed', isVisible: false},\n              {status: 'aborted', isVisible: false},\n              {status: 'timedout', isVisible: false}\n            ])\n          });\n          view.visibleTasks();\n          var visibleTasks = view.get('tasks').filter(function(task) {\n            if (test.f) {\n              return test.f.contains(task.status);\n            }\n            return true;\n          });\n          expect(visibleTasks.everyProperty('isVisible', true)).to.equal(true);\n        });\n    });\n  });\n\n  describe('#backToTaskList', function() {\n    it('should call destroyClipBoard', function() {\n      sinon.stub(view, 'destroyClipBoard', Em.K);\n      view.backToTaskList();\n      expect(view.destroyClipBoard.calledOnce).to.equal(true);\n      view.destroyClipBoard.restore();\n    });\n    it('should set isLogWrapHidden to true', function() {\n      view.set('isLogWrapHidden', false);\n      view.backToTaskList();\n      expect(view.get('isLogWrapHidden')).to.equal(true);\n    });\n  });\n\n  describe('#getStartedTasks', function() {\n    it('should return tasks with some status', function() {\n      var logTasks = Em.A([\n        {Tasks: {}}, {Tasks: {status: 's'}}, {Tasks: {status: null}}, {Tasks: {status: 'v'}}\n      ]);\n      expect(view.getStartedTasks({logTasks: logTasks}).length).to.equal(2);\n    });\n  });\n\n  describe('#openedTask', function() {\n    it('should return currently open task', function() {\n      var task = Em.Object.create({id: 2});\n      view.reopen({\n        tasks: Em.A([\n          Em.Object.create({id: 1}),\n          Em.Object.create({id: 3}),\n          task,\n          Em.Object.create({id: 4})\n        ])\n      });\n      view.set('parentView.c', {currentOpenTaskId: 2});\n      expect(view.get('openedTask.id')).to.equal(2);\n    });\n  });\n\n  describe('#tasks', function() {\n    var testTask = {\n      Tasks: {\n        status: 'init',\n        id: 1,\n        request_id: 2,\n        role: 'PIG',\n        stderr: 'stderr',\n        stdout: 'stdout',\n        host_name: 'host1',\n        command: 'Cmd'\n      }\n    };\n\n    it('should map tasks', function() {\n      view.set('parentView.host.logTasks', [testTask]);\n      var t = view.get('tasks');\n      expect(t.length).to.equal(1);\n      var first = t[0];\n      expect(first.get('id')).to.equal(1);\n      expect(first.get('requestId')).to.equal(2);\n      expect(first.get('command')).to.equal('cmd');\n      expect(first.get('role')).to.equal('Pig');\n      expect(first.get('stderr')).to.equal('stderr');\n      expect(first.get('stdout')).to.equal('stdout');\n      expect(first.get('isVisible')).to.equal(true);\n      expect(first.get('hostName')).to.equal('host1');\n    });\n\n    it('should set cog icon', function() {\n      var t = Em.copy(testTask);\n      t.Tasks.status = 'pending';\n      view.set('parentView.host.logTasks', [t]);\n      var first = view.get('tasks')[0];\n      expect(first.get('icon')).to.equal('icon-cog');\n    });\n\n    it('should set cog icon (2)', function() {\n      var t = Em.copy(testTask);\n      t.Tasks.status = 'queued';\n      view.set('parentView.host.logTasks', [t]);\n      var first = view.get('tasks')[0];\n      expect(first.get('icon')).to.equal('icon-cog');\n    });\n\n    it('should set cogs icon', function() {\n      var t = Em.copy(testTask);\n      t.Tasks.status = 'in_progress';\n      view.set('parentView.host.logTasks', [t]);\n      var first = view.get('tasks')[0];\n      expect(first.get('icon')).to.equal('icon-cogs');\n    });\n\n    it('should set ok icon', function() {\n      var t = Em.copy(testTask);\n      t.Tasks.status = 'completed';\n      view.set('parentView.host.logTasks', [t]);\n      var first = view.get('tasks')[0];\n      expect(first.get('icon')).to.equal('icon-ok');\n    });\n\n    it('should set icon-exclamation-sign icon', function() {\n      var t = Em.copy(testTask);\n      t.Tasks.status = 'failed';\n      view.set('parentView.host.logTasks', [t]);\n      var first = view.get('tasks')[0];\n      expect(first.get('icon')).to.equal('icon-exclamation-sign');\n    });\n\n    it('should set minus icon', function() {\n      var t = Em.copy(testTask);\n      t.Tasks.status = 'aborted';\n      view.set('parentView.host.logTasks', [t]);\n      var first = view.get('tasks')[0];\n      expect(first.get('icon')).to.equal('icon-minus');\n    });\n\n    it('should set time icon', function() {\n      var t = Em.copy(testTask);\n      t.Tasks.status = 'timedout';\n      view.set('parentView.host.logTasks', [t]);\n      var first = view.get('tasks')[0];\n      expect(first.get('icon')).to.equal('icon-time');\n    });\n\n  });\n\n  describe('#toggleTaskLog', function() {\n    it('isLogWrapHidden is true', function() {\n      var taskInfo = {\n        id: 1,\n        requestId: 2\n      };\n      view.set('isLogWrapHidden', true);\n      view.set('parentView.c', Em.Object.create({loadCurrentTaskLog: Em.K}));\n      sinon.spy(view.get('parentView.c'), 'loadCurrentTaskLog');\n      view.toggleTaskLog({context: taskInfo});\n      expect(view.get('isLogWrapHidden')).to.equal(false);\n      expect(view.get('parentView.c.currentOpenTaskId')).to.equal(taskInfo.id);\n      expect(view.get('parentView.c.currentOpenTaskRequestId')).to.equal(taskInfo.requestId);\n      expect(view.get('parentView.c').loadCurrentTaskLog.calledOnce).to.equal(true);\n      view.get('parentView.c').loadCurrentTaskLog.restore();\n    });\n    it('isLogWrapHidden is false', function() {\n      var taskInfo = {};\n      view.set('isLogWrapHidden', false);\n      view.set('parentView.c', Em.Object.create({loadCurrentTaskLog: Em.K}));\n      view.toggleTaskLog({context: taskInfo});\n      expect(view.get('isLogWrapHidden')).to.equal(true);\n      expect(view.get('parentView.c.currentOpenTaskId')).to.equal(0);\n      expect(view.get('parentView.c.currentOpenTaskRequestId')).to.equal(0);\n    });\n  });\n\n});","/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar App = require('app');\nrequire('views/wizard/step9_view');\n\nvar v;\ndescribe('App.WizardStep9View', function () {\n  beforeEach(function () {\n    v = App.WizardStep9View.create({\n      controller: App.WizardStep9Controller.create()\n    });\n  });\n  var view = App.WizardStep9View.create({\n    onStatus: function () {\n    },\n    content: [],\n    pageContent: function () {\n      return this.get('content');\n    }.property('content')\n  });\n  var testCases = [\n    {\n      title: 'none hosts',\n      content: [],\n      result: {\n        \"all\": 0,\n        \"inProgress\": 0,\n        \"warning\": 0,\n        \"success\": 0,\n        \"failed\": 0\n      }\n    },\n    {\n      title: 'all hosts inProgress',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          status: 'in_progress'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          status: 'info'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          status: 'pending'\n        })\n      ],\n      result: {\n        \"all\": 3,\n        \"inProgress\": 3,\n        \"warning\": 0,\n        \"success\": 0,\n        \"failed\": 0\n      }\n    },\n    {\n      title: 'all hosts warning',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          status: 'warning'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          status: 'warning'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          status: 'warning'\n        })\n      ],\n      result: {\n        \"all\": 3,\n        \"inProgress\": 0,\n        \"warning\": 3,\n        \"success\": 0,\n        \"failed\": 0\n      }\n    },\n    {\n      title: 'all hosts success',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          status: 'success'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          status: 'success'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          status: 'success'\n        })\n      ],\n      result: {\n        \"all\": 3,\n        \"inProgress\": 0,\n        \"warning\": 0,\n        \"success\": 3,\n        \"failed\": 0\n      }\n    },\n    {\n      title: 'all hosts failed',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          status: 'failed'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          status: 'failed'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          status: 'heartbeat_lost'\n        })\n      ],\n      result: {\n        \"all\": 3,\n        \"inProgress\": 0,\n        \"warning\": 0,\n        \"success\": 0,\n        \"failed\": 3\n      }\n    },\n    {\n      title: 'first host is failed, second is warning, third is success',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          status: 'failed'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          status: 'success'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          status: 'warning'\n        })\n      ],\n      result: {\n        \"all\": 3,\n        \"inProgress\": 0,\n        \"warning\": 1,\n        \"success\": 1,\n        \"failed\": 1\n      }\n    },\n    {\n      title: 'two hosts is inProgress, one is success',\n      content: [\n        Em.Object.create({\n          name: 'host1',\n          status: 'pending'\n        }),\n        Em.Object.create({\n          name: 'host2',\n          status: 'in_progress'\n        }),\n        Em.Object.create({\n          name: 'host3',\n          status: 'success'\n        })\n      ],\n      result: {\n        \"all\": 3,\n        \"inProgress\": 2,\n        \"warning\": 0,\n        \"success\": 1,\n        \"failed\": 0\n      }\n    }\n  ];\n\n  describe('#countCategoryHosts', function () {\n    testCases.forEach(function (test) {\n      it(test.title, function () {\n        view.set('content', test.content);\n        view.countCategoryHosts();\n        view.get('categories').forEach(function (category) {\n          expect(category.get('hostsCount')).to.equal(test.result[category.get('hostStatus')])\n        })\n      });\n    }, this);\n  });\n\n  describe('#doFilter', function () {\n    testCases.forEach(function (test) {\n      describe(test.title, function () {\n        view.get('categories').forEach(function (category) {\n          it('. Selected category - ' + category.get('hostStatus'), function () {\n            view.set('content', test.content);\n            view.reopen({selectedCategory: category});\n            view.doFilter();\n            expect(view.get('filteredContent').length).to.equal(test.result[category.get('hostStatus')])\n          });\n        })\n      });\n    }, this);\n  });\n\n  describe('#isStepCompleted', function () {\n    it('should be true if progress is 100', function () {\n      v.set('controller.progress', '100');\n      expect(v.get('isStepCompleted')).to.equal(true);\n    });\n    it('should be false if progress isn\\'t 100', function () {\n      v.set('controller.progress', '50');\n      expect(v.get('isStepCompleted')).to.equal(false);\n    });\n  });\n\n  describe('#content', function () {\n    it('should be equal to controller.hosts', function () {\n      sinon.stub(v, 'hostStatusObserver', Em.K);\n      var hosts = [\n        {},\n        {},\n        {}\n      ];\n      v.set('controller.hosts', hosts);\n      expect(v.get('content')).to.eql(hosts);\n      v.hostStatusObserver.restore();\n    });\n  });\n\n  describe('#categoryObject', function () {\n    it('label should contains value and hostsCount', function () {\n      var value = 'v',\n        hostsCount = 10,\n        o = v.get('categoryObject').create({value: value, hostsCount: hostsCount});\n      expect(o.get('label')).to.equal(value + ' (' + hostsCount + ')');\n    });\n    it('itemClass should depends on isActive', function () {\n      var o = v.get('categoryObject').create();\n      o.set('isActive', false);\n      expect(o.get('itemClass')).to.equal('');\n      o.set('isActive', true);\n      expect(o.get('itemClass')).to.equal('active');\n    });\n  });\n\n  describe('#isHostHeartbeatLost', function () {\n    Em.A([\n        {\n          hostsWithHeartbeatLost: [],\n          m: 'should be false if hostsWithHeartbeatLost is empty',\n          e: false\n        },\n        {\n          hostsWithHeartbeatLost: [\n            {},\n            {}\n          ],\n          m: 'should be true if hostsWithHeartbeatLost contains some values',\n          e: true\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          v.set('controller.hostsWithHeartbeatLost', test.hostsWithHeartbeatLost);\n          expect(v.get('isHostHeartbeatLost')).to.equal(test.e);\n        })\n      });\n  });\n\n  describe('#barWidth', function () {\n    it('should depends on controller.progress', function () {\n      var w = '25';\n      v.set('controller.progress', w);\n      expect(v.get('barWidth')).to.equal('width: ' + w + '%;');\n    });\n  });\n\n  describe('#progressMessage', function () {\n    it('should depends on controller.progress', function () {\n      var w = '25';\n      v.set('controller.progress', w);\n      expect(v.get('progressMessage').contains(w)).to.equal(true);\n    });\n  });\n\n  describe('#showAllHosts', function () {\n    it('should set active to category with all hosts', function () {\n      v.get('categories').findProperty('hostStatus', 'inProgress').set('isActive', true);\n      v.showAllHosts();\n      var allCategory = v.get('categories').findProperty('hostStatus', 'all');\n      expect(allCategory.get('isActive')).to.equal(true);\n      expect(v.get('categories').without(allCategory).everyProperty('isActive', false)).to.equal(true);\n    });\n  });\n\n  describe('#didInsertElement', function () {\n    beforeEach(function () {\n      sinon.stub(v, 'onStatus', Em.K);\n      sinon.stub(v.get('controller'), 'navigateStep', Em.K);\n    });\n    afterEach(function () {\n      v.onStatus.restore();\n      v.get('controller').navigateStep.restore();\n    });\n    it('should call onStatus', function () {\n      v.didInsertElement();\n      expect(v.onStatus.calledOnce).to.equal(true);\n    });\n    it('should call navigateStep', function () {\n      v.didInsertElement();\n      expect(v.get('controller').navigateStep.calledOnce).to.equal(true);\n    });\n  });\n\n  describe('#selectCategory', function () {\n    it('should set isActive true to selected category', function () {\n      var event = {context: Em.Object.create({hostStatus: 'inProgress'})},\n        c = v.get('categories').findProperty('hostStatus', 'inProgress');\n      c.set('isActive', false);\n      v.selectCategory(event);\n      expect(c.get('isActive')).to.equal(true);\n    });\n  });\n\n  describe('#onStatus', function () {\n    Em.A([\n        {\n          status: 'success',\n          e: {\n            barColor: 'progress-success',\n            resultMsg: Em.I18n.t('installer.step9.status.success'),\n            resultMsgColor: 'alert-success'\n          }\n        },\n        {\n          status: 'info',\n          e: {\n            barColor: 'progress-info',\n            resultMsg: ''\n          }\n        },\n        {\n          status: 'warning',\n          e: {\n            barColor: 'progress-warning',\n            resultMsg: Em.I18n.t('installer.step9.status.warning'),\n            resultMsgColor: 'alert-warning'\n          }\n        },\n        {\n          status: 'failed',\n          e: {\n            barColor: 'progress-danger',\n            resultMsgColor: 'alert-error'\n          }\n        }\n      ]).forEach(function (test) {\n        it(test.status, function () {\n          v.set('controller.status', test.status);\n          v.onStatus();\n          Em.keys(test.e).forEach(function (k) {\n            expect(v.get(k)).to.equal(test.e[k]);\n          });\n        });\n      });\n    Em.A([\n        {\n          hostsWithHeartbeatLost: [\n            {},\n            {}\n          ],\n          startCallFailed: false,\n          m: 'heartbeat lost for 2 hosts',\n          resultMsg: Em.I18n.t('installer.step9.status.hosts.heartbeat_lost').format(2)\n        },\n        {\n          hostsWithHeartbeatLost: [],\n          startCallFailed: true,\n          m: 'heartbeat not lost, startCallFailed true',\n          resultMsg: Em.I18n.t('installer.step9.status.start.services.failed')\n        },\n        {\n          hostsWithHeartbeatLost: [],\n          startCallFailed: false,\n          m: 'heartbeat not lost, startCallFailed false',\n          resultMsg: Em.I18n.t('installer.step9.status.failed')\n        }\n      ]).forEach(function (test) {\n        it(test.m, function () {\n          v.set('controller.hostsWithHeartbeatLost', test.hostsWithHeartbeatLost);\n          v.set('controller.startCallFailed', test.startCallFailed);\n          v.set('controller.status', 'failed');\n          v.onStatus();\n          expect(v.get('resultMsg')).to.equal(test.resultMsg);\n        });\n      });\n  });\n\n  describe('#hostWithInstallFailed', function () {\n    it('popup property failedHosts should be equal to hostsWithHeartbeatLost', function () {\n      var hostsWithHeartbeatLost = [\n        {},\n        {}\n      ];\n      v.set('controller.hostsWithHeartbeatLost', hostsWithHeartbeatLost);\n      var body = v.hostWithInstallFailed().get('bodyClass').create();\n      expect(body.get('failedHosts')).to.eql(hostsWithHeartbeatLost);\n    });\n  });\n\n});\n\nvar hv;\ndescribe('App.HostStatusView', function () {\n  beforeEach(function () {\n    hv = App.HostStatusView.create();\n  });\n  var tests = [\n    {\n      p: 'isFailed',\n      tests: [\n        {\n          obj: {\n            status: 'failed',\n            progress: 100\n          },\n          e: true\n        },\n        {\n          obj: {\n            status: 'failed',\n            progress: 99\n          },\n          e: false\n        },\n        {\n          obj: {\n            status: 'success',\n            progress: 100\n          },\n          e: false\n        },\n        {\n          obj: {\n            status: 'success',\n            progress: 99\n          },\n          e: false\n        }\n      ]\n    },\n    {\n      p: 'isSuccess',\n      tests: [\n        {\n          obj: {\n            status: 'success',\n            progress: 100\n          },\n          e: true\n        },\n        {\n          obj: {\n            status: 'success',\n            progress: 99\n          },\n          e: false\n        },\n        {\n          obj: {\n            status: 'failed',\n            progress: 100\n          },\n          e: false\n        },\n        {\n          obj: {\n            status: 'failed',\n            progress: 99\n          },\n          e: false\n        }\n      ]\n    },\n    {\n      p: 'isWarning',\n      tests: [\n        {\n          obj: {\n            status: 'warning',\n            progress: 100\n          },\n          e: true\n        },\n        {\n          obj: {\n            status: 'warning',\n            progress: 99\n          },\n          e: false\n        },\n        {\n          obj: {\n            status: 'failed',\n            progress: 100\n          },\n          e: false\n        },\n        {\n          obj: {\n            status: 'failed',\n            progress: 99\n          },\n          e: false\n        }\n      ]\n    }\n  ];\n  tests.forEach(function (test) {\n    describe(test.p, function () {\n      test.tests.forEach(function (t) {\n        var hostStatusView = App.HostStatusView.create();\n        it('obj.progress = ' + t.obj.progress + '; obj.status = ' + t.obj.status, function () {\n          hostStatusView.set('obj', t.obj);\n          expect(hostStatusView.get(test.p)).to.equal(t.e);\n        });\n      });\n    });\n  });\n\n  describe('#barWidth', function () {\n    it('should depends of obj.progress', function () {\n      hv.set('obj', {progress: '25'});\n      expect(hv.get('barWidth')).to.equal('width: 25%;');\n    });\n  });\n\n  describe('#didInsertElement', function () {\n    it('should call onStatus', function () {\n      sinon.stub(hv, 'onStatus', Em.K);\n      hv.didInsertElement();\n      expect(hv.onStatus.calledOnce).to.equal(true);\n      hv.onStatus.restore();\n    });\n  });\n\n  describe('#onStatus', function () {\n    Em.A([\n        {\n          obj: {\n            status: 'info'\n          },\n          e: {\n            barColor: 'progress-info'\n          }\n        },\n        {\n          obj: {\n            status: 'warning'\n          },\n          e: {\n            barColor: 'progress-warning'\n          }\n        },\n        {\n          obj: {\n            status: 'warning',\n            progress: '100'\n          },\n          e: {\n            barColor: 'progress-warning',\n            'obj.message': Em.I18n.t('installer.step9.host.status.warning')\n          }\n        },\n        {\n          obj: {\n            status: 'failed'\n          },\n          e: {\n            barColor: 'progress-danger'\n          }\n        },\n        {\n          obj: {\n            status: 'failed',\n            progress: '100'\n          },\n          e: {\n            barColor: 'progress-danger',\n            'obj.message': Em.I18n.t('installer.step9.host.status.failed')\n          }\n        },\n        {\n          obj: {\n            status: 'heartbeat_lost'\n          },\n          e: {\n            barColor: 'progress-danger'\n          }\n        },\n        {\n          obj: {\n            status: 'heartbeat_lost',\n            progress: '100'\n          },\n          e: {\n            barColor: 'progress-danger',\n            'obj.message': Em.I18n.t('installer.step9.host.heartbeat_lost')\n          }\n        }\n      ]).forEach(function (test) {\n        it(JSON.stringify(test.obj), function () {\n          hv.set('obj', test.obj);\n          hv.onStatus();\n          Em.keys(test.e).forEach(function (k) {\n            expect(hv.get(k)).to.equal(test.e[k]);\n          });\n        });\n      });\n    Em.A([\n        {\n          obj: {\n            status: 'success',\n            progress: '100'\n          },\n          progress: '35',\n          e: true\n        },\n        {\n          obj: {\n            status: 'success',\n            progress: '100'\n          },\n          progress: '34',\n          e: false\n        },\n        {\n          obj: {\n            status: 'success',\n            progress: '99'\n          },\n          progress: '35',\n          e: false\n        },\n        {\n          obj: {\n            status: 'failed',\n            progress: '100'\n          },\n          progress: '35',\n          e: false\n        }\n      ]).forEach(function (test) {\n        it(JSON.stringify(test.obj) + ' ' + test.progress, function() {\n          hv.set('barColor', '');\n          hv.set('obj', test.obj);\n          hv.set('obj.message', '');\n          hv.set('controller', {progress: test.progress});\n          hv.onStatus();\n          expect(hv.get('obj.message') === Em.I18n.t('installer.step9.host.status.success')).to.equal(test.e);\n          expect(hv.get('barColor') === 'progress-success').to.equal(test.e);\n        });\n      });\n  });\n\n  describe('#hostLogPopup', function() {\n    describe('#onClose', function() {\n      beforeEach(function() {\n        hv.set('controller', {currentOpenTaskId: 123});\n        hv.set('obj', Em.Object.create());\n      });\n      it('popup should clear currentOpenTaskId', function() {\n        hv.hostLogPopup().onClose();\n        expect(hv.get('controller.currentOpenTaskId')).to.equal(0);\n      });\n      it('onClose popup should hide popup', function() {\n        var p = hv.hostLogPopup();\n        sinon.spy(p, 'hide');\n        p.onClose();\n        expect(p.hide.calledOnce).to.equal(true);\n      });\n    });\n  });\n\n});\n"]}